# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _TopOpeBRepDS.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_TopOpeBRepDS', [dirname(__file__)])
        except ImportError:
            import _TopOpeBRepDS
            return _TopOpeBRepDS
        if fp is not None:
            try:
                _mod = imp.load_module('_TopOpeBRepDS', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _TopOpeBRepDS = swig_import_helper()
    del swig_import_helper
else:
    import _TopOpeBRepDS
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TopOpeBRepDS.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_TopOpeBRepDS.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_TopOpeBRepDS.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _TopOpeBRepDS.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

import OCC.TopAbs
import OCC.Standard
import OCC.TCollection
import OCC.MMgt
import OCC.TopOpeBRepTool
import OCC.TopoDS
import OCC.TopLoc
import OCC.gp
import OCC.TopTools
import OCC.TColStd
import OCC.Message
import OCC.Bnd
import OCC.Geom2d
import OCC.GeomAbs
import OCC.TColgp
import OCC.GeomAdaptor
import OCC.Adaptor3d
import OCC.Geom
import OCC.Adaptor2d
import OCC.math
import OCC.BRepClass3d
import OCC.IntCurveSurface
import OCC.Intf
import OCC.IntSurf
import OCC.BRepAdaptor
import OCC.Geom2dAdaptor
import OCC.IntCurvesFace
import OCC.Extrema

_TopOpeBRepDS.TopOpeBRepDS_OK_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_OK = _TopOpeBRepDS.TopOpeBRepDS_OK

_TopOpeBRepDS.TopOpeBRepDS_NOK_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_NOK = _TopOpeBRepDS.TopOpeBRepDS_NOK

_TopOpeBRepDS.TopOpeBRepDS_UNSHGEOMETRY_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_UNSHGEOMETRY = _TopOpeBRepDS.TopOpeBRepDS_UNSHGEOMETRY

_TopOpeBRepDS.TopOpeBRepDS_SAMEORIENTED_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_SAMEORIENTED = _TopOpeBRepDS.TopOpeBRepDS_SAMEORIENTED

_TopOpeBRepDS.TopOpeBRepDS_DIFFORIENTED_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_DIFFORIENTED = _TopOpeBRepDS.TopOpeBRepDS_DIFFORIENTED

_TopOpeBRepDS.TopOpeBRepDS_POINT_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_POINT = _TopOpeBRepDS.TopOpeBRepDS_POINT

_TopOpeBRepDS.TopOpeBRepDS_CURVE_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_CURVE = _TopOpeBRepDS.TopOpeBRepDS_CURVE

_TopOpeBRepDS.TopOpeBRepDS_SURFACE_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_SURFACE = _TopOpeBRepDS.TopOpeBRepDS_SURFACE

_TopOpeBRepDS.TopOpeBRepDS_VERTEX_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_VERTEX = _TopOpeBRepDS.TopOpeBRepDS_VERTEX

_TopOpeBRepDS.TopOpeBRepDS_EDGE_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_EDGE = _TopOpeBRepDS.TopOpeBRepDS_EDGE

_TopOpeBRepDS.TopOpeBRepDS_WIRE_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_WIRE = _TopOpeBRepDS.TopOpeBRepDS_WIRE

_TopOpeBRepDS.TopOpeBRepDS_FACE_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_FACE = _TopOpeBRepDS.TopOpeBRepDS_FACE

_TopOpeBRepDS.TopOpeBRepDS_SHELL_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_SHELL = _TopOpeBRepDS.TopOpeBRepDS_SHELL

_TopOpeBRepDS.TopOpeBRepDS_SOLID_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_SOLID = _TopOpeBRepDS.TopOpeBRepDS_SOLID

_TopOpeBRepDS.TopOpeBRepDS_COMPSOLID_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_COMPSOLID = _TopOpeBRepDS.TopOpeBRepDS_COMPSOLID

_TopOpeBRepDS.TopOpeBRepDS_COMPOUND_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_COMPOUND = _TopOpeBRepDS.TopOpeBRepDS_COMPOUND

_TopOpeBRepDS.TopOpeBRepDS_UNKNOWN_swigconstant(_TopOpeBRepDS)
TopOpeBRepDS_UNKNOWN = _TopOpeBRepDS.TopOpeBRepDS_UNKNOWN
class topopebrepds(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def SPrint(*args):
        """
        * IN OU ON UN

        :param S:
        :type S: TopAbs_State
        :rtype: TCollection_AsciiString

        * <K>

        :param K:
        :type K: TopOpeBRepDS_Kind
        :rtype: TCollection_AsciiString

        * S1(<K>,<I>)S2

        :param K:
        :type K: TopOpeBRepDS_Kind
        :param I:
        :type I: int
        :param B: default value is 
        :type B: TCollection_AsciiString &
        :param A: default value is 
        :type A: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        :param T:
        :type T: TopAbs_ShapeEnum
        :rtype: TCollection_AsciiString

        * (<T>,<I>)

        :param T:
        :type T: TopAbs_ShapeEnum
        :param I:
        :type I: int
        :rtype: TCollection_AsciiString

        :param O:
        :type O: TopAbs_Orientation
        :rtype: TCollection_AsciiString

        :param C:
        :type C: TopOpeBRepDS_Config
        :rtype: TCollection_AsciiString

        """
        return _TopOpeBRepDS.topopebrepds_SPrint(*args)

    SPrint = staticmethod(SPrint)

    def Print(*args):
        """
        :param S:
        :type S: TopAbs_State
        :param OS:
        :type OS: Standard_OStream &
        :rtype: Standard_OStream

        :param K:
        :type K: TopOpeBRepDS_Kind
        :param S:
        :type S: Standard_OStream &
        :rtype: Standard_OStream

        :param K:
        :type K: TopOpeBRepDS_Kind
        :param I:
        :type I: int
        :param S:
        :type S: Standard_OStream &
        :param B: default value is 
        :type B: TCollection_AsciiString &
        :param A: default value is 
        :type A: TCollection_AsciiString &
        :rtype: Standard_OStream

        :param T:
        :type T: TopAbs_ShapeEnum
        :param I:
        :type I: int
        :param S:
        :type S: Standard_OStream &
        :rtype: Standard_OStream

        :param C:
        :type C: TopOpeBRepDS_Config
        :param S:
        :type S: Standard_OStream &
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.topopebrepds_Print(*args)

    Print = staticmethod(Print)

    def IsGeometry(*args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind
        :rtype: bool

        """
        return _TopOpeBRepDS.topopebrepds_IsGeometry(*args)

    IsGeometry = staticmethod(IsGeometry)

    def IsTopology(*args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind
        :rtype: bool

        """
        return _TopOpeBRepDS.topopebrepds_IsTopology(*args)

    IsTopology = staticmethod(IsTopology)

    def KindToShape(*args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind
        :rtype: TopAbs_ShapeEnum

        """
        return _TopOpeBRepDS.topopebrepds_KindToShape(*args)

    KindToShape = staticmethod(KindToShape)

    def ShapeToKind(*args):
        """
        :param S:
        :type S: TopAbs_ShapeEnum
        :rtype: TopOpeBRepDS_Kind

        """
        return _TopOpeBRepDS.topopebrepds_ShapeToKind(*args)

    ShapeToKind = staticmethod(ShapeToKind)

    def __init__(self):
        _TopOpeBRepDS.topopebrepds_swiginit(self, _TopOpeBRepDS.new_topopebrepds())

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


topopebrepds._kill_pointed = new_instancemethod(_TopOpeBRepDS.topopebrepds__kill_pointed, None, topopebrepds)
topopebrepds_swigregister = _TopOpeBRepDS.topopebrepds_swigregister
topopebrepds_swigregister(topopebrepds)

def topopebrepds_SPrint(*args):
    """
    * IN OU ON UN

    :param S:
    :type S: TopAbs_State
    :rtype: TCollection_AsciiString

    * <K>

    :param K:
    :type K: TopOpeBRepDS_Kind
    :rtype: TCollection_AsciiString

    * S1(<K>,<I>)S2

    :param K:
    :type K: TopOpeBRepDS_Kind
    :param I:
    :type I: int
    :param B: default value is 
    :type B: TCollection_AsciiString &
    :param A: default value is 
    :type A: TCollection_AsciiString &
    :rtype: TCollection_AsciiString

    :param T:
    :type T: TopAbs_ShapeEnum
    :rtype: TCollection_AsciiString

    * (<T>,<I>)

    :param T:
    :type T: TopAbs_ShapeEnum
    :param I:
    :type I: int
    :rtype: TCollection_AsciiString

    :param O:
    :type O: TopAbs_Orientation
    :rtype: TCollection_AsciiString

    :param C:
    :type C: TopOpeBRepDS_Config
    :rtype: TCollection_AsciiString

    """
    return _TopOpeBRepDS.topopebrepds_SPrint(*args)

def topopebrepds_Print(*args):
    """
    :param S:
    :type S: TopAbs_State
    :param OS:
    :type OS: Standard_OStream &
    :rtype: Standard_OStream

    :param K:
    :type K: TopOpeBRepDS_Kind
    :param S:
    :type S: Standard_OStream &
    :rtype: Standard_OStream

    :param K:
    :type K: TopOpeBRepDS_Kind
    :param I:
    :type I: int
    :param S:
    :type S: Standard_OStream &
    :param B: default value is 
    :type B: TCollection_AsciiString &
    :param A: default value is 
    :type A: TCollection_AsciiString &
    :rtype: Standard_OStream

    :param T:
    :type T: TopAbs_ShapeEnum
    :param I:
    :type I: int
    :param S:
    :type S: Standard_OStream &
    :rtype: Standard_OStream

    :param C:
    :type C: TopOpeBRepDS_Config
    :param S:
    :type S: Standard_OStream &
    :rtype: Standard_OStream

    """
    return _TopOpeBRepDS.topopebrepds_Print(*args)

def topopebrepds_IsGeometry(*args):
    """
    :param K:
    :type K: TopOpeBRepDS_Kind
    :rtype: bool

    """
    return _TopOpeBRepDS.topopebrepds_IsGeometry(*args)

def topopebrepds_IsTopology(*args):
    """
    :param K:
    :type K: TopOpeBRepDS_Kind
    :rtype: bool

    """
    return _TopOpeBRepDS.topopebrepds_IsTopology(*args)

def topopebrepds_KindToShape(*args):
    """
    :param K:
    :type K: TopOpeBRepDS_Kind
    :rtype: TopAbs_ShapeEnum

    """
    return _TopOpeBRepDS.topopebrepds_KindToShape(*args)

def topopebrepds_ShapeToKind(*args):
    """
    :param S:
    :type S: TopAbs_ShapeEnum
    :rtype: TopOpeBRepDS_Kind

    """
    return _TopOpeBRepDS.topopebrepds_ShapeToKind(*args)

class TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: TopOpeBRepDS_DataMapOfIntegerListOfInterference &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: TopOpeBRepDS_DataMapOfIntegerListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference &
        :rtype: TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference &
        :rtype: TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: TopOpeBRepDS_DataMapOfIntegerListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopOpeBRepDS_DataMapOfIntegerListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopOpeBRepDS_DataMapOfIntegerListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Init, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Destroy = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Destroy, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.IsAllocated = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_IsAllocated, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Assign, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Set, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Length = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Length, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Lower = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Lower, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Upper = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Upper, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.SetValue = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_SetValue, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_Value, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference.ChangeValue = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_ChangeValue, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference__kill_pointed, None, TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_swigregister
TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference_swigregister(TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference)

class TopOpeBRepDS_Association(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Association_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Association(*args))

    def Associate(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param LI:
        :type LI: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Association_Associate(self, *args)


    def HasAssociation(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Association_HasAssociation(self, *args)


    def Associated(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Association_Associated(self, *args)


    def AreAssociated(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Association_AreAssociated(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_Association self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_Association__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_Association self) -> Handle_TopOpeBRepDS_Association"""
        return _TopOpeBRepDS.TopOpeBRepDS_Association_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Association.Associate = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Association_Associate, None, TopOpeBRepDS_Association)
TopOpeBRepDS_Association.HasAssociation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Association_HasAssociation, None, TopOpeBRepDS_Association)
TopOpeBRepDS_Association.Associated = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Association_Associated, None, TopOpeBRepDS_Association)
TopOpeBRepDS_Association.AreAssociated = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Association_AreAssociated, None, TopOpeBRepDS_Association)
TopOpeBRepDS_Association._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Association__kill_pointed, None, TopOpeBRepDS_Association)
TopOpeBRepDS_Association.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Association_GetHandle, None, TopOpeBRepDS_Association)
TopOpeBRepDS_Association_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Association_swigregister
TopOpeBRepDS_Association_swigregister(TopOpeBRepDS_Association)

class Handle_TopOpeBRepDS_Association(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_Association_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_Association(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Association_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_Association.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Association_Nullify, None, Handle_TopOpeBRepDS_Association)
Handle_TopOpeBRepDS_Association.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Association_IsNull, None, Handle_TopOpeBRepDS_Association)
Handle_TopOpeBRepDS_Association.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Association_GetObject, None, Handle_TopOpeBRepDS_Association)
Handle_TopOpeBRepDS_Association._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Association__kill_pointed, None, Handle_TopOpeBRepDS_Association)
Handle_TopOpeBRepDS_Association_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_Association_swigregister
Handle_TopOpeBRepDS_Association_swigregister(Handle_TopOpeBRepDS_Association)

def Handle_TopOpeBRepDS_Association_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Association_DownCast(AnObject)
Handle_TopOpeBRepDS_Association_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_Association_DownCast

class TopOpeBRepDS_BuildTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param OutCurveType:
        :type OutCurveType: TopOpeBRepTool_OutCurveType
        :rtype: None

        :param GT:
        :type GT: TopOpeBRepTool_GeomTool &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_BuildTool_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_BuildTool(*args))

    def GetGeomTool(self, *args):
        """
        :rtype: TopOpeBRepTool_GeomTool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_GetGeomTool(self, *args)


    def ChangeGeomTool(self, *args):
        """
        :rtype: TopOpeBRepTool_GeomTool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_ChangeGeomTool(self, *args)


    def MakeVertex(self, *args):
        """
        :param V:
        :type V: TopoDS_Shape &
        :param P:
        :type P: TopOpeBRepDS_Point &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeVertex(self, *args)


    def MakeEdge(self, *args):
        """
        :param E:
        :type E: TopoDS_Shape &
        :param C:
        :type C: TopOpeBRepDS_Curve &
        :rtype: None

        :param E:
        :type E: TopoDS_Shape &
        :param C:
        :type C: TopOpeBRepDS_Curve &
        :param DS:
        :type DS: TopOpeBRepDS_DataStructure &
        :rtype: None

        :param E:
        :type E: TopoDS_Shape &
        :param C:
        :type C: Handle_Geom_Curve &
        :param Tol:
        :type Tol: float
        :rtype: None

        :param E:
        :type E: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeEdge(self, *args)


    def MakeWire(self, *args):
        """
        :param W:
        :type W: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeWire(self, *args)


    def MakeFace(self, *args):
        """
        :param F:
        :type F: TopoDS_Shape &
        :param S:
        :type S: TopOpeBRepDS_Surface &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeFace(self, *args)


    def MakeShell(self, *args):
        """
        :param Sh:
        :type Sh: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeShell(self, *args)


    def MakeSolid(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeSolid(self, *args)


    def CopyEdge(self, *args):
        """
        * Make an edge <Eou> with the curve of the edge <Ein>

        :param Ein:
        :type Ein: TopoDS_Shape &
        :param Eou:
        :type Eou: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_CopyEdge(self, *args)


    def GetOrientedEdgeVertices(self, *args):
        """
        :param E:
        :type E: TopoDS_Edge &
        :param Vmin:
        :type Vmin: TopoDS_Vertex &
        :param Vmax:
        :type Vmax: TopoDS_Vertex &
        :param Parmin:
        :type Parmin: float &
        :param Parmax:
        :type Parmax: float &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_GetOrientedEdgeVertices(self, *args)


    def UpdateEdgeCurveTol(self, *args):
        """
        :param F1:
        :type F1: TopoDS_Face &
        :param F2:
        :type F2: TopoDS_Face &
        :param E:
        :type E: TopoDS_Edge &
        :param C3Dnew:
        :type C3Dnew: Handle_Geom_Curve &
        :param tol3d:
        :type tol3d: float
        :param tol2d1:
        :type tol2d1: float
        :param tol2d2:
        :type tol2d2: float
        :param newtol:
        :type newtol: float &
        :param newparmin:
        :type newparmin: float &
        :param newparmax:
        :type newparmax: float &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_UpdateEdgeCurveTol(self, *args)


    def ApproxCurves(self, *args):
        """
        :param C:
        :type C: TopOpeBRepDS_Curve &
        :param E:
        :type E: TopoDS_Edge &
        :param inewC:
        :type inewC: int &
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_ApproxCurves(self, *args)


    def ComputePCurves(self, *args):
        """
        :param C:
        :type C: TopOpeBRepDS_Curve &
        :param E:
        :type E: TopoDS_Edge &
        :param newC:
        :type newC: TopOpeBRepDS_Curve &
        :param CompPC1:
        :type CompPC1: bool
        :param CompPC2:
        :type CompPC2: bool
        :param CompC3D:
        :type CompC3D: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_ComputePCurves(self, *args)


    def PutPCurves(self, *args):
        """
        :param newC:
        :type newC: TopOpeBRepDS_Curve &
        :param E:
        :type E: TopoDS_Edge &
        :param CompPC1:
        :type CompPC1: bool
        :param CompPC2:
        :type CompPC2: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_PutPCurves(self, *args)


    def RecomputeCurves(self, *args):
        """
        :param C:
        :type C: TopOpeBRepDS_Curve &
        :param oldE:
        :type oldE: TopoDS_Edge &
        :param E:
        :type E: TopoDS_Edge &
        :param inewC:
        :type inewC: int &
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_RecomputeCurves(self, *args)


    def CopyFace(self, *args):
        """
        * Make a face <Fou> with the surface of the face <Fin>

        :param Fin:
        :type Fin: TopoDS_Shape &
        :param Fou:
        :type Fou: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_CopyFace(self, *args)


    def AddEdgeVertex(self, *args):
        """
        :param Ein:
        :type Ein: TopoDS_Shape &
        :param Eou:
        :type Eou: TopoDS_Shape &
        :param V:
        :type V: TopoDS_Shape &
        :rtype: None

        :param E:
        :type E: TopoDS_Shape &
        :param V:
        :type V: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddEdgeVertex(self, *args)


    def AddWireEdge(self, *args):
        """
        :param W:
        :type W: TopoDS_Shape &
        :param E:
        :type E: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddWireEdge(self, *args)


    def AddFaceWire(self, *args):
        """
        :param F:
        :type F: TopoDS_Shape &
        :param W:
        :type W: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddFaceWire(self, *args)


    def AddShellFace(self, *args):
        """
        :param Sh:
        :type Sh: TopoDS_Shape &
        :param F:
        :type F: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddShellFace(self, *args)


    def AddSolidShell(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param Sh:
        :type Sh: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddSolidShell(self, *args)


    def Range(self, *args):
        """
        * Sets the range of edge <E>.

        :param E:
        :type E: TopoDS_Shape &
        :param first:
        :type first: float
        :param last:
        :type last: float
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Range(self, *args)


    def UpdateEdge(self, *args):
        """
        * Sets the range of edge <Eou> from <Ein> only when <Ein> has a closed geometry.

        :param Ein:
        :type Ein: TopoDS_Shape &
        :param Eou:
        :type Eou: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_UpdateEdge(self, *args)


    def Parameter(self, *args):
        """
        * Sets the parameter <P> for the vertex <V> on the edge <E>.

        :param E:
        :type E: TopoDS_Shape &
        :param V:
        :type V: TopoDS_Shape &
        :param P:
        :type P: float
        :rtype: None

        * Compute the parameter of the vertex <V>, supported by the edge <E>, on the curve <C>.

        :param C:
        :type C: TopOpeBRepDS_Curve &
        :param E:
        :type E: TopoDS_Shape &
        :param V:
        :type V: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Parameter(self, *args)


    def Curve3D(self, *args):
        """
        * Sets the curve <C> for the edge <E>

        :param E:
        :type E: TopoDS_Shape &
        :param C:
        :type C: Handle_Geom_Curve &
        :param Tol:
        :type Tol: float
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Curve3D(self, *args)


    def PCurve(self, *args):
        """
        * Sets the pcurve <C> for the edge <E> on the face <F>. If OverWrite is True the old pcurve if there is one is overwritten, else the two pcurves are set.

        :param F:
        :type F: TopoDS_Shape &
        :param E:
        :type E: TopoDS_Shape &
        :param C:
        :type C: Handle_Geom2d_Curve &
        :rtype: None

        :param F:
        :type F: TopoDS_Shape &
        :param E:
        :type E: TopoDS_Shape &
        :param CDS:
        :type CDS: TopOpeBRepDS_Curve &
        :param C:
        :type C: Handle_Geom2d_Curve &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_PCurve(self, *args)


    def Orientation(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param O:
        :type O: TopAbs_Orientation
        :rtype: None

        :param S:
        :type S: TopoDS_Shape &
        :rtype: TopAbs_Orientation

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Orientation(self, *args)


    def Closed(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param B:
        :type B: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Closed(self, *args)


    def Approximation(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Approximation(self, *args)


    def UpdateSurface(self, *args):
        """
        :param F:
        :type F: TopoDS_Shape &
        :param SU:
        :type SU: Handle_Geom_Surface &
        :rtype: None

        :param E:
        :type E: TopoDS_Shape &
        :param oldF:
        :type oldF: TopoDS_Shape &
        :param newF:
        :type newF: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_UpdateSurface(self, *args)


    def OverWrite(self, *args):
        """
        :rtype: bool

        :param O:
        :type O: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_OverWrite(self, *args)


    def Translate(self, *args):
        """
        :rtype: bool

        :param T:
        :type T: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_BuildTool_Translate(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_BuildTool.GetGeomTool = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_GetGeomTool, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.ChangeGeomTool = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_ChangeGeomTool, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.MakeVertex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeVertex, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.MakeEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeEdge, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.MakeWire = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeWire, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.MakeFace = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeFace, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.MakeShell = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeShell, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.MakeSolid = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_MakeSolid, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.CopyEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_CopyEdge, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.GetOrientedEdgeVertices = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_GetOrientedEdgeVertices, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.UpdateEdgeCurveTol = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_UpdateEdgeCurveTol, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.ApproxCurves = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_ApproxCurves, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.ComputePCurves = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_ComputePCurves, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.PutPCurves = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_PutPCurves, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.RecomputeCurves = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_RecomputeCurves, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.CopyFace = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_CopyFace, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.AddEdgeVertex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddEdgeVertex, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.AddWireEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddWireEdge, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.AddFaceWire = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddFaceWire, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.AddShellFace = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddShellFace, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.AddSolidShell = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_AddSolidShell, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Range = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Range, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.UpdateEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_UpdateEdge, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Parameter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Parameter, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Curve3D = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Curve3D, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.PCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_PCurve, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Orientation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Orientation, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Closed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Closed, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Approximation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Approximation, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.UpdateSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_UpdateSurface, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.OverWrite = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_OverWrite, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool.Translate = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool_Translate, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_BuildTool__kill_pointed, None, TopOpeBRepDS_BuildTool)
TopOpeBRepDS_BuildTool_swigregister = _TopOpeBRepDS.TopOpeBRepDS_BuildTool_swigregister
TopOpeBRepDS_BuildTool_swigregister(TopOpeBRepDS_BuildTool)

class TopOpeBRepDS_Check(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Check_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Check(*args))

    def ChkIntg(self, *args):
        """
        * Check integrition of DS

        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_ChkIntg(self, *args)


    def ChkIntgInterf(self, *args):
        """
        * Check integrition of interferences (les supports et les geometries de LI)

        :param LI:
        :type LI: TopOpeBRepDS_ListOfInterference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_ChkIntgInterf(self, *args)


    def CheckDS(self, *args):
        """
        * Verifie que le ieme element de la DS existe, et pour un K de type topologique, verifie qu'il est du bon type (VERTEX, EDGE, WIRE, FACE, SHELL ou SOLID)

        :param i:
        :type i: int
        :param K:
        :type K: TopOpeBRepDS_Kind
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_CheckDS(self, *args)


    def ChkIntgSamDom(self, *args):
        """
        * Check integrition des champs SameDomain de la DS

        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_ChkIntgSamDom(self, *args)


    def CheckShapes(self, *args):
        """
        * Verifie que les Shapes existent bien dans la DS Utile pour les Shapes SameDomain si la liste est vide, renvoie vrai

        :param LS:
        :type LS: TopTools_ListOfShape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_CheckShapes(self, *args)


    def OneVertexOnPnt(self, *args):
        """
        * Verifie que les Vertex non SameDomain sont bien nonSameDomain, que les vertex sameDomain sont bien SameDomain, que les Points sont non confondus ni entre eux, ni avec des Vertex.

        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_OneVertexOnPnt(self, *args)


    def HDS(self, *args):
        """
        :rtype: Handle_TopOpeBRepDS_HDataStructure

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_HDS(self, *args)


    def ChangeHDS(self, *args):
        """
        :rtype: Handle_TopOpeBRepDS_HDataStructure

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_ChangeHDS(self, *args)


    def PrintIntgToString(self):
        """PrintIntgToString(TopOpeBRepDS_Check self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_Check_PrintIntgToString(self)


    def Print(self, *args):
        """
        * Prints the name of CheckStatus <stat> as a String

        :param stat:
        :type stat: TopOpeBRepDS_CheckStatus
        :param S:
        :type S: Standard_OStream &
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_Print(self, *args)


    def PrintShape(self, *args):
        """
        * Prints the name of CheckStatus <stat> as a String

        :param SE:
        :type SE: TopAbs_ShapeEnum
        :param S:
        :type S: Standard_OStream &
        :rtype: Standard_OStream

        * Prints the name of CheckStatus <stat> as a String

        :param index:
        :type index: int
        :param S:
        :type S: Standard_OStream &
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Check_PrintShape(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_Check self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_Check__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_Check self) -> Handle_TopOpeBRepDS_Check"""
        return _TopOpeBRepDS.TopOpeBRepDS_Check_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Check.ChkIntg = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_ChkIntg, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.ChkIntgInterf = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_ChkIntgInterf, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.CheckDS = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_CheckDS, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.ChkIntgSamDom = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_ChkIntgSamDom, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.CheckShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_CheckShapes, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.OneVertexOnPnt = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_OneVertexOnPnt, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.HDS = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_HDS, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.ChangeHDS = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_ChangeHDS, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.PrintIntgToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_PrintIntgToString, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.Print = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_Print, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.PrintShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_PrintShape, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check__kill_pointed, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Check_GetHandle, None, TopOpeBRepDS_Check)
TopOpeBRepDS_Check_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Check_swigregister
TopOpeBRepDS_Check_swigregister(TopOpeBRepDS_Check)

class Handle_TopOpeBRepDS_Check(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_Check_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_Check(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Check_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_Check.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Check_Nullify, None, Handle_TopOpeBRepDS_Check)
Handle_TopOpeBRepDS_Check.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Check_IsNull, None, Handle_TopOpeBRepDS_Check)
Handle_TopOpeBRepDS_Check.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Check_GetObject, None, Handle_TopOpeBRepDS_Check)
Handle_TopOpeBRepDS_Check._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Check__kill_pointed, None, Handle_TopOpeBRepDS_Check)
Handle_TopOpeBRepDS_Check_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_Check_swigregister
Handle_TopOpeBRepDS_Check_swigregister(Handle_TopOpeBRepDS_Check)

def Handle_TopOpeBRepDS_Check_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Check_DownCast(AnObject)
Handle_TopOpeBRepDS_Check_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_Check_DownCast

class TopOpeBRepDS_Curve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: Handle_Geom_Curve &
        :param T:
        :type T: float
        :param IsWalk: default value is Standard_False
        :type IsWalk: bool
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Curve_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Curve(*args))

    def DefineCurve(self, *args):
        """
        :param P:
        :type P: Handle_Geom_Curve &
        :param T:
        :type T: float
        :param IsWalk:
        :type IsWalk: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_DefineCurve(self, *args)


    def SetSCI(self, *args):
        """
        * define the interferences face/curve.

        :param I1:
        :type I1: Handle_TopOpeBRepDS_Interference &
        :param I2:
        :type I2: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_SetSCI(self, *args)


    def GetSCI1(self, *args):
        """
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_GetSCI1(self, *args)


    def GetSCI2(self, *args):
        """
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_GetSCI2(self, *args)


    def GetSCI(self, *args):
        """
        :param I1:
        :type I1: Handle_TopOpeBRepDS_Interference &
        :param I2:
        :type I2: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_GetSCI(self, *args)


    def SetShapes(self, *args):
        """
        :param S1:
        :type S1: TopoDS_Shape &
        :param S2:
        :type S2: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_SetShapes(self, *args)


    def GetShapes(self, *args):
        """
        :param S1:
        :type S1: TopoDS_Shape &
        :param S2:
        :type S2: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_GetShapes(self, *args)


    def Shape1(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Shape1(self, *args)


    def ChangeShape1(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeShape1(self, *args)


    def Shape2(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Shape2(self, *args)


    def ChangeShape2(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeShape2(self, *args)


    def SetRange(self, *args):
        """
        :param First:
        :type First: float
        :param Last:
        :type Last: float
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_SetRange(self, *args)


    def Range(self, *args):
        """
        :param First:
        :type First: float &
        :param Last:
        :type Last: float &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Range(self, *args)


    def Tolerance(self, *args):
        """
        * Update the tolerance

        :param tol:
        :type tol: float
        :rtype: None

        :rtype: float

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Tolerance(self, *args)


    def ChangeCurve(self, *args):
        """
        :rtype: Handle_Geom_Curve

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeCurve(self, *args)


    def Curve(self, *args):
        """
        :rtype: Handle_Geom_Curve

        :param C3D:
        :type C3D: Handle_Geom_Curve &
        :param Tol:
        :type Tol: float
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Curve(self, *args)


    def Curve1(self, *args):
        """
        :rtype: Handle_Geom2d_Curve

        :param PC1:
        :type PC1: Handle_Geom2d_Curve &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Curve1(self, *args)


    def Curve2(self, *args):
        """
        :rtype: Handle_Geom2d_Curve

        :param PC2:
        :type PC2: Handle_Geom2d_Curve &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Curve2(self, *args)


    def IsWalk(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_IsWalk(self, *args)


    def ChangeIsWalk(self, *args):
        """
        :param B:
        :type B: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeIsWalk(self, *args)


    def Keep(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Keep(self, *args)


    def ChangeKeep(self, *args):
        """
        :param B:
        :type B: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeKeep(self, *args)


    def Mother(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Mother(self, *args)


    def ChangeMother(self, *args):
        """
        :param I:
        :type I: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeMother(self, *args)


    def DSIndex(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_DSIndex(self, *args)


    def ChangeDSIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeDSIndex(self, *args)


    def Dump(self, *args):
        """
        :param OS:
        :type OS: Standard_OStream &
        :param index:
        :type index: int
        :param compact: default value is Standard_True
        :type compact: bool
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Curve_Dump(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Curve.DefineCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_DefineCurve, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.SetSCI = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_SetSCI, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.GetSCI1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_GetSCI1, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.GetSCI2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_GetSCI2, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.GetSCI = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_GetSCI, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.SetShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_SetShapes, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.GetShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_GetShapes, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Shape1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Shape1, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeShape1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeShape1, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Shape2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Shape2, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeShape2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeShape2, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.SetRange = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_SetRange, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Range = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Range, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Tolerance = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Tolerance, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeCurve, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Curve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Curve, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Curve1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Curve1, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Curve2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Curve2, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.IsWalk = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_IsWalk, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeIsWalk = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeIsWalk, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Keep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Keep, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeKeep, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Mother = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Mother, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeMother = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeMother, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.DSIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_DSIndex, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.ChangeDSIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_ChangeDSIndex, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve.Dump = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve_Dump, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Curve__kill_pointed, None, TopOpeBRepDS_Curve)
TopOpeBRepDS_Curve_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Curve_swigregister
TopOpeBRepDS_Curve_swigregister(TopOpeBRepDS_Curve)

class TopOpeBRepDS_CurveExplorer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param DS:
        :type DS: TopOpeBRepDS_DataStructure &
        :param FindOnlyKeep: default value is Standard_True
        :type FindOnlyKeep: bool
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_CurveExplorer(*args))

    def Init(self, *args):
        """
        :param DS:
        :type DS: TopOpeBRepDS_DataStructure &
        :param FindOnlyKeep: default value is Standard_True
        :type FindOnlyKeep: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Init(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Next(self, *args)


    def IsCurve(self, *args):
        """
        :param I:
        :type I: int
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_IsCurve(self, *args)


    def IsCurveKeep(self, *args):
        """
        :param I:
        :type I: int
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_IsCurveKeep(self, *args)


    def Curve(self, *args):
        """
        :rtype: TopOpeBRepDS_Curve

        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_Curve

        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Curve(self, *args)


    def NbCurve(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_NbCurve(self, *args)


    def Index(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Index(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_CurveExplorer.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Init, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_More, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Next, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.IsCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_IsCurve, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.IsCurveKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_IsCurveKeep, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.Curve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Curve, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.NbCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_NbCurve, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer.Index = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_Index, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveExplorer__kill_pointed, None, TopOpeBRepDS_CurveExplorer)
TopOpeBRepDS_CurveExplorer_swigregister = _TopOpeBRepDS.TopOpeBRepDS_CurveExplorer_swigregister
TopOpeBRepDS_CurveExplorer_swigregister(TopOpeBRepDS_CurveExplorer)

class TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepDS_DataMapOfCheckStatus &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepDS_DataMapOfCheckStatus &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus_Initialize(self, *args)


    def Key(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_CheckStatus

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus_Initialize, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus)
TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus_Key, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus)
TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus_Value, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus)
TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus__kill_pointed, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus)
TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus_swigregister
TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus_swigregister(TopOpeBRepDS_DataMapIteratorOfDataMapOfCheckStatus)

class TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepDS_DataMapOfIntegerListOfInterference &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepDS_DataMapOfIntegerListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference_Initialize(self, *args)


    def Key(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference_Initialize, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference_Key, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference_Value, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference__kill_pointed, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference_swigregister
TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference_swigregister(TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference)

class TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepDS_DataMapOfInterferenceListOfInterference &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepDS_DataMapOfInterferenceListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference_Initialize(self, *args)


    def Key(self, *args):
        """
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference_Initialize, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference_Key, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference_Value, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference__kill_pointed, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference_swigregister
TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference_swigregister(TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceListOfInterference)

class TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepDS_DataMapOfInterferenceShape &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepDS_DataMapOfInterferenceShape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape_Initialize(self, *args)


    def Key(self, *args):
        """
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape_Initialize, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape)
TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape_Key, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape)
TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape_Value, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape)
TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape__kill_pointed, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape)
TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape_swigregister
TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape_swigregister(TopOpeBRepDS_DataMapIteratorOfDataMapOfInterferenceShape)

class TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State_Initialize(self, *args)


    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_ListOfShapeOn1State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State_Initialize, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State_Key, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State_Value, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State__kill_pointed, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State_swigregister
TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State_swigregister(TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeListOfShapeOn1State)

class TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepDS_DataMapOfShapeState &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepDS_DataMapOfShapeState &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState_Initialize(self, *args)


    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopAbs_State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState_Initialize, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState)
TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState_Key, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState)
TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState_Value, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState)
TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState__kill_pointed, None, TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState)
TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState_swigregister
TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState_swigregister(TopOpeBRepDS_DataMapIteratorOfDataMapOfShapeState)

class TopOpeBRepDS_DataMapIteratorOfMapOfCurve(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepDS_MapOfCurve &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfCurve_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapIteratorOfMapOfCurve(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepDS_MapOfCurve &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfCurve_Initialize(self, *args)


    def Key(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfCurve_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_CurveData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfCurve_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapIteratorOfMapOfCurve.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfCurve_Initialize, None, TopOpeBRepDS_DataMapIteratorOfMapOfCurve)
TopOpeBRepDS_DataMapIteratorOfMapOfCurve.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfCurve_Key, None, TopOpeBRepDS_DataMapIteratorOfMapOfCurve)
TopOpeBRepDS_DataMapIteratorOfMapOfCurve.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfCurve_Value, None, TopOpeBRepDS_DataMapIteratorOfMapOfCurve)
TopOpeBRepDS_DataMapIteratorOfMapOfCurve._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfCurve__kill_pointed, None, TopOpeBRepDS_DataMapIteratorOfMapOfCurve)
TopOpeBRepDS_DataMapIteratorOfMapOfCurve_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfCurve_swigregister
TopOpeBRepDS_DataMapIteratorOfMapOfCurve_swigregister(TopOpeBRepDS_DataMapIteratorOfMapOfCurve)

class TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepDS_MapOfIntegerShapeData &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepDS_MapOfIntegerShapeData &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData_Initialize(self, *args)


    def Key(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_ShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData_Initialize, None, TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData)
TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData_Key, None, TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData)
TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData_Value, None, TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData)
TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData__kill_pointed, None, TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData)
TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData_swigregister
TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData_swigregister(TopOpeBRepDS_DataMapIteratorOfMapOfIntegerShapeData)

class TopOpeBRepDS_DataMapIteratorOfMapOfPoint(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepDS_MapOfPoint &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfPoint_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapIteratorOfMapOfPoint(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepDS_MapOfPoint &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfPoint_Initialize(self, *args)


    def Key(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfPoint_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_PointData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfPoint_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapIteratorOfMapOfPoint.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfPoint_Initialize, None, TopOpeBRepDS_DataMapIteratorOfMapOfPoint)
TopOpeBRepDS_DataMapIteratorOfMapOfPoint.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfPoint_Key, None, TopOpeBRepDS_DataMapIteratorOfMapOfPoint)
TopOpeBRepDS_DataMapIteratorOfMapOfPoint.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfPoint_Value, None, TopOpeBRepDS_DataMapIteratorOfMapOfPoint)
TopOpeBRepDS_DataMapIteratorOfMapOfPoint._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfPoint__kill_pointed, None, TopOpeBRepDS_DataMapIteratorOfMapOfPoint)
TopOpeBRepDS_DataMapIteratorOfMapOfPoint_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfPoint_swigregister
TopOpeBRepDS_DataMapIteratorOfMapOfPoint_swigregister(TopOpeBRepDS_DataMapIteratorOfMapOfPoint)

class TopOpeBRepDS_DataMapIteratorOfMapOfSurface(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepDS_MapOfSurface &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfSurface_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapIteratorOfMapOfSurface(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepDS_MapOfSurface &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfSurface_Initialize(self, *args)


    def Key(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfSurface_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_SurfaceData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfSurface_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapIteratorOfMapOfSurface.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfSurface_Initialize, None, TopOpeBRepDS_DataMapIteratorOfMapOfSurface)
TopOpeBRepDS_DataMapIteratorOfMapOfSurface.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfSurface_Key, None, TopOpeBRepDS_DataMapIteratorOfMapOfSurface)
TopOpeBRepDS_DataMapIteratorOfMapOfSurface.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfSurface_Value, None, TopOpeBRepDS_DataMapIteratorOfMapOfSurface)
TopOpeBRepDS_DataMapIteratorOfMapOfSurface._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfSurface__kill_pointed, None, TopOpeBRepDS_DataMapIteratorOfMapOfSurface)
TopOpeBRepDS_DataMapIteratorOfMapOfSurface_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfMapOfSurface_swigregister
TopOpeBRepDS_DataMapIteratorOfMapOfSurface_swigregister(TopOpeBRepDS_DataMapIteratorOfMapOfSurface)

class TopOpeBRepDS_DataMapIteratorOfShapeSurface(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepDS_ShapeSurface &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfShapeSurface_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapIteratorOfShapeSurface(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepDS_ShapeSurface &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfShapeSurface_Initialize(self, *args)


    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfShapeSurface_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: Handle_Geom_Surface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfShapeSurface_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapIteratorOfShapeSurface.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfShapeSurface_Initialize, None, TopOpeBRepDS_DataMapIteratorOfShapeSurface)
TopOpeBRepDS_DataMapIteratorOfShapeSurface.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfShapeSurface_Key, None, TopOpeBRepDS_DataMapIteratorOfShapeSurface)
TopOpeBRepDS_DataMapIteratorOfShapeSurface.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfShapeSurface_Value, None, TopOpeBRepDS_DataMapIteratorOfShapeSurface)
TopOpeBRepDS_DataMapIteratorOfShapeSurface._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfShapeSurface__kill_pointed, None, TopOpeBRepDS_DataMapIteratorOfShapeSurface)
TopOpeBRepDS_DataMapIteratorOfShapeSurface_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapIteratorOfShapeSurface_swigregister
TopOpeBRepDS_DataMapIteratorOfShapeSurface_swigregister(TopOpeBRepDS_DataMapIteratorOfShapeSurface)

class TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopOpeBRepDS_CheckStatus &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus(*args))

    def GetKey(self):
        """GetKey(TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus self) -> Standard_Integer"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_GetKey(self)


    def SetKey(self, value):
        """SetKey(TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus self, Standard_Integer value)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_SetKey(self, value)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_CheckStatus

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus self) -> Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus.GetKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_GetKey, None, TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus)
TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus.SetKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_SetKey, None, TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus)
TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_Value, None, TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus)
TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus__kill_pointed, None, TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus)
TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_GetHandle, None, TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus)
TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_swigregister
TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_swigregister(TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus)

class Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_Nullify, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_IsNull, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_GetObject, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus__kill_pointed, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_swigregister
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_swigregister(Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus)

def Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_DownCast(AnObject)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfCheckStatus_DownCast

class TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopOpeBRepDS_ListOfInterference &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference(*args))

    def GetKey(self):
        """GetKey(TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference self) -> Standard_Integer"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_GetKey(self)


    def SetKey(self, value):
        """SetKey(TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference self, Standard_Integer value)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_SetKey(self, value)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference self) -> Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference.GetKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_GetKey, None, TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference.SetKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_SetKey, None, TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_Value, None, TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference__kill_pointed, None, TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_GetHandle, None, TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_swigregister
TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_swigregister(TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference)

class Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_Nullify, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_IsNull, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_GetObject, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference__kill_pointed, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_swigregister
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_swigregister(Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference)

def Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_DownCast(AnObject)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference_DownCast

class TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :param I:
        :type I: TopOpeBRepDS_ListOfInterference &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference(*args))

    def Key(self, *args):
        """
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference self) -> Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_Key, None, TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_Value, None, TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference__kill_pointed, None, TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_GetHandle, None, TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_swigregister
TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_swigregister(TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference)

class Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_Nullify, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_IsNull, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_GetObject, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference__kill_pointed, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_swigregister
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_swigregister(Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference)

def Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_DownCast(AnObject)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceListOfInterference_DownCast

class TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :param I:
        :type I: TopoDS_Shape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape(*args))

    def Key(self, *args):
        """
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape self) -> Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_Key, None, TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape)
TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_Value, None, TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape)
TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape__kill_pointed, None, TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape)
TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_GetHandle, None, TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape)
TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_swigregister
TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_swigregister(TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape)

class Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_Nullify, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_IsNull, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_GetObject, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape__kill_pointed, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_swigregister
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_swigregister(Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape)

def Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_DownCast(AnObject)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfInterferenceShape_DownCast

class TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopOpeBRepDS_ListOfShapeOn1State &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State(*args))

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_ListOfShapeOn1State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State self) -> Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_Key, None, TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_Value, None, TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State__kill_pointed, None, TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_GetHandle, None, TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_swigregister
TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_swigregister(TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State)

class Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_Nullify, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_IsNull, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_GetObject, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State__kill_pointed, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_swigregister
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_swigregister(Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State)

def Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_DownCast(AnObject)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeListOfShapeOn1State_DownCast

class TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopAbs_State &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState(*args))

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopAbs_State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState self) -> Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_Key, None, TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState)
TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_Value, None, TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState)
TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState__kill_pointed, None, TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState)
TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_GetHandle, None, TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState)
TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_swigregister
TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_swigregister(TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState)

class Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_Nullify, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_IsNull, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_GetObject, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState__kill_pointed, None, Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_swigregister
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_swigregister(Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState)

def Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_DownCast(AnObject)
Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfDataMapOfShapeState_DownCast

class TopOpeBRepDS_DataMapNodeOfMapOfCurve(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopOpeBRepDS_CurveData &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfCurve_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapNodeOfMapOfCurve(*args))

    def GetKey(self):
        """GetKey(TopOpeBRepDS_DataMapNodeOfMapOfCurve self) -> Standard_Integer"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfCurve_GetKey(self)


    def SetKey(self, value):
        """SetKey(TopOpeBRepDS_DataMapNodeOfMapOfCurve self, Standard_Integer value)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfCurve_SetKey(self, value)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_CurveData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfCurve_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapNodeOfMapOfCurve self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfCurve__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_DataMapNodeOfMapOfCurve self) -> Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfCurve_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapNodeOfMapOfCurve.GetKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfCurve_GetKey, None, TopOpeBRepDS_DataMapNodeOfMapOfCurve)
TopOpeBRepDS_DataMapNodeOfMapOfCurve.SetKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfCurve_SetKey, None, TopOpeBRepDS_DataMapNodeOfMapOfCurve)
TopOpeBRepDS_DataMapNodeOfMapOfCurve.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfCurve_Value, None, TopOpeBRepDS_DataMapNodeOfMapOfCurve)
TopOpeBRepDS_DataMapNodeOfMapOfCurve._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfCurve__kill_pointed, None, TopOpeBRepDS_DataMapNodeOfMapOfCurve)
TopOpeBRepDS_DataMapNodeOfMapOfCurve.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfCurve_GetHandle, None, TopOpeBRepDS_DataMapNodeOfMapOfCurve)
TopOpeBRepDS_DataMapNodeOfMapOfCurve_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfCurve_swigregister
TopOpeBRepDS_DataMapNodeOfMapOfCurve_swigregister(TopOpeBRepDS_DataMapNodeOfMapOfCurve)

class Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve_Nullify, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve_IsNull, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve_GetObject, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve__kill_pointed, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve_swigregister
Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve_swigregister(Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve)

def Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve_DownCast(AnObject)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfCurve_DownCast

class TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopOpeBRepDS_ShapeData &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData(*args))

    def GetKey(self):
        """GetKey(TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData self) -> Standard_Integer"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_GetKey(self)


    def SetKey(self, value):
        """SetKey(TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData self, Standard_Integer value)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_SetKey(self, value)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_ShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData self) -> Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData.GetKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_GetKey, None, TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData)
TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData.SetKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_SetKey, None, TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData)
TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_Value, None, TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData)
TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData__kill_pointed, None, TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData)
TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_GetHandle, None, TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData)
TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_swigregister
TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_swigregister(TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData)

class Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_Nullify, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_IsNull, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_GetObject, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData__kill_pointed, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_swigregister
Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_swigregister(Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData)

def Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_DownCast(AnObject)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfIntegerShapeData_DownCast

class TopOpeBRepDS_DataMapNodeOfMapOfPoint(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopOpeBRepDS_PointData &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfPoint_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapNodeOfMapOfPoint(*args))

    def GetKey(self):
        """GetKey(TopOpeBRepDS_DataMapNodeOfMapOfPoint self) -> Standard_Integer"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfPoint_GetKey(self)


    def SetKey(self, value):
        """SetKey(TopOpeBRepDS_DataMapNodeOfMapOfPoint self, Standard_Integer value)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfPoint_SetKey(self, value)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_PointData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfPoint_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapNodeOfMapOfPoint self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfPoint__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_DataMapNodeOfMapOfPoint self) -> Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfPoint_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapNodeOfMapOfPoint.GetKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfPoint_GetKey, None, TopOpeBRepDS_DataMapNodeOfMapOfPoint)
TopOpeBRepDS_DataMapNodeOfMapOfPoint.SetKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfPoint_SetKey, None, TopOpeBRepDS_DataMapNodeOfMapOfPoint)
TopOpeBRepDS_DataMapNodeOfMapOfPoint.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfPoint_Value, None, TopOpeBRepDS_DataMapNodeOfMapOfPoint)
TopOpeBRepDS_DataMapNodeOfMapOfPoint._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfPoint__kill_pointed, None, TopOpeBRepDS_DataMapNodeOfMapOfPoint)
TopOpeBRepDS_DataMapNodeOfMapOfPoint.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfPoint_GetHandle, None, TopOpeBRepDS_DataMapNodeOfMapOfPoint)
TopOpeBRepDS_DataMapNodeOfMapOfPoint_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfPoint_swigregister
TopOpeBRepDS_DataMapNodeOfMapOfPoint_swigregister(TopOpeBRepDS_DataMapNodeOfMapOfPoint)

class Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint_Nullify, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint_IsNull, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint_GetObject, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint__kill_pointed, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint_swigregister
Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint_swigregister(Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint)

def Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint_DownCast(AnObject)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfPoint_DownCast

class TopOpeBRepDS_DataMapNodeOfMapOfSurface(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopOpeBRepDS_SurfaceData &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfSurface_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapNodeOfMapOfSurface(*args))

    def GetKey(self):
        """GetKey(TopOpeBRepDS_DataMapNodeOfMapOfSurface self) -> Standard_Integer"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfSurface_GetKey(self)


    def SetKey(self, value):
        """SetKey(TopOpeBRepDS_DataMapNodeOfMapOfSurface self, Standard_Integer value)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfSurface_SetKey(self, value)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_SurfaceData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfSurface_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapNodeOfMapOfSurface self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfSurface__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_DataMapNodeOfMapOfSurface self) -> Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfSurface_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapNodeOfMapOfSurface.GetKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfSurface_GetKey, None, TopOpeBRepDS_DataMapNodeOfMapOfSurface)
TopOpeBRepDS_DataMapNodeOfMapOfSurface.SetKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfSurface_SetKey, None, TopOpeBRepDS_DataMapNodeOfMapOfSurface)
TopOpeBRepDS_DataMapNodeOfMapOfSurface.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfSurface_Value, None, TopOpeBRepDS_DataMapNodeOfMapOfSurface)
TopOpeBRepDS_DataMapNodeOfMapOfSurface._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfSurface__kill_pointed, None, TopOpeBRepDS_DataMapNodeOfMapOfSurface)
TopOpeBRepDS_DataMapNodeOfMapOfSurface.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfSurface_GetHandle, None, TopOpeBRepDS_DataMapNodeOfMapOfSurface)
TopOpeBRepDS_DataMapNodeOfMapOfSurface_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfMapOfSurface_swigregister
TopOpeBRepDS_DataMapNodeOfMapOfSurface_swigregister(TopOpeBRepDS_DataMapNodeOfMapOfSurface)

class Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface_Nullify, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface_IsNull, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface_GetObject, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface__kill_pointed, None, Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface_swigregister
Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface_swigregister(Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface)

def Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface_DownCast(AnObject)
Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfMapOfSurface_DownCast

class TopOpeBRepDS_DataMapNodeOfShapeSurface(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: Handle_Geom_Surface &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfShapeSurface_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapNodeOfShapeSurface(*args))

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfShapeSurface_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: Handle_Geom_Surface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfShapeSurface_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapNodeOfShapeSurface self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfShapeSurface__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_DataMapNodeOfShapeSurface self) -> Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfShapeSurface_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapNodeOfShapeSurface.Key = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfShapeSurface_Key, None, TopOpeBRepDS_DataMapNodeOfShapeSurface)
TopOpeBRepDS_DataMapNodeOfShapeSurface.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfShapeSurface_Value, None, TopOpeBRepDS_DataMapNodeOfShapeSurface)
TopOpeBRepDS_DataMapNodeOfShapeSurface._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfShapeSurface__kill_pointed, None, TopOpeBRepDS_DataMapNodeOfShapeSurface)
TopOpeBRepDS_DataMapNodeOfShapeSurface.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfShapeSurface_GetHandle, None, TopOpeBRepDS_DataMapNodeOfShapeSurface)
TopOpeBRepDS_DataMapNodeOfShapeSurface_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapNodeOfShapeSurface_swigregister
TopOpeBRepDS_DataMapNodeOfShapeSurface_swigregister(TopOpeBRepDS_DataMapNodeOfShapeSurface)

class Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface_Nullify, None, Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface)
Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface_IsNull, None, Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface)
Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface_GetObject, None, Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface)
Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface__kill_pointed, None, Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface)
Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface_swigregister
Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface_swigregister(Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface)

def Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface_DownCast(AnObject)
Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_DataMapNodeOfShapeSurface_DownCast

class TopOpeBRepDS_DataMapOfCheckStatus(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapOfCheckStatus(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DataMapOfCheckStatus &
        :rtype: TopOpeBRepDS_DataMapOfCheckStatus

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DataMapOfCheckStatus &
        :rtype: TopOpeBRepDS_DataMapOfCheckStatus

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopOpeBRepDS_CheckStatus &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Bind(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_IsBound(self, *args)


    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_UnBind(self, *args)


    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopOpeBRepDS_CheckStatus

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Find(self, *args)


    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopOpeBRepDS_CheckStatus

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_ChangeFind(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Find1(self, *args)


    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_ChangeFind1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapOfCheckStatus self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapOfCheckStatus.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Assign, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Set, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_ReSize, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Clear, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Bind, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_IsBound, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_UnBind, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Find, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_ChangeFind, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_Find1, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus.ChangeFind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_ChangeFind1, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus__kill_pointed, None, TopOpeBRepDS_DataMapOfCheckStatus)
TopOpeBRepDS_DataMapOfCheckStatus_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapOfCheckStatus_swigregister
TopOpeBRepDS_DataMapOfCheckStatus_swigregister(TopOpeBRepDS_DataMapOfCheckStatus)

class TopOpeBRepDS_DataMapOfIntegerListOfInterference(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapOfIntegerListOfInterference(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DataMapOfIntegerListOfInterference &
        :rtype: TopOpeBRepDS_DataMapOfIntegerListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DataMapOfIntegerListOfInterference &
        :rtype: TopOpeBRepDS_DataMapOfIntegerListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopOpeBRepDS_ListOfInterference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Bind(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_IsBound(self, *args)


    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_UnBind(self, *args)


    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Find(self, *args)


    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_ChangeFind(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Find1(self, *args)


    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_ChangeFind1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapOfIntegerListOfInterference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapOfIntegerListOfInterference.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Assign, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Set, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_ReSize, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Clear, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Bind, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_IsBound, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_UnBind, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Find, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_ChangeFind, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_Find1, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference.ChangeFind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_ChangeFind1, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference__kill_pointed, None, TopOpeBRepDS_DataMapOfIntegerListOfInterference)
TopOpeBRepDS_DataMapOfIntegerListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapOfIntegerListOfInterference_swigregister
TopOpeBRepDS_DataMapOfIntegerListOfInterference_swigregister(TopOpeBRepDS_DataMapOfIntegerListOfInterference)

class TopOpeBRepDS_DataMapOfInterferenceListOfInterference(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapOfInterferenceListOfInterference(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DataMapOfInterferenceListOfInterference &
        :rtype: TopOpeBRepDS_DataMapOfInterferenceListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DataMapOfInterferenceListOfInterference &
        :rtype: TopOpeBRepDS_DataMapOfInterferenceListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :param I:
        :type I: TopOpeBRepDS_ListOfInterference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Bind(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_IsBound(self, *args)


    def UnBind(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_UnBind(self, *args)


    def Find(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Find(self, *args)


    def ChangeFind(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_ChangeFind(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Find1(self, *args)


    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_ChangeFind1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapOfInterferenceListOfInterference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Assign, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Set, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_ReSize, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Clear, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Bind, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_IsBound, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_UnBind, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Find, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_ChangeFind, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_Find1, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference.ChangeFind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_ChangeFind1, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference__kill_pointed, None, TopOpeBRepDS_DataMapOfInterferenceListOfInterference)
TopOpeBRepDS_DataMapOfInterferenceListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceListOfInterference_swigregister
TopOpeBRepDS_DataMapOfInterferenceListOfInterference_swigregister(TopOpeBRepDS_DataMapOfInterferenceListOfInterference)

class TopOpeBRepDS_DataMapOfInterferenceShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapOfInterferenceShape(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DataMapOfInterferenceShape &
        :rtype: TopOpeBRepDS_DataMapOfInterferenceShape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DataMapOfInterferenceShape &
        :rtype: TopOpeBRepDS_DataMapOfInterferenceShape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :param I:
        :type I: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Bind(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_IsBound(self, *args)


    def UnBind(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_UnBind(self, *args)


    def Find(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Find(self, *args)


    def ChangeFind(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_ChangeFind(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Find1(self, *args)


    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: Handle_TopOpeBRepDS_Interference &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_ChangeFind1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapOfInterferenceShape self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapOfInterferenceShape.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Assign, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Set, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_ReSize, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Clear, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Bind, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_IsBound, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_UnBind, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Find, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_ChangeFind, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_Find1, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape.ChangeFind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_ChangeFind1, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape__kill_pointed, None, TopOpeBRepDS_DataMapOfInterferenceShape)
TopOpeBRepDS_DataMapOfInterferenceShape_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapOfInterferenceShape_swigregister
TopOpeBRepDS_DataMapOfInterferenceShape_swigregister(TopOpeBRepDS_DataMapOfInterferenceShape)

class TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
        :rtype: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
        :rtype: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopOpeBRepDS_ListOfShapeOn1State &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Bind(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_IsBound(self, *args)


    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_UnBind(self, *args)


    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopOpeBRepDS_ListOfShapeOn1State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Find(self, *args)


    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopOpeBRepDS_ListOfShapeOn1State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_ChangeFind(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Find1(self, *args)


    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_ChangeFind1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Assign, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Set, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_ReSize, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Clear, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Bind, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_IsBound, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_UnBind, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Find, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_ChangeFind, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_Find1, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.ChangeFind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_ChangeFind1, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State__kill_pointed, None, TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_swigregister
TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State_swigregister(TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State)

class TopOpeBRepDS_DataMapOfShapeState(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataMapOfShapeState(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DataMapOfShapeState &
        :rtype: TopOpeBRepDS_DataMapOfShapeState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DataMapOfShapeState &
        :rtype: TopOpeBRepDS_DataMapOfShapeState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopAbs_State &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Bind(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_IsBound(self, *args)


    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_UnBind(self, *args)


    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopAbs_State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Find(self, *args)


    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopAbs_State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_ChangeFind(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Find1(self, *args)


    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_ChangeFind1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DataMapOfShapeState self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataMapOfShapeState.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Assign, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Set, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_ReSize, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Clear, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Bind, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_IsBound, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_UnBind, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Find, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_ChangeFind, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_Find1, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState.ChangeFind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_ChangeFind1, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState__kill_pointed, None, TopOpeBRepDS_DataMapOfShapeState)
TopOpeBRepDS_DataMapOfShapeState_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataMapOfShapeState_swigregister
TopOpeBRepDS_DataMapOfShapeState_swigregister(TopOpeBRepDS_DataMapOfShapeState)

class TopOpeBRepDS_DataStructure(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DataStructure_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DataStructure(*args))

    def Init(self, *args):
        """
        * reset the data structure

        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_Init(self, *args)


    def AddSurface(self, *args):
        """
        * Insert a new surface. Returns the index.

        :param S:
        :type S: TopOpeBRepDS_Surface &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddSurface(self, *args)


    def RemoveSurface(self, *args):
        """
        :param I:
        :type I: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveSurface(self, *args)


    def KeepSurface(self, *args):
        """
        :param I:
        :type I: int
        :rtype: bool

        :param S:
        :type S: TopOpeBRepDS_Surface &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepSurface(self, *args)


    def ChangeKeepSurface(self, *args):
        """
        :param I:
        :type I: int
        :param FindKeep:
        :type FindKeep: bool
        :rtype: None

        :param S:
        :type S: TopOpeBRepDS_Surface &
        :param FindKeep:
        :type FindKeep: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepSurface(self, *args)


    def AddCurve(self, *args):
        """
        * Insert a new curve. Returns the index.

        :param S:
        :type S: TopOpeBRepDS_Curve &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddCurve(self, *args)


    def RemoveCurve(self, *args):
        """
        :param I:
        :type I: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveCurve(self, *args)


    def KeepCurve(self, *args):
        """
        :param I:
        :type I: int
        :rtype: bool

        :param C:
        :type C: TopOpeBRepDS_Curve &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepCurve(self, *args)


    def ChangeKeepCurve(self, *args):
        """
        :param I:
        :type I: int
        :param FindKeep:
        :type FindKeep: bool
        :rtype: None

        :param C:
        :type C: TopOpeBRepDS_Curve &
        :param FindKeep:
        :type FindKeep: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepCurve(self, *args)


    def AddPoint(self, *args):
        """
        * Insert a new point. Returns the index.

        :param PDS:
        :type PDS: TopOpeBRepDS_Point &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddPoint(self, *args)


    def AddPointSS(self, *args):
        """
        * Insert a new point. Returns the index.

        :param PDS:
        :type PDS: TopOpeBRepDS_Point &
        :param S1:
        :type S1: TopoDS_Shape &
        :param S2:
        :type S2: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddPointSS(self, *args)


    def RemovePoint(self, *args):
        """
        :param I:
        :type I: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemovePoint(self, *args)


    def KeepPoint(self, *args):
        """
        :param I:
        :type I: int
        :rtype: bool

        :param P:
        :type P: TopOpeBRepDS_Point &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepPoint(self, *args)


    def ChangeKeepPoint(self, *args):
        """
        :param I:
        :type I: int
        :param FindKeep:
        :type FindKeep: bool
        :rtype: None

        :param P:
        :type P: TopOpeBRepDS_Point &
        :param FindKeep:
        :type FindKeep: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepPoint(self, *args)


    def AddShape(self, *args):
        """
        * Insert a shape S. Returns the index.

        :param S:
        :type S: TopoDS_Shape &
        :rtype: int

        * Insert a shape S which ancestor is I = 1 or 2. Returns the index.

        :param S:
        :type S: TopoDS_Shape &
        :param I:
        :type I: int
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddShape(self, *args)


    def KeepShape(self, *args):
        """
        :param I:
        :type I: int
        :param FindKeep: default value is Standard_True
        :type FindKeep: bool
        :rtype: bool

        :param S:
        :type S: TopoDS_Shape &
        :param FindKeep: default value is Standard_True
        :type FindKeep: bool
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepShape(self, *args)


    def ChangeKeepShape(self, *args):
        """
        :param I:
        :type I: int
        :param FindKeep:
        :type FindKeep: bool
        :rtype: None

        :param S:
        :type S: TopoDS_Shape &
        :param FindKeep:
        :type FindKeep: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepShape(self, *args)


    def InitSectionEdges(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_InitSectionEdges(self, *args)


    def AddSectionEdge(self, *args):
        """
        :param E:
        :type E: TopoDS_Edge &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddSectionEdge(self, *args)


    def SurfaceInterferences(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_SurfaceInterferences(self, *args)


    def ChangeSurfaceInterferences(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeSurfaceInterferences(self, *args)


    def CurveInterferences(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_CurveInterferences(self, *args)


    def ChangeCurveInterferences(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeCurveInterferences(self, *args)


    def PointInterferences(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_PointInterferences(self, *args)


    def ChangePointInterferences(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangePointInterferences(self, *args)


    def ShapeInterferences(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param FindKeep: default value is Standard_True
        :type FindKeep: bool
        :rtype: TopOpeBRepDS_ListOfInterference

        :param I:
        :type I: int
        :param FindKeep: default value is Standard_True
        :type FindKeep: bool
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ShapeInterferences(self, *args)


    def ChangeShapeInterferences(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :rtype: TopOpeBRepDS_ListOfInterference

        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeShapeInterferences(self, *args)


    def ShapeSameDomain(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :rtype: TopTools_ListOfShape

        :param I:
        :type I: int
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ShapeSameDomain(self, *args)


    def ChangeShapeSameDomain(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :rtype: TopTools_ListOfShape

        :param I:
        :type I: int
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeShapeSameDomain(self, *args)


    def ChangeShapes(self, *args):
        """
        :rtype: TopOpeBRepDS_MapOfShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeShapes(self, *args)


    def AddShapeSameDomain(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param SSD:
        :type SSD: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddShapeSameDomain(self, *args)


    def RemoveShapeSameDomain(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param SSD:
        :type SSD: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveShapeSameDomain(self, *args)


    def SameDomainRef(self, *args):
        """
        :param I:
        :type I: int
        :rtype: int

        :param S:
        :type S: TopoDS_Shape &
        :rtype: int

        :param I:
        :type I: int
        :param Ref:
        :type Ref: int
        :rtype: None

        :param S:
        :type S: TopoDS_Shape &
        :param Ref:
        :type Ref: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_SameDomainRef(self, *args)


    def SameDomainOri(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_Config

        :param S:
        :type S: TopoDS_Shape &
        :rtype: TopOpeBRepDS_Config

        :param I:
        :type I: int
        :param Ori:
        :type Ori: TopOpeBRepDS_Config
        :rtype: None

        :param S:
        :type S: TopoDS_Shape &
        :param Ori:
        :type Ori: TopOpeBRepDS_Config
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_SameDomainOri(self, *args)


    def SameDomainInd(self, *args):
        """
        :param I:
        :type I: int
        :rtype: int

        :param S:
        :type S: TopoDS_Shape &
        :rtype: int

        :param I:
        :type I: int
        :param Ind:
        :type Ind: int
        :rtype: None

        :param S:
        :type S: TopoDS_Shape &
        :param Ind:
        :type Ind: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_SameDomainInd(self, *args)


    def AncestorRank(self, *args):
        """
        :param I:
        :type I: int
        :rtype: int

        :param S:
        :type S: TopoDS_Shape &
        :rtype: int

        :param I:
        :type I: int
        :param Ianc:
        :type Ianc: int
        :rtype: None

        :param S:
        :type S: TopoDS_Shape &
        :param Ianc:
        :type Ianc: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AncestorRank(self, *args)


    def AddShapeInterference(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddShapeInterference(self, *args)


    def RemoveShapeInterference(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveShapeInterference(self, *args)


    def FillShapesSameDomain(self, *args):
        """
        :param S1:
        :type S1: TopoDS_Shape &
        :param S2:
        :type S2: TopoDS_Shape &
        :param refFirst: default value is Standard_True
        :type refFirst: bool
        :rtype: None

        :param S1:
        :type S1: TopoDS_Shape &
        :param S2:
        :type S2: TopoDS_Shape &
        :param c1:
        :type c1: TopOpeBRepDS_Config
        :param c2:
        :type c2: TopOpeBRepDS_Config
        :param refFirst: default value is Standard_True
        :type refFirst: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_FillShapesSameDomain(self, *args)


    def UnfillShapesSameDomain(self, *args):
        """
        :param S1:
        :type S1: TopoDS_Shape &
        :param S2:
        :type S2: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_UnfillShapesSameDomain(self, *args)


    def NbSurfaces(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbSurfaces(self, *args)


    def NbCurves(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbCurves(self, *args)


    def ChangeNbCurves(self, *args):
        """
        :param N:
        :type N: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeNbCurves(self, *args)


    def NbPoints(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbPoints(self, *args)


    def NbShapes(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbShapes(self, *args)


    def NbSectionEdges(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbSectionEdges(self, *args)


    def Surface(self, *args):
        """
        * Returns the surface of index <I>.

        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_Surface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_Surface(self, *args)


    def ChangeSurface(self, *args):
        """
        * Returns the surface of index <I>.

        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_Surface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeSurface(self, *args)


    def Curve(self, *args):
        """
        * Returns the Curve of index <I>.

        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_Curve

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_Curve(self, *args)


    def ChangeCurve(self, *args):
        """
        * Returns the Curve of index <I>.

        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_Curve

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeCurve(self, *args)


    def Point(self, *args):
        """
        * Returns the point of index <I>.

        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_Point

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_Point(self, *args)


    def ChangePoint(self, *args):
        """
        * Returns the point of index <I>.

        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_Point

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangePoint(self, *args)


    def Shape(self, *args):
        """
        * returns the shape of index I stored in the map myShapes, accessing a list of interference.

        :param I:
        :type I: int
        :param FindKeep: default value is Standard_True
        :type FindKeep: bool
        :rtype: TopoDS_Shape

        * returns the index of shape <S> stored in the map myShapes, accessing a list of interference. returns 0 if <S> is not in the map.

        :param S:
        :type S: TopoDS_Shape &
        :param FindKeep: default value is Standard_True
        :type FindKeep: bool
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_Shape(self, *args)


    def SectionEdge(self, *args):
        """
        :param I:
        :type I: int
        :param FindKeep: default value is Standard_True
        :type FindKeep: bool
        :rtype: TopoDS_Edge

        :param E:
        :type E: TopoDS_Edge &
        :param FindKeep: default value is Standard_True
        :type FindKeep: bool
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_SectionEdge(self, *args)


    def IsSectionEdge(self, *args):
        """
        :param E:
        :type E: TopoDS_Edge &
        :param FindKeep: default value is Standard_True
        :type FindKeep: bool
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_IsSectionEdge(self, *args)


    def HasGeometry(self, *args):
        """
        * Returns True if <S> has new geometries, i.e : True si : HasShape(S) True S a une liste d'interferences non vide. S = SOLID, FACE, EDGE : true/false S = SHELL, WIRE, VERTEX : false.

        :param S:
        :type S: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_HasGeometry(self, *args)


    def HasShape(self, *args):
        """
        * Returns True if <S> est dans myShapes

        :param S:
        :type S: TopoDS_Shape &
        :param FindKeep: default value is Standard_True
        :type FindKeep: bool
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_HasShape(self, *args)


    def SetNewSurface(self, *args):
        """
        :param F:
        :type F: TopoDS_Shape &
        :param S:
        :type S: Handle_Geom_Surface &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_SetNewSurface(self, *args)


    def HasNewSurface(self, *args):
        """
        :param F:
        :type F: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_HasNewSurface(self, *args)


    def NewSurface(self, *args):
        """
        :param F:
        :type F: TopoDS_Shape &
        :rtype: Handle_Geom_Surface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_NewSurface(self, *args)


    def Isfafa(self, *args):
        """
        :param isfafa:
        :type isfafa: bool
        :rtype: None

        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_Isfafa(self, *args)


    def ChangeMapOfShapeWithStateObj(self, *args):
        """
        :rtype: TopOpeBRepDS_IndexedDataMapOfShapeWithState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfShapeWithStateObj(self, *args)


    def ChangeMapOfShapeWithStateTool(self, *args):
        """
        :rtype: TopOpeBRepDS_IndexedDataMapOfShapeWithState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfShapeWithStateTool(self, *args)


    def ChangeMapOfShapeWithState(self, *args):
        """
        :param aShape:
        :type aShape: TopoDS_Shape &
        :param aFlag:
        :type aFlag: bool
        :rtype: TopOpeBRepDS_IndexedDataMapOfShapeWithState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfShapeWithState(self, *args)


    def GetShapeWithState(self, *args):
        """
        :param aShape:
        :type aShape: TopoDS_Shape &
        :rtype: TopOpeBRepDS_ShapeWithState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_GetShapeWithState(self, *args)


    def ChangeMapOfRejectedShapesObj(self, *args):
        """
        :rtype: TopTools_IndexedMapOfShape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfRejectedShapesObj(self, *args)


    def ChangeMapOfRejectedShapesTool(self, *args):
        """
        :rtype: TopTools_IndexedMapOfShape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfRejectedShapesTool(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DataStructure.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_Init, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.RemoveSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.KeepSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeKeepSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddCurve, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.RemoveCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveCurve, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.KeepCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepCurve, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeKeepCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepCurve, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddPoint, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddPointSS = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddPointSS, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.RemovePoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemovePoint, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.KeepPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepPoint, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeKeepPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepPoint, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddShape, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.KeepShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_KeepShape, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeKeepShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeKeepShape, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.InitSectionEdges = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_InitSectionEdges, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddSectionEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddSectionEdge, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.SurfaceInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_SurfaceInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeSurfaceInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeSurfaceInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.CurveInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_CurveInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeCurveInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeCurveInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.PointInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_PointInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangePointInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangePointInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ShapeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ShapeInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeShapeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeShapeInterferences, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ShapeSameDomain = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ShapeSameDomain, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeShapeSameDomain = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeShapeSameDomain, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeShapes, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddShapeSameDomain = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddShapeSameDomain, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.RemoveShapeSameDomain = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveShapeSameDomain, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.SameDomainRef = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_SameDomainRef, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.SameDomainOri = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_SameDomainOri, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.SameDomainInd = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_SameDomainInd, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AncestorRank = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AncestorRank, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.AddShapeInterference = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_AddShapeInterference, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.RemoveShapeInterference = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_RemoveShapeInterference, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.FillShapesSameDomain = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_FillShapesSameDomain, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.UnfillShapesSameDomain = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_UnfillShapesSameDomain, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.NbSurfaces = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbSurfaces, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.NbCurves = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbCurves, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeNbCurves = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeNbCurves, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.NbPoints = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbPoints, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.NbShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbShapes, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.NbSectionEdges = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_NbSectionEdges, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.Surface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_Surface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.Curve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_Curve, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeCurve, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.Point = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_Point, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangePoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangePoint, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.Shape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_Shape, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.SectionEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_SectionEdge, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.IsSectionEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_IsSectionEdge, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.HasGeometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_HasGeometry, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.HasShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_HasShape, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.SetNewSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_SetNewSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.HasNewSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_HasNewSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.NewSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_NewSurface, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.Isfafa = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_Isfafa, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeMapOfShapeWithStateObj = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfShapeWithStateObj, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeMapOfShapeWithStateTool = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfShapeWithStateTool, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeMapOfShapeWithState = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfShapeWithState, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.GetShapeWithState = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_GetShapeWithState, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeMapOfRejectedShapesObj = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfRejectedShapesObj, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure.ChangeMapOfRejectedShapesTool = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure_ChangeMapOfRejectedShapesTool, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DataStructure__kill_pointed, None, TopOpeBRepDS_DataStructure)
TopOpeBRepDS_DataStructure_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DataStructure_swigregister
TopOpeBRepDS_DataStructure_swigregister(TopOpeBRepDS_DataStructure)

class TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepDS_DoubleMapOfIntegerShape &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepDS_DoubleMapOfIntegerShape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape_Initialize(self, *args)


    def Key1(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape_Key1(self, *args)


    def Key2(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape_Key2(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape_Initialize, None, TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape.Key1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape_Key1, None, TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape.Key2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape_Key2, None, TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape__kill_pointed, None, TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape_swigregister
TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape_swigregister(TopOpeBRepDS_DoubleMapIteratorOfDoubleMapOfIntegerShape)

class TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K1:
        :type K1: int &
        :param K2:
        :type K2: TopoDS_Shape &
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape(*args))

    def GetKey1(self):
        """GetKey1(TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape self) -> Standard_Integer"""
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_GetKey1(self)


    def SetKey1(self, value):
        """SetKey1(TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape self, Standard_Integer value)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_SetKey1(self, value)


    def Key2(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_Key2(self, *args)


    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_Next2(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape self) -> Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape"""
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape.GetKey1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_GetKey1, None, TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape.SetKey1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_SetKey1, None, TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape.Key2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_Key2, None, TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape.Next2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_Next2, None, TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape__kill_pointed, None, TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_GetHandle, None, TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_swigregister
TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_swigregister(TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape)

class Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_Nullify, None, Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape)
Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_IsNull, None, Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape)
Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_GetObject, None, Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape)
Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape__kill_pointed, None, Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape)
Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_swigregister
Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_swigregister(Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape)

def Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_DownCast(AnObject)
Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_DoubleMapNodeOfDoubleMapOfIntegerShape_DownCast

class TopOpeBRepDS_DoubleMapOfIntegerShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_DoubleMapOfIntegerShape(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DoubleMapOfIntegerShape &
        :rtype: TopOpeBRepDS_DoubleMapOfIntegerShape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_DoubleMapOfIntegerShape &
        :rtype: TopOpeBRepDS_DoubleMapOfIntegerShape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K1:
        :type K1: int &
        :param K2:
        :type K2: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Bind(self, *args)


    def AreBound(self, *args):
        """
        :param K1:
        :type K1: int &
        :param K2:
        :type K2: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_AreBound(self, *args)


    def IsBound1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_IsBound1(self, *args)


    def IsBound2(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_IsBound2(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Find1(self, *args)


    def Find2(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Find2(self, *args)


    def UnBind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_UnBind1(self, *args)


    def UnBind2(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_UnBind2(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_DoubleMapOfIntegerShape self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_DoubleMapOfIntegerShape.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Assign, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Set, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_ReSize, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Clear, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Bind, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.AreBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_AreBound, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.IsBound1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_IsBound1, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.IsBound2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_IsBound2, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Find1, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.Find2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_Find2, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.UnBind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_UnBind1, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape.UnBind2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_UnBind2, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape__kill_pointed, None, TopOpeBRepDS_DoubleMapOfIntegerShape)
TopOpeBRepDS_DoubleMapOfIntegerShape_swigregister = _TopOpeBRepDS.TopOpeBRepDS_DoubleMapOfIntegerShape_swigregister
TopOpeBRepDS_DoubleMapOfIntegerShape_swigregister(TopOpeBRepDS_DoubleMapOfIntegerShape)

class TopOpeBRepDS_Dumper(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Dumper_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Dumper(*args))

    def PrintType(*args):
        """
        :param C:
        :type C: Handle_Geom_Curve &
        :param S:
        :type S: Standard_OStream &
        :rtype: Standard_OStream

        :param C:
        :type C: Handle_Geom2d_Curve &
        :param S:
        :type S: Standard_OStream &
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_PrintType(*args)

    PrintType = staticmethod(PrintType)

    def Dump(self, *args):
        """
        :param OS:
        :type OS: Standard_OStream &
        :param fk: default value is Standard_False
        :type fk: bool
        :param ct: default value is Standard_True
        :type ct: bool
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_Dump(self, *args)


    def DumpGeometry(self, *args):
        """
        :param OS:
        :type OS: Standard_OStream &
        :param fk: default value is Standard_False
        :type fk: bool
        :param ct: default value is Standard_True
        :type ct: bool
        :rtype: Standard_OStream

        :param K:
        :type K: TopOpeBRepDS_Kind
        :param OS:
        :type OS: Standard_OStream &
        :param fk: default value is Standard_False
        :type fk: bool
        :param ct: default value is Standard_True
        :type ct: bool
        :rtype: Standard_OStream

        :param K:
        :type K: TopOpeBRepDS_Kind
        :param I:
        :type I: int
        :param OS:
        :type OS: Standard_OStream &
        :param fk: default value is Standard_False
        :type fk: bool
        :param ct: default value is Standard_True
        :type ct: bool
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpGeometry(self, *args)


    def DumpTopologyToString(self):
        """DumpTopologyToString(TopOpeBRepDS_Dumper self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpTopologyToString(self)


    def DumpTopology(self, *args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind
        :param OS:
        :type OS: Standard_OStream &
        :rtype: Standard_OStream

        :param T:
        :type T: TopAbs_ShapeEnum
        :param OS:
        :type OS: Standard_OStream &
        :rtype: Standard_OStream

        :param K:
        :type K: TopOpeBRepDS_Kind
        :param I:
        :type I: int
        :param OS:
        :type OS: Standard_OStream &
        :rtype: Standard_OStream

        :param T:
        :type T: TopAbs_ShapeEnum
        :param I:
        :type I: int
        :param OS:
        :type OS: Standard_OStream &
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpTopology(self, *args)


    def DumpSectionEdge(self, *args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind
        :param OS:
        :type OS: Standard_OStream &
        :rtype: Standard_OStream

        :param K:
        :type K: TopOpeBRepDS_Kind
        :param I:
        :type I: int
        :param OS:
        :type OS: Standard_OStream &
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpSectionEdge(self, *args)


    def SDumpRefOri(self, *args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind
        :param I:
        :type I: int
        :rtype: TCollection_AsciiString

        :param S:
        :type S: TopoDS_Shape &
        :rtype: TCollection_AsciiString

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_SDumpRefOri(self, *args)


    def DumpRefOri(self, *args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind
        :param I:
        :type I: int
        :param OS:
        :type OS: Standard_OStream &
        :rtype: Standard_OStream

        :param S:
        :type S: TopoDS_Shape &
        :param OS:
        :type OS: Standard_OStream &
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpRefOri(self, *args)


    def DumpLOI(self, *args):
        """
        :param L:
        :type L: TopOpeBRepDS_ListOfInterference &
        :param O:
        :type O: Standard_OStream &
        :param s:
        :type s: TCollection_AsciiString &
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpLOI(self, *args)


    def DumpI(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param O:
        :type O: Standard_OStream &
        :param s1:
        :type s1: TCollection_AsciiString &
        :param s2:
        :type s2: TCollection_AsciiString &
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpI(self, *args)


    def SPrintShape(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TCollection_AsciiString

        :param S:
        :type S: TopoDS_Shape &
        :rtype: TCollection_AsciiString

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_SPrintShape(self, *args)


    def SPrintShapeRefOri(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param B: default value is 
        :type B: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        :param L:
        :type L: TopTools_ListOfShape &
        :param B: default value is 
        :type B: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper_SPrintShapeRefOri(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_Dumper self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_Dumper__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Dumper.Dump = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_Dump, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper.DumpGeometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpGeometry, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper.DumpTopologyToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpTopologyToString, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper.DumpTopology = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpTopology, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper.DumpSectionEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpSectionEdge, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper.SDumpRefOri = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_SDumpRefOri, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper.DumpRefOri = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpRefOri, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper.DumpLOI = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpLOI, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper.DumpI = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_DumpI, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper.SPrintShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_SPrintShape, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper.SPrintShapeRefOri = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper_SPrintShapeRefOri, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Dumper__kill_pointed, None, TopOpeBRepDS_Dumper)
TopOpeBRepDS_Dumper_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Dumper_swigregister
TopOpeBRepDS_Dumper_swigregister(TopOpeBRepDS_Dumper)

def TopOpeBRepDS_Dumper_PrintType(*args):
    """
    :param C:
    :type C: Handle_Geom_Curve &
    :param S:
    :type S: Standard_OStream &
    :rtype: Standard_OStream

    :param C:
    :type C: Handle_Geom2d_Curve &
    :param S:
    :type S: Standard_OStream &
    :rtype: Standard_OStream

    """
    return _TopOpeBRepDS.TopOpeBRepDS_Dumper_PrintType(*args)

class TopOpeBRepDS_EIR(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_EIR_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_EIR(*args))

    def ProcessEdgeInterferences(self, *args):
        """
        :rtype: None

        :param I:
        :type I: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_EIR_ProcessEdgeInterferences(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_EIR.ProcessEdgeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EIR_ProcessEdgeInterferences, None, TopOpeBRepDS_EIR)
TopOpeBRepDS_EIR._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EIR__kill_pointed, None, TopOpeBRepDS_EIR)
TopOpeBRepDS_EIR_swigregister = _TopOpeBRepDS.TopOpeBRepDS_EIR_swigregister
TopOpeBRepDS_EIR_swigregister(TopOpeBRepDS_EIR)

class TopOpeBRepDS_Edge3dInterferenceTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Edge3dInterferenceTool(*args))

    def InitPointVertex(self, *args):
        """
        :param IsVertex:
        :type IsVertex: int
        :param VonOO:
        :type VonOO: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_InitPointVertex(self, *args)


    def Init(self, *args):
        """
        :param Eref:
        :type Eref: TopoDS_Shape &
        :param E:
        :type E: TopoDS_Shape &
        :param F:
        :type F: TopoDS_Shape &
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_Init(self, *args)


    def Add(self, *args):
        """
        :param Eref:
        :type Eref: TopoDS_Shape &
        :param E:
        :type E: TopoDS_Shape &
        :param F:
        :type F: TopoDS_Shape &
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_Add(self, *args)


    def Transition(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_Transition(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Edge3dInterferenceTool.InitPointVertex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_InitPointVertex, None, TopOpeBRepDS_Edge3dInterferenceTool)
TopOpeBRepDS_Edge3dInterferenceTool.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_Init, None, TopOpeBRepDS_Edge3dInterferenceTool)
TopOpeBRepDS_Edge3dInterferenceTool.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_Add, None, TopOpeBRepDS_Edge3dInterferenceTool)
TopOpeBRepDS_Edge3dInterferenceTool.Transition = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_Transition, None, TopOpeBRepDS_Edge3dInterferenceTool)
TopOpeBRepDS_Edge3dInterferenceTool._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool__kill_pointed, None, TopOpeBRepDS_Edge3dInterferenceTool)
TopOpeBRepDS_Edge3dInterferenceTool_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Edge3dInterferenceTool_swigregister
TopOpeBRepDS_Edge3dInterferenceTool_swigregister(TopOpeBRepDS_Edge3dInterferenceTool)

class TopOpeBRepDS_EdgeInterferenceTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_EdgeInterferenceTool(*args))

    def Init(self, *args):
        """
        :param E:
        :type E: TopoDS_Shape &
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_Init(self, *args)


    def Add(self, *args):
        """
        :param E:
        :type E: TopoDS_Shape &
        :param V:
        :type V: TopoDS_Shape &
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        :param E:
        :type E: TopoDS_Shape &
        :param P:
        :type P: TopOpeBRepDS_Point &
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_Add(self, *args)


    def Transition(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_Transition(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_EdgeInterferenceTool.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_Init, None, TopOpeBRepDS_EdgeInterferenceTool)
TopOpeBRepDS_EdgeInterferenceTool.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_Add, None, TopOpeBRepDS_EdgeInterferenceTool)
TopOpeBRepDS_EdgeInterferenceTool.Transition = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_Transition, None, TopOpeBRepDS_EdgeInterferenceTool)
TopOpeBRepDS_EdgeInterferenceTool._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool__kill_pointed, None, TopOpeBRepDS_EdgeInterferenceTool)
TopOpeBRepDS_EdgeInterferenceTool_swigregister = _TopOpeBRepDS.TopOpeBRepDS_EdgeInterferenceTool_swigregister
TopOpeBRepDS_EdgeInterferenceTool_swigregister(TopOpeBRepDS_EdgeInterferenceTool)

class TopOpeBRepDS_Explorer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :param T: default value is TopAbs_SHAPE
        :type T: TopAbs_ShapeEnum
        :param findkeep: default value is Standard_True
        :type findkeep: bool
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Explorer_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Explorer(*args))

    def Init(self, *args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :param T: default value is TopAbs_SHAPE
        :type T: TopAbs_ShapeEnum
        :param findkeep: default value is Standard_True
        :type findkeep: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Init(self, *args)


    def Type(self, *args):
        """
        :rtype: TopAbs_ShapeEnum

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Type(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Next(self, *args)


    def Current(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Current(self, *args)


    def Index(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Index(self, *args)


    def Face(self, *args):
        """
        :rtype: TopoDS_Face

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Face(self, *args)


    def Edge(self, *args):
        """
        :rtype: TopoDS_Edge

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Edge(self, *args)


    def Vertex(self, *args):
        """
        :rtype: TopoDS_Vertex

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Explorer_Vertex(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Explorer.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Init, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Type = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Type, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_More, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Next, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Current = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Current, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Index = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Index, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Face = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Face, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Edge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Edge, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer.Vertex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer_Vertex, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Explorer__kill_pointed, None, TopOpeBRepDS_Explorer)
TopOpeBRepDS_Explorer_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Explorer_swigregister
TopOpeBRepDS_Explorer_swigregister(TopOpeBRepDS_Explorer)

class TopOpeBRepDS_FIR(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_FIR_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_FIR(*args))

    def ProcessFaceInterferences(self, *args):
        """
        :param M:
        :type M: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
        :rtype: None

        :param I:
        :type I: int
        :param M:
        :type M: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_FIR_ProcessFaceInterferences(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_FIR.ProcessFaceInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FIR_ProcessFaceInterferences, None, TopOpeBRepDS_FIR)
TopOpeBRepDS_FIR._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FIR__kill_pointed, None, TopOpeBRepDS_FIR)
TopOpeBRepDS_FIR_swigregister = _TopOpeBRepDS.TopOpeBRepDS_FIR_swigregister
TopOpeBRepDS_FIR_swigregister(TopOpeBRepDS_FIR)

class TopOpeBRepDS_FaceInterferenceTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param P:
        :type P: TopOpeBRepDS_PDataStructure &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_FaceInterferenceTool(*args))

    def Init(self, *args):
        """
        * Eisnew = true if E is a new edge built on edge I->Geometry() 	 false if E is shape <=> I->Geometry()

        :param FI:
        :type FI: TopoDS_Shape &
        :param E:
        :type E: TopoDS_Shape &
        :param Eisnew:
        :type Eisnew: bool
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_Init(self, *args)


    def Add(self, *args):
        """
        * Eisnew = true if E is a new edge built on edge I->Geometry() 	 false if E is shape <=> I->Geometry()

        :param FI:
        :type FI: TopoDS_Shape &
        :param F:
        :type F: TopoDS_Shape &
        :param E:
        :type E: TopoDS_Shape &
        :param Eisnew:
        :type Eisnew: bool
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        :param E:
        :type E: TopoDS_Shape &
        :param C:
        :type C: TopOpeBRepDS_Curve &
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_Add(self, *args)


    def SetEdgePntPar(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :param par:
        :type par: float
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_SetEdgePntPar(self, *args)


    def GetEdgePntPar(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :param par:
        :type par: float &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_GetEdgePntPar(self, *args)


    def IsEdgePntParDef(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_IsEdgePntParDef(self, *args)


    def Transition(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_Transition(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_FaceInterferenceTool.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_Init, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_Add, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool.SetEdgePntPar = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_SetEdgePntPar, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool.GetEdgePntPar = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_GetEdgePntPar, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool.IsEdgePntParDef = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_IsEdgePntParDef, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool.Transition = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_Transition, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool__kill_pointed, None, TopOpeBRepDS_FaceInterferenceTool)
TopOpeBRepDS_FaceInterferenceTool_swigregister = _TopOpeBRepDS.TopOpeBRepDS_FaceInterferenceTool_swigregister
TopOpeBRepDS_FaceInterferenceTool_swigregister(TopOpeBRepDS_FaceInterferenceTool)

class TopOpeBRepDS_Filter(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :param pClassif: default value is 0
        :type pClassif: TopOpeBRepTool_PShapeClassifier &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Filter_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Filter(*args))

    def ProcessInterferences(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessInterferences(self, *args)


    def ProcessFaceInterferences(self, *args):
        """
        :param MEsp:
        :type MEsp: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
        :rtype: None

        :param I:
        :type I: int
        :param MEsp:
        :type MEsp: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessFaceInterferences(self, *args)


    def ProcessEdgeInterferences(self, *args):
        """
        :rtype: None

        :param I:
        :type I: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessEdgeInterferences(self, *args)


    def ProcessCurveInterferences(self, *args):
        """
        :rtype: None

        :param I:
        :type I: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessCurveInterferences(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Filter.ProcessInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessInterferences, None, TopOpeBRepDS_Filter)
TopOpeBRepDS_Filter.ProcessFaceInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessFaceInterferences, None, TopOpeBRepDS_Filter)
TopOpeBRepDS_Filter.ProcessEdgeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessEdgeInterferences, None, TopOpeBRepDS_Filter)
TopOpeBRepDS_Filter.ProcessCurveInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Filter_ProcessCurveInterferences, None, TopOpeBRepDS_Filter)
TopOpeBRepDS_Filter._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Filter__kill_pointed, None, TopOpeBRepDS_Filter)
TopOpeBRepDS_Filter_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Filter_swigregister
TopOpeBRepDS_Filter_swigregister(TopOpeBRepDS_Filter)

class TopOpeBRepDS_GapFiller(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_GapFiller_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_GapFiller(*args))

    def Perform(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_Perform(self, *args)


    def FindAssociatedPoints(self, *args):
        """
        * Recherche parmi l'ensemble des points d'Interference la Liste <LI> des points qui correspondent au point d'indice <Index>

        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param LI:
        :type LI: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_FindAssociatedPoints(self, *args)


    def CheckConnexity(self, *args):
        """
        * //!Enchaine les sections via les points d'Interferences deja  associe; Renvoit dans <L> les points extremites des Lignes. Methodes pour construire la liste des Points qui peuvent correspondre a une Point donne.

        :param LI:
        :type LI: TopOpeBRepDS_ListOfInterference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_CheckConnexity(self, *args)


    def AddPointsOnShape(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param LI:
        :type LI: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_AddPointsOnShape(self, *args)


    def AddPointsOnConnexShape(self, *args):
        """
        * Methodes pour reduire la liste des Points qui peuvent correspondre a une Point donne.

        :param F:
        :type F: TopoDS_Shape &
        :param LI:
        :type LI: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_AddPointsOnConnexShape(self, *args)


    def FilterByFace(self, *args):
        """
        :param F:
        :type F: TopoDS_Face &
        :param LI:
        :type LI: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_FilterByFace(self, *args)


    def FilterByEdge(self, *args):
        """
        :param E:
        :type E: TopoDS_Edge &
        :param LI:
        :type LI: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_FilterByEdge(self, *args)


    def FilterByIncidentDistance(self, *args):
        """
        :param F:
        :type F: TopoDS_Face &
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param LI:
        :type LI: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_FilterByIncidentDistance(self, *args)


    def IsOnFace(self, *args):
        """
        * Return True si I a ete obtenu par une intersection avec <F>.

        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param F:
        :type F: TopoDS_Face &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_IsOnFace(self, *args)


    def IsOnEdge(self, *args):
        """
        * Return True si I ou une de ses representaions a pour support <E>. Methodes de reconstructions des geometries des point et des courbes de section

        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param E:
        :type E: TopoDS_Edge &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_IsOnEdge(self, *args)


    def BuildNewGeometries(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_BuildNewGeometries(self, *args)


    def ReBuildGeom(self, *args):
        """
        :param I1:
        :type I1: Handle_TopOpeBRepDS_Interference &
        :param Done:
        :type Done: TColStd_MapOfInteger &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapFiller_ReBuildGeom(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_GapFiller.Perform = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_Perform, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.FindAssociatedPoints = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_FindAssociatedPoints, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.CheckConnexity = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_CheckConnexity, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.AddPointsOnShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_AddPointsOnShape, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.AddPointsOnConnexShape = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_AddPointsOnConnexShape, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.FilterByFace = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_FilterByFace, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.FilterByEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_FilterByEdge, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.FilterByIncidentDistance = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_FilterByIncidentDistance, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.IsOnFace = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_IsOnFace, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.IsOnEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_IsOnEdge, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.BuildNewGeometries = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_BuildNewGeometries, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller.ReBuildGeom = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller_ReBuildGeom, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapFiller__kill_pointed, None, TopOpeBRepDS_GapFiller)
TopOpeBRepDS_GapFiller_swigregister = _TopOpeBRepDS.TopOpeBRepDS_GapFiller_swigregister
TopOpeBRepDS_GapFiller_swigregister(TopOpeBRepDS_GapFiller)

class TopOpeBRepDS_GapTool(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_GapTool_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_GapTool(*args))

    def Init(self, *args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_Init(self, *args)


    def Interferences(self, *args):
        """
        :param IndexPoint:
        :type IndexPoint: int
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_Interferences(self, *args)


    def SameInterferences(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_SameInterferences(self, *args)


    def ChangeSameInterferences(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_ChangeSameInterferences(self, *args)


    def Curve(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param C:
        :type C: TopOpeBRepDS_Curve &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_Curve(self, *args)


    def EdgeSupport(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param E:
        :type E: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_EdgeSupport(self, *args)


    def FacesSupport(self, *args):
        """
        * Return les faces qui ont genere la section origine de I

        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param F1:
        :type F1: TopoDS_Shape &
        :param F2:
        :type F2: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_FacesSupport(self, *args)


    def ParameterOnEdge(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param E:
        :type E: TopoDS_Shape &
        :param U:
        :type U: float &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_ParameterOnEdge(self, *args)


    def SetPoint(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param IndexPoint:
        :type IndexPoint: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_SetPoint(self, *args)


    def SetParameterOnEdge(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param E:
        :type E: TopoDS_Shape &
        :param U:
        :type U: float
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_SetParameterOnEdge(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_GapTool self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_GapTool self) -> Handle_TopOpeBRepDS_GapTool"""
        return _TopOpeBRepDS.TopOpeBRepDS_GapTool_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_GapTool.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_Init, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.Interferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_Interferences, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.SameInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_SameInterferences, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.ChangeSameInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_ChangeSameInterferences, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.Curve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_Curve, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.EdgeSupport = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_EdgeSupport, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.FacesSupport = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_FacesSupport, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.ParameterOnEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_ParameterOnEdge, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.SetPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_SetPoint, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.SetParameterOnEdge = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_SetParameterOnEdge, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool__kill_pointed, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GapTool_GetHandle, None, TopOpeBRepDS_GapTool)
TopOpeBRepDS_GapTool_swigregister = _TopOpeBRepDS.TopOpeBRepDS_GapTool_swigregister
TopOpeBRepDS_GapTool_swigregister(TopOpeBRepDS_GapTool)

class Handle_TopOpeBRepDS_GapTool(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_GapTool(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_GapTool.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_Nullify, None, Handle_TopOpeBRepDS_GapTool)
Handle_TopOpeBRepDS_GapTool.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_IsNull, None, Handle_TopOpeBRepDS_GapTool)
Handle_TopOpeBRepDS_GapTool.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_GetObject, None, Handle_TopOpeBRepDS_GapTool)
Handle_TopOpeBRepDS_GapTool._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool__kill_pointed, None, Handle_TopOpeBRepDS_GapTool)
Handle_TopOpeBRepDS_GapTool_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_swigregister
Handle_TopOpeBRepDS_GapTool_swigregister(Handle_TopOpeBRepDS_GapTool)

def Handle_TopOpeBRepDS_GapTool_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_DownCast(AnObject)
Handle_TopOpeBRepDS_GapTool_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_GapTool_DownCast

class TopOpeBRepDS_GeometryData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepDS_GeometryData &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_GeometryData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_GeometryData(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_GeometryData &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GeometryData_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_GeometryData &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GeometryData_Set(self, *args)


    def Interferences(self, *args):
        """
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GeometryData_Interferences(self, *args)


    def ChangeInterferences(self, *args):
        """
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GeometryData_ChangeInterferences(self, *args)


    def AddInterference(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_GeometryData_AddInterference(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_GeometryData.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GeometryData_Assign, None, TopOpeBRepDS_GeometryData)
TopOpeBRepDS_GeometryData.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GeometryData_Set, None, TopOpeBRepDS_GeometryData)
TopOpeBRepDS_GeometryData.Interferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GeometryData_Interferences, None, TopOpeBRepDS_GeometryData)
TopOpeBRepDS_GeometryData.ChangeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GeometryData_ChangeInterferences, None, TopOpeBRepDS_GeometryData)
TopOpeBRepDS_GeometryData.AddInterference = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GeometryData_AddInterference, None, TopOpeBRepDS_GeometryData)
TopOpeBRepDS_GeometryData._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_GeometryData__kill_pointed, None, TopOpeBRepDS_GeometryData)
TopOpeBRepDS_GeometryData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_GeometryData_swigregister
TopOpeBRepDS_GeometryData_swigregister(TopOpeBRepDS_GeometryData)

class TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: TopOpeBRepDS_DataMapOfIntegerListOfInterference &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: TopOpeBRepDS_DataMapOfIntegerListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: TopOpeBRepDS_DataMapOfIntegerListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopOpeBRepDS_DataMapOfIntegerListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopOpeBRepDS_DataMapOfIntegerListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: TopOpeBRepDS_Array1OfDataMapOfIntegerListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_ChangeArray1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference self) -> Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Init, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.Length = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Length, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.Lower = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Lower, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.Upper = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Upper, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.SetValue = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_SetValue, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Value, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.ChangeValue = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_ChangeValue, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.Array1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Array1, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.ChangeArray1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_ChangeArray1, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference__kill_pointed, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_GetHandle, None, TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_swigregister
TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_swigregister(TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)

class Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_Nullify, None, Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_IsNull, None, Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_GetObject, None, Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference__kill_pointed, None, Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)
Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_swigregister
Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_swigregister(Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference)

def Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_DownCast(AnObject)
Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_HArray1OfDataMapOfIntegerListOfInterference_DownCast

class TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K1:
        :type K1: TopoDS_Shape &
        :param K2:
        :type K2: int
        :param I:
        :type I: TopOpeBRepDS_ShapeWithState &
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState(*args))

    def Key1(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_Key1(self, *args)


    def GetKey2(self):
        """GetKey2(TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState self) -> Standard_Integer"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_GetKey2(self)


    def SetKey2(self, value):
        """SetKey2(TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState self, Standard_Integer value)"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_SetKey2(self, value)


    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_Next2(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_ShapeWithState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState self) -> Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState.Key1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_Key1, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState.GetKey2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_GetKey2, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState.SetKey2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_SetKey2, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState.Next2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_Next2, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_Value, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState__kill_pointed, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_GetHandle, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_swigregister = _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_swigregister
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_swigregister(TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)

class Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_Nullify, None, Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_IsNull, None, Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_GetObject, None, Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState__kill_pointed, None, Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_swigregister
Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_swigregister(Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState)

def Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_DownCast(AnObject)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState_DownCast

class TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K1:
        :type K1: TopoDS_Shape &
        :param K2:
        :type K2: int
        :param I:
        :type I: TopOpeBRepDS_Point &
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint(*args))

    def Key1(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_Key1(self, *args)


    def GetKey2(self):
        """GetKey2(TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint self) -> Standard_Integer"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_GetKey2(self)


    def SetKey2(self, value):
        """SetKey2(TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint self, Standard_Integer value)"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_SetKey2(self, value)


    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_Next2(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_Point

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint self) -> Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint.Key1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_Key1, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint.GetKey2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_GetKey2, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint.SetKey2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_SetKey2, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint.Next2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_Next2, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_Value, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint__kill_pointed, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_GetHandle, None, TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_swigregister = _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_swigregister
TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_swigregister(TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)

class Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_Nullify, None, Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_IsNull, None, Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_GetObject, None, Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint__kill_pointed, None, Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_swigregister
Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_swigregister(Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint)

def Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_DownCast(AnObject)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfIndexedDataMapOfVertexPoint_DownCast

class TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K1:
        :type K1: TopoDS_Shape &
        :param K2:
        :type K2: int
        :param I:
        :type I: TopOpeBRepDS_ShapeData &
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData(*args))

    def Key1(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_Key1(self, *args)


    def GetKey2(self):
        """GetKey2(TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData self) -> Standard_Integer"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_GetKey2(self)


    def SetKey2(self, value):
        """SetKey2(TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData self, Standard_Integer value)"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_SetKey2(self, value)


    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_Next2(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepDS_ShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData self) -> Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData.Key1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_Key1, None, TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)
TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData.GetKey2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_GetKey2, None, TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)
TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData.SetKey2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_SetKey2, None, TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)
TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData.Next2 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_Next2, None, TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)
TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_Value, None, TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)
TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData__kill_pointed, None, TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)
TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_GetHandle, None, TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)
TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_swigregister
TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_swigregister(TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)

class Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_Nullify, None, Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_IsNull, None, Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_GetObject, None, Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData__kill_pointed, None, Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_swigregister
Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_swigregister(Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData)

def Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_DownCast(AnObject)
Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData_DownCast

class TopOpeBRepDS_IndexedDataMapOfShapeWithState(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_IndexedDataMapOfShapeWithState(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_IndexedDataMapOfShapeWithState &
        :rtype: TopOpeBRepDS_IndexedDataMapOfShapeWithState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_IndexedDataMapOfShapeWithState &
        :rtype: TopOpeBRepDS_IndexedDataMapOfShapeWithState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Clear(self, *args)


    def Add(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopOpeBRepDS_ShapeWithState &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Add(self, *args)


    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: TopoDS_Shape &
        :param T:
        :type T: TopOpeBRepDS_ShapeWithState &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Substitute(self, *args)


    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_RemoveLast(self, *args)


    def Contains(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Contains(self, *args)


    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindKey(self, *args)


    def FindFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_ShapeWithState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindFromIndex(self, *args)


    def ChangeFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_ShapeWithState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_ChangeFromIndex(self, *args)


    def FindIndex(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindIndex(self, *args)


    def FindFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopOpeBRepDS_ShapeWithState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindFromKey(self, *args)


    def ChangeFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopOpeBRepDS_ShapeWithState

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_ChangeFromKey(self, *args)


    def FindFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindFromKey1(self, *args)


    def ChangeFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_ChangeFromKey1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_IndexedDataMapOfShapeWithState self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_IndexedDataMapOfShapeWithState.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Assign, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Set, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_ReSize, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Clear, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Add, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Substitute = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Substitute, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.RemoveLast = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_RemoveLast, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.Contains = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_Contains, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.FindKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindKey, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.FindFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindFromIndex, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.ChangeFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_ChangeFromIndex, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.FindIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindIndex, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.FindFromKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindFromKey, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.ChangeFromKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_ChangeFromKey, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.FindFromKey1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_FindFromKey1, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState.ChangeFromKey1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_ChangeFromKey1, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState__kill_pointed, None, TopOpeBRepDS_IndexedDataMapOfShapeWithState)
TopOpeBRepDS_IndexedDataMapOfShapeWithState_swigregister = _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfShapeWithState_swigregister
TopOpeBRepDS_IndexedDataMapOfShapeWithState_swigregister(TopOpeBRepDS_IndexedDataMapOfShapeWithState)

class TopOpeBRepDS_IndexedDataMapOfVertexPoint(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_IndexedDataMapOfVertexPoint(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_IndexedDataMapOfVertexPoint &
        :rtype: TopOpeBRepDS_IndexedDataMapOfVertexPoint

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_IndexedDataMapOfVertexPoint &
        :rtype: TopOpeBRepDS_IndexedDataMapOfVertexPoint

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Clear(self, *args)


    def Add(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopOpeBRepDS_Point &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Add(self, *args)


    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: TopoDS_Shape &
        :param T:
        :type T: TopOpeBRepDS_Point &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Substitute(self, *args)


    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_RemoveLast(self, *args)


    def Contains(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Contains(self, *args)


    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindKey(self, *args)


    def FindFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_Point

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindFromIndex(self, *args)


    def ChangeFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_Point

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_ChangeFromIndex(self, *args)


    def FindIndex(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindIndex(self, *args)


    def FindFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopOpeBRepDS_Point

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindFromKey(self, *args)


    def ChangeFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopOpeBRepDS_Point

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_ChangeFromKey(self, *args)


    def FindFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindFromKey1(self, *args)


    def ChangeFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_ChangeFromKey1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_IndexedDataMapOfVertexPoint self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_IndexedDataMapOfVertexPoint.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Assign, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Set, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_ReSize, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Clear, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Add, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Substitute = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Substitute, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.RemoveLast = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_RemoveLast, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.Contains = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_Contains, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.FindKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindKey, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.FindFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindFromIndex, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.ChangeFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_ChangeFromIndex, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.FindIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindIndex, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.FindFromKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindFromKey, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.ChangeFromKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_ChangeFromKey, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.FindFromKey1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_FindFromKey1, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint.ChangeFromKey1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_ChangeFromKey1, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint__kill_pointed, None, TopOpeBRepDS_IndexedDataMapOfVertexPoint)
TopOpeBRepDS_IndexedDataMapOfVertexPoint_swigregister = _TopOpeBRepDS.TopOpeBRepDS_IndexedDataMapOfVertexPoint_swigregister
TopOpeBRepDS_IndexedDataMapOfVertexPoint_swigregister(TopOpeBRepDS_IndexedDataMapOfVertexPoint)

class TopOpeBRepDS_Interference(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param Transition:
        :type Transition: TopOpeBRepDS_Transition &
        :param SupportType:
        :type SupportType: TopOpeBRepDS_Kind
        :param Support:
        :type Support: int
        :param GeometryType:
        :type GeometryType: TopOpeBRepDS_Kind
        :param Geometry:
        :type Geometry: int
        :rtype: None

        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Interference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Interference(*args))

    def ChangeTransition(self, *args):
        """
        :rtype: TopOpeBRepDS_Transition

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_ChangeTransition(self, *args)


    def Transition(self, *args):
        """
        :rtype: TopOpeBRepDS_Transition

        :param T:
        :type T: TopOpeBRepDS_Transition &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_Transition(self, *args)


    def GKGSKS(self, *args):
        """
        * return GeometryType + Geometry + SupportType + Support

        :param GK:
        :type GK: TopOpeBRepDS_Kind &
        :param G:
        :type G: int &
        :param SK:
        :type SK: TopOpeBRepDS_Kind &
        :param S:
        :type S: int &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_GKGSKS(self, *args)


    def SetGeometry(self, *args):
        """
        :param GI:
        :type GI: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_SetGeometry(self, *args)


    def SupportType(self, *args):
        """
        :rtype: TopOpeBRepDS_Kind

        :param ST:
        :type ST: TopOpeBRepDS_Kind
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_SupportType(self, *args)


    def Support(self, *args):
        """
        :rtype: int

        :param S:
        :type S: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_Support(self, *args)


    def GeometryType(self, *args):
        """
        :rtype: TopOpeBRepDS_Kind

        :param GT:
        :type GT: TopOpeBRepDS_Kind
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_GeometryType(self, *args)


    def Geometry(self, *args):
        """
        :rtype: int

        :param G:
        :type G: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_Geometry(self, *args)


    def HasSameSupport(self, *args):
        """
        :param Other:
        :type Other: Handle_TopOpeBRepDS_Interference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_HasSameSupport(self, *args)


    def HasSameGeometry(self, *args):
        """
        :param Other:
        :type Other: Handle_TopOpeBRepDS_Interference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_HasSameGeometry(self, *args)


    def DumpGToString(self):
        """DumpGToString(TopOpeBRepDS_Interference self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_DumpGToString(self)


    def DumpSToString(self):
        """DumpSToString(TopOpeBRepDS_Interference self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_DumpSToString(self)


    def DumpToString(self):
        """DumpToString(TopOpeBRepDS_Interference self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_DumpToString(self)


    def Dump(self, *args):
        """
        :param OS:
        :type OS: Standard_OStream &
        :param s1:
        :type s1: TCollection_AsciiString &
        :param s2:
        :type s2: TCollection_AsciiString &
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_Dump(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_Interference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_Interference__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_Interference self) -> Handle_TopOpeBRepDS_Interference"""
        return _TopOpeBRepDS.TopOpeBRepDS_Interference_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Interference.ChangeTransition = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_ChangeTransition, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.Transition = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_Transition, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.GKGSKS = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_GKGSKS, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.SetGeometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_SetGeometry, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.SupportType = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_SupportType, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.Support = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_Support, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.GeometryType = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_GeometryType, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.Geometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_Geometry, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.HasSameSupport = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_HasSameSupport, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.HasSameGeometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_HasSameGeometry, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.DumpGToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_DumpGToString, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.DumpSToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_DumpSToString, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.DumpToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_DumpToString, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.Dump = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_Dump, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference__kill_pointed, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Interference_GetHandle, None, TopOpeBRepDS_Interference)
TopOpeBRepDS_Interference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Interference_swigregister
TopOpeBRepDS_Interference_swigregister(TopOpeBRepDS_Interference)

class Handle_TopOpeBRepDS_Interference(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_Interference(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_Interference.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_Nullify, None, Handle_TopOpeBRepDS_Interference)
Handle_TopOpeBRepDS_Interference.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_IsNull, None, Handle_TopOpeBRepDS_Interference)
Handle_TopOpeBRepDS_Interference.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_GetObject, None, Handle_TopOpeBRepDS_Interference)
Handle_TopOpeBRepDS_Interference._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Interference__kill_pointed, None, Handle_TopOpeBRepDS_Interference)
Handle_TopOpeBRepDS_Interference_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_swigregister
Handle_TopOpeBRepDS_Interference_swigregister(Handle_TopOpeBRepDS_Interference)

def Handle_TopOpeBRepDS_Interference_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_DownCast(AnObject)
Handle_TopOpeBRepDS_Interference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_Interference_DownCast

class TopOpeBRepDS_InterferenceIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Creates an iterator on the Interference of list <L>.

        :param L:
        :type L: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_InterferenceIterator(*args))

    def Init(self, *args):
        """
        * re-initialize interference iteration process on the list of interference <L>. Conditions are not modified.

        :param L:
        :type L: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Init(self, *args)


    def GeometryKind(self, *args):
        """
        * define a condition on interference iteration process. Interference must match the Geometry Kind <ST>

        :param GK:
        :type GK: TopOpeBRepDS_Kind
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_GeometryKind(self, *args)


    def Geometry(self, *args):
        """
        * define a condition on interference iteration process. Interference must match the Geometry <G>

        :param G:
        :type G: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Geometry(self, *args)


    def SupportKind(self, *args):
        """
        * define a condition on interference iteration process. Interference must match the Support Kind <ST>

        :param ST:
        :type ST: TopOpeBRepDS_Kind
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_SupportKind(self, *args)


    def Support(self, *args):
        """
        * define a condition on interference iteration process. Interference must match the Support <S>

        :param S:
        :type S: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Support(self, *args)


    def Match(self, *args):
        """
        * reach for an interference matching the conditions (if defined).

        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Match(self, *args)


    def MatchInterference(self, *args):
        """
        * Returns True if the Interference <I> matches the conditions (if defined). If no conditions defined, returns True.

        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_MatchInterference(self, *args)


    def More(self, *args):
        """
        * Returns True if there is a current Interference in the iteration.

        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_More(self, *args)


    def Next(self, *args):
        """
        * Move to the next Interference.

        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Next(self, *args)


    def Value(self, *args):
        """
        * Returns the current Interference, matching the conditions (if defined).

        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Value(self, *args)


    def ChangeIterator(self, *args):
        """
        :rtype: TopOpeBRepDS_ListIteratorOfListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_ChangeIterator(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_InterferenceIterator.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Init, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.GeometryKind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_GeometryKind, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.Geometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Geometry, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.SupportKind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_SupportKind, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.Support = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Support, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.Match = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Match, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.MatchInterference = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_MatchInterference, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_More, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Next, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_Value, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator.ChangeIterator = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_ChangeIterator, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator__kill_pointed, None, TopOpeBRepDS_InterferenceIterator)
TopOpeBRepDS_InterferenceIterator_swigregister = _TopOpeBRepDS.TopOpeBRepDS_InterferenceIterator_swigregister
TopOpeBRepDS_InterferenceIterator_swigregister(TopOpeBRepDS_InterferenceIterator)

class TopOpeBRepDS_InterferenceTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def MakeEdgeInterference(*args):
        """
        :param T:
        :type T: TopOpeBRepDS_Transition &
        :param SK:
        :type SK: TopOpeBRepDS_Kind
        :param SI:
        :type SI: int
        :param GK:
        :type GK: TopOpeBRepDS_Kind
        :param GI:
        :type GI: int
        :param P:
        :type P: float
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeEdgeInterference(*args)

    MakeEdgeInterference = staticmethod(MakeEdgeInterference)

    def MakeCurveInterference(*args):
        """
        :param T:
        :type T: TopOpeBRepDS_Transition &
        :param SK:
        :type SK: TopOpeBRepDS_Kind
        :param SI:
        :type SI: int
        :param GK:
        :type GK: TopOpeBRepDS_Kind
        :param GI:
        :type GI: int
        :param P:
        :type P: float
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeCurveInterference(*args)

    MakeCurveInterference = staticmethod(MakeCurveInterference)

    def DuplicateCurvePointInterference(*args):
        """
        * duplicate I in a new interference with Complement() transition.

        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_DuplicateCurvePointInterference(*args)

    DuplicateCurvePointInterference = staticmethod(DuplicateCurvePointInterference)

    def MakeFaceCurveInterference(*args):
        """
        :param Transition:
        :type Transition: TopOpeBRepDS_Transition &
        :param FaceI:
        :type FaceI: int
        :param CurveI:
        :type CurveI: int
        :param PC:
        :type PC: Handle_Geom2d_Curve &
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeFaceCurveInterference(*args)

    MakeFaceCurveInterference = staticmethod(MakeFaceCurveInterference)

    def MakeSolidSurfaceInterference(*args):
        """
        :param Transition:
        :type Transition: TopOpeBRepDS_Transition &
        :param SolidI:
        :type SolidI: int
        :param SurfaceI:
        :type SurfaceI: int
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeSolidSurfaceInterference(*args)

    MakeSolidSurfaceInterference = staticmethod(MakeSolidSurfaceInterference)

    def MakeEdgeVertexInterference(*args):
        """
        :param Transition:
        :type Transition: TopOpeBRepDS_Transition &
        :param EdgeI:
        :type EdgeI: int
        :param VertexI:
        :type VertexI: int
        :param VertexIsBound:
        :type VertexIsBound: bool
        :param Config:
        :type Config: TopOpeBRepDS_Config
        :param param:
        :type param: float
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeEdgeVertexInterference(*args)

    MakeEdgeVertexInterference = staticmethod(MakeEdgeVertexInterference)

    def MakeFaceEdgeInterference(*args):
        """
        :param Transition:
        :type Transition: TopOpeBRepDS_Transition &
        :param FaceI:
        :type FaceI: int
        :param EdgeI:
        :type EdgeI: int
        :param EdgeIsBound:
        :type EdgeIsBound: bool
        :param Config:
        :type Config: TopOpeBRepDS_Config
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeFaceEdgeInterference(*args)

    MakeFaceEdgeInterference = staticmethod(MakeFaceEdgeInterference)

    def Parameter(*args):
        """
        :param CPI:
        :type CPI: Handle_TopOpeBRepDS_Interference &
        :rtype: float

        :param CPI:
        :type CPI: Handle_TopOpeBRepDS_Interference &
        :param Par:
        :type Par: float
        :rtype: void

        """
        return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_Parameter(*args)

    Parameter = staticmethod(Parameter)

    def __init__(self):
        _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_InterferenceTool())

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_InterferenceTool._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_InterferenceTool__kill_pointed, None, TopOpeBRepDS_InterferenceTool)
TopOpeBRepDS_InterferenceTool_swigregister = _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_swigregister
TopOpeBRepDS_InterferenceTool_swigregister(TopOpeBRepDS_InterferenceTool)

def TopOpeBRepDS_InterferenceTool_MakeEdgeInterference(*args):
    """
    :param T:
    :type T: TopOpeBRepDS_Transition &
    :param SK:
    :type SK: TopOpeBRepDS_Kind
    :param SI:
    :type SI: int
    :param GK:
    :type GK: TopOpeBRepDS_Kind
    :param GI:
    :type GI: int
    :param P:
    :type P: float
    :rtype: Handle_TopOpeBRepDS_Interference

    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeEdgeInterference(*args)

def TopOpeBRepDS_InterferenceTool_MakeCurveInterference(*args):
    """
    :param T:
    :type T: TopOpeBRepDS_Transition &
    :param SK:
    :type SK: TopOpeBRepDS_Kind
    :param SI:
    :type SI: int
    :param GK:
    :type GK: TopOpeBRepDS_Kind
    :param GI:
    :type GI: int
    :param P:
    :type P: float
    :rtype: Handle_TopOpeBRepDS_Interference

    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeCurveInterference(*args)

def TopOpeBRepDS_InterferenceTool_DuplicateCurvePointInterference(*args):
    """
    * duplicate I in a new interference with Complement() transition.

    :param I:
    :type I: Handle_TopOpeBRepDS_Interference &
    :rtype: Handle_TopOpeBRepDS_Interference

    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_DuplicateCurvePointInterference(*args)

def TopOpeBRepDS_InterferenceTool_MakeFaceCurveInterference(*args):
    """
    :param Transition:
    :type Transition: TopOpeBRepDS_Transition &
    :param FaceI:
    :type FaceI: int
    :param CurveI:
    :type CurveI: int
    :param PC:
    :type PC: Handle_Geom2d_Curve &
    :rtype: Handle_TopOpeBRepDS_Interference

    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeFaceCurveInterference(*args)

def TopOpeBRepDS_InterferenceTool_MakeSolidSurfaceInterference(*args):
    """
    :param Transition:
    :type Transition: TopOpeBRepDS_Transition &
    :param SolidI:
    :type SolidI: int
    :param SurfaceI:
    :type SurfaceI: int
    :rtype: Handle_TopOpeBRepDS_Interference

    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeSolidSurfaceInterference(*args)

def TopOpeBRepDS_InterferenceTool_MakeEdgeVertexInterference(*args):
    """
    :param Transition:
    :type Transition: TopOpeBRepDS_Transition &
    :param EdgeI:
    :type EdgeI: int
    :param VertexI:
    :type VertexI: int
    :param VertexIsBound:
    :type VertexIsBound: bool
    :param Config:
    :type Config: TopOpeBRepDS_Config
    :param param:
    :type param: float
    :rtype: Handle_TopOpeBRepDS_Interference

    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeEdgeVertexInterference(*args)

def TopOpeBRepDS_InterferenceTool_MakeFaceEdgeInterference(*args):
    """
    :param Transition:
    :type Transition: TopOpeBRepDS_Transition &
    :param FaceI:
    :type FaceI: int
    :param EdgeI:
    :type EdgeI: int
    :param EdgeIsBound:
    :type EdgeIsBound: bool
    :param Config:
    :type Config: TopOpeBRepDS_Config
    :rtype: Handle_TopOpeBRepDS_Interference

    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_MakeFaceEdgeInterference(*args)

def TopOpeBRepDS_InterferenceTool_Parameter(*args):
    """
    :param CPI:
    :type CPI: Handle_TopOpeBRepDS_Interference &
    :rtype: float

    :param CPI:
    :type CPI: Handle_TopOpeBRepDS_Interference &
    :param Par:
    :type Par: float
    :rtype: void

    """
    return _TopOpeBRepDS.TopOpeBRepDS_InterferenceTool_Parameter(*args)

class TopOpeBRepDS_ListIteratorOfListOfInterference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param L:
        :type L: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ListIteratorOfListOfInterference(*args))

    def Initialize(self, *args):
        """
        :param L:
        :type L: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_Initialize(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_Next(self, *args)


    def Value(self, *args):
        """
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_ListIteratorOfListOfInterference.Initialize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_Initialize, None, TopOpeBRepDS_ListIteratorOfListOfInterference)
TopOpeBRepDS_ListIteratorOfListOfInterference.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_More, None, TopOpeBRepDS_ListIteratorOfListOfInterference)
TopOpeBRepDS_ListIteratorOfListOfInterference.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_Next, None, TopOpeBRepDS_ListIteratorOfListOfInterference)
TopOpeBRepDS_ListIteratorOfListOfInterference.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_Value, None, TopOpeBRepDS_ListIteratorOfListOfInterference)
TopOpeBRepDS_ListIteratorOfListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference__kill_pointed, None, TopOpeBRepDS_ListIteratorOfListOfInterference)
TopOpeBRepDS_ListIteratorOfListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ListIteratorOfListOfInterference_swigregister
TopOpeBRepDS_ListIteratorOfListOfInterference_swigregister(TopOpeBRepDS_ListIteratorOfListOfInterference)

class TopOpeBRepDS_ListNodeOfListOfInterference(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_ListNodeOfListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ListNodeOfListOfInterference(*args))

    def Value(self, *args):
        """
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListNodeOfListOfInterference_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_ListNodeOfListOfInterference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_ListNodeOfListOfInterference__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_ListNodeOfListOfInterference self) -> Handle_TopOpeBRepDS_ListNodeOfListOfInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_ListNodeOfListOfInterference_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_ListNodeOfListOfInterference.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListNodeOfListOfInterference_Value, None, TopOpeBRepDS_ListNodeOfListOfInterference)
TopOpeBRepDS_ListNodeOfListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListNodeOfListOfInterference__kill_pointed, None, TopOpeBRepDS_ListNodeOfListOfInterference)
TopOpeBRepDS_ListNodeOfListOfInterference.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListNodeOfListOfInterference_GetHandle, None, TopOpeBRepDS_ListNodeOfListOfInterference)
TopOpeBRepDS_ListNodeOfListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ListNodeOfListOfInterference_swigregister
TopOpeBRepDS_ListNodeOfListOfInterference_swigregister(TopOpeBRepDS_ListNodeOfListOfInterference)

class Handle_TopOpeBRepDS_ListNodeOfListOfInterference(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_ListNodeOfListOfInterference_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_ListNodeOfListOfInterference(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_ListNodeOfListOfInterference_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_ListNodeOfListOfInterference.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_ListNodeOfListOfInterference_Nullify, None, Handle_TopOpeBRepDS_ListNodeOfListOfInterference)
Handle_TopOpeBRepDS_ListNodeOfListOfInterference.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_ListNodeOfListOfInterference_IsNull, None, Handle_TopOpeBRepDS_ListNodeOfListOfInterference)
Handle_TopOpeBRepDS_ListNodeOfListOfInterference.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_ListNodeOfListOfInterference_GetObject, None, Handle_TopOpeBRepDS_ListNodeOfListOfInterference)
Handle_TopOpeBRepDS_ListNodeOfListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_ListNodeOfListOfInterference__kill_pointed, None, Handle_TopOpeBRepDS_ListNodeOfListOfInterference)
Handle_TopOpeBRepDS_ListNodeOfListOfInterference_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_ListNodeOfListOfInterference_swigregister
Handle_TopOpeBRepDS_ListNodeOfListOfInterference_swigregister(Handle_TopOpeBRepDS_ListNodeOfListOfInterference)

def Handle_TopOpeBRepDS_ListNodeOfListOfInterference_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_ListNodeOfListOfInterference_DownCast(AnObject)
Handle_TopOpeBRepDS_ListNodeOfListOfInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_ListNodeOfListOfInterference_DownCast

class TopOpeBRepDS_ListOfInterference(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ListOfInterference(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Set(self, *args)


    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Extent(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Clear(self, *args)


    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_IsEmpty(self, *args)


    def Prepend(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param theIt:
        :type theIt: TopOpeBRepDS_ListIteratorOfListOfInterference &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Prepend(self, *args)


    def Append(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param theIt:
        :type theIt: TopOpeBRepDS_ListIteratorOfListOfInterference &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Append(self, *args)


    def First(self, *args):
        """
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Handle_TopOpeBRepDS_Interference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Last(self, *args)


    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_RemoveFirst(self, *args)


    def Remove(self, *args):
        """
        :param It:
        :type It: TopOpeBRepDS_ListIteratorOfListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Remove(self, *args)


    def InsertBefore(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param It:
        :type It: TopOpeBRepDS_ListIteratorOfListOfInterference &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepDS_ListOfInterference &
        :param It:
        :type It: TopOpeBRepDS_ListIteratorOfListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param It:
        :type It: TopOpeBRepDS_ListIteratorOfListOfInterference &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepDS_ListOfInterference &
        :param It:
        :type It: TopOpeBRepDS_ListIteratorOfListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_InsertAfter(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_ListOfInterference.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Assign, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Set, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Extent = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Extent, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Clear, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.IsEmpty = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_IsEmpty, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Prepend = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Prepend, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Append = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Append, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.First = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_First, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Last = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Last, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.RemoveFirst = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_RemoveFirst, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.Remove = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_Remove, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.InsertBefore = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_InsertBefore, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference.InsertAfter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_InsertAfter, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfInterference__kill_pointed, None, TopOpeBRepDS_ListOfInterference)
TopOpeBRepDS_ListOfInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ListOfInterference_swigregister
TopOpeBRepDS_ListOfInterference_swigregister(TopOpeBRepDS_ListOfInterference)

class TopOpeBRepDS_ListOfShapeOn1State(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ListOfShapeOn1State(*args))

    def ListOnState(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_ListOnState(self, *args)


    def ChangeListOnState(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_ChangeListOnState(self, *args)


    def IsSplit(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_IsSplit(self, *args)


    def Split(self, *args):
        """
        :param B: default value is Standard_True
        :type B: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_Split(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_Clear(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_ListOfShapeOn1State.ListOnState = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_ListOnState, None, TopOpeBRepDS_ListOfShapeOn1State)
TopOpeBRepDS_ListOfShapeOn1State.ChangeListOnState = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_ChangeListOnState, None, TopOpeBRepDS_ListOfShapeOn1State)
TopOpeBRepDS_ListOfShapeOn1State.IsSplit = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_IsSplit, None, TopOpeBRepDS_ListOfShapeOn1State)
TopOpeBRepDS_ListOfShapeOn1State.Split = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_Split, None, TopOpeBRepDS_ListOfShapeOn1State)
TopOpeBRepDS_ListOfShapeOn1State.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_Clear, None, TopOpeBRepDS_ListOfShapeOn1State)
TopOpeBRepDS_ListOfShapeOn1State._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State__kill_pointed, None, TopOpeBRepDS_ListOfShapeOn1State)
TopOpeBRepDS_ListOfShapeOn1State_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ListOfShapeOn1State_swigregister
TopOpeBRepDS_ListOfShapeOn1State_swigregister(TopOpeBRepDS_ListOfShapeOn1State)

class TopOpeBRepDS_MapOfCurve(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_MapOfCurve(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_MapOfCurve &
        :rtype: TopOpeBRepDS_MapOfCurve

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_MapOfCurve &
        :rtype: TopOpeBRepDS_MapOfCurve

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopOpeBRepDS_CurveData &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Bind(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_IsBound(self, *args)


    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_UnBind(self, *args)


    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopOpeBRepDS_CurveData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Find(self, *args)


    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopOpeBRepDS_CurveData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_ChangeFind(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Find1(self, *args)


    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_ChangeFind1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_MapOfCurve self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_MapOfCurve.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Assign, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Set, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_ReSize, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Clear, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Bind, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_IsBound, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_UnBind, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Find, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_ChangeFind, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_Find1, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve.ChangeFind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_ChangeFind1, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfCurve__kill_pointed, None, TopOpeBRepDS_MapOfCurve)
TopOpeBRepDS_MapOfCurve_swigregister = _TopOpeBRepDS.TopOpeBRepDS_MapOfCurve_swigregister
TopOpeBRepDS_MapOfCurve_swigregister(TopOpeBRepDS_MapOfCurve)

class TopOpeBRepDS_MapOfIntegerShapeData(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_MapOfIntegerShapeData(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_MapOfIntegerShapeData &
        :rtype: TopOpeBRepDS_MapOfIntegerShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_MapOfIntegerShapeData &
        :rtype: TopOpeBRepDS_MapOfIntegerShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopOpeBRepDS_ShapeData &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Bind(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_IsBound(self, *args)


    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_UnBind(self, *args)


    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopOpeBRepDS_ShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Find(self, *args)


    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopOpeBRepDS_ShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_ChangeFind(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Find1(self, *args)


    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_ChangeFind1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_MapOfIntegerShapeData self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_MapOfIntegerShapeData.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Assign, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Set, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_ReSize, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Clear, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Bind, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_IsBound, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_UnBind, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Find, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_ChangeFind, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_Find1, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData.ChangeFind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_ChangeFind1, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData__kill_pointed, None, TopOpeBRepDS_MapOfIntegerShapeData)
TopOpeBRepDS_MapOfIntegerShapeData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_MapOfIntegerShapeData_swigregister
TopOpeBRepDS_MapOfIntegerShapeData_swigregister(TopOpeBRepDS_MapOfIntegerShapeData)

class TopOpeBRepDS_MapOfPoint(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_MapOfPoint(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_MapOfPoint &
        :rtype: TopOpeBRepDS_MapOfPoint

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_MapOfPoint &
        :rtype: TopOpeBRepDS_MapOfPoint

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopOpeBRepDS_PointData &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Bind(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_IsBound(self, *args)


    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_UnBind(self, *args)


    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopOpeBRepDS_PointData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Find(self, *args)


    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopOpeBRepDS_PointData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_ChangeFind(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Find1(self, *args)


    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_ChangeFind1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_MapOfPoint self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_MapOfPoint.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Assign, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Set, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_ReSize, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Clear, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Bind, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_IsBound, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_UnBind, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Find, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_ChangeFind, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_Find1, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint.ChangeFind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_ChangeFind1, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfPoint__kill_pointed, None, TopOpeBRepDS_MapOfPoint)
TopOpeBRepDS_MapOfPoint_swigregister = _TopOpeBRepDS.TopOpeBRepDS_MapOfPoint_swigregister
TopOpeBRepDS_MapOfPoint_swigregister(TopOpeBRepDS_MapOfPoint)

class TopOpeBRepDS_MapOfShapeData(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_MapOfShapeData(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_MapOfShapeData &
        :rtype: TopOpeBRepDS_MapOfShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_MapOfShapeData &
        :rtype: TopOpeBRepDS_MapOfShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Clear(self, *args)


    def Add(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopOpeBRepDS_ShapeData &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Add(self, *args)


    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: TopoDS_Shape &
        :param T:
        :type T: TopOpeBRepDS_ShapeData &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Substitute(self, *args)


    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_RemoveLast(self, *args)


    def Contains(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Contains(self, *args)


    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindKey(self, *args)


    def FindFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_ShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindFromIndex(self, *args)


    def ChangeFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_ShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_ChangeFromIndex(self, *args)


    def FindIndex(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindIndex(self, *args)


    def FindFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopOpeBRepDS_ShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindFromKey(self, *args)


    def ChangeFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopOpeBRepDS_ShapeData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_ChangeFromKey(self, *args)


    def FindFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindFromKey1(self, *args)


    def ChangeFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_ChangeFromKey1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_MapOfShapeData self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_MapOfShapeData.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Assign, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Set, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_ReSize, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Clear, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Add, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Substitute = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Substitute, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.RemoveLast = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_RemoveLast, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.Contains = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_Contains, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.FindKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindKey, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.FindFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindFromIndex, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.ChangeFromIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_ChangeFromIndex, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.FindIndex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindIndex, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.FindFromKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindFromKey, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.ChangeFromKey = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_ChangeFromKey, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.FindFromKey1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_FindFromKey1, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData.ChangeFromKey1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_ChangeFromKey1, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData__kill_pointed, None, TopOpeBRepDS_MapOfShapeData)
TopOpeBRepDS_MapOfShapeData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_MapOfShapeData_swigregister
TopOpeBRepDS_MapOfShapeData_swigregister(TopOpeBRepDS_MapOfShapeData)

class TopOpeBRepDS_MapOfSurface(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_MapOfSurface(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_MapOfSurface &
        :rtype: TopOpeBRepDS_MapOfSurface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_MapOfSurface &
        :rtype: TopOpeBRepDS_MapOfSurface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopOpeBRepDS_SurfaceData &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Bind(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_IsBound(self, *args)


    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_UnBind(self, *args)


    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopOpeBRepDS_SurfaceData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Find(self, *args)


    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopOpeBRepDS_SurfaceData

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_ChangeFind(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Find1(self, *args)


    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_ChangeFind1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_MapOfSurface self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_MapOfSurface.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Assign, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Set, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_ReSize, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Clear, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Bind, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_IsBound, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_UnBind, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Find, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_ChangeFind, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_Find1, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface.ChangeFind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_ChangeFind1, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_MapOfSurface__kill_pointed, None, TopOpeBRepDS_MapOfSurface)
TopOpeBRepDS_MapOfSurface_swigregister = _TopOpeBRepDS.TopOpeBRepDS_MapOfSurface_swigregister
TopOpeBRepDS_MapOfSurface_swigregister(TopOpeBRepDS_MapOfSurface)

class TopOpeBRepDS_Marker(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Marker_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Marker(*args))

    def Reset(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Marker_Reset(self, *args)


    def Set(self, *args):
        """
        :param i:
        :type i: int
        :param b:
        :type b: bool
        :rtype: None

        :param b:
        :type b: bool
        :param n:
        :type n: int
        :param a:
        :type a: Standard_Address
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Marker_Set(self, *args)


    def GetI(self, *args):
        """
        :param i:
        :type i: int
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Marker_GetI(self, *args)


    def Allocate(self, *args):
        """
        :param n:
        :type n: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Marker_Allocate(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_Marker self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_Marker__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_Marker self) -> Handle_TopOpeBRepDS_Marker"""
        return _TopOpeBRepDS.TopOpeBRepDS_Marker_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Marker.Reset = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Marker_Reset, None, TopOpeBRepDS_Marker)
TopOpeBRepDS_Marker.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Marker_Set, None, TopOpeBRepDS_Marker)
TopOpeBRepDS_Marker.GetI = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Marker_GetI, None, TopOpeBRepDS_Marker)
TopOpeBRepDS_Marker.Allocate = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Marker_Allocate, None, TopOpeBRepDS_Marker)
TopOpeBRepDS_Marker._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Marker__kill_pointed, None, TopOpeBRepDS_Marker)
TopOpeBRepDS_Marker.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Marker_GetHandle, None, TopOpeBRepDS_Marker)
TopOpeBRepDS_Marker_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Marker_swigregister
TopOpeBRepDS_Marker_swigregister(TopOpeBRepDS_Marker)

class Handle_TopOpeBRepDS_Marker(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_Marker(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_Marker.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_Nullify, None, Handle_TopOpeBRepDS_Marker)
Handle_TopOpeBRepDS_Marker.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_IsNull, None, Handle_TopOpeBRepDS_Marker)
Handle_TopOpeBRepDS_Marker.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_GetObject, None, Handle_TopOpeBRepDS_Marker)
Handle_TopOpeBRepDS_Marker._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_Marker__kill_pointed, None, Handle_TopOpeBRepDS_Marker)
Handle_TopOpeBRepDS_Marker_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_swigregister
Handle_TopOpeBRepDS_Marker_swigregister(Handle_TopOpeBRepDS_Marker)

def Handle_TopOpeBRepDS_Marker_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_DownCast(AnObject)
Handle_TopOpeBRepDS_Marker_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_Marker_DownCast

class TopOpeBRepDS_Point(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param T:
        :type T: float
        :rtype: None

        :param S:
        :type S: TopoDS_Shape &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Point_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Point(*args))

    def IsEqual(self, *args):
        """
        :param other:
        :type other: TopOpeBRepDS_Point &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Point_IsEqual(self, *args)


    def Point(self, *args):
        """
        :rtype: gp_Pnt

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Point_Point(self, *args)


    def ChangePoint(self, *args):
        """
        :rtype: gp_Pnt

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Point_ChangePoint(self, *args)


    def Tolerance(self, *args):
        """
        :rtype: float

        :param Tol:
        :type Tol: float
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Point_Tolerance(self, *args)


    def Keep(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Point_Keep(self, *args)


    def ChangeKeep(self, *args):
        """
        :param B:
        :type B: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Point_ChangeKeep(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Point.IsEqual = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point_IsEqual, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point.Point = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point_Point, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point.ChangePoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point_ChangePoint, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point.Tolerance = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point_Tolerance, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point.Keep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point_Keep, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point.ChangeKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point_ChangeKeep, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Point__kill_pointed, None, TopOpeBRepDS_Point)
TopOpeBRepDS_Point_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Point_swigregister
TopOpeBRepDS_Point_swigregister(TopOpeBRepDS_Point)

class TopOpeBRepDS_PointExplorer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param DS:
        :type DS: TopOpeBRepDS_DataStructure &
        :param FindOnlyKeep: default value is Standard_True
        :type FindOnlyKeep: bool
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_PointExplorer(*args))

    def Init(self, *args):
        """
        :param DS:
        :type DS: TopOpeBRepDS_DataStructure &
        :param FindOnlyKeep: default value is Standard_True
        :type FindOnlyKeep: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Init(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Next(self, *args)


    def IsPoint(self, *args):
        """
        :param I:
        :type I: int
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_IsPoint(self, *args)


    def IsPointKeep(self, *args):
        """
        :param I:
        :type I: int
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_IsPointKeep(self, *args)


    def Point(self, *args):
        """
        :rtype: TopOpeBRepDS_Point

        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_Point

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Point(self, *args)


    def NbPoint(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_NbPoint(self, *args)


    def Index(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Index(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_PointExplorer.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Init, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_More, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Next, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.IsPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_IsPoint, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.IsPointKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_IsPointKeep, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.Point = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Point, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.NbPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_NbPoint, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer.Index = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer_Index, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointExplorer__kill_pointed, None, TopOpeBRepDS_PointExplorer)
TopOpeBRepDS_PointExplorer_swigregister = _TopOpeBRepDS.TopOpeBRepDS_PointExplorer_swigregister
TopOpeBRepDS_PointExplorer_swigregister(TopOpeBRepDS_PointExplorer)

class TopOpeBRepDS_Reducer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Reducer_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Reducer(*args))

    def ProcessFaceInterferences(self, *args):
        """
        :param M:
        :type M: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Reducer_ProcessFaceInterferences(self, *args)


    def ProcessEdgeInterferences(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Reducer_ProcessEdgeInterferences(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Reducer.ProcessFaceInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Reducer_ProcessFaceInterferences, None, TopOpeBRepDS_Reducer)
TopOpeBRepDS_Reducer.ProcessEdgeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Reducer_ProcessEdgeInterferences, None, TopOpeBRepDS_Reducer)
TopOpeBRepDS_Reducer._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Reducer__kill_pointed, None, TopOpeBRepDS_Reducer)
TopOpeBRepDS_Reducer_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Reducer_swigregister
TopOpeBRepDS_Reducer_swigregister(TopOpeBRepDS_Reducer)

class TopOpeBRepDS_ShapeData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_ShapeData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ShapeData(*args))

    def Interferences(self, *args):
        """
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeData_Interferences(self, *args)


    def ChangeInterferences(self, *args):
        """
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeData_ChangeInterferences(self, *args)


    def Keep(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeData_Keep(self, *args)


    def ChangeKeep(self, *args):
        """
        :param B:
        :type B: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeData_ChangeKeep(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_ShapeData.Interferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeData_Interferences, None, TopOpeBRepDS_ShapeData)
TopOpeBRepDS_ShapeData.ChangeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeData_ChangeInterferences, None, TopOpeBRepDS_ShapeData)
TopOpeBRepDS_ShapeData.Keep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeData_Keep, None, TopOpeBRepDS_ShapeData)
TopOpeBRepDS_ShapeData.ChangeKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeData_ChangeKeep, None, TopOpeBRepDS_ShapeData)
TopOpeBRepDS_ShapeData._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeData__kill_pointed, None, TopOpeBRepDS_ShapeData)
TopOpeBRepDS_ShapeData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ShapeData_swigregister
TopOpeBRepDS_ShapeData_swigregister(TopOpeBRepDS_ShapeData)

class TopOpeBRepDS_ShapeSurface(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ShapeSurface(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_ShapeSurface &
        :rtype: TopOpeBRepDS_ShapeSurface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_ShapeSurface &
        :rtype: TopOpeBRepDS_ShapeSurface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: Handle_Geom_Surface &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Bind(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_IsBound(self, *args)


    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_UnBind(self, *args)


    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Handle_Geom_Surface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Find(self, *args)


    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Handle_Geom_Surface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_ChangeFind(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Find1(self, *args)


    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_ChangeFind1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_ShapeSurface self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_ShapeSurface.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Assign, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Set, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.ReSize = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_ReSize, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Clear, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Bind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Bind, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_IsBound, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.UnBind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_UnBind, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Find = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Find, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.ChangeFind = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_ChangeFind, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.Find1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_Find1, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface.ChangeFind1 = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_ChangeFind1, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeSurface__kill_pointed, None, TopOpeBRepDS_ShapeSurface)
TopOpeBRepDS_ShapeSurface_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ShapeSurface_swigregister
TopOpeBRepDS_ShapeSurface_swigregister(TopOpeBRepDS_ShapeSurface)

class TopOpeBRepDS_ShapeWithState(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ShapeWithState(*args))

    def Part(self, *args):
        """
        :param aState:
        :type aState: TopAbs_State
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_Part(self, *args)


    def AddPart(self, *args):
        """
        :param aShape:
        :type aShape: TopoDS_Shape &
        :param aState:
        :type aState: TopAbs_State
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_AddPart(self, *args)


    def AddParts(self, *args):
        """
        :param aListOfShape:
        :type aListOfShape: TopTools_ListOfShape &
        :param aState:
        :type aState: TopAbs_State
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_AddParts(self, *args)


    def SetState(self, *args):
        """
        :param aState:
        :type aState: TopAbs_State
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_SetState(self, *args)


    def State(self, *args):
        """
        :rtype: TopAbs_State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_State(self, *args)


    def SetIsSplitted(self, *args):
        """
        :param anIsSplitted:
        :type anIsSplitted: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_SetIsSplitted(self, *args)


    def IsSplitted(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_IsSplitted(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_ShapeWithState.Part = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_Part, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState.AddPart = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_AddPart, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState.AddParts = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_AddParts, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState.SetState = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_SetState, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState.State = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_State, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState.SetIsSplitted = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_SetIsSplitted, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState.IsSplitted = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_IsSplitted, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeWithState__kill_pointed, None, TopOpeBRepDS_ShapeWithState)
TopOpeBRepDS_ShapeWithState_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ShapeWithState_swigregister
TopOpeBRepDS_ShapeWithState_swigregister(TopOpeBRepDS_ShapeWithState)

class TopOpeBRepDS_Surface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: Handle_Geom_Surface &
        :param T:
        :type T: float
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepDS_Surface &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Surface_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Surface(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_Surface &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Surface_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepDS_Surface &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Surface_Set(self, *args)


    def Surface(self, *args):
        """
        :rtype: Handle_Geom_Surface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Surface_Surface(self, *args)


    def Tolerance(self, *args):
        """
        :rtype: float

        * Update the tolerance

        :param tol:
        :type tol: float
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Surface_Tolerance(self, *args)


    def Keep(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Surface_Keep(self, *args)


    def ChangeKeep(self, *args):
        """
        :param B:
        :type B: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Surface_ChangeKeep(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Surface.Assign = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface_Assign, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface_Set, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface.Surface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface_Surface, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface.Tolerance = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface_Tolerance, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface.Keep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface_Keep, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface.ChangeKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface_ChangeKeep, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Surface__kill_pointed, None, TopOpeBRepDS_Surface)
TopOpeBRepDS_Surface_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Surface_swigregister
TopOpeBRepDS_Surface_swigregister(TopOpeBRepDS_Surface)

class TopOpeBRepDS_SurfaceExplorer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param DS:
        :type DS: TopOpeBRepDS_DataStructure &
        :param FindOnlyKeep: default value is Standard_True
        :type FindOnlyKeep: bool
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_SurfaceExplorer(*args))

    def Init(self, *args):
        """
        :param DS:
        :type DS: TopOpeBRepDS_DataStructure &
        :param FindOnlyKeep: default value is Standard_True
        :type FindOnlyKeep: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Init(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Next(self, *args)


    def IsSurface(self, *args):
        """
        :param I:
        :type I: int
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_IsSurface(self, *args)


    def IsSurfaceKeep(self, *args):
        """
        :param I:
        :type I: int
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_IsSurfaceKeep(self, *args)


    def Surface(self, *args):
        """
        :rtype: TopOpeBRepDS_Surface

        :param I:
        :type I: int
        :rtype: TopOpeBRepDS_Surface

        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Surface(self, *args)


    def NbSurface(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_NbSurface(self, *args)


    def Index(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Index(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_SurfaceExplorer.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Init, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_More, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Next, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.IsSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_IsSurface, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.IsSurfaceKeep = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_IsSurfaceKeep, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.Surface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Surface, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.NbSurface = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_NbSurface, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer.Index = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_Index, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer__kill_pointed, None, TopOpeBRepDS_SurfaceExplorer)
TopOpeBRepDS_SurfaceExplorer_swigregister = _TopOpeBRepDS.TopOpeBRepDS_SurfaceExplorer_swigregister
TopOpeBRepDS_SurfaceExplorer_swigregister(TopOpeBRepDS_SurfaceExplorer)

class TopOpeBRepDS_TKI(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_TKI_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_TKI(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_Clear(self, *args)


    def FillOnGeometry(self, *args):
        """
        :param L:
        :type L: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_FillOnGeometry(self, *args)


    def FillOnSupport(self, *args):
        """
        :param L:
        :type L: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_FillOnSupport(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind
        :param G:
        :type G: int
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_IsBound(self, *args)


    def Interferences(self, *args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind
        :param G:
        :type G: int
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_Interferences(self, *args)


    def ChangeInterferences(self, *args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind
        :param G:
        :type G: int
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_ChangeInterferences(self, *args)


    def HasInterferences(self, *args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind
        :param G:
        :type G: int
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_HasInterferences(self, *args)


    def Add(self, *args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind
        :param G:
        :type G: int
        :rtype: None

        :param K:
        :type K: TopOpeBRepDS_Kind
        :param G:
        :type G: int
        :param HI:
        :type HI: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_Add(self, *args)


    def DumpTKI(self, *args):
        """
        :param s1: default value is 
        :type s1: TCollection_AsciiString &
        :param s2: default value is 
        :type s2: TCollection_AsciiString &
        :rtype: None

        :param K:
        :type K: TopOpeBRepDS_Kind
        :param s1: default value is 
        :type s1: TCollection_AsciiString &
        :param s2: default value is 
        :type s2: TCollection_AsciiString &
        :rtype: None

        :param K:
        :type K: TopOpeBRepDS_Kind
        :param G:
        :type G: int
        :param s1: default value is 
        :type s1: TCollection_AsciiString &
        :param s2: default value is 
        :type s2: TCollection_AsciiString &
        :rtype: None

        :param K:
        :type K: TopOpeBRepDS_Kind
        :param G:
        :type G: int
        :param L:
        :type L: TopOpeBRepDS_ListOfInterference &
        :param s1: default value is 
        :type s1: TCollection_AsciiString &
        :param s2: default value is 
        :type s2: TCollection_AsciiString &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_DumpTKI(self, *args)


    def DumpTKIIterator(self, *args):
        """
        :param s1: default value is 
        :type s1: TCollection_AsciiString &
        :param s2: default value is 
        :type s2: TCollection_AsciiString &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_DumpTKIIterator(self, *args)


    def Init(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_Init(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_Next(self, *args)


    def Value(self, *args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind &
        :param G:
        :type G: int &
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param K:
        :type K: TopOpeBRepDS_Kind &
        :param G:
        :type G: int &
        :rtype: TopOpeBRepDS_ListOfInterference

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TKI_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_TKI.Clear = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_Clear, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.FillOnGeometry = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_FillOnGeometry, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.FillOnSupport = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_FillOnSupport, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.IsBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_IsBound, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.Interferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_Interferences, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.ChangeInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_ChangeInterferences, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.HasInterferences = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_HasInterferences, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.Add = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_Add, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.DumpTKI = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_DumpTKI, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.DumpTKIIterator = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_DumpTKIIterator, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.Init = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_Init, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.More = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_More, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.Next = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_Next, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.Value = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_Value, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI.ChangeValue = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI_ChangeValue, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TKI__kill_pointed, None, TopOpeBRepDS_TKI)
TopOpeBRepDS_TKI_swigregister = _TopOpeBRepDS.TopOpeBRepDS_TKI_swigregister
TopOpeBRepDS_TKI_swigregister(TopOpeBRepDS_TKI)

class TopOpeBRepDS_TOOL(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def EShareG(*args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :param E:
        :type E: TopoDS_Edge &
        :param lEsd:
        :type lEsd: TopTools_ListOfShape &
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TOOL_EShareG(*args)

    EShareG = staticmethod(EShareG)

    def ShareG(*args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :param is1:
        :type is1: int
        :param is2:
        :type is2: int
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TOOL_ShareG(*args)

    ShareG = staticmethod(ShareG)

    def GetEsd(*args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :param S:
        :type S: TopoDS_Shape &
        :param ie:
        :type ie: int
        :param iesd:
        :type iesd: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TOOL_GetEsd(*args)

    GetEsd = staticmethod(GetEsd)

    def ShareSplitON(*args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :param MspON:
        :type MspON: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
        :param i1:
        :type i1: int
        :param i2:
        :type i2: int
        :param spON:
        :type spON: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TOOL_ShareSplitON(*args)

    ShareSplitON = staticmethod(ShareSplitON)

    def GetConfig(*args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :param MEspON:
        :type MEspON: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
        :param ie:
        :type ie: int
        :param iesd:
        :type iesd: int
        :param conf:
        :type conf: int &
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_TOOL_GetConfig(*args)

    GetConfig = staticmethod(GetConfig)

    def __init__(self):
        _TopOpeBRepDS.TopOpeBRepDS_TOOL_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_TOOL())

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_TOOL._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_TOOL__kill_pointed, None, TopOpeBRepDS_TOOL)
TopOpeBRepDS_TOOL_swigregister = _TopOpeBRepDS.TopOpeBRepDS_TOOL_swigregister
TopOpeBRepDS_TOOL_swigregister(TopOpeBRepDS_TOOL)

def TopOpeBRepDS_TOOL_EShareG(*args):
    """
    :param HDS:
    :type HDS: Handle_TopOpeBRepDS_HDataStructure &
    :param E:
    :type E: TopoDS_Edge &
    :param lEsd:
    :type lEsd: TopTools_ListOfShape &
    :rtype: int

    """
    return _TopOpeBRepDS.TopOpeBRepDS_TOOL_EShareG(*args)

def TopOpeBRepDS_TOOL_ShareG(*args):
    """
    :param HDS:
    :type HDS: Handle_TopOpeBRepDS_HDataStructure &
    :param is1:
    :type is1: int
    :param is2:
    :type is2: int
    :rtype: bool

    """
    return _TopOpeBRepDS.TopOpeBRepDS_TOOL_ShareG(*args)

def TopOpeBRepDS_TOOL_GetEsd(*args):
    """
    :param HDS:
    :type HDS: Handle_TopOpeBRepDS_HDataStructure &
    :param S:
    :type S: TopoDS_Shape &
    :param ie:
    :type ie: int
    :param iesd:
    :type iesd: int &
    :rtype: bool

    """
    return _TopOpeBRepDS.TopOpeBRepDS_TOOL_GetEsd(*args)

def TopOpeBRepDS_TOOL_ShareSplitON(*args):
    """
    :param HDS:
    :type HDS: Handle_TopOpeBRepDS_HDataStructure &
    :param MspON:
    :type MspON: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
    :param i1:
    :type i1: int
    :param i2:
    :type i2: int
    :param spON:
    :type spON: TopoDS_Shape &
    :rtype: bool

    """
    return _TopOpeBRepDS.TopOpeBRepDS_TOOL_ShareSplitON(*args)

def TopOpeBRepDS_TOOL_GetConfig(*args):
    """
    :param HDS:
    :type HDS: Handle_TopOpeBRepDS_HDataStructure &
    :param MEspON:
    :type MEspON: TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State &
    :param ie:
    :type ie: int
    :param iesd:
    :type iesd: int
    :param conf:
    :type conf: int &
    :rtype: bool

    """
    return _TopOpeBRepDS.TopOpeBRepDS_TOOL_GetConfig(*args)

class TopOpeBRepDS_Transition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param StateBefore:
        :type StateBefore: TopAbs_State
        :param StateAfter:
        :type StateAfter: TopAbs_State
        :param ShapeBefore: default value is TopAbs_FACE
        :type ShapeBefore: TopAbs_ShapeEnum
        :param ShapeAfter: default value is TopAbs_FACE
        :type ShapeAfter: TopAbs_ShapeEnum
        :rtype: None

        :param O:
        :type O: TopAbs_Orientation
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_Transition_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_Transition(*args))

    def StateBefore(self, *args):
        """
        :param S:
        :type S: TopAbs_State
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_StateBefore(self, *args)


    def StateAfter(self, *args):
        """
        :param S:
        :type S: TopAbs_State
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_StateAfter(self, *args)


    def Before(self, *args):
        """
        :param S:
        :type S: TopAbs_State
        :param ShapeBefore: default value is TopAbs_FACE
        :type ShapeBefore: TopAbs_ShapeEnum
        :rtype: None

        :rtype: TopAbs_State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_Before(self, *args)


    def ONBefore(self, *args):
        """
        :rtype: TopAbs_ShapeEnum

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_ONBefore(self, *args)


    def After(self, *args):
        """
        :param S:
        :type S: TopAbs_State
        :param ShapeAfter: default value is TopAbs_FACE
        :type ShapeAfter: TopAbs_ShapeEnum
        :rtype: None

        :rtype: TopAbs_State

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_After(self, *args)


    def ONAfter(self, *args):
        """
        :rtype: TopAbs_ShapeEnum

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_ONAfter(self, *args)


    def ShapeBefore(self, *args):
        """
        :param SE:
        :type SE: TopAbs_ShapeEnum
        :rtype: None

        :rtype: TopAbs_ShapeEnum

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_ShapeBefore(self, *args)


    def ShapeAfter(self, *args):
        """
        :param SE:
        :type SE: TopAbs_ShapeEnum
        :rtype: None

        :rtype: TopAbs_ShapeEnum

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_ShapeAfter(self, *args)


    def Index(self, *args):
        """
        :param I:
        :type I: int
        :rtype: None

        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_Index(self, *args)


    def IndexBefore(self, *args):
        """
        :param I:
        :type I: int
        :rtype: None

        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_IndexBefore(self, *args)


    def IndexAfter(self, *args):
        """
        :param I:
        :type I: int
        :rtype: None

        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_IndexAfter(self, *args)


    def Set(self, *args):
        """
        :param StateBefore:
        :type StateBefore: TopAbs_State
        :param StateAfter:
        :type StateAfter: TopAbs_State
        :param ShapeBefore: default value is TopAbs_FACE
        :type ShapeBefore: TopAbs_ShapeEnum
        :param ShapeAfter: default value is TopAbs_FACE
        :type ShapeAfter: TopAbs_ShapeEnum
        :rtype: None

        * set the transition corresponding to orientation <O>  O Before After FORWARD OUT IN REVERSED IN OUT INTERNAL IN IN EXTERNAL OUT OUT

        :param O:
        :type O: TopAbs_Orientation
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_Set(self, *args)


    def Orientation(self, *args):
        """
        * returns the orientation corresponding to state <S> Before and After not equal TopAbs_ON : -------------------------------------- Before After Computed orientation S not S REVERSED (we leave state S) not S S FORWARD (we enter state S) S S INTERNAL (we stay in state S) not S not S EXTERNAL (we stay outside state S)

        :param S:
        :type S: TopAbs_State
        :param T: default value is TopAbs_FACE
        :type T: TopAbs_ShapeEnum
        :rtype: TopAbs_Orientation

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_Orientation(self, *args)


    def Complement(self, *args):
        """
        :rtype: TopOpeBRepDS_Transition

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_Complement(self, *args)


    def IsUnknown(self, *args):
        """
        * returns True if both states are UNKNOWN

        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_IsUnknown(self, *args)


    def DumpAToString(self):
        """DumpAToString(TopOpeBRepDS_Transition self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_DumpAToString(self)


    def DumpBToString(self):
        """DumpBToString(TopOpeBRepDS_Transition self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_DumpBToString(self)


    def DumpToString(self):
        """DumpToString(TopOpeBRepDS_Transition self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_Transition_DumpToString(self)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_Transition self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_Transition__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_Transition.StateBefore = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_StateBefore, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.StateAfter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_StateAfter, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.Before = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_Before, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.ONBefore = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_ONBefore, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.After = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_After, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.ONAfter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_ONAfter, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.ShapeBefore = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_ShapeBefore, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.ShapeAfter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_ShapeAfter, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.Index = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_Index, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.IndexBefore = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_IndexBefore, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.IndexAfter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_IndexAfter, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.Set = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_Set, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.Orientation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_Orientation, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.Complement = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_Complement, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.IsUnknown = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_IsUnknown, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.DumpAToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_DumpAToString, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.DumpBToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_DumpBToString, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition.DumpToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition_DumpToString, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_Transition__kill_pointed, None, TopOpeBRepDS_Transition)
TopOpeBRepDS_Transition_swigregister = _TopOpeBRepDS.TopOpeBRepDS_Transition_swigregister
TopOpeBRepDS_Transition_swigregister(TopOpeBRepDS_Transition)

class TopOpeBRepDS_CurveData(TopOpeBRepDS_GeometryData):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param C:
        :type C: TopOpeBRepDS_Curve &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_CurveData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_CurveData(*args))

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_CurveData._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveData__kill_pointed, None, TopOpeBRepDS_CurveData)
TopOpeBRepDS_CurveData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_CurveData_swigregister
TopOpeBRepDS_CurveData_swigregister(TopOpeBRepDS_CurveData)

class TopOpeBRepDS_CurveIterator(TopOpeBRepDS_InterferenceIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Creates an iterator on the curves on surface described by the interferences in <L>.

        :param L:
        :type L: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_CurveIterator_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_CurveIterator(*args))

    def Current(self, *args):
        """
        * Index of the curve in the data structure.

        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveIterator_Current(self, *args)


    def Orientation(self, *args):
        """
        :param S:
        :type S: TopAbs_State
        :rtype: TopAbs_Orientation

        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveIterator_Orientation(self, *args)


    def PCurve(self, *args):
        """
        :rtype: Handle_Geom2d_Curve

        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurveIterator_PCurve(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_CurveIterator.Current = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveIterator_Current, None, TopOpeBRepDS_CurveIterator)
TopOpeBRepDS_CurveIterator.Orientation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveIterator_Orientation, None, TopOpeBRepDS_CurveIterator)
TopOpeBRepDS_CurveIterator.PCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveIterator_PCurve, None, TopOpeBRepDS_CurveIterator)
TopOpeBRepDS_CurveIterator._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurveIterator__kill_pointed, None, TopOpeBRepDS_CurveIterator)
TopOpeBRepDS_CurveIterator_swigregister = _TopOpeBRepDS.TopOpeBRepDS_CurveIterator_swigregister
TopOpeBRepDS_CurveIterator_swigregister(TopOpeBRepDS_CurveIterator)

class TopOpeBRepDS_CurvePointInterference(TopOpeBRepDS_Interference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param T:
        :type T: TopOpeBRepDS_Transition &
        :param ST:
        :type ST: TopOpeBRepDS_Kind
        :param S:
        :type S: int
        :param GT:
        :type GT: TopOpeBRepDS_Kind
        :param G:
        :type G: int
        :param P:
        :type P: float
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_CurvePointInterference(*args))

    def Parameter(self, *args):
        """
        :rtype: float

        :param P:
        :type P: float
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference_Parameter(self, *args)


    def DumpToString(self):
        """DumpToString(TopOpeBRepDS_CurvePointInterference self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference_DumpToString(self)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_CurvePointInterference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_CurvePointInterference self) -> Handle_TopOpeBRepDS_CurvePointInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_CurvePointInterference.Parameter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference_Parameter, None, TopOpeBRepDS_CurvePointInterference)
TopOpeBRepDS_CurvePointInterference.DumpToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference_DumpToString, None, TopOpeBRepDS_CurvePointInterference)
TopOpeBRepDS_CurvePointInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference__kill_pointed, None, TopOpeBRepDS_CurvePointInterference)
TopOpeBRepDS_CurvePointInterference.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference_GetHandle, None, TopOpeBRepDS_CurvePointInterference)
TopOpeBRepDS_CurvePointInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_CurvePointInterference_swigregister
TopOpeBRepDS_CurvePointInterference_swigregister(TopOpeBRepDS_CurvePointInterference)

class Handle_TopOpeBRepDS_CurvePointInterference(Handle_TopOpeBRepDS_Interference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_CurvePointInterference(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_CurvePointInterference.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_Nullify, None, Handle_TopOpeBRepDS_CurvePointInterference)
Handle_TopOpeBRepDS_CurvePointInterference.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_IsNull, None, Handle_TopOpeBRepDS_CurvePointInterference)
Handle_TopOpeBRepDS_CurvePointInterference.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_GetObject, None, Handle_TopOpeBRepDS_CurvePointInterference)
Handle_TopOpeBRepDS_CurvePointInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference__kill_pointed, None, Handle_TopOpeBRepDS_CurvePointInterference)
Handle_TopOpeBRepDS_CurvePointInterference_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_swigregister
Handle_TopOpeBRepDS_CurvePointInterference_swigregister(Handle_TopOpeBRepDS_CurvePointInterference)

def Handle_TopOpeBRepDS_CurvePointInterference_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_DownCast(AnObject)
Handle_TopOpeBRepDS_CurvePointInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_CurvePointInterference_DownCast

class TopOpeBRepDS_PointData(TopOpeBRepDS_GeometryData):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: TopOpeBRepDS_Point &
        :rtype: None

        :param P:
        :type P: TopOpeBRepDS_Point &
        :param I1:
        :type I1: int
        :param I2:
        :type I2: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_PointData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_PointData(*args))

    def SetShapes(self, *args):
        """
        :param I1:
        :type I1: int
        :param I2:
        :type I2: int
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointData_SetShapes(self, *args)


    def GetShapes(self, *args):
        """
        :param I1:
        :type I1: int &
        :param I2:
        :type I2: int &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointData_GetShapes(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_PointData.SetShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointData_SetShapes, None, TopOpeBRepDS_PointData)
TopOpeBRepDS_PointData.GetShapes = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointData_GetShapes, None, TopOpeBRepDS_PointData)
TopOpeBRepDS_PointData._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointData__kill_pointed, None, TopOpeBRepDS_PointData)
TopOpeBRepDS_PointData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_PointData_swigregister
TopOpeBRepDS_PointData_swigregister(TopOpeBRepDS_PointData)

class TopOpeBRepDS_PointIterator(TopOpeBRepDS_InterferenceIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Creates an iterator on the points on curves described by the interferences in <L>.

        :param L:
        :type L: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_PointIterator_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_PointIterator(*args))

    def Current(self, *args):
        """
        * Index of the point in the data structure.

        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_Current(self, *args)


    def Orientation(self, *args):
        """
        :param S:
        :type S: TopAbs_State
        :rtype: TopAbs_Orientation

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_Orientation(self, *args)


    def Parameter(self, *args):
        """
        :rtype: float

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_Parameter(self, *args)


    def IsVertex(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_IsVertex(self, *args)


    def IsPoint(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_IsPoint(self, *args)


    def DiffOriented(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_DiffOriented(self, *args)


    def SameOriented(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_SameOriented(self, *args)


    def Support(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_PointIterator_Support(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_PointIterator.Current = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_Current, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.Orientation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_Orientation, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.Parameter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_Parameter, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.IsVertex = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_IsVertex, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.IsPoint = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_IsPoint, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.DiffOriented = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_DiffOriented, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.SameOriented = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_SameOriented, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator.Support = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator_Support, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_PointIterator__kill_pointed, None, TopOpeBRepDS_PointIterator)
TopOpeBRepDS_PointIterator_swigregister = _TopOpeBRepDS.TopOpeBRepDS_PointIterator_swigregister
TopOpeBRepDS_PointIterator_swigregister(TopOpeBRepDS_PointIterator)

class TopOpeBRepDS_ShapeShapeInterference(TopOpeBRepDS_Interference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * a shape interfers on shape <G> with shape <S>. examples : create a ShapeShapeInterference describing : vertex V of edge E1 found on edge E2 : ST,S,GT,G = TopOpeBRepDS_EDGE,E2,TopOpeBRepDS_VERTEX,V create a ShapeShapeInterference describing vertex V of edge E found on face F : ST,S,GT,G = TopOpeBRepDS_FACE,F,TopOpeBRepDS_VERTEX,V <GBound> indicates if shape <G> is a bound of shape <S>. <SCC> : UNSH_GEOMETRY : 	 <S> and <Ancestor> have any types, 	 <S> and <Ancestor> don't share the same geometry SAME_ORIENTED : 	 <S> and <Ancestor> have identical types, 	 <S> and <Ancestor> orientations are IDENTICAL. DIFF_ORIENTED : 	 <S> and <Ancestor> have identical types, 	 <S> and <Ancestor> orientations are DIFFERENT.

        :param T:
        :type T: TopOpeBRepDS_Transition &
        :param ST:
        :type ST: TopOpeBRepDS_Kind
        :param S:
        :type S: int
        :param GT:
        :type GT: TopOpeBRepDS_Kind
        :param G:
        :type G: int
        :param GBound:
        :type GBound: bool
        :param C:
        :type C: TopOpeBRepDS_Config
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_ShapeShapeInterference(*args))

    def Config(self, *args):
        """
        :rtype: TopOpeBRepDS_Config

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_Config(self, *args)


    def GBound(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_GBound(self, *args)


    def SetGBound(self, *args):
        """
        :param b:
        :type b: bool
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_SetGBound(self, *args)


    def DumpToString(self):
        """DumpToString(TopOpeBRepDS_ShapeShapeInterference self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_DumpToString(self)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_ShapeShapeInterference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_ShapeShapeInterference self) -> Handle_TopOpeBRepDS_ShapeShapeInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_ShapeShapeInterference.Config = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_Config, None, TopOpeBRepDS_ShapeShapeInterference)
TopOpeBRepDS_ShapeShapeInterference.GBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_GBound, None, TopOpeBRepDS_ShapeShapeInterference)
TopOpeBRepDS_ShapeShapeInterference.SetGBound = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_SetGBound, None, TopOpeBRepDS_ShapeShapeInterference)
TopOpeBRepDS_ShapeShapeInterference.DumpToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_DumpToString, None, TopOpeBRepDS_ShapeShapeInterference)
TopOpeBRepDS_ShapeShapeInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference__kill_pointed, None, TopOpeBRepDS_ShapeShapeInterference)
TopOpeBRepDS_ShapeShapeInterference.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_GetHandle, None, TopOpeBRepDS_ShapeShapeInterference)
TopOpeBRepDS_ShapeShapeInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_ShapeShapeInterference_swigregister
TopOpeBRepDS_ShapeShapeInterference_swigregister(TopOpeBRepDS_ShapeShapeInterference)

class Handle_TopOpeBRepDS_ShapeShapeInterference(Handle_TopOpeBRepDS_Interference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_ShapeShapeInterference(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_ShapeShapeInterference.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_Nullify, None, Handle_TopOpeBRepDS_ShapeShapeInterference)
Handle_TopOpeBRepDS_ShapeShapeInterference.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_IsNull, None, Handle_TopOpeBRepDS_ShapeShapeInterference)
Handle_TopOpeBRepDS_ShapeShapeInterference.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_GetObject, None, Handle_TopOpeBRepDS_ShapeShapeInterference)
Handle_TopOpeBRepDS_ShapeShapeInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference__kill_pointed, None, Handle_TopOpeBRepDS_ShapeShapeInterference)
Handle_TopOpeBRepDS_ShapeShapeInterference_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_swigregister
Handle_TopOpeBRepDS_ShapeShapeInterference_swigregister(Handle_TopOpeBRepDS_ShapeShapeInterference)

def Handle_TopOpeBRepDS_ShapeShapeInterference_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_DownCast(AnObject)
Handle_TopOpeBRepDS_ShapeShapeInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_ShapeShapeInterference_DownCast

class TopOpeBRepDS_SolidSurfaceInterference(TopOpeBRepDS_Interference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Transition:
        :type Transition: TopOpeBRepDS_Transition &
        :param SupportType:
        :type SupportType: TopOpeBRepDS_Kind
        :param Support:
        :type Support: int
        :param GeometryType:
        :type GeometryType: TopOpeBRepDS_Kind
        :param Geometry:
        :type Geometry: int
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_SolidSurfaceInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_SolidSurfaceInterference(*args))

    def DumpToString(self):
        """DumpToString(TopOpeBRepDS_SolidSurfaceInterference self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_SolidSurfaceInterference_DumpToString(self)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_SolidSurfaceInterference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_SolidSurfaceInterference__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_SolidSurfaceInterference self) -> Handle_TopOpeBRepDS_SolidSurfaceInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_SolidSurfaceInterference_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_SolidSurfaceInterference.DumpToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SolidSurfaceInterference_DumpToString, None, TopOpeBRepDS_SolidSurfaceInterference)
TopOpeBRepDS_SolidSurfaceInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SolidSurfaceInterference__kill_pointed, None, TopOpeBRepDS_SolidSurfaceInterference)
TopOpeBRepDS_SolidSurfaceInterference.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SolidSurfaceInterference_GetHandle, None, TopOpeBRepDS_SolidSurfaceInterference)
TopOpeBRepDS_SolidSurfaceInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_SolidSurfaceInterference_swigregister
TopOpeBRepDS_SolidSurfaceInterference_swigregister(TopOpeBRepDS_SolidSurfaceInterference)

class Handle_TopOpeBRepDS_SolidSurfaceInterference(Handle_TopOpeBRepDS_Interference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_SolidSurfaceInterference(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_SolidSurfaceInterference.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_Nullify, None, Handle_TopOpeBRepDS_SolidSurfaceInterference)
Handle_TopOpeBRepDS_SolidSurfaceInterference.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_IsNull, None, Handle_TopOpeBRepDS_SolidSurfaceInterference)
Handle_TopOpeBRepDS_SolidSurfaceInterference.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_GetObject, None, Handle_TopOpeBRepDS_SolidSurfaceInterference)
Handle_TopOpeBRepDS_SolidSurfaceInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference__kill_pointed, None, Handle_TopOpeBRepDS_SolidSurfaceInterference)
Handle_TopOpeBRepDS_SolidSurfaceInterference_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_swigregister
Handle_TopOpeBRepDS_SolidSurfaceInterference_swigregister(Handle_TopOpeBRepDS_SolidSurfaceInterference)

def Handle_TopOpeBRepDS_SolidSurfaceInterference_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_DownCast(AnObject)
Handle_TopOpeBRepDS_SolidSurfaceInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_SolidSurfaceInterference_DownCast

class TopOpeBRepDS_SurfaceCurveInterference(TopOpeBRepDS_Interference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param Transition:
        :type Transition: TopOpeBRepDS_Transition &
        :param SupportType:
        :type SupportType: TopOpeBRepDS_Kind
        :param Support:
        :type Support: int
        :param GeometryType:
        :type GeometryType: TopOpeBRepDS_Kind
        :param Geometry:
        :type Geometry: int
        :param PC:
        :type PC: Handle_Geom2d_Curve &
        :rtype: None

        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_SurfaceCurveInterference(*args))

    def PCurve(self, *args):
        """
        :rtype: Handle_Geom2d_Curve

        :param PC:
        :type PC: Handle_Geom2d_Curve &
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_PCurve(self, *args)


    def DumpPCurve(self, *args):
        """
        :param OS:
        :type OS: Standard_OStream &
        :param compact: default value is Standard_True
        :type compact: bool
        :rtype: Standard_OStream

        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_DumpPCurve(self, *args)


    def DumpToString(self):
        """DumpToString(TopOpeBRepDS_SurfaceCurveInterference self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_DumpToString(self)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_SurfaceCurveInterference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_SurfaceCurveInterference self) -> Handle_TopOpeBRepDS_SurfaceCurveInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_SurfaceCurveInterference.PCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_PCurve, None, TopOpeBRepDS_SurfaceCurveInterference)
TopOpeBRepDS_SurfaceCurveInterference.DumpPCurve = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_DumpPCurve, None, TopOpeBRepDS_SurfaceCurveInterference)
TopOpeBRepDS_SurfaceCurveInterference.DumpToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_DumpToString, None, TopOpeBRepDS_SurfaceCurveInterference)
TopOpeBRepDS_SurfaceCurveInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference__kill_pointed, None, TopOpeBRepDS_SurfaceCurveInterference)
TopOpeBRepDS_SurfaceCurveInterference.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_GetHandle, None, TopOpeBRepDS_SurfaceCurveInterference)
TopOpeBRepDS_SurfaceCurveInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_SurfaceCurveInterference_swigregister
TopOpeBRepDS_SurfaceCurveInterference_swigregister(TopOpeBRepDS_SurfaceCurveInterference)

class Handle_TopOpeBRepDS_SurfaceCurveInterference(Handle_TopOpeBRepDS_Interference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_SurfaceCurveInterference(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_SurfaceCurveInterference.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_Nullify, None, Handle_TopOpeBRepDS_SurfaceCurveInterference)
Handle_TopOpeBRepDS_SurfaceCurveInterference.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_IsNull, None, Handle_TopOpeBRepDS_SurfaceCurveInterference)
Handle_TopOpeBRepDS_SurfaceCurveInterference.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_GetObject, None, Handle_TopOpeBRepDS_SurfaceCurveInterference)
Handle_TopOpeBRepDS_SurfaceCurveInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference__kill_pointed, None, Handle_TopOpeBRepDS_SurfaceCurveInterference)
Handle_TopOpeBRepDS_SurfaceCurveInterference_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_swigregister
Handle_TopOpeBRepDS_SurfaceCurveInterference_swigregister(Handle_TopOpeBRepDS_SurfaceCurveInterference)

def Handle_TopOpeBRepDS_SurfaceCurveInterference_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_DownCast(AnObject)
Handle_TopOpeBRepDS_SurfaceCurveInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_SurfaceCurveInterference_DownCast

class TopOpeBRepDS_SurfaceData(TopOpeBRepDS_GeometryData):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param S:
        :type S: TopOpeBRepDS_Surface &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_SurfaceData_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_SurfaceData(*args))

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_SurfaceData._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceData__kill_pointed, None, TopOpeBRepDS_SurfaceData)
TopOpeBRepDS_SurfaceData_swigregister = _TopOpeBRepDS.TopOpeBRepDS_SurfaceData_swigregister
TopOpeBRepDS_SurfaceData_swigregister(TopOpeBRepDS_SurfaceData)

class TopOpeBRepDS_SurfaceIterator(TopOpeBRepDS_InterferenceIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Creates an iterator on the Surfaces on solid described by the interferences in <L>.

        :param L:
        :type L: TopOpeBRepDS_ListOfInterference &
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_SurfaceIterator(*args))

    def Current(self, *args):
        """
        * Index of the surface in the data structure.

        :rtype: int

        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator_Current(self, *args)


    def Orientation(self, *args):
        """
        :param S:
        :type S: TopAbs_State
        :rtype: TopAbs_Orientation

        """
        return _TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator_Orientation(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_SurfaceIterator.Current = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator_Current, None, TopOpeBRepDS_SurfaceIterator)
TopOpeBRepDS_SurfaceIterator.Orientation = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator_Orientation, None, TopOpeBRepDS_SurfaceIterator)
TopOpeBRepDS_SurfaceIterator._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator__kill_pointed, None, TopOpeBRepDS_SurfaceIterator)
TopOpeBRepDS_SurfaceIterator_swigregister = _TopOpeBRepDS.TopOpeBRepDS_SurfaceIterator_swigregister
TopOpeBRepDS_SurfaceIterator_swigregister(TopOpeBRepDS_SurfaceIterator)

class TopOpeBRepDS_EdgeVertexInterference(TopOpeBRepDS_ShapeShapeInterference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Create an interference of VERTEX <G> on a crossed EDGE E. if support type <ST> == EDGE : <S> is edge E  FACE : <S> is the face with bound E. <T> is the transition along the edge, crossing the crossed edge. E is the crossed edge. <GIsBound> indicates if <G> is a bound of the edge. <P> is the parameter of <G> on the edge. interference is stored in the list of interfs of the edge.

        :param T:
        :type T: TopOpeBRepDS_Transition &
        :param ST:
        :type ST: TopOpeBRepDS_Kind
        :param S:
        :type S: int
        :param G:
        :type G: int
        :param GIsBound:
        :type GIsBound: bool
        :param C:
        :type C: TopOpeBRepDS_Config
        :param P:
        :type P: float
        :rtype: None

        * Create an interference of VERTEX <G> on crossed EDGE <S>. <T> is the transition along the edge, crossing the crossed edge. <S> is the crossed edge. <GIsBound> indicates if <G> is a bound of the edge. <C> indicates the geometric configuration between the edge and the crossed edge. <P> is the parameter of <G> on the edge. interference is stored in the list of interfs of the edge.

        :param T:
        :type T: TopOpeBRepDS_Transition &
        :param S:
        :type S: int
        :param G:
        :type G: int
        :param GIsBound:
        :type GIsBound: bool
        :param C:
        :type C: TopOpeBRepDS_Config
        :param P:
        :type P: float
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_EdgeVertexInterference(*args))

    def Parameter(self, *args):
        """
        :rtype: float

        :param P:
        :type P: float
        :rtype: None

        """
        return _TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference_Parameter(self, *args)


    def DumpToString(self):
        """DumpToString(TopOpeBRepDS_EdgeVertexInterference self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference_DumpToString(self)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_EdgeVertexInterference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_EdgeVertexInterference self) -> Handle_TopOpeBRepDS_EdgeVertexInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_EdgeVertexInterference.Parameter = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference_Parameter, None, TopOpeBRepDS_EdgeVertexInterference)
TopOpeBRepDS_EdgeVertexInterference.DumpToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference_DumpToString, None, TopOpeBRepDS_EdgeVertexInterference)
TopOpeBRepDS_EdgeVertexInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference__kill_pointed, None, TopOpeBRepDS_EdgeVertexInterference)
TopOpeBRepDS_EdgeVertexInterference.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference_GetHandle, None, TopOpeBRepDS_EdgeVertexInterference)
TopOpeBRepDS_EdgeVertexInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_EdgeVertexInterference_swigregister
TopOpeBRepDS_EdgeVertexInterference_swigregister(TopOpeBRepDS_EdgeVertexInterference)

class Handle_TopOpeBRepDS_EdgeVertexInterference(Handle_TopOpeBRepDS_ShapeShapeInterference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_EdgeVertexInterference(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_EdgeVertexInterference.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_Nullify, None, Handle_TopOpeBRepDS_EdgeVertexInterference)
Handle_TopOpeBRepDS_EdgeVertexInterference.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_IsNull, None, Handle_TopOpeBRepDS_EdgeVertexInterference)
Handle_TopOpeBRepDS_EdgeVertexInterference.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_GetObject, None, Handle_TopOpeBRepDS_EdgeVertexInterference)
Handle_TopOpeBRepDS_EdgeVertexInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference__kill_pointed, None, Handle_TopOpeBRepDS_EdgeVertexInterference)
Handle_TopOpeBRepDS_EdgeVertexInterference_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_swigregister
Handle_TopOpeBRepDS_EdgeVertexInterference_swigregister(Handle_TopOpeBRepDS_EdgeVertexInterference)

def Handle_TopOpeBRepDS_EdgeVertexInterference_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_DownCast(AnObject)
Handle_TopOpeBRepDS_EdgeVertexInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_EdgeVertexInterference_DownCast

class TopOpeBRepDS_FaceEdgeInterference(TopOpeBRepDS_ShapeShapeInterference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Create an interference of EDGE <G> on FACE <S>.

        :param T:
        :type T: TopOpeBRepDS_Transition &
        :param S:
        :type S: int
        :param G:
        :type G: int
        :param GIsBound:
        :type GIsBound: bool
        :param C:
        :type C: TopOpeBRepDS_Config
        :rtype: None

        """
        _TopOpeBRepDS.TopOpeBRepDS_FaceEdgeInterference_swiginit(self, _TopOpeBRepDS.new_TopOpeBRepDS_FaceEdgeInterference(*args))

    def DumpToString(self):
        """DumpToString(TopOpeBRepDS_FaceEdgeInterference self) -> std::string"""
        return _TopOpeBRepDS.TopOpeBRepDS_FaceEdgeInterference_DumpToString(self)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepDS_FaceEdgeInterference self)"""
        return _TopOpeBRepDS.TopOpeBRepDS_FaceEdgeInterference__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepDS_FaceEdgeInterference self) -> Handle_TopOpeBRepDS_FaceEdgeInterference"""
        return _TopOpeBRepDS.TopOpeBRepDS_FaceEdgeInterference_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepDS_FaceEdgeInterference.DumpToString = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceEdgeInterference_DumpToString, None, TopOpeBRepDS_FaceEdgeInterference)
TopOpeBRepDS_FaceEdgeInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceEdgeInterference__kill_pointed, None, TopOpeBRepDS_FaceEdgeInterference)
TopOpeBRepDS_FaceEdgeInterference.GetHandle = new_instancemethod(_TopOpeBRepDS.TopOpeBRepDS_FaceEdgeInterference_GetHandle, None, TopOpeBRepDS_FaceEdgeInterference)
TopOpeBRepDS_FaceEdgeInterference_swigregister = _TopOpeBRepDS.TopOpeBRepDS_FaceEdgeInterference_swigregister
TopOpeBRepDS_FaceEdgeInterference_swigregister(TopOpeBRepDS_FaceEdgeInterference)

class Handle_TopOpeBRepDS_FaceEdgeInterference(Handle_TopOpeBRepDS_ShapeShapeInterference):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_swiginit(self, _TopOpeBRepDS.new_Handle_TopOpeBRepDS_FaceEdgeInterference(*args))
    DownCast = staticmethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepDS_FaceEdgeInterference.Nullify = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_Nullify, None, Handle_TopOpeBRepDS_FaceEdgeInterference)
Handle_TopOpeBRepDS_FaceEdgeInterference.IsNull = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_IsNull, None, Handle_TopOpeBRepDS_FaceEdgeInterference)
Handle_TopOpeBRepDS_FaceEdgeInterference.GetObject = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_GetObject, None, Handle_TopOpeBRepDS_FaceEdgeInterference)
Handle_TopOpeBRepDS_FaceEdgeInterference._kill_pointed = new_instancemethod(_TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference__kill_pointed, None, Handle_TopOpeBRepDS_FaceEdgeInterference)
Handle_TopOpeBRepDS_FaceEdgeInterference_swigregister = _TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_swigregister
Handle_TopOpeBRepDS_FaceEdgeInterference_swigregister(Handle_TopOpeBRepDS_FaceEdgeInterference)

def Handle_TopOpeBRepDS_FaceEdgeInterference_DownCast(AnObject):
    return _TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_DownCast(AnObject)
Handle_TopOpeBRepDS_FaceEdgeInterference_DownCast = _TopOpeBRepDS.Handle_TopOpeBRepDS_FaceEdgeInterference_DownCast



