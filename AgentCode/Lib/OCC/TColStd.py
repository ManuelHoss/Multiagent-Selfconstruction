# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _TColStd.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_TColStd', [dirname(__file__)])
        except ImportError:
            import _TColStd
            return _TColStd
        if fp is not None:
            try:
                _mod = imp.load_module('_TColStd', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _TColStd = swig_import_helper()
    del swig_import_helper
else:
    import _TColStd
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TColStd.delete_SwigPyIterator
    def __iter__(self): return self
SwigPyIterator.value = new_instancemethod(_TColStd.SwigPyIterator_value,None,SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_TColStd.SwigPyIterator_incr,None,SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_TColStd.SwigPyIterator_decr,None,SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_TColStd.SwigPyIterator_distance,None,SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_TColStd.SwigPyIterator_equal,None,SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_TColStd.SwigPyIterator_copy,None,SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_TColStd.SwigPyIterator_next,None,SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_TColStd.SwigPyIterator___next__,None,SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_TColStd.SwigPyIterator_previous,None,SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_TColStd.SwigPyIterator_advance,None,SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_TColStd.SwigPyIterator___eq__,None,SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_TColStd.SwigPyIterator___ne__,None,SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_TColStd.SwigPyIterator___iadd__,None,SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_TColStd.SwigPyIterator___isub__,None,SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_TColStd.SwigPyIterator___add__,None,SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_TColStd.SwigPyIterator___sub__,None,SwigPyIterator)
SwigPyIterator_swigregister = _TColStd.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

import OCC.Standard
import OCC.TCollection
import OCC.MMgt
class TColStd_Array1OfAsciiString(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: TCollection_AsciiString &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColStd.TColStd_Array1OfAsciiString_swiginit(self,_TColStd.new_TColStd_Array1OfAsciiString(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: TCollection_AsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfAsciiString_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfAsciiString_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_Array1OfAsciiString_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfAsciiString &
        :rtype: TColStd_Array1OfAsciiString

        """
        return _TColStd.TColStd_Array1OfAsciiString_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfAsciiString &
        :rtype: TColStd_Array1OfAsciiString

        """
        return _TColStd.TColStd_Array1OfAsciiString_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfAsciiString_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfAsciiString_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfAsciiString_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: TCollection_AsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfAsciiString_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_Array1OfAsciiString_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_Array1OfAsciiString_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array1OfAsciiString.Init = new_instancemethod(_TColStd.TColStd_Array1OfAsciiString_Init,None,TColStd_Array1OfAsciiString)
TColStd_Array1OfAsciiString.Destroy = new_instancemethod(_TColStd.TColStd_Array1OfAsciiString_Destroy,None,TColStd_Array1OfAsciiString)
TColStd_Array1OfAsciiString.IsAllocated = new_instancemethod(_TColStd.TColStd_Array1OfAsciiString_IsAllocated,None,TColStd_Array1OfAsciiString)
TColStd_Array1OfAsciiString.Assign = new_instancemethod(_TColStd.TColStd_Array1OfAsciiString_Assign,None,TColStd_Array1OfAsciiString)
TColStd_Array1OfAsciiString.Set = new_instancemethod(_TColStd.TColStd_Array1OfAsciiString_Set,None,TColStd_Array1OfAsciiString)
TColStd_Array1OfAsciiString.Length = new_instancemethod(_TColStd.TColStd_Array1OfAsciiString_Length,None,TColStd_Array1OfAsciiString)
TColStd_Array1OfAsciiString.Lower = new_instancemethod(_TColStd.TColStd_Array1OfAsciiString_Lower,None,TColStd_Array1OfAsciiString)
TColStd_Array1OfAsciiString.Upper = new_instancemethod(_TColStd.TColStd_Array1OfAsciiString_Upper,None,TColStd_Array1OfAsciiString)
TColStd_Array1OfAsciiString.SetValue = new_instancemethod(_TColStd.TColStd_Array1OfAsciiString_SetValue,None,TColStd_Array1OfAsciiString)
TColStd_Array1OfAsciiString.Value = new_instancemethod(_TColStd.TColStd_Array1OfAsciiString_Value,None,TColStd_Array1OfAsciiString)
TColStd_Array1OfAsciiString.ChangeValue = new_instancemethod(_TColStd.TColStd_Array1OfAsciiString_ChangeValue,None,TColStd_Array1OfAsciiString)
TColStd_Array1OfAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_Array1OfAsciiString__kill_pointed,None,TColStd_Array1OfAsciiString)
TColStd_Array1OfAsciiString_swigregister = _TColStd.TColStd_Array1OfAsciiString_swigregister
TColStd_Array1OfAsciiString_swigregister(TColStd_Array1OfAsciiString)

class TColStd_Array1OfBoolean(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: bool
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColStd.TColStd_Array1OfBoolean_swiginit(self,_TColStd.new_TColStd_Array1OfBoolean(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: bool
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfBoolean_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfBoolean_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_Array1OfBoolean_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfBoolean &
        :rtype: TColStd_Array1OfBoolean

        """
        return _TColStd.TColStd_Array1OfBoolean_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfBoolean &
        :rtype: TColStd_Array1OfBoolean

        """
        return _TColStd.TColStd_Array1OfBoolean_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfBoolean_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfBoolean_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfBoolean_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: bool
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfBoolean_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: bool

        """
        return _TColStd.TColStd_Array1OfBoolean_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: bool

        """
        return _TColStd.TColStd_Array1OfBoolean_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array1OfBoolean.Init = new_instancemethod(_TColStd.TColStd_Array1OfBoolean_Init,None,TColStd_Array1OfBoolean)
TColStd_Array1OfBoolean.Destroy = new_instancemethod(_TColStd.TColStd_Array1OfBoolean_Destroy,None,TColStd_Array1OfBoolean)
TColStd_Array1OfBoolean.IsAllocated = new_instancemethod(_TColStd.TColStd_Array1OfBoolean_IsAllocated,None,TColStd_Array1OfBoolean)
TColStd_Array1OfBoolean.Assign = new_instancemethod(_TColStd.TColStd_Array1OfBoolean_Assign,None,TColStd_Array1OfBoolean)
TColStd_Array1OfBoolean.Set = new_instancemethod(_TColStd.TColStd_Array1OfBoolean_Set,None,TColStd_Array1OfBoolean)
TColStd_Array1OfBoolean.Length = new_instancemethod(_TColStd.TColStd_Array1OfBoolean_Length,None,TColStd_Array1OfBoolean)
TColStd_Array1OfBoolean.Lower = new_instancemethod(_TColStd.TColStd_Array1OfBoolean_Lower,None,TColStd_Array1OfBoolean)
TColStd_Array1OfBoolean.Upper = new_instancemethod(_TColStd.TColStd_Array1OfBoolean_Upper,None,TColStd_Array1OfBoolean)
TColStd_Array1OfBoolean.SetValue = new_instancemethod(_TColStd.TColStd_Array1OfBoolean_SetValue,None,TColStd_Array1OfBoolean)
TColStd_Array1OfBoolean.Value = new_instancemethod(_TColStd.TColStd_Array1OfBoolean_Value,None,TColStd_Array1OfBoolean)
TColStd_Array1OfBoolean.ChangeValue = new_instancemethod(_TColStd.TColStd_Array1OfBoolean_ChangeValue,None,TColStd_Array1OfBoolean)
TColStd_Array1OfBoolean._kill_pointed = new_instancemethod(_TColStd.TColStd_Array1OfBoolean__kill_pointed,None,TColStd_Array1OfBoolean)
TColStd_Array1OfBoolean_swigregister = _TColStd.TColStd_Array1OfBoolean_swigregister
TColStd_Array1OfBoolean_swigregister(TColStd_Array1OfBoolean)

class TColStd_Array1OfByte(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Standard_Byte &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColStd.TColStd_Array1OfByte_swiginit(self,_TColStd.new_TColStd_Array1OfByte(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Standard_Byte &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfByte_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfByte_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_Array1OfByte_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfByte &
        :rtype: TColStd_Array1OfByte

        """
        return _TColStd.TColStd_Array1OfByte_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfByte &
        :rtype: TColStd_Array1OfByte

        """
        return _TColStd.TColStd_Array1OfByte_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfByte_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfByte_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfByte_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Standard_Byte &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfByte_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_Byte

        """
        return _TColStd.TColStd_Array1OfByte_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_Byte

        """
        return _TColStd.TColStd_Array1OfByte_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array1OfByte.Init = new_instancemethod(_TColStd.TColStd_Array1OfByte_Init,None,TColStd_Array1OfByte)
TColStd_Array1OfByte.Destroy = new_instancemethod(_TColStd.TColStd_Array1OfByte_Destroy,None,TColStd_Array1OfByte)
TColStd_Array1OfByte.IsAllocated = new_instancemethod(_TColStd.TColStd_Array1OfByte_IsAllocated,None,TColStd_Array1OfByte)
TColStd_Array1OfByte.Assign = new_instancemethod(_TColStd.TColStd_Array1OfByte_Assign,None,TColStd_Array1OfByte)
TColStd_Array1OfByte.Set = new_instancemethod(_TColStd.TColStd_Array1OfByte_Set,None,TColStd_Array1OfByte)
TColStd_Array1OfByte.Length = new_instancemethod(_TColStd.TColStd_Array1OfByte_Length,None,TColStd_Array1OfByte)
TColStd_Array1OfByte.Lower = new_instancemethod(_TColStd.TColStd_Array1OfByte_Lower,None,TColStd_Array1OfByte)
TColStd_Array1OfByte.Upper = new_instancemethod(_TColStd.TColStd_Array1OfByte_Upper,None,TColStd_Array1OfByte)
TColStd_Array1OfByte.SetValue = new_instancemethod(_TColStd.TColStd_Array1OfByte_SetValue,None,TColStd_Array1OfByte)
TColStd_Array1OfByte.Value = new_instancemethod(_TColStd.TColStd_Array1OfByte_Value,None,TColStd_Array1OfByte)
TColStd_Array1OfByte.ChangeValue = new_instancemethod(_TColStd.TColStd_Array1OfByte_ChangeValue,None,TColStd_Array1OfByte)
TColStd_Array1OfByte._kill_pointed = new_instancemethod(_TColStd.TColStd_Array1OfByte__kill_pointed,None,TColStd_Array1OfByte)
TColStd_Array1OfByte_swigregister = _TColStd.TColStd_Array1OfByte_swigregister
TColStd_Array1OfByte_swigregister(TColStd_Array1OfByte)

class TColStd_Array1OfCharacter(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Standard_Character &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColStd.TColStd_Array1OfCharacter_swiginit(self,_TColStd.new_TColStd_Array1OfCharacter(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Standard_Character &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfCharacter_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfCharacter_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_Array1OfCharacter_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfCharacter &
        :rtype: TColStd_Array1OfCharacter

        """
        return _TColStd.TColStd_Array1OfCharacter_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfCharacter &
        :rtype: TColStd_Array1OfCharacter

        """
        return _TColStd.TColStd_Array1OfCharacter_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfCharacter_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfCharacter_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfCharacter_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Standard_Character &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfCharacter_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_Character

        """
        return _TColStd.TColStd_Array1OfCharacter_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_Character

        """
        return _TColStd.TColStd_Array1OfCharacter_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array1OfCharacter.Init = new_instancemethod(_TColStd.TColStd_Array1OfCharacter_Init,None,TColStd_Array1OfCharacter)
TColStd_Array1OfCharacter.Destroy = new_instancemethod(_TColStd.TColStd_Array1OfCharacter_Destroy,None,TColStd_Array1OfCharacter)
TColStd_Array1OfCharacter.IsAllocated = new_instancemethod(_TColStd.TColStd_Array1OfCharacter_IsAllocated,None,TColStd_Array1OfCharacter)
TColStd_Array1OfCharacter.Assign = new_instancemethod(_TColStd.TColStd_Array1OfCharacter_Assign,None,TColStd_Array1OfCharacter)
TColStd_Array1OfCharacter.Set = new_instancemethod(_TColStd.TColStd_Array1OfCharacter_Set,None,TColStd_Array1OfCharacter)
TColStd_Array1OfCharacter.Length = new_instancemethod(_TColStd.TColStd_Array1OfCharacter_Length,None,TColStd_Array1OfCharacter)
TColStd_Array1OfCharacter.Lower = new_instancemethod(_TColStd.TColStd_Array1OfCharacter_Lower,None,TColStd_Array1OfCharacter)
TColStd_Array1OfCharacter.Upper = new_instancemethod(_TColStd.TColStd_Array1OfCharacter_Upper,None,TColStd_Array1OfCharacter)
TColStd_Array1OfCharacter.SetValue = new_instancemethod(_TColStd.TColStd_Array1OfCharacter_SetValue,None,TColStd_Array1OfCharacter)
TColStd_Array1OfCharacter.Value = new_instancemethod(_TColStd.TColStd_Array1OfCharacter_Value,None,TColStd_Array1OfCharacter)
TColStd_Array1OfCharacter.ChangeValue = new_instancemethod(_TColStd.TColStd_Array1OfCharacter_ChangeValue,None,TColStd_Array1OfCharacter)
TColStd_Array1OfCharacter._kill_pointed = new_instancemethod(_TColStd.TColStd_Array1OfCharacter__kill_pointed,None,TColStd_Array1OfCharacter)
TColStd_Array1OfCharacter_swigregister = _TColStd.TColStd_Array1OfCharacter_swigregister
TColStd_Array1OfCharacter_swigregister(TColStd_Array1OfCharacter)

class TColStd_Array1OfExtendedString(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: TCollection_ExtendedString &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColStd.TColStd_Array1OfExtendedString_swiginit(self,_TColStd.new_TColStd_Array1OfExtendedString(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: TCollection_ExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfExtendedString_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfExtendedString_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_Array1OfExtendedString_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfExtendedString &
        :rtype: TColStd_Array1OfExtendedString

        """
        return _TColStd.TColStd_Array1OfExtendedString_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfExtendedString &
        :rtype: TColStd_Array1OfExtendedString

        """
        return _TColStd.TColStd_Array1OfExtendedString_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfExtendedString_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfExtendedString_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfExtendedString_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: TCollection_ExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfExtendedString_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_Array1OfExtendedString_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_Array1OfExtendedString_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array1OfExtendedString.Init = new_instancemethod(_TColStd.TColStd_Array1OfExtendedString_Init,None,TColStd_Array1OfExtendedString)
TColStd_Array1OfExtendedString.Destroy = new_instancemethod(_TColStd.TColStd_Array1OfExtendedString_Destroy,None,TColStd_Array1OfExtendedString)
TColStd_Array1OfExtendedString.IsAllocated = new_instancemethod(_TColStd.TColStd_Array1OfExtendedString_IsAllocated,None,TColStd_Array1OfExtendedString)
TColStd_Array1OfExtendedString.Assign = new_instancemethod(_TColStd.TColStd_Array1OfExtendedString_Assign,None,TColStd_Array1OfExtendedString)
TColStd_Array1OfExtendedString.Set = new_instancemethod(_TColStd.TColStd_Array1OfExtendedString_Set,None,TColStd_Array1OfExtendedString)
TColStd_Array1OfExtendedString.Length = new_instancemethod(_TColStd.TColStd_Array1OfExtendedString_Length,None,TColStd_Array1OfExtendedString)
TColStd_Array1OfExtendedString.Lower = new_instancemethod(_TColStd.TColStd_Array1OfExtendedString_Lower,None,TColStd_Array1OfExtendedString)
TColStd_Array1OfExtendedString.Upper = new_instancemethod(_TColStd.TColStd_Array1OfExtendedString_Upper,None,TColStd_Array1OfExtendedString)
TColStd_Array1OfExtendedString.SetValue = new_instancemethod(_TColStd.TColStd_Array1OfExtendedString_SetValue,None,TColStd_Array1OfExtendedString)
TColStd_Array1OfExtendedString.Value = new_instancemethod(_TColStd.TColStd_Array1OfExtendedString_Value,None,TColStd_Array1OfExtendedString)
TColStd_Array1OfExtendedString.ChangeValue = new_instancemethod(_TColStd.TColStd_Array1OfExtendedString_ChangeValue,None,TColStd_Array1OfExtendedString)
TColStd_Array1OfExtendedString._kill_pointed = new_instancemethod(_TColStd.TColStd_Array1OfExtendedString__kill_pointed,None,TColStd_Array1OfExtendedString)
TColStd_Array1OfExtendedString_swigregister = _TColStd.TColStd_Array1OfExtendedString_swigregister
TColStd_Array1OfExtendedString_swigregister(TColStd_Array1OfExtendedString)

class TColStd_Array1OfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: int &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColStd.TColStd_Array1OfInteger_swiginit(self,_TColStd.new_TColStd_Array1OfInteger(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: int &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfInteger_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfInteger_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_Array1OfInteger_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfInteger &
        :rtype: TColStd_Array1OfInteger

        """
        return _TColStd.TColStd_Array1OfInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfInteger &
        :rtype: TColStd_Array1OfInteger

        """
        return _TColStd.TColStd_Array1OfInteger_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfInteger_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfInteger_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfInteger_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: int &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfInteger_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfInteger_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfInteger_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array1OfInteger.Init = new_instancemethod(_TColStd.TColStd_Array1OfInteger_Init,None,TColStd_Array1OfInteger)
TColStd_Array1OfInteger.Destroy = new_instancemethod(_TColStd.TColStd_Array1OfInteger_Destroy,None,TColStd_Array1OfInteger)
TColStd_Array1OfInteger.IsAllocated = new_instancemethod(_TColStd.TColStd_Array1OfInteger_IsAllocated,None,TColStd_Array1OfInteger)
TColStd_Array1OfInteger.Assign = new_instancemethod(_TColStd.TColStd_Array1OfInteger_Assign,None,TColStd_Array1OfInteger)
TColStd_Array1OfInteger.Set = new_instancemethod(_TColStd.TColStd_Array1OfInteger_Set,None,TColStd_Array1OfInteger)
TColStd_Array1OfInteger.Length = new_instancemethod(_TColStd.TColStd_Array1OfInteger_Length,None,TColStd_Array1OfInteger)
TColStd_Array1OfInteger.Lower = new_instancemethod(_TColStd.TColStd_Array1OfInteger_Lower,None,TColStd_Array1OfInteger)
TColStd_Array1OfInteger.Upper = new_instancemethod(_TColStd.TColStd_Array1OfInteger_Upper,None,TColStd_Array1OfInteger)
TColStd_Array1OfInteger.SetValue = new_instancemethod(_TColStd.TColStd_Array1OfInteger_SetValue,None,TColStd_Array1OfInteger)
TColStd_Array1OfInteger.Value = new_instancemethod(_TColStd.TColStd_Array1OfInteger_Value,None,TColStd_Array1OfInteger)
TColStd_Array1OfInteger.ChangeValue = new_instancemethod(_TColStd.TColStd_Array1OfInteger_ChangeValue,None,TColStd_Array1OfInteger)
TColStd_Array1OfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_Array1OfInteger__kill_pointed,None,TColStd_Array1OfInteger)
TColStd_Array1OfInteger_swigregister = _TColStd.TColStd_Array1OfInteger_swigregister
TColStd_Array1OfInteger_swigregister(TColStd_Array1OfInteger)

class TColStd_Array1OfListOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: TColStd_ListOfInteger &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColStd.TColStd_Array1OfListOfInteger_swiginit(self,_TColStd.new_TColStd_Array1OfListOfInteger(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: TColStd_ListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfListOfInteger_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfListOfInteger_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_Array1OfListOfInteger_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfListOfInteger &
        :rtype: TColStd_Array1OfListOfInteger

        """
        return _TColStd.TColStd_Array1OfListOfInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfListOfInteger &
        :rtype: TColStd_Array1OfListOfInteger

        """
        return _TColStd.TColStd_Array1OfListOfInteger_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfListOfInteger_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfListOfInteger_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfListOfInteger_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: TColStd_ListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfListOfInteger_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TColStd_ListOfInteger

        """
        return _TColStd.TColStd_Array1OfListOfInteger_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TColStd_ListOfInteger

        """
        return _TColStd.TColStd_Array1OfListOfInteger_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array1OfListOfInteger.Init = new_instancemethod(_TColStd.TColStd_Array1OfListOfInteger_Init,None,TColStd_Array1OfListOfInteger)
TColStd_Array1OfListOfInteger.Destroy = new_instancemethod(_TColStd.TColStd_Array1OfListOfInteger_Destroy,None,TColStd_Array1OfListOfInteger)
TColStd_Array1OfListOfInteger.IsAllocated = new_instancemethod(_TColStd.TColStd_Array1OfListOfInteger_IsAllocated,None,TColStd_Array1OfListOfInteger)
TColStd_Array1OfListOfInteger.Assign = new_instancemethod(_TColStd.TColStd_Array1OfListOfInteger_Assign,None,TColStd_Array1OfListOfInteger)
TColStd_Array1OfListOfInteger.Set = new_instancemethod(_TColStd.TColStd_Array1OfListOfInteger_Set,None,TColStd_Array1OfListOfInteger)
TColStd_Array1OfListOfInteger.Length = new_instancemethod(_TColStd.TColStd_Array1OfListOfInteger_Length,None,TColStd_Array1OfListOfInteger)
TColStd_Array1OfListOfInteger.Lower = new_instancemethod(_TColStd.TColStd_Array1OfListOfInteger_Lower,None,TColStd_Array1OfListOfInteger)
TColStd_Array1OfListOfInteger.Upper = new_instancemethod(_TColStd.TColStd_Array1OfListOfInteger_Upper,None,TColStd_Array1OfListOfInteger)
TColStd_Array1OfListOfInteger.SetValue = new_instancemethod(_TColStd.TColStd_Array1OfListOfInteger_SetValue,None,TColStd_Array1OfListOfInteger)
TColStd_Array1OfListOfInteger.Value = new_instancemethod(_TColStd.TColStd_Array1OfListOfInteger_Value,None,TColStd_Array1OfListOfInteger)
TColStd_Array1OfListOfInteger.ChangeValue = new_instancemethod(_TColStd.TColStd_Array1OfListOfInteger_ChangeValue,None,TColStd_Array1OfListOfInteger)
TColStd_Array1OfListOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_Array1OfListOfInteger__kill_pointed,None,TColStd_Array1OfListOfInteger)
TColStd_Array1OfListOfInteger_swigregister = _TColStd.TColStd_Array1OfListOfInteger_swigregister
TColStd_Array1OfListOfInteger_swigregister(TColStd_Array1OfListOfInteger)

class TColStd_Array1OfReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: float &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColStd.TColStd_Array1OfReal_swiginit(self,_TColStd.new_TColStd_Array1OfReal(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: float &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfReal_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfReal_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_Array1OfReal_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfReal &
        :rtype: TColStd_Array1OfReal

        """
        return _TColStd.TColStd_Array1OfReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfReal &
        :rtype: TColStd_Array1OfReal

        """
        return _TColStd.TColStd_Array1OfReal_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfReal_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfReal_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfReal_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: float &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfReal_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: float

        """
        return _TColStd.TColStd_Array1OfReal_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: float

        """
        return _TColStd.TColStd_Array1OfReal_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array1OfReal.Init = new_instancemethod(_TColStd.TColStd_Array1OfReal_Init,None,TColStd_Array1OfReal)
TColStd_Array1OfReal.Destroy = new_instancemethod(_TColStd.TColStd_Array1OfReal_Destroy,None,TColStd_Array1OfReal)
TColStd_Array1OfReal.IsAllocated = new_instancemethod(_TColStd.TColStd_Array1OfReal_IsAllocated,None,TColStd_Array1OfReal)
TColStd_Array1OfReal.Assign = new_instancemethod(_TColStd.TColStd_Array1OfReal_Assign,None,TColStd_Array1OfReal)
TColStd_Array1OfReal.Set = new_instancemethod(_TColStd.TColStd_Array1OfReal_Set,None,TColStd_Array1OfReal)
TColStd_Array1OfReal.Length = new_instancemethod(_TColStd.TColStd_Array1OfReal_Length,None,TColStd_Array1OfReal)
TColStd_Array1OfReal.Lower = new_instancemethod(_TColStd.TColStd_Array1OfReal_Lower,None,TColStd_Array1OfReal)
TColStd_Array1OfReal.Upper = new_instancemethod(_TColStd.TColStd_Array1OfReal_Upper,None,TColStd_Array1OfReal)
TColStd_Array1OfReal.SetValue = new_instancemethod(_TColStd.TColStd_Array1OfReal_SetValue,None,TColStd_Array1OfReal)
TColStd_Array1OfReal.Value = new_instancemethod(_TColStd.TColStd_Array1OfReal_Value,None,TColStd_Array1OfReal)
TColStd_Array1OfReal.ChangeValue = new_instancemethod(_TColStd.TColStd_Array1OfReal_ChangeValue,None,TColStd_Array1OfReal)
TColStd_Array1OfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_Array1OfReal__kill_pointed,None,TColStd_Array1OfReal)
TColStd_Array1OfReal_swigregister = _TColStd.TColStd_Array1OfReal_swigregister
TColStd_Array1OfReal_swigregister(TColStd_Array1OfReal)

class TColStd_Array1OfTransient(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Handle_Standard_Transient &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColStd.TColStd_Array1OfTransient_swiginit(self,_TColStd.new_TColStd_Array1OfTransient(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfTransient_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfTransient_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_Array1OfTransient_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfTransient &
        :rtype: TColStd_Array1OfTransient

        """
        return _TColStd.TColStd_Array1OfTransient_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array1OfTransient &
        :rtype: TColStd_Array1OfTransient

        """
        return _TColStd.TColStd_Array1OfTransient_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfTransient_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfTransient_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array1OfTransient_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_Array1OfTransient_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_Array1OfTransient_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_Array1OfTransient_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array1OfTransient.Init = new_instancemethod(_TColStd.TColStd_Array1OfTransient_Init,None,TColStd_Array1OfTransient)
TColStd_Array1OfTransient.Destroy = new_instancemethod(_TColStd.TColStd_Array1OfTransient_Destroy,None,TColStd_Array1OfTransient)
TColStd_Array1OfTransient.IsAllocated = new_instancemethod(_TColStd.TColStd_Array1OfTransient_IsAllocated,None,TColStd_Array1OfTransient)
TColStd_Array1OfTransient.Assign = new_instancemethod(_TColStd.TColStd_Array1OfTransient_Assign,None,TColStd_Array1OfTransient)
TColStd_Array1OfTransient.Set = new_instancemethod(_TColStd.TColStd_Array1OfTransient_Set,None,TColStd_Array1OfTransient)
TColStd_Array1OfTransient.Length = new_instancemethod(_TColStd.TColStd_Array1OfTransient_Length,None,TColStd_Array1OfTransient)
TColStd_Array1OfTransient.Lower = new_instancemethod(_TColStd.TColStd_Array1OfTransient_Lower,None,TColStd_Array1OfTransient)
TColStd_Array1OfTransient.Upper = new_instancemethod(_TColStd.TColStd_Array1OfTransient_Upper,None,TColStd_Array1OfTransient)
TColStd_Array1OfTransient.SetValue = new_instancemethod(_TColStd.TColStd_Array1OfTransient_SetValue,None,TColStd_Array1OfTransient)
TColStd_Array1OfTransient.Value = new_instancemethod(_TColStd.TColStd_Array1OfTransient_Value,None,TColStd_Array1OfTransient)
TColStd_Array1OfTransient.ChangeValue = new_instancemethod(_TColStd.TColStd_Array1OfTransient_ChangeValue,None,TColStd_Array1OfTransient)
TColStd_Array1OfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_Array1OfTransient__kill_pointed,None,TColStd_Array1OfTransient)
TColStd_Array1OfTransient_swigregister = _TColStd.TColStd_Array1OfTransient_swigregister
TColStd_Array1OfTransient_swigregister(TColStd_Array1OfTransient)

class TColStd_Array2OfBoolean(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: bool
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColStd.TColStd_Array2OfBoolean_swiginit(self,_TColStd.new_TColStd_Array2OfBoolean(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: bool
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfBoolean_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfBoolean_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array2OfBoolean &
        :rtype: TColStd_Array2OfBoolean

        """
        return _TColStd.TColStd_Array2OfBoolean_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array2OfBoolean &
        :rtype: TColStd_Array2OfBoolean

        """
        return _TColStd.TColStd_Array2OfBoolean_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfBoolean_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfBoolean_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfBoolean_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfBoolean_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfBoolean_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfBoolean_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: bool
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfBoolean_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: bool

        """
        return _TColStd.TColStd_Array2OfBoolean_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: bool

        """
        return _TColStd.TColStd_Array2OfBoolean_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array2OfBoolean.Init = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_Init,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean.Destroy = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_Destroy,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean.Assign = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_Assign,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean.Set = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_Set,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean.ColLength = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_ColLength,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean.RowLength = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_RowLength,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean.LowerCol = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_LowerCol,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean.LowerRow = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_LowerRow,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean.UpperCol = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_UpperCol,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean.UpperRow = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_UpperRow,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean.SetValue = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_SetValue,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean.Value = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_Value,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean.ChangeValue = new_instancemethod(_TColStd.TColStd_Array2OfBoolean_ChangeValue,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean._kill_pointed = new_instancemethod(_TColStd.TColStd_Array2OfBoolean__kill_pointed,None,TColStd_Array2OfBoolean)
TColStd_Array2OfBoolean_swigregister = _TColStd.TColStd_Array2OfBoolean_swigregister
TColStd_Array2OfBoolean_swigregister(TColStd_Array2OfBoolean)

class TColStd_Array2OfCharacter(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: Standard_Character &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColStd.TColStd_Array2OfCharacter_swiginit(self,_TColStd.new_TColStd_Array2OfCharacter(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Standard_Character &
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfCharacter_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfCharacter_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array2OfCharacter &
        :rtype: TColStd_Array2OfCharacter

        """
        return _TColStd.TColStd_Array2OfCharacter_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array2OfCharacter &
        :rtype: TColStd_Array2OfCharacter

        """
        return _TColStd.TColStd_Array2OfCharacter_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfCharacter_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfCharacter_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfCharacter_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfCharacter_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfCharacter_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfCharacter_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Standard_Character &
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfCharacter_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Standard_Character

        """
        return _TColStd.TColStd_Array2OfCharacter_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Standard_Character

        """
        return _TColStd.TColStd_Array2OfCharacter_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array2OfCharacter.Init = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_Init,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter.Destroy = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_Destroy,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter.Assign = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_Assign,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter.Set = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_Set,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter.ColLength = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_ColLength,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter.RowLength = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_RowLength,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter.LowerCol = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_LowerCol,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter.LowerRow = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_LowerRow,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter.UpperCol = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_UpperCol,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter.UpperRow = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_UpperRow,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter.SetValue = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_SetValue,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter.Value = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_Value,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter.ChangeValue = new_instancemethod(_TColStd.TColStd_Array2OfCharacter_ChangeValue,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter._kill_pointed = new_instancemethod(_TColStd.TColStd_Array2OfCharacter__kill_pointed,None,TColStd_Array2OfCharacter)
TColStd_Array2OfCharacter_swigregister = _TColStd.TColStd_Array2OfCharacter_swigregister
TColStd_Array2OfCharacter_swigregister(TColStd_Array2OfCharacter)

class TColStd_Array2OfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: int &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColStd.TColStd_Array2OfInteger_swiginit(self,_TColStd.new_TColStd_Array2OfInteger(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: int &
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfInteger_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfInteger_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array2OfInteger &
        :rtype: TColStd_Array2OfInteger

        """
        return _TColStd.TColStd_Array2OfInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array2OfInteger &
        :rtype: TColStd_Array2OfInteger

        """
        return _TColStd.TColStd_Array2OfInteger_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfInteger_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfInteger_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfInteger_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfInteger_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfInteger_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfInteger_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: int &
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfInteger_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfInteger_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfInteger_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array2OfInteger.Init = new_instancemethod(_TColStd.TColStd_Array2OfInteger_Init,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger.Destroy = new_instancemethod(_TColStd.TColStd_Array2OfInteger_Destroy,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger.Assign = new_instancemethod(_TColStd.TColStd_Array2OfInteger_Assign,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger.Set = new_instancemethod(_TColStd.TColStd_Array2OfInteger_Set,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger.ColLength = new_instancemethod(_TColStd.TColStd_Array2OfInteger_ColLength,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger.RowLength = new_instancemethod(_TColStd.TColStd_Array2OfInteger_RowLength,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger.LowerCol = new_instancemethod(_TColStd.TColStd_Array2OfInteger_LowerCol,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger.LowerRow = new_instancemethod(_TColStd.TColStd_Array2OfInteger_LowerRow,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger.UpperCol = new_instancemethod(_TColStd.TColStd_Array2OfInteger_UpperCol,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger.UpperRow = new_instancemethod(_TColStd.TColStd_Array2OfInteger_UpperRow,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger.SetValue = new_instancemethod(_TColStd.TColStd_Array2OfInteger_SetValue,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger.Value = new_instancemethod(_TColStd.TColStd_Array2OfInteger_Value,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger.ChangeValue = new_instancemethod(_TColStd.TColStd_Array2OfInteger_ChangeValue,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_Array2OfInteger__kill_pointed,None,TColStd_Array2OfInteger)
TColStd_Array2OfInteger_swigregister = _TColStd.TColStd_Array2OfInteger_swigregister
TColStd_Array2OfInteger_swigregister(TColStd_Array2OfInteger)

class TColStd_Array2OfReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: float &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColStd.TColStd_Array2OfReal_swiginit(self,_TColStd.new_TColStd_Array2OfReal(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: float &
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfReal_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfReal_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array2OfReal &
        :rtype: TColStd_Array2OfReal

        """
        return _TColStd.TColStd_Array2OfReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array2OfReal &
        :rtype: TColStd_Array2OfReal

        """
        return _TColStd.TColStd_Array2OfReal_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfReal_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfReal_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfReal_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfReal_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfReal_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfReal_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: float &
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfReal_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: float

        """
        return _TColStd.TColStd_Array2OfReal_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: float

        """
        return _TColStd.TColStd_Array2OfReal_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array2OfReal.Init = new_instancemethod(_TColStd.TColStd_Array2OfReal_Init,None,TColStd_Array2OfReal)
TColStd_Array2OfReal.Destroy = new_instancemethod(_TColStd.TColStd_Array2OfReal_Destroy,None,TColStd_Array2OfReal)
TColStd_Array2OfReal.Assign = new_instancemethod(_TColStd.TColStd_Array2OfReal_Assign,None,TColStd_Array2OfReal)
TColStd_Array2OfReal.Set = new_instancemethod(_TColStd.TColStd_Array2OfReal_Set,None,TColStd_Array2OfReal)
TColStd_Array2OfReal.ColLength = new_instancemethod(_TColStd.TColStd_Array2OfReal_ColLength,None,TColStd_Array2OfReal)
TColStd_Array2OfReal.RowLength = new_instancemethod(_TColStd.TColStd_Array2OfReal_RowLength,None,TColStd_Array2OfReal)
TColStd_Array2OfReal.LowerCol = new_instancemethod(_TColStd.TColStd_Array2OfReal_LowerCol,None,TColStd_Array2OfReal)
TColStd_Array2OfReal.LowerRow = new_instancemethod(_TColStd.TColStd_Array2OfReal_LowerRow,None,TColStd_Array2OfReal)
TColStd_Array2OfReal.UpperCol = new_instancemethod(_TColStd.TColStd_Array2OfReal_UpperCol,None,TColStd_Array2OfReal)
TColStd_Array2OfReal.UpperRow = new_instancemethod(_TColStd.TColStd_Array2OfReal_UpperRow,None,TColStd_Array2OfReal)
TColStd_Array2OfReal.SetValue = new_instancemethod(_TColStd.TColStd_Array2OfReal_SetValue,None,TColStd_Array2OfReal)
TColStd_Array2OfReal.Value = new_instancemethod(_TColStd.TColStd_Array2OfReal_Value,None,TColStd_Array2OfReal)
TColStd_Array2OfReal.ChangeValue = new_instancemethod(_TColStd.TColStd_Array2OfReal_ChangeValue,None,TColStd_Array2OfReal)
TColStd_Array2OfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_Array2OfReal__kill_pointed,None,TColStd_Array2OfReal)
TColStd_Array2OfReal_swigregister = _TColStd.TColStd_Array2OfReal_swigregister
TColStd_Array2OfReal_swigregister(TColStd_Array2OfReal)

class TColStd_Array2OfTransient(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: Handle_Standard_Transient &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColStd.TColStd_Array2OfTransient_swiginit(self,_TColStd.new_TColStd_Array2OfTransient(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfTransient_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfTransient_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array2OfTransient &
        :rtype: TColStd_Array2OfTransient

        """
        return _TColStd.TColStd_Array2OfTransient_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_Array2OfTransient &
        :rtype: TColStd_Array2OfTransient

        """
        return _TColStd.TColStd_Array2OfTransient_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfTransient_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfTransient_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfTransient_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfTransient_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfTransient_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_Array2OfTransient_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_Array2OfTransient_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_Array2OfTransient_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_Array2OfTransient_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_Array2OfTransient.Init = new_instancemethod(_TColStd.TColStd_Array2OfTransient_Init,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient.Destroy = new_instancemethod(_TColStd.TColStd_Array2OfTransient_Destroy,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient.Assign = new_instancemethod(_TColStd.TColStd_Array2OfTransient_Assign,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient.Set = new_instancemethod(_TColStd.TColStd_Array2OfTransient_Set,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient.ColLength = new_instancemethod(_TColStd.TColStd_Array2OfTransient_ColLength,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient.RowLength = new_instancemethod(_TColStd.TColStd_Array2OfTransient_RowLength,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient.LowerCol = new_instancemethod(_TColStd.TColStd_Array2OfTransient_LowerCol,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient.LowerRow = new_instancemethod(_TColStd.TColStd_Array2OfTransient_LowerRow,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient.UpperCol = new_instancemethod(_TColStd.TColStd_Array2OfTransient_UpperCol,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient.UpperRow = new_instancemethod(_TColStd.TColStd_Array2OfTransient_UpperRow,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient.SetValue = new_instancemethod(_TColStd.TColStd_Array2OfTransient_SetValue,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient.Value = new_instancemethod(_TColStd.TColStd_Array2OfTransient_Value,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient.ChangeValue = new_instancemethod(_TColStd.TColStd_Array2OfTransient_ChangeValue,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_Array2OfTransient__kill_pointed,None,TColStd_Array2OfTransient)
TColStd_Array2OfTransient_swigregister = _TColStd.TColStd_Array2OfTransient_swigregister
TColStd_Array2OfTransient_swigregister(TColStd_Array2OfTransient)

class TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TColStd_DataMapOfAsciiStringInteger &
        :rtype: None

        """
        _TColStd.TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger_swiginit(self,_TColStd.new_TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TColStd_DataMapOfAsciiStringInteger &
        :rtype: None

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger.Initialize = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger_Initialize,None,TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger)
TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger.Key = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger_Key,None,TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger)
TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger.Value = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger_Value,None,TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger)
TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger__kill_pointed,None,TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger)
TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger_swigregister = _TColStd.TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger_swigregister
TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger_swigregister(TColStd_DataMapIteratorOfDataMapOfAsciiStringInteger)

class TColStd_DataMapIteratorOfDataMapOfIntegerInteger(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TColStd_DataMapOfIntegerInteger &
        :rtype: None

        """
        _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerInteger_swiginit(self,_TColStd.new_TColStd_DataMapIteratorOfDataMapOfIntegerInteger(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TColStd_DataMapOfIntegerInteger &
        :rtype: None

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerInteger_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerInteger_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerInteger_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapIteratorOfDataMapOfIntegerInteger.Initialize = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerInteger_Initialize,None,TColStd_DataMapIteratorOfDataMapOfIntegerInteger)
TColStd_DataMapIteratorOfDataMapOfIntegerInteger.Key = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerInteger_Key,None,TColStd_DataMapIteratorOfDataMapOfIntegerInteger)
TColStd_DataMapIteratorOfDataMapOfIntegerInteger.Value = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerInteger_Value,None,TColStd_DataMapIteratorOfDataMapOfIntegerInteger)
TColStd_DataMapIteratorOfDataMapOfIntegerInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerInteger__kill_pointed,None,TColStd_DataMapIteratorOfDataMapOfIntegerInteger)
TColStd_DataMapIteratorOfDataMapOfIntegerInteger_swigregister = _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerInteger_swigregister
TColStd_DataMapIteratorOfDataMapOfIntegerInteger_swigregister(TColStd_DataMapIteratorOfDataMapOfIntegerInteger)

class TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TColStd_DataMapOfIntegerListOfInteger &
        :rtype: None

        """
        _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger_swiginit(self,_TColStd.new_TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TColStd_DataMapOfIntegerListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TColStd_ListOfInteger

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger.Initialize = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger_Initialize,None,TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger)
TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger.Key = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger_Key,None,TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger)
TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger.Value = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger_Value,None,TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger)
TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger__kill_pointed,None,TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger)
TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger_swigregister = _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger_swigregister
TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger_swigregister(TColStd_DataMapIteratorOfDataMapOfIntegerListOfInteger)

class TColStd_DataMapIteratorOfDataMapOfIntegerReal(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TColStd_DataMapOfIntegerReal &
        :rtype: None

        """
        _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerReal_swiginit(self,_TColStd.new_TColStd_DataMapIteratorOfDataMapOfIntegerReal(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TColStd_DataMapOfIntegerReal &
        :rtype: None

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerReal_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerReal_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: float

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerReal_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapIteratorOfDataMapOfIntegerReal.Initialize = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerReal_Initialize,None,TColStd_DataMapIteratorOfDataMapOfIntegerReal)
TColStd_DataMapIteratorOfDataMapOfIntegerReal.Key = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerReal_Key,None,TColStd_DataMapIteratorOfDataMapOfIntegerReal)
TColStd_DataMapIteratorOfDataMapOfIntegerReal.Value = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerReal_Value,None,TColStd_DataMapIteratorOfDataMapOfIntegerReal)
TColStd_DataMapIteratorOfDataMapOfIntegerReal._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerReal__kill_pointed,None,TColStd_DataMapIteratorOfDataMapOfIntegerReal)
TColStd_DataMapIteratorOfDataMapOfIntegerReal_swigregister = _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerReal_swigregister
TColStd_DataMapIteratorOfDataMapOfIntegerReal_swigregister(TColStd_DataMapIteratorOfDataMapOfIntegerReal)

class TColStd_DataMapIteratorOfDataMapOfIntegerTransient(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TColStd_DataMapOfIntegerTransient &
        :rtype: None

        """
        _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerTransient_swiginit(self,_TColStd.new_TColStd_DataMapIteratorOfDataMapOfIntegerTransient(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TColStd_DataMapOfIntegerTransient &
        :rtype: None

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerTransient_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerTransient_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerTransient_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapIteratorOfDataMapOfIntegerTransient.Initialize = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerTransient_Initialize,None,TColStd_DataMapIteratorOfDataMapOfIntegerTransient)
TColStd_DataMapIteratorOfDataMapOfIntegerTransient.Key = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerTransient_Key,None,TColStd_DataMapIteratorOfDataMapOfIntegerTransient)
TColStd_DataMapIteratorOfDataMapOfIntegerTransient.Value = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerTransient_Value,None,TColStd_DataMapIteratorOfDataMapOfIntegerTransient)
TColStd_DataMapIteratorOfDataMapOfIntegerTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerTransient__kill_pointed,None,TColStd_DataMapIteratorOfDataMapOfIntegerTransient)
TColStd_DataMapIteratorOfDataMapOfIntegerTransient_swigregister = _TColStd.TColStd_DataMapIteratorOfDataMapOfIntegerTransient_swigregister
TColStd_DataMapIteratorOfDataMapOfIntegerTransient_swigregister(TColStd_DataMapIteratorOfDataMapOfIntegerTransient)

class TColStd_DataMapIteratorOfDataMapOfStringInteger(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TColStd_DataMapOfStringInteger &
        :rtype: None

        """
        _TColStd.TColStd_DataMapIteratorOfDataMapOfStringInteger_swiginit(self,_TColStd.new_TColStd_DataMapIteratorOfDataMapOfStringInteger(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TColStd_DataMapOfStringInteger &
        :rtype: None

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfStringInteger_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfStringInteger_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfStringInteger_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapIteratorOfDataMapOfStringInteger.Initialize = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfStringInteger_Initialize,None,TColStd_DataMapIteratorOfDataMapOfStringInteger)
TColStd_DataMapIteratorOfDataMapOfStringInteger.Key = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfStringInteger_Key,None,TColStd_DataMapIteratorOfDataMapOfStringInteger)
TColStd_DataMapIteratorOfDataMapOfStringInteger.Value = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfStringInteger_Value,None,TColStd_DataMapIteratorOfDataMapOfStringInteger)
TColStd_DataMapIteratorOfDataMapOfStringInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfStringInteger__kill_pointed,None,TColStd_DataMapIteratorOfDataMapOfStringInteger)
TColStd_DataMapIteratorOfDataMapOfStringInteger_swigregister = _TColStd.TColStd_DataMapIteratorOfDataMapOfStringInteger_swigregister
TColStd_DataMapIteratorOfDataMapOfStringInteger_swigregister(TColStd_DataMapIteratorOfDataMapOfStringInteger)

class TColStd_DataMapIteratorOfDataMapOfTransientTransient(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TColStd_DataMapOfTransientTransient &
        :rtype: None

        """
        _TColStd.TColStd_DataMapIteratorOfDataMapOfTransientTransient_swiginit(self,_TColStd.new_TColStd_DataMapIteratorOfDataMapOfTransientTransient(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TColStd_DataMapOfTransientTransient &
        :rtype: None

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfTransientTransient_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfTransientTransient_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_DataMapIteratorOfDataMapOfTransientTransient_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapIteratorOfDataMapOfTransientTransient.Initialize = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfTransientTransient_Initialize,None,TColStd_DataMapIteratorOfDataMapOfTransientTransient)
TColStd_DataMapIteratorOfDataMapOfTransientTransient.Key = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfTransientTransient_Key,None,TColStd_DataMapIteratorOfDataMapOfTransientTransient)
TColStd_DataMapIteratorOfDataMapOfTransientTransient.Value = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfTransientTransient_Value,None,TColStd_DataMapIteratorOfDataMapOfTransientTransient)
TColStd_DataMapIteratorOfDataMapOfTransientTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapIteratorOfDataMapOfTransientTransient__kill_pointed,None,TColStd_DataMapIteratorOfDataMapOfTransientTransient)
TColStd_DataMapIteratorOfDataMapOfTransientTransient_swigregister = _TColStd.TColStd_DataMapIteratorOfDataMapOfTransientTransient_swigregister
TColStd_DataMapIteratorOfDataMapOfTransientTransient_swigregister(TColStd_DataMapIteratorOfDataMapOfTransientTransient)

class TColStd_DataMapNodeOfDataMapOfAsciiStringInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TCollection_AsciiString &
        :param I:
        :type I: int &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_swiginit(self,_TColStd.new_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger(*args))
    def Key(self, *args):
        """
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_Key(self, *args)

    def GetValue(self):
        """GetValue(TColStd_DataMapNodeOfDataMapOfAsciiStringInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_DataMapNodeOfDataMapOfAsciiStringInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapNodeOfDataMapOfAsciiStringInteger self)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfAsciiStringInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_DataMapNodeOfDataMapOfAsciiStringInteger self) -> Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapNodeOfDataMapOfAsciiStringInteger.Key = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_Key,None,TColStd_DataMapNodeOfDataMapOfAsciiStringInteger)
TColStd_DataMapNodeOfDataMapOfAsciiStringInteger.GetValue = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_GetValue,None,TColStd_DataMapNodeOfDataMapOfAsciiStringInteger)
TColStd_DataMapNodeOfDataMapOfAsciiStringInteger.SetValue = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_SetValue,None,TColStd_DataMapNodeOfDataMapOfAsciiStringInteger)
TColStd_DataMapNodeOfDataMapOfAsciiStringInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfAsciiStringInteger__kill_pointed,None,TColStd_DataMapNodeOfDataMapOfAsciiStringInteger)
TColStd_DataMapNodeOfDataMapOfAsciiStringInteger.GetHandle = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_GetHandle,None,TColStd_DataMapNodeOfDataMapOfAsciiStringInteger)
TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_swigregister = _TColStd.TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_swigregister
TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_swigregister(TColStd_DataMapNodeOfDataMapOfAsciiStringInteger)

class Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_swiginit(self,_TColStd.new_Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_Nullify,None,Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger)
Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_IsNull,None,Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger)
Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_GetObject,None,Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger)
Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger__kill_pointed,None,Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger)
Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_swigregister = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_swigregister
Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_swigregister(Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger)

def Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_DownCast(*args)
Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_DownCast = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfAsciiStringInteger_DownCast

class TColStd_DataMapNodeOfDataMapOfIntegerInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: int &
        :param I:
        :type I: int &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger_swiginit(self,_TColStd.new_TColStd_DataMapNodeOfDataMapOfIntegerInteger(*args))
    def GetKey(self):
        """GetKey(TColStd_DataMapNodeOfDataMapOfIntegerInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger_GetKey(self)

    def SetKey(self, *args):
        """SetKey(TColStd_DataMapNodeOfDataMapOfIntegerInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger_SetKey(self, *args)

    def GetValue(self):
        """GetValue(TColStd_DataMapNodeOfDataMapOfIntegerInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_DataMapNodeOfDataMapOfIntegerInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapNodeOfDataMapOfIntegerInteger self)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_DataMapNodeOfDataMapOfIntegerInteger self) -> Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapNodeOfDataMapOfIntegerInteger.GetKey = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger_GetKey,None,TColStd_DataMapNodeOfDataMapOfIntegerInteger)
TColStd_DataMapNodeOfDataMapOfIntegerInteger.SetKey = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger_SetKey,None,TColStd_DataMapNodeOfDataMapOfIntegerInteger)
TColStd_DataMapNodeOfDataMapOfIntegerInteger.GetValue = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger_GetValue,None,TColStd_DataMapNodeOfDataMapOfIntegerInteger)
TColStd_DataMapNodeOfDataMapOfIntegerInteger.SetValue = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger_SetValue,None,TColStd_DataMapNodeOfDataMapOfIntegerInteger)
TColStd_DataMapNodeOfDataMapOfIntegerInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger__kill_pointed,None,TColStd_DataMapNodeOfDataMapOfIntegerInteger)
TColStd_DataMapNodeOfDataMapOfIntegerInteger.GetHandle = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger_GetHandle,None,TColStd_DataMapNodeOfDataMapOfIntegerInteger)
TColStd_DataMapNodeOfDataMapOfIntegerInteger_swigregister = _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerInteger_swigregister
TColStd_DataMapNodeOfDataMapOfIntegerInteger_swigregister(TColStd_DataMapNodeOfDataMapOfIntegerInteger)

class Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger_swiginit(self,_TColStd.new_Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger_Nullify,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger_IsNull,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger_GetObject,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger__kill_pointed,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger_swigregister = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger_swigregister
Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger_swigregister(Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger)

def Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger_DownCast(*args)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger_DownCast = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerInteger_DownCast

class TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TColStd_ListOfInteger &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_swiginit(self,_TColStd.new_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger(*args))
    def GetKey(self):
        """GetKey(TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_GetKey(self)

    def SetKey(self, *args):
        """SetKey(TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_SetKey(self, *args)

    def Value(self, *args):
        """
        :rtype: TColStd_ListOfInteger

        """
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger self)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger self) -> Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger.GetKey = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_GetKey,None,TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger)
TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger.SetKey = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_SetKey,None,TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger)
TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger.Value = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_Value,None,TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger)
TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger__kill_pointed,None,TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger)
TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_GetHandle,None,TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger)
TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_swigregister = _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_swigregister
TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_swigregister(TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger)

class Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_swiginit(self,_TColStd.new_Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_Nullify,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_IsNull,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_GetObject,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger__kill_pointed,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_swigregister = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_swigregister
Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_swigregister(Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger)

def Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_DownCast(*args)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_DownCast = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerListOfInteger_DownCast

class TColStd_DataMapNodeOfDataMapOfIntegerReal(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: int &
        :param I:
        :type I: float &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal_swiginit(self,_TColStd.new_TColStd_DataMapNodeOfDataMapOfIntegerReal(*args))
    def GetKey(self):
        """GetKey(TColStd_DataMapNodeOfDataMapOfIntegerReal self) -> Standard_Integer"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal_GetKey(self)

    def SetKey(self, *args):
        """SetKey(TColStd_DataMapNodeOfDataMapOfIntegerReal self, Standard_Integer value)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal_SetKey(self, *args)

    def GetValue(self):
        """GetValue(TColStd_DataMapNodeOfDataMapOfIntegerReal self) -> Standard_Real"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_DataMapNodeOfDataMapOfIntegerReal self, Standard_Real value)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapNodeOfDataMapOfIntegerReal self)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_DataMapNodeOfDataMapOfIntegerReal self) -> Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapNodeOfDataMapOfIntegerReal.GetKey = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal_GetKey,None,TColStd_DataMapNodeOfDataMapOfIntegerReal)
TColStd_DataMapNodeOfDataMapOfIntegerReal.SetKey = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal_SetKey,None,TColStd_DataMapNodeOfDataMapOfIntegerReal)
TColStd_DataMapNodeOfDataMapOfIntegerReal.GetValue = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal_GetValue,None,TColStd_DataMapNodeOfDataMapOfIntegerReal)
TColStd_DataMapNodeOfDataMapOfIntegerReal.SetValue = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal_SetValue,None,TColStd_DataMapNodeOfDataMapOfIntegerReal)
TColStd_DataMapNodeOfDataMapOfIntegerReal._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal__kill_pointed,None,TColStd_DataMapNodeOfDataMapOfIntegerReal)
TColStd_DataMapNodeOfDataMapOfIntegerReal.GetHandle = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal_GetHandle,None,TColStd_DataMapNodeOfDataMapOfIntegerReal)
TColStd_DataMapNodeOfDataMapOfIntegerReal_swigregister = _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerReal_swigregister
TColStd_DataMapNodeOfDataMapOfIntegerReal_swigregister(TColStd_DataMapNodeOfDataMapOfIntegerReal)

class Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal_swiginit(self,_TColStd.new_Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal.Nullify = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal_Nullify,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal.IsNull = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal_IsNull,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal.GetObject = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal_GetObject,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal__kill_pointed,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal_swigregister = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal_swigregister
Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal_swigregister(Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal)

def Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal_DownCast(*args):
  return _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal_DownCast(*args)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal_DownCast = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerReal_DownCast

class TColStd_DataMapNodeOfDataMapOfIntegerTransient(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: int &
        :param I:
        :type I: Handle_Standard_Transient &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerTransient_swiginit(self,_TColStd.new_TColStd_DataMapNodeOfDataMapOfIntegerTransient(*args))
    def GetKey(self):
        """GetKey(TColStd_DataMapNodeOfDataMapOfIntegerTransient self) -> Standard_Integer"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerTransient_GetKey(self)

    def SetKey(self, *args):
        """SetKey(TColStd_DataMapNodeOfDataMapOfIntegerTransient self, Standard_Integer value)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerTransient_SetKey(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerTransient_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapNodeOfDataMapOfIntegerTransient self)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_DataMapNodeOfDataMapOfIntegerTransient self) -> Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapNodeOfDataMapOfIntegerTransient.GetKey = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerTransient_GetKey,None,TColStd_DataMapNodeOfDataMapOfIntegerTransient)
TColStd_DataMapNodeOfDataMapOfIntegerTransient.SetKey = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerTransient_SetKey,None,TColStd_DataMapNodeOfDataMapOfIntegerTransient)
TColStd_DataMapNodeOfDataMapOfIntegerTransient.Value = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerTransient_Value,None,TColStd_DataMapNodeOfDataMapOfIntegerTransient)
TColStd_DataMapNodeOfDataMapOfIntegerTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerTransient__kill_pointed,None,TColStd_DataMapNodeOfDataMapOfIntegerTransient)
TColStd_DataMapNodeOfDataMapOfIntegerTransient.GetHandle = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfIntegerTransient_GetHandle,None,TColStd_DataMapNodeOfDataMapOfIntegerTransient)
TColStd_DataMapNodeOfDataMapOfIntegerTransient_swigregister = _TColStd.TColStd_DataMapNodeOfDataMapOfIntegerTransient_swigregister
TColStd_DataMapNodeOfDataMapOfIntegerTransient_swigregister(TColStd_DataMapNodeOfDataMapOfIntegerTransient)

class Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient_swiginit(self,_TColStd.new_Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient_Nullify,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient_IsNull,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient_GetObject,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient__kill_pointed,None,Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient_swigregister = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient_swigregister
Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient_swigregister(Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient)

def Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient_DownCast(*args)
Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient_DownCast = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfIntegerTransient_DownCast

class TColStd_DataMapNodeOfDataMapOfStringInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TCollection_ExtendedString &
        :param I:
        :type I: int &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_DataMapNodeOfDataMapOfStringInteger_swiginit(self,_TColStd.new_TColStd_DataMapNodeOfDataMapOfStringInteger(*args))
    def Key(self, *args):
        """
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_DataMapNodeOfDataMapOfStringInteger_Key(self, *args)

    def GetValue(self):
        """GetValue(TColStd_DataMapNodeOfDataMapOfStringInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfStringInteger_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_DataMapNodeOfDataMapOfStringInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfStringInteger_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapNodeOfDataMapOfStringInteger self)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfStringInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_DataMapNodeOfDataMapOfStringInteger self) -> Handle_TColStd_DataMapNodeOfDataMapOfStringInteger"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfStringInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapNodeOfDataMapOfStringInteger.Key = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfStringInteger_Key,None,TColStd_DataMapNodeOfDataMapOfStringInteger)
TColStd_DataMapNodeOfDataMapOfStringInteger.GetValue = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfStringInteger_GetValue,None,TColStd_DataMapNodeOfDataMapOfStringInteger)
TColStd_DataMapNodeOfDataMapOfStringInteger.SetValue = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfStringInteger_SetValue,None,TColStd_DataMapNodeOfDataMapOfStringInteger)
TColStd_DataMapNodeOfDataMapOfStringInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfStringInteger__kill_pointed,None,TColStd_DataMapNodeOfDataMapOfStringInteger)
TColStd_DataMapNodeOfDataMapOfStringInteger.GetHandle = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfStringInteger_GetHandle,None,TColStd_DataMapNodeOfDataMapOfStringInteger)
TColStd_DataMapNodeOfDataMapOfStringInteger_swigregister = _TColStd.TColStd_DataMapNodeOfDataMapOfStringInteger_swigregister
TColStd_DataMapNodeOfDataMapOfStringInteger_swigregister(TColStd_DataMapNodeOfDataMapOfStringInteger)

class Handle_TColStd_DataMapNodeOfDataMapOfStringInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfStringInteger_swiginit(self,_TColStd.new_Handle_TColStd_DataMapNodeOfDataMapOfStringInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfStringInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_DataMapNodeOfDataMapOfStringInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfStringInteger_Nullify,None,Handle_TColStd_DataMapNodeOfDataMapOfStringInteger)
Handle_TColStd_DataMapNodeOfDataMapOfStringInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfStringInteger_IsNull,None,Handle_TColStd_DataMapNodeOfDataMapOfStringInteger)
Handle_TColStd_DataMapNodeOfDataMapOfStringInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfStringInteger_GetObject,None,Handle_TColStd_DataMapNodeOfDataMapOfStringInteger)
Handle_TColStd_DataMapNodeOfDataMapOfStringInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfStringInteger__kill_pointed,None,Handle_TColStd_DataMapNodeOfDataMapOfStringInteger)
Handle_TColStd_DataMapNodeOfDataMapOfStringInteger_swigregister = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfStringInteger_swigregister
Handle_TColStd_DataMapNodeOfDataMapOfStringInteger_swigregister(Handle_TColStd_DataMapNodeOfDataMapOfStringInteger)

def Handle_TColStd_DataMapNodeOfDataMapOfStringInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfStringInteger_DownCast(*args)
Handle_TColStd_DataMapNodeOfDataMapOfStringInteger_DownCast = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfStringInteger_DownCast

class TColStd_DataMapNodeOfDataMapOfTransientTransient(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :param I:
        :type I: Handle_Standard_Transient &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_DataMapNodeOfDataMapOfTransientTransient_swiginit(self,_TColStd.new_TColStd_DataMapNodeOfDataMapOfTransientTransient(*args))
    def Key(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_DataMapNodeOfDataMapOfTransientTransient_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_DataMapNodeOfDataMapOfTransientTransient_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapNodeOfDataMapOfTransientTransient self)"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfTransientTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_DataMapNodeOfDataMapOfTransientTransient self) -> Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient"""
        return _TColStd.TColStd_DataMapNodeOfDataMapOfTransientTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapNodeOfDataMapOfTransientTransient.Key = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfTransientTransient_Key,None,TColStd_DataMapNodeOfDataMapOfTransientTransient)
TColStd_DataMapNodeOfDataMapOfTransientTransient.Value = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfTransientTransient_Value,None,TColStd_DataMapNodeOfDataMapOfTransientTransient)
TColStd_DataMapNodeOfDataMapOfTransientTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfTransientTransient__kill_pointed,None,TColStd_DataMapNodeOfDataMapOfTransientTransient)
TColStd_DataMapNodeOfDataMapOfTransientTransient.GetHandle = new_instancemethod(_TColStd.TColStd_DataMapNodeOfDataMapOfTransientTransient_GetHandle,None,TColStd_DataMapNodeOfDataMapOfTransientTransient)
TColStd_DataMapNodeOfDataMapOfTransientTransient_swigregister = _TColStd.TColStd_DataMapNodeOfDataMapOfTransientTransient_swigregister
TColStd_DataMapNodeOfDataMapOfTransientTransient_swigregister(TColStd_DataMapNodeOfDataMapOfTransientTransient)

class Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient_swiginit(self,_TColStd.new_Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient_Nullify,None,Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient)
Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient_IsNull,None,Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient)
Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient_GetObject,None,Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient)
Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient__kill_pointed,None,Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient)
Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient_swigregister = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient_swigregister
Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient_swigregister(Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient)

def Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient_DownCast(*args)
Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient_DownCast = _TColStd.Handle_TColStd_DataMapNodeOfDataMapOfTransientTransient_DownCast

class TColStd_DataMapOfAsciiStringInteger(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_DataMapOfAsciiStringInteger_swiginit(self,_TColStd.new_TColStd_DataMapOfAsciiStringInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfAsciiStringInteger &
        :rtype: TColStd_DataMapOfAsciiStringInteger

        """
        return _TColStd.TColStd_DataMapOfAsciiStringInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfAsciiStringInteger &
        :rtype: TColStd_DataMapOfAsciiStringInteger

        """
        return _TColStd.TColStd_DataMapOfAsciiStringInteger_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfAsciiStringInteger_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfAsciiStringInteger_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TCollection_AsciiString &
        :param I:
        :type I: int &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfAsciiStringInteger_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TCollection_AsciiString &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfAsciiStringInteger_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TCollection_AsciiString &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfAsciiStringInteger_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TCollection_AsciiString &
        :rtype: int

        """
        return _TColStd.TColStd_DataMapOfAsciiStringInteger_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TCollection_AsciiString &
        :rtype: int

        """
        return _TColStd.TColStd_DataMapOfAsciiStringInteger_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TCollection_AsciiString &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfAsciiStringInteger_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TCollection_AsciiString &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfAsciiStringInteger_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapOfAsciiStringInteger self)"""
        return _TColStd.TColStd_DataMapOfAsciiStringInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapOfAsciiStringInteger.Assign = new_instancemethod(_TColStd.TColStd_DataMapOfAsciiStringInteger_Assign,None,TColStd_DataMapOfAsciiStringInteger)
TColStd_DataMapOfAsciiStringInteger.Set = new_instancemethod(_TColStd.TColStd_DataMapOfAsciiStringInteger_Set,None,TColStd_DataMapOfAsciiStringInteger)
TColStd_DataMapOfAsciiStringInteger.ReSize = new_instancemethod(_TColStd.TColStd_DataMapOfAsciiStringInteger_ReSize,None,TColStd_DataMapOfAsciiStringInteger)
TColStd_DataMapOfAsciiStringInteger.Clear = new_instancemethod(_TColStd.TColStd_DataMapOfAsciiStringInteger_Clear,None,TColStd_DataMapOfAsciiStringInteger)
TColStd_DataMapOfAsciiStringInteger.Bind = new_instancemethod(_TColStd.TColStd_DataMapOfAsciiStringInteger_Bind,None,TColStd_DataMapOfAsciiStringInteger)
TColStd_DataMapOfAsciiStringInteger.IsBound = new_instancemethod(_TColStd.TColStd_DataMapOfAsciiStringInteger_IsBound,None,TColStd_DataMapOfAsciiStringInteger)
TColStd_DataMapOfAsciiStringInteger.UnBind = new_instancemethod(_TColStd.TColStd_DataMapOfAsciiStringInteger_UnBind,None,TColStd_DataMapOfAsciiStringInteger)
TColStd_DataMapOfAsciiStringInteger.Find = new_instancemethod(_TColStd.TColStd_DataMapOfAsciiStringInteger_Find,None,TColStd_DataMapOfAsciiStringInteger)
TColStd_DataMapOfAsciiStringInteger.ChangeFind = new_instancemethod(_TColStd.TColStd_DataMapOfAsciiStringInteger_ChangeFind,None,TColStd_DataMapOfAsciiStringInteger)
TColStd_DataMapOfAsciiStringInteger.Find1 = new_instancemethod(_TColStd.TColStd_DataMapOfAsciiStringInteger_Find1,None,TColStd_DataMapOfAsciiStringInteger)
TColStd_DataMapOfAsciiStringInteger.ChangeFind1 = new_instancemethod(_TColStd.TColStd_DataMapOfAsciiStringInteger_ChangeFind1,None,TColStd_DataMapOfAsciiStringInteger)
TColStd_DataMapOfAsciiStringInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapOfAsciiStringInteger__kill_pointed,None,TColStd_DataMapOfAsciiStringInteger)
TColStd_DataMapOfAsciiStringInteger_swigregister = _TColStd.TColStd_DataMapOfAsciiStringInteger_swigregister
TColStd_DataMapOfAsciiStringInteger_swigregister(TColStd_DataMapOfAsciiStringInteger)

class TColStd_DataMapOfIntegerInteger(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_DataMapOfIntegerInteger_swiginit(self,_TColStd.new_TColStd_DataMapOfIntegerInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfIntegerInteger &
        :rtype: TColStd_DataMapOfIntegerInteger

        """
        return _TColStd.TColStd_DataMapOfIntegerInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfIntegerInteger &
        :rtype: TColStd_DataMapOfIntegerInteger

        """
        return _TColStd.TColStd_DataMapOfIntegerInteger_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfIntegerInteger_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfIntegerInteger_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: int &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfIntegerInteger_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfIntegerInteger_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfIntegerInteger_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: int

        """
        return _TColStd.TColStd_DataMapOfIntegerInteger_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: int

        """
        return _TColStd.TColStd_DataMapOfIntegerInteger_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfIntegerInteger_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfIntegerInteger_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapOfIntegerInteger self)"""
        return _TColStd.TColStd_DataMapOfIntegerInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapOfIntegerInteger.Assign = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerInteger_Assign,None,TColStd_DataMapOfIntegerInteger)
TColStd_DataMapOfIntegerInteger.Set = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerInteger_Set,None,TColStd_DataMapOfIntegerInteger)
TColStd_DataMapOfIntegerInteger.ReSize = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerInteger_ReSize,None,TColStd_DataMapOfIntegerInteger)
TColStd_DataMapOfIntegerInteger.Clear = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerInteger_Clear,None,TColStd_DataMapOfIntegerInteger)
TColStd_DataMapOfIntegerInteger.Bind = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerInteger_Bind,None,TColStd_DataMapOfIntegerInteger)
TColStd_DataMapOfIntegerInteger.IsBound = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerInteger_IsBound,None,TColStd_DataMapOfIntegerInteger)
TColStd_DataMapOfIntegerInteger.UnBind = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerInteger_UnBind,None,TColStd_DataMapOfIntegerInteger)
TColStd_DataMapOfIntegerInteger.Find = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerInteger_Find,None,TColStd_DataMapOfIntegerInteger)
TColStd_DataMapOfIntegerInteger.ChangeFind = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerInteger_ChangeFind,None,TColStd_DataMapOfIntegerInteger)
TColStd_DataMapOfIntegerInteger.Find1 = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerInteger_Find1,None,TColStd_DataMapOfIntegerInteger)
TColStd_DataMapOfIntegerInteger.ChangeFind1 = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerInteger_ChangeFind1,None,TColStd_DataMapOfIntegerInteger)
TColStd_DataMapOfIntegerInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerInteger__kill_pointed,None,TColStd_DataMapOfIntegerInteger)
TColStd_DataMapOfIntegerInteger_swigregister = _TColStd.TColStd_DataMapOfIntegerInteger_swigregister
TColStd_DataMapOfIntegerInteger_swigregister(TColStd_DataMapOfIntegerInteger)

class TColStd_DataMapOfIntegerListOfInteger(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_DataMapOfIntegerListOfInteger_swiginit(self,_TColStd.new_TColStd_DataMapOfIntegerListOfInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfIntegerListOfInteger &
        :rtype: TColStd_DataMapOfIntegerListOfInteger

        """
        return _TColStd.TColStd_DataMapOfIntegerListOfInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfIntegerListOfInteger &
        :rtype: TColStd_DataMapOfIntegerListOfInteger

        """
        return _TColStd.TColStd_DataMapOfIntegerListOfInteger_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfIntegerListOfInteger_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfIntegerListOfInteger_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TColStd_ListOfInteger &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfIntegerListOfInteger_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfIntegerListOfInteger_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfIntegerListOfInteger_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TColStd_ListOfInteger

        """
        return _TColStd.TColStd_DataMapOfIntegerListOfInteger_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TColStd_ListOfInteger

        """
        return _TColStd.TColStd_DataMapOfIntegerListOfInteger_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfIntegerListOfInteger_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfIntegerListOfInteger_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapOfIntegerListOfInteger self)"""
        return _TColStd.TColStd_DataMapOfIntegerListOfInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapOfIntegerListOfInteger.Assign = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Assign,None,TColStd_DataMapOfIntegerListOfInteger)
TColStd_DataMapOfIntegerListOfInteger.Set = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Set,None,TColStd_DataMapOfIntegerListOfInteger)
TColStd_DataMapOfIntegerListOfInteger.ReSize = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerListOfInteger_ReSize,None,TColStd_DataMapOfIntegerListOfInteger)
TColStd_DataMapOfIntegerListOfInteger.Clear = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Clear,None,TColStd_DataMapOfIntegerListOfInteger)
TColStd_DataMapOfIntegerListOfInteger.Bind = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Bind,None,TColStd_DataMapOfIntegerListOfInteger)
TColStd_DataMapOfIntegerListOfInteger.IsBound = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerListOfInteger_IsBound,None,TColStd_DataMapOfIntegerListOfInteger)
TColStd_DataMapOfIntegerListOfInteger.UnBind = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerListOfInteger_UnBind,None,TColStd_DataMapOfIntegerListOfInteger)
TColStd_DataMapOfIntegerListOfInteger.Find = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Find,None,TColStd_DataMapOfIntegerListOfInteger)
TColStd_DataMapOfIntegerListOfInteger.ChangeFind = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerListOfInteger_ChangeFind,None,TColStd_DataMapOfIntegerListOfInteger)
TColStd_DataMapOfIntegerListOfInteger.Find1 = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Find1,None,TColStd_DataMapOfIntegerListOfInteger)
TColStd_DataMapOfIntegerListOfInteger.ChangeFind1 = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerListOfInteger_ChangeFind1,None,TColStd_DataMapOfIntegerListOfInteger)
TColStd_DataMapOfIntegerListOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerListOfInteger__kill_pointed,None,TColStd_DataMapOfIntegerListOfInteger)
TColStd_DataMapOfIntegerListOfInteger_swigregister = _TColStd.TColStd_DataMapOfIntegerListOfInteger_swigregister
TColStd_DataMapOfIntegerListOfInteger_swigregister(TColStd_DataMapOfIntegerListOfInteger)

class TColStd_DataMapOfIntegerReal(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_DataMapOfIntegerReal_swiginit(self,_TColStd.new_TColStd_DataMapOfIntegerReal(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfIntegerReal &
        :rtype: TColStd_DataMapOfIntegerReal

        """
        return _TColStd.TColStd_DataMapOfIntegerReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfIntegerReal &
        :rtype: TColStd_DataMapOfIntegerReal

        """
        return _TColStd.TColStd_DataMapOfIntegerReal_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfIntegerReal_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfIntegerReal_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: float &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfIntegerReal_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfIntegerReal_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfIntegerReal_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: float

        """
        return _TColStd.TColStd_DataMapOfIntegerReal_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: float

        """
        return _TColStd.TColStd_DataMapOfIntegerReal_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfIntegerReal_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfIntegerReal_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapOfIntegerReal self)"""
        return _TColStd.TColStd_DataMapOfIntegerReal__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapOfIntegerReal.Assign = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerReal_Assign,None,TColStd_DataMapOfIntegerReal)
TColStd_DataMapOfIntegerReal.Set = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerReal_Set,None,TColStd_DataMapOfIntegerReal)
TColStd_DataMapOfIntegerReal.ReSize = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerReal_ReSize,None,TColStd_DataMapOfIntegerReal)
TColStd_DataMapOfIntegerReal.Clear = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerReal_Clear,None,TColStd_DataMapOfIntegerReal)
TColStd_DataMapOfIntegerReal.Bind = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerReal_Bind,None,TColStd_DataMapOfIntegerReal)
TColStd_DataMapOfIntegerReal.IsBound = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerReal_IsBound,None,TColStd_DataMapOfIntegerReal)
TColStd_DataMapOfIntegerReal.UnBind = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerReal_UnBind,None,TColStd_DataMapOfIntegerReal)
TColStd_DataMapOfIntegerReal.Find = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerReal_Find,None,TColStd_DataMapOfIntegerReal)
TColStd_DataMapOfIntegerReal.ChangeFind = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerReal_ChangeFind,None,TColStd_DataMapOfIntegerReal)
TColStd_DataMapOfIntegerReal.Find1 = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerReal_Find1,None,TColStd_DataMapOfIntegerReal)
TColStd_DataMapOfIntegerReal.ChangeFind1 = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerReal_ChangeFind1,None,TColStd_DataMapOfIntegerReal)
TColStd_DataMapOfIntegerReal._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerReal__kill_pointed,None,TColStd_DataMapOfIntegerReal)
TColStd_DataMapOfIntegerReal_swigregister = _TColStd.TColStd_DataMapOfIntegerReal_swigregister
TColStd_DataMapOfIntegerReal_swigregister(TColStd_DataMapOfIntegerReal)

class TColStd_DataMapOfIntegerTransient(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_DataMapOfIntegerTransient_swiginit(self,_TColStd.new_TColStd_DataMapOfIntegerTransient(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfIntegerTransient &
        :rtype: TColStd_DataMapOfIntegerTransient

        """
        return _TColStd.TColStd_DataMapOfIntegerTransient_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfIntegerTransient &
        :rtype: TColStd_DataMapOfIntegerTransient

        """
        return _TColStd.TColStd_DataMapOfIntegerTransient_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfIntegerTransient_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfIntegerTransient_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfIntegerTransient_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfIntegerTransient_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfIntegerTransient_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_DataMapOfIntegerTransient_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_DataMapOfIntegerTransient_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfIntegerTransient_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfIntegerTransient_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapOfIntegerTransient self)"""
        return _TColStd.TColStd_DataMapOfIntegerTransient__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapOfIntegerTransient.Assign = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerTransient_Assign,None,TColStd_DataMapOfIntegerTransient)
TColStd_DataMapOfIntegerTransient.Set = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerTransient_Set,None,TColStd_DataMapOfIntegerTransient)
TColStd_DataMapOfIntegerTransient.ReSize = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerTransient_ReSize,None,TColStd_DataMapOfIntegerTransient)
TColStd_DataMapOfIntegerTransient.Clear = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerTransient_Clear,None,TColStd_DataMapOfIntegerTransient)
TColStd_DataMapOfIntegerTransient.Bind = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerTransient_Bind,None,TColStd_DataMapOfIntegerTransient)
TColStd_DataMapOfIntegerTransient.IsBound = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerTransient_IsBound,None,TColStd_DataMapOfIntegerTransient)
TColStd_DataMapOfIntegerTransient.UnBind = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerTransient_UnBind,None,TColStd_DataMapOfIntegerTransient)
TColStd_DataMapOfIntegerTransient.Find = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerTransient_Find,None,TColStd_DataMapOfIntegerTransient)
TColStd_DataMapOfIntegerTransient.ChangeFind = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerTransient_ChangeFind,None,TColStd_DataMapOfIntegerTransient)
TColStd_DataMapOfIntegerTransient.Find1 = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerTransient_Find1,None,TColStd_DataMapOfIntegerTransient)
TColStd_DataMapOfIntegerTransient.ChangeFind1 = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerTransient_ChangeFind1,None,TColStd_DataMapOfIntegerTransient)
TColStd_DataMapOfIntegerTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapOfIntegerTransient__kill_pointed,None,TColStd_DataMapOfIntegerTransient)
TColStd_DataMapOfIntegerTransient_swigregister = _TColStd.TColStd_DataMapOfIntegerTransient_swigregister
TColStd_DataMapOfIntegerTransient_swigregister(TColStd_DataMapOfIntegerTransient)

class TColStd_DataMapOfStringInteger(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_DataMapOfStringInteger_swiginit(self,_TColStd.new_TColStd_DataMapOfStringInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfStringInteger &
        :rtype: TColStd_DataMapOfStringInteger

        """
        return _TColStd.TColStd_DataMapOfStringInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfStringInteger &
        :rtype: TColStd_DataMapOfStringInteger

        """
        return _TColStd.TColStd_DataMapOfStringInteger_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfStringInteger_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfStringInteger_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TCollection_ExtendedString &
        :param I:
        :type I: int &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfStringInteger_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TCollection_ExtendedString &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfStringInteger_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TCollection_ExtendedString &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfStringInteger_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TCollection_ExtendedString &
        :rtype: int

        """
        return _TColStd.TColStd_DataMapOfStringInteger_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TCollection_ExtendedString &
        :rtype: int

        """
        return _TColStd.TColStd_DataMapOfStringInteger_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TCollection_ExtendedString &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfStringInteger_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TCollection_ExtendedString &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfStringInteger_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapOfStringInteger self)"""
        return _TColStd.TColStd_DataMapOfStringInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapOfStringInteger.Assign = new_instancemethod(_TColStd.TColStd_DataMapOfStringInteger_Assign,None,TColStd_DataMapOfStringInteger)
TColStd_DataMapOfStringInteger.Set = new_instancemethod(_TColStd.TColStd_DataMapOfStringInteger_Set,None,TColStd_DataMapOfStringInteger)
TColStd_DataMapOfStringInteger.ReSize = new_instancemethod(_TColStd.TColStd_DataMapOfStringInteger_ReSize,None,TColStd_DataMapOfStringInteger)
TColStd_DataMapOfStringInteger.Clear = new_instancemethod(_TColStd.TColStd_DataMapOfStringInteger_Clear,None,TColStd_DataMapOfStringInteger)
TColStd_DataMapOfStringInteger.Bind = new_instancemethod(_TColStd.TColStd_DataMapOfStringInteger_Bind,None,TColStd_DataMapOfStringInteger)
TColStd_DataMapOfStringInteger.IsBound = new_instancemethod(_TColStd.TColStd_DataMapOfStringInteger_IsBound,None,TColStd_DataMapOfStringInteger)
TColStd_DataMapOfStringInteger.UnBind = new_instancemethod(_TColStd.TColStd_DataMapOfStringInteger_UnBind,None,TColStd_DataMapOfStringInteger)
TColStd_DataMapOfStringInteger.Find = new_instancemethod(_TColStd.TColStd_DataMapOfStringInteger_Find,None,TColStd_DataMapOfStringInteger)
TColStd_DataMapOfStringInteger.ChangeFind = new_instancemethod(_TColStd.TColStd_DataMapOfStringInteger_ChangeFind,None,TColStd_DataMapOfStringInteger)
TColStd_DataMapOfStringInteger.Find1 = new_instancemethod(_TColStd.TColStd_DataMapOfStringInteger_Find1,None,TColStd_DataMapOfStringInteger)
TColStd_DataMapOfStringInteger.ChangeFind1 = new_instancemethod(_TColStd.TColStd_DataMapOfStringInteger_ChangeFind1,None,TColStd_DataMapOfStringInteger)
TColStd_DataMapOfStringInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapOfStringInteger__kill_pointed,None,TColStd_DataMapOfStringInteger)
TColStd_DataMapOfStringInteger_swigregister = _TColStd.TColStd_DataMapOfStringInteger_swigregister
TColStd_DataMapOfStringInteger_swigregister(TColStd_DataMapOfStringInteger)

class TColStd_DataMapOfTransientTransient(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_DataMapOfTransientTransient_swiginit(self,_TColStd.new_TColStd_DataMapOfTransientTransient(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfTransientTransient &
        :rtype: TColStd_DataMapOfTransientTransient

        """
        return _TColStd.TColStd_DataMapOfTransientTransient_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_DataMapOfTransientTransient &
        :rtype: TColStd_DataMapOfTransientTransient

        """
        return _TColStd.TColStd_DataMapOfTransientTransient_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfTransientTransient_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_DataMapOfTransientTransient_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :param I:
        :type I: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfTransientTransient_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfTransientTransient_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_DataMapOfTransientTransient_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_DataMapOfTransientTransient_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_DataMapOfTransientTransient_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfTransientTransient_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_DataMapOfTransientTransient_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_DataMapOfTransientTransient self)"""
        return _TColStd.TColStd_DataMapOfTransientTransient__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_DataMapOfTransientTransient.Assign = new_instancemethod(_TColStd.TColStd_DataMapOfTransientTransient_Assign,None,TColStd_DataMapOfTransientTransient)
TColStd_DataMapOfTransientTransient.Set = new_instancemethod(_TColStd.TColStd_DataMapOfTransientTransient_Set,None,TColStd_DataMapOfTransientTransient)
TColStd_DataMapOfTransientTransient.ReSize = new_instancemethod(_TColStd.TColStd_DataMapOfTransientTransient_ReSize,None,TColStd_DataMapOfTransientTransient)
TColStd_DataMapOfTransientTransient.Clear = new_instancemethod(_TColStd.TColStd_DataMapOfTransientTransient_Clear,None,TColStd_DataMapOfTransientTransient)
TColStd_DataMapOfTransientTransient.Bind = new_instancemethod(_TColStd.TColStd_DataMapOfTransientTransient_Bind,None,TColStd_DataMapOfTransientTransient)
TColStd_DataMapOfTransientTransient.IsBound = new_instancemethod(_TColStd.TColStd_DataMapOfTransientTransient_IsBound,None,TColStd_DataMapOfTransientTransient)
TColStd_DataMapOfTransientTransient.UnBind = new_instancemethod(_TColStd.TColStd_DataMapOfTransientTransient_UnBind,None,TColStd_DataMapOfTransientTransient)
TColStd_DataMapOfTransientTransient.Find = new_instancemethod(_TColStd.TColStd_DataMapOfTransientTransient_Find,None,TColStd_DataMapOfTransientTransient)
TColStd_DataMapOfTransientTransient.ChangeFind = new_instancemethod(_TColStd.TColStd_DataMapOfTransientTransient_ChangeFind,None,TColStd_DataMapOfTransientTransient)
TColStd_DataMapOfTransientTransient.Find1 = new_instancemethod(_TColStd.TColStd_DataMapOfTransientTransient_Find1,None,TColStd_DataMapOfTransientTransient)
TColStd_DataMapOfTransientTransient.ChangeFind1 = new_instancemethod(_TColStd.TColStd_DataMapOfTransientTransient_ChangeFind1,None,TColStd_DataMapOfTransientTransient)
TColStd_DataMapOfTransientTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_DataMapOfTransientTransient__kill_pointed,None,TColStd_DataMapOfTransientTransient)
TColStd_DataMapOfTransientTransient_swigregister = _TColStd.TColStd_DataMapOfTransientTransient_swigregister
TColStd_DataMapOfTransientTransient_swigregister(TColStd_DataMapOfTransientTransient)

class TColStd_HArray1OfAsciiString(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: TCollection_AsciiString &
        :rtype: None

        """
        _TColStd.TColStd_HArray1OfAsciiString_swiginit(self,_TColStd.new_TColStd_HArray1OfAsciiString(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: TCollection_AsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfAsciiString_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfAsciiString_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfAsciiString_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfAsciiString_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: TCollection_AsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfAsciiString_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_HArray1OfAsciiString_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_HArray1OfAsciiString_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColStd_Array1OfAsciiString

        """
        return _TColStd.TColStd_HArray1OfAsciiString_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColStd_Array1OfAsciiString

        """
        return _TColStd.TColStd_HArray1OfAsciiString_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray1OfAsciiString self)"""
        return _TColStd.TColStd_HArray1OfAsciiString__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray1OfAsciiString self) -> Handle_TColStd_HArray1OfAsciiString"""
        return _TColStd.TColStd_HArray1OfAsciiString_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray1OfAsciiString.Init = new_instancemethod(_TColStd.TColStd_HArray1OfAsciiString_Init,None,TColStd_HArray1OfAsciiString)
TColStd_HArray1OfAsciiString.Length = new_instancemethod(_TColStd.TColStd_HArray1OfAsciiString_Length,None,TColStd_HArray1OfAsciiString)
TColStd_HArray1OfAsciiString.Lower = new_instancemethod(_TColStd.TColStd_HArray1OfAsciiString_Lower,None,TColStd_HArray1OfAsciiString)
TColStd_HArray1OfAsciiString.Upper = new_instancemethod(_TColStd.TColStd_HArray1OfAsciiString_Upper,None,TColStd_HArray1OfAsciiString)
TColStd_HArray1OfAsciiString.SetValue = new_instancemethod(_TColStd.TColStd_HArray1OfAsciiString_SetValue,None,TColStd_HArray1OfAsciiString)
TColStd_HArray1OfAsciiString.Value = new_instancemethod(_TColStd.TColStd_HArray1OfAsciiString_Value,None,TColStd_HArray1OfAsciiString)
TColStd_HArray1OfAsciiString.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray1OfAsciiString_ChangeValue,None,TColStd_HArray1OfAsciiString)
TColStd_HArray1OfAsciiString.Array1 = new_instancemethod(_TColStd.TColStd_HArray1OfAsciiString_Array1,None,TColStd_HArray1OfAsciiString)
TColStd_HArray1OfAsciiString.ChangeArray1 = new_instancemethod(_TColStd.TColStd_HArray1OfAsciiString_ChangeArray1,None,TColStd_HArray1OfAsciiString)
TColStd_HArray1OfAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray1OfAsciiString__kill_pointed,None,TColStd_HArray1OfAsciiString)
TColStd_HArray1OfAsciiString.GetHandle = new_instancemethod(_TColStd.TColStd_HArray1OfAsciiString_GetHandle,None,TColStd_HArray1OfAsciiString)
TColStd_HArray1OfAsciiString_swigregister = _TColStd.TColStd_HArray1OfAsciiString_swigregister
TColStd_HArray1OfAsciiString_swigregister(TColStd_HArray1OfAsciiString)

class Handle_TColStd_HArray1OfAsciiString(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray1OfAsciiString_swiginit(self,_TColStd.new_Handle_TColStd_HArray1OfAsciiString(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray1OfAsciiString_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray1OfAsciiString.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfAsciiString_Nullify,None,Handle_TColStd_HArray1OfAsciiString)
Handle_TColStd_HArray1OfAsciiString.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfAsciiString_IsNull,None,Handle_TColStd_HArray1OfAsciiString)
Handle_TColStd_HArray1OfAsciiString.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfAsciiString_GetObject,None,Handle_TColStd_HArray1OfAsciiString)
Handle_TColStd_HArray1OfAsciiString._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfAsciiString__kill_pointed,None,Handle_TColStd_HArray1OfAsciiString)
Handle_TColStd_HArray1OfAsciiString_swigregister = _TColStd.Handle_TColStd_HArray1OfAsciiString_swigregister
Handle_TColStd_HArray1OfAsciiString_swigregister(Handle_TColStd_HArray1OfAsciiString)

def Handle_TColStd_HArray1OfAsciiString_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray1OfAsciiString_DownCast(*args)
Handle_TColStd_HArray1OfAsciiString_DownCast = _TColStd.Handle_TColStd_HArray1OfAsciiString_DownCast

class TColStd_HArray1OfBoolean(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: bool
        :rtype: None

        """
        _TColStd.TColStd_HArray1OfBoolean_swiginit(self,_TColStd.new_TColStd_HArray1OfBoolean(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: bool
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfBoolean_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfBoolean_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfBoolean_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfBoolean_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: bool
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfBoolean_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: bool

        """
        return _TColStd.TColStd_HArray1OfBoolean_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: bool

        """
        return _TColStd.TColStd_HArray1OfBoolean_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColStd_Array1OfBoolean

        """
        return _TColStd.TColStd_HArray1OfBoolean_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColStd_Array1OfBoolean

        """
        return _TColStd.TColStd_HArray1OfBoolean_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray1OfBoolean self)"""
        return _TColStd.TColStd_HArray1OfBoolean__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray1OfBoolean self) -> Handle_TColStd_HArray1OfBoolean"""
        return _TColStd.TColStd_HArray1OfBoolean_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray1OfBoolean.Init = new_instancemethod(_TColStd.TColStd_HArray1OfBoolean_Init,None,TColStd_HArray1OfBoolean)
TColStd_HArray1OfBoolean.Length = new_instancemethod(_TColStd.TColStd_HArray1OfBoolean_Length,None,TColStd_HArray1OfBoolean)
TColStd_HArray1OfBoolean.Lower = new_instancemethod(_TColStd.TColStd_HArray1OfBoolean_Lower,None,TColStd_HArray1OfBoolean)
TColStd_HArray1OfBoolean.Upper = new_instancemethod(_TColStd.TColStd_HArray1OfBoolean_Upper,None,TColStd_HArray1OfBoolean)
TColStd_HArray1OfBoolean.SetValue = new_instancemethod(_TColStd.TColStd_HArray1OfBoolean_SetValue,None,TColStd_HArray1OfBoolean)
TColStd_HArray1OfBoolean.Value = new_instancemethod(_TColStd.TColStd_HArray1OfBoolean_Value,None,TColStd_HArray1OfBoolean)
TColStd_HArray1OfBoolean.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray1OfBoolean_ChangeValue,None,TColStd_HArray1OfBoolean)
TColStd_HArray1OfBoolean.Array1 = new_instancemethod(_TColStd.TColStd_HArray1OfBoolean_Array1,None,TColStd_HArray1OfBoolean)
TColStd_HArray1OfBoolean.ChangeArray1 = new_instancemethod(_TColStd.TColStd_HArray1OfBoolean_ChangeArray1,None,TColStd_HArray1OfBoolean)
TColStd_HArray1OfBoolean._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray1OfBoolean__kill_pointed,None,TColStd_HArray1OfBoolean)
TColStd_HArray1OfBoolean.GetHandle = new_instancemethod(_TColStd.TColStd_HArray1OfBoolean_GetHandle,None,TColStd_HArray1OfBoolean)
TColStd_HArray1OfBoolean_swigregister = _TColStd.TColStd_HArray1OfBoolean_swigregister
TColStd_HArray1OfBoolean_swigregister(TColStd_HArray1OfBoolean)

class Handle_TColStd_HArray1OfBoolean(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray1OfBoolean_swiginit(self,_TColStd.new_Handle_TColStd_HArray1OfBoolean(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray1OfBoolean_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray1OfBoolean.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfBoolean_Nullify,None,Handle_TColStd_HArray1OfBoolean)
Handle_TColStd_HArray1OfBoolean.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfBoolean_IsNull,None,Handle_TColStd_HArray1OfBoolean)
Handle_TColStd_HArray1OfBoolean.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfBoolean_GetObject,None,Handle_TColStd_HArray1OfBoolean)
Handle_TColStd_HArray1OfBoolean._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfBoolean__kill_pointed,None,Handle_TColStd_HArray1OfBoolean)
Handle_TColStd_HArray1OfBoolean_swigregister = _TColStd.Handle_TColStd_HArray1OfBoolean_swigregister
Handle_TColStd_HArray1OfBoolean_swigregister(Handle_TColStd_HArray1OfBoolean)

def Handle_TColStd_HArray1OfBoolean_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray1OfBoolean_DownCast(*args)
Handle_TColStd_HArray1OfBoolean_DownCast = _TColStd.Handle_TColStd_HArray1OfBoolean_DownCast

class TColStd_HArray1OfByte(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Standard_Byte &
        :rtype: None

        """
        _TColStd.TColStd_HArray1OfByte_swiginit(self,_TColStd.new_TColStd_HArray1OfByte(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Standard_Byte &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfByte_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfByte_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfByte_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfByte_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Standard_Byte &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfByte_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_Byte

        """
        return _TColStd.TColStd_HArray1OfByte_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_Byte

        """
        return _TColStd.TColStd_HArray1OfByte_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColStd_Array1OfByte

        """
        return _TColStd.TColStd_HArray1OfByte_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColStd_Array1OfByte

        """
        return _TColStd.TColStd_HArray1OfByte_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray1OfByte self)"""
        return _TColStd.TColStd_HArray1OfByte__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray1OfByte self) -> Handle_TColStd_HArray1OfByte"""
        return _TColStd.TColStd_HArray1OfByte_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray1OfByte.Init = new_instancemethod(_TColStd.TColStd_HArray1OfByte_Init,None,TColStd_HArray1OfByte)
TColStd_HArray1OfByte.Length = new_instancemethod(_TColStd.TColStd_HArray1OfByte_Length,None,TColStd_HArray1OfByte)
TColStd_HArray1OfByte.Lower = new_instancemethod(_TColStd.TColStd_HArray1OfByte_Lower,None,TColStd_HArray1OfByte)
TColStd_HArray1OfByte.Upper = new_instancemethod(_TColStd.TColStd_HArray1OfByte_Upper,None,TColStd_HArray1OfByte)
TColStd_HArray1OfByte.SetValue = new_instancemethod(_TColStd.TColStd_HArray1OfByte_SetValue,None,TColStd_HArray1OfByte)
TColStd_HArray1OfByte.Value = new_instancemethod(_TColStd.TColStd_HArray1OfByte_Value,None,TColStd_HArray1OfByte)
TColStd_HArray1OfByte.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray1OfByte_ChangeValue,None,TColStd_HArray1OfByte)
TColStd_HArray1OfByte.Array1 = new_instancemethod(_TColStd.TColStd_HArray1OfByte_Array1,None,TColStd_HArray1OfByte)
TColStd_HArray1OfByte.ChangeArray1 = new_instancemethod(_TColStd.TColStd_HArray1OfByte_ChangeArray1,None,TColStd_HArray1OfByte)
TColStd_HArray1OfByte._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray1OfByte__kill_pointed,None,TColStd_HArray1OfByte)
TColStd_HArray1OfByte.GetHandle = new_instancemethod(_TColStd.TColStd_HArray1OfByte_GetHandle,None,TColStd_HArray1OfByte)
TColStd_HArray1OfByte_swigregister = _TColStd.TColStd_HArray1OfByte_swigregister
TColStd_HArray1OfByte_swigregister(TColStd_HArray1OfByte)

class Handle_TColStd_HArray1OfByte(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray1OfByte_swiginit(self,_TColStd.new_Handle_TColStd_HArray1OfByte(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray1OfByte_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray1OfByte.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfByte_Nullify,None,Handle_TColStd_HArray1OfByte)
Handle_TColStd_HArray1OfByte.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfByte_IsNull,None,Handle_TColStd_HArray1OfByte)
Handle_TColStd_HArray1OfByte.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfByte_GetObject,None,Handle_TColStd_HArray1OfByte)
Handle_TColStd_HArray1OfByte._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfByte__kill_pointed,None,Handle_TColStd_HArray1OfByte)
Handle_TColStd_HArray1OfByte_swigregister = _TColStd.Handle_TColStd_HArray1OfByte_swigregister
Handle_TColStd_HArray1OfByte_swigregister(Handle_TColStd_HArray1OfByte)

def Handle_TColStd_HArray1OfByte_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray1OfByte_DownCast(*args)
Handle_TColStd_HArray1OfByte_DownCast = _TColStd.Handle_TColStd_HArray1OfByte_DownCast

class TColStd_HArray1OfCharacter(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Standard_Character &
        :rtype: None

        """
        _TColStd.TColStd_HArray1OfCharacter_swiginit(self,_TColStd.new_TColStd_HArray1OfCharacter(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Standard_Character &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfCharacter_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfCharacter_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfCharacter_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfCharacter_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Standard_Character &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfCharacter_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_Character

        """
        return _TColStd.TColStd_HArray1OfCharacter_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_Character

        """
        return _TColStd.TColStd_HArray1OfCharacter_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColStd_Array1OfCharacter

        """
        return _TColStd.TColStd_HArray1OfCharacter_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColStd_Array1OfCharacter

        """
        return _TColStd.TColStd_HArray1OfCharacter_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray1OfCharacter self)"""
        return _TColStd.TColStd_HArray1OfCharacter__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray1OfCharacter self) -> Handle_TColStd_HArray1OfCharacter"""
        return _TColStd.TColStd_HArray1OfCharacter_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray1OfCharacter.Init = new_instancemethod(_TColStd.TColStd_HArray1OfCharacter_Init,None,TColStd_HArray1OfCharacter)
TColStd_HArray1OfCharacter.Length = new_instancemethod(_TColStd.TColStd_HArray1OfCharacter_Length,None,TColStd_HArray1OfCharacter)
TColStd_HArray1OfCharacter.Lower = new_instancemethod(_TColStd.TColStd_HArray1OfCharacter_Lower,None,TColStd_HArray1OfCharacter)
TColStd_HArray1OfCharacter.Upper = new_instancemethod(_TColStd.TColStd_HArray1OfCharacter_Upper,None,TColStd_HArray1OfCharacter)
TColStd_HArray1OfCharacter.SetValue = new_instancemethod(_TColStd.TColStd_HArray1OfCharacter_SetValue,None,TColStd_HArray1OfCharacter)
TColStd_HArray1OfCharacter.Value = new_instancemethod(_TColStd.TColStd_HArray1OfCharacter_Value,None,TColStd_HArray1OfCharacter)
TColStd_HArray1OfCharacter.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray1OfCharacter_ChangeValue,None,TColStd_HArray1OfCharacter)
TColStd_HArray1OfCharacter.Array1 = new_instancemethod(_TColStd.TColStd_HArray1OfCharacter_Array1,None,TColStd_HArray1OfCharacter)
TColStd_HArray1OfCharacter.ChangeArray1 = new_instancemethod(_TColStd.TColStd_HArray1OfCharacter_ChangeArray1,None,TColStd_HArray1OfCharacter)
TColStd_HArray1OfCharacter._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray1OfCharacter__kill_pointed,None,TColStd_HArray1OfCharacter)
TColStd_HArray1OfCharacter.GetHandle = new_instancemethod(_TColStd.TColStd_HArray1OfCharacter_GetHandle,None,TColStd_HArray1OfCharacter)
TColStd_HArray1OfCharacter_swigregister = _TColStd.TColStd_HArray1OfCharacter_swigregister
TColStd_HArray1OfCharacter_swigregister(TColStd_HArray1OfCharacter)

class Handle_TColStd_HArray1OfCharacter(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray1OfCharacter_swiginit(self,_TColStd.new_Handle_TColStd_HArray1OfCharacter(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray1OfCharacter_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray1OfCharacter.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfCharacter_Nullify,None,Handle_TColStd_HArray1OfCharacter)
Handle_TColStd_HArray1OfCharacter.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfCharacter_IsNull,None,Handle_TColStd_HArray1OfCharacter)
Handle_TColStd_HArray1OfCharacter.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfCharacter_GetObject,None,Handle_TColStd_HArray1OfCharacter)
Handle_TColStd_HArray1OfCharacter._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfCharacter__kill_pointed,None,Handle_TColStd_HArray1OfCharacter)
Handle_TColStd_HArray1OfCharacter_swigregister = _TColStd.Handle_TColStd_HArray1OfCharacter_swigregister
Handle_TColStd_HArray1OfCharacter_swigregister(Handle_TColStd_HArray1OfCharacter)

def Handle_TColStd_HArray1OfCharacter_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray1OfCharacter_DownCast(*args)
Handle_TColStd_HArray1OfCharacter_DownCast = _TColStd.Handle_TColStd_HArray1OfCharacter_DownCast

class TColStd_HArray1OfExtendedString(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: TCollection_ExtendedString &
        :rtype: None

        """
        _TColStd.TColStd_HArray1OfExtendedString_swiginit(self,_TColStd.new_TColStd_HArray1OfExtendedString(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: TCollection_ExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfExtendedString_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfExtendedString_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfExtendedString_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfExtendedString_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: TCollection_ExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfExtendedString_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_HArray1OfExtendedString_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_HArray1OfExtendedString_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColStd_Array1OfExtendedString

        """
        return _TColStd.TColStd_HArray1OfExtendedString_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColStd_Array1OfExtendedString

        """
        return _TColStd.TColStd_HArray1OfExtendedString_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray1OfExtendedString self)"""
        return _TColStd.TColStd_HArray1OfExtendedString__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray1OfExtendedString self) -> Handle_TColStd_HArray1OfExtendedString"""
        return _TColStd.TColStd_HArray1OfExtendedString_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray1OfExtendedString.Init = new_instancemethod(_TColStd.TColStd_HArray1OfExtendedString_Init,None,TColStd_HArray1OfExtendedString)
TColStd_HArray1OfExtendedString.Length = new_instancemethod(_TColStd.TColStd_HArray1OfExtendedString_Length,None,TColStd_HArray1OfExtendedString)
TColStd_HArray1OfExtendedString.Lower = new_instancemethod(_TColStd.TColStd_HArray1OfExtendedString_Lower,None,TColStd_HArray1OfExtendedString)
TColStd_HArray1OfExtendedString.Upper = new_instancemethod(_TColStd.TColStd_HArray1OfExtendedString_Upper,None,TColStd_HArray1OfExtendedString)
TColStd_HArray1OfExtendedString.SetValue = new_instancemethod(_TColStd.TColStd_HArray1OfExtendedString_SetValue,None,TColStd_HArray1OfExtendedString)
TColStd_HArray1OfExtendedString.Value = new_instancemethod(_TColStd.TColStd_HArray1OfExtendedString_Value,None,TColStd_HArray1OfExtendedString)
TColStd_HArray1OfExtendedString.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray1OfExtendedString_ChangeValue,None,TColStd_HArray1OfExtendedString)
TColStd_HArray1OfExtendedString.Array1 = new_instancemethod(_TColStd.TColStd_HArray1OfExtendedString_Array1,None,TColStd_HArray1OfExtendedString)
TColStd_HArray1OfExtendedString.ChangeArray1 = new_instancemethod(_TColStd.TColStd_HArray1OfExtendedString_ChangeArray1,None,TColStd_HArray1OfExtendedString)
TColStd_HArray1OfExtendedString._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray1OfExtendedString__kill_pointed,None,TColStd_HArray1OfExtendedString)
TColStd_HArray1OfExtendedString.GetHandle = new_instancemethod(_TColStd.TColStd_HArray1OfExtendedString_GetHandle,None,TColStd_HArray1OfExtendedString)
TColStd_HArray1OfExtendedString_swigregister = _TColStd.TColStd_HArray1OfExtendedString_swigregister
TColStd_HArray1OfExtendedString_swigregister(TColStd_HArray1OfExtendedString)

class Handle_TColStd_HArray1OfExtendedString(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray1OfExtendedString_swiginit(self,_TColStd.new_Handle_TColStd_HArray1OfExtendedString(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray1OfExtendedString_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray1OfExtendedString.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfExtendedString_Nullify,None,Handle_TColStd_HArray1OfExtendedString)
Handle_TColStd_HArray1OfExtendedString.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfExtendedString_IsNull,None,Handle_TColStd_HArray1OfExtendedString)
Handle_TColStd_HArray1OfExtendedString.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfExtendedString_GetObject,None,Handle_TColStd_HArray1OfExtendedString)
Handle_TColStd_HArray1OfExtendedString._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfExtendedString__kill_pointed,None,Handle_TColStd_HArray1OfExtendedString)
Handle_TColStd_HArray1OfExtendedString_swigregister = _TColStd.Handle_TColStd_HArray1OfExtendedString_swigregister
Handle_TColStd_HArray1OfExtendedString_swigregister(Handle_TColStd_HArray1OfExtendedString)

def Handle_TColStd_HArray1OfExtendedString_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray1OfExtendedString_DownCast(*args)
Handle_TColStd_HArray1OfExtendedString_DownCast = _TColStd.Handle_TColStd_HArray1OfExtendedString_DownCast

class TColStd_HArray1OfInteger(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: int &
        :rtype: None

        """
        _TColStd.TColStd_HArray1OfInteger_swiginit(self,_TColStd.new_TColStd_HArray1OfInteger(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: int &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfInteger_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfInteger_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfInteger_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfInteger_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: int &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfInteger_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfInteger_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfInteger_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColStd_Array1OfInteger

        """
        return _TColStd.TColStd_HArray1OfInteger_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColStd_Array1OfInteger

        """
        return _TColStd.TColStd_HArray1OfInteger_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray1OfInteger self)"""
        return _TColStd.TColStd_HArray1OfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray1OfInteger self) -> Handle_TColStd_HArray1OfInteger"""
        return _TColStd.TColStd_HArray1OfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray1OfInteger.Init = new_instancemethod(_TColStd.TColStd_HArray1OfInteger_Init,None,TColStd_HArray1OfInteger)
TColStd_HArray1OfInteger.Length = new_instancemethod(_TColStd.TColStd_HArray1OfInteger_Length,None,TColStd_HArray1OfInteger)
TColStd_HArray1OfInteger.Lower = new_instancemethod(_TColStd.TColStd_HArray1OfInteger_Lower,None,TColStd_HArray1OfInteger)
TColStd_HArray1OfInteger.Upper = new_instancemethod(_TColStd.TColStd_HArray1OfInteger_Upper,None,TColStd_HArray1OfInteger)
TColStd_HArray1OfInteger.SetValue = new_instancemethod(_TColStd.TColStd_HArray1OfInteger_SetValue,None,TColStd_HArray1OfInteger)
TColStd_HArray1OfInteger.Value = new_instancemethod(_TColStd.TColStd_HArray1OfInteger_Value,None,TColStd_HArray1OfInteger)
TColStd_HArray1OfInteger.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray1OfInteger_ChangeValue,None,TColStd_HArray1OfInteger)
TColStd_HArray1OfInteger.Array1 = new_instancemethod(_TColStd.TColStd_HArray1OfInteger_Array1,None,TColStd_HArray1OfInteger)
TColStd_HArray1OfInteger.ChangeArray1 = new_instancemethod(_TColStd.TColStd_HArray1OfInteger_ChangeArray1,None,TColStd_HArray1OfInteger)
TColStd_HArray1OfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray1OfInteger__kill_pointed,None,TColStd_HArray1OfInteger)
TColStd_HArray1OfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_HArray1OfInteger_GetHandle,None,TColStd_HArray1OfInteger)
TColStd_HArray1OfInteger_swigregister = _TColStd.TColStd_HArray1OfInteger_swigregister
TColStd_HArray1OfInteger_swigregister(TColStd_HArray1OfInteger)

class Handle_TColStd_HArray1OfInteger(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray1OfInteger_swiginit(self,_TColStd.new_Handle_TColStd_HArray1OfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray1OfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray1OfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfInteger_Nullify,None,Handle_TColStd_HArray1OfInteger)
Handle_TColStd_HArray1OfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfInteger_IsNull,None,Handle_TColStd_HArray1OfInteger)
Handle_TColStd_HArray1OfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfInteger_GetObject,None,Handle_TColStd_HArray1OfInteger)
Handle_TColStd_HArray1OfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfInteger__kill_pointed,None,Handle_TColStd_HArray1OfInteger)
Handle_TColStd_HArray1OfInteger_swigregister = _TColStd.Handle_TColStd_HArray1OfInteger_swigregister
Handle_TColStd_HArray1OfInteger_swigregister(Handle_TColStd_HArray1OfInteger)

def Handle_TColStd_HArray1OfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray1OfInteger_DownCast(*args)
Handle_TColStd_HArray1OfInteger_DownCast = _TColStd.Handle_TColStd_HArray1OfInteger_DownCast

class TColStd_HArray1OfListOfInteger(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: TColStd_ListOfInteger &
        :rtype: None

        """
        _TColStd.TColStd_HArray1OfListOfInteger_swiginit(self,_TColStd.new_TColStd_HArray1OfListOfInteger(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: TColStd_ListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfListOfInteger_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfListOfInteger_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfListOfInteger_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfListOfInteger_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: TColStd_ListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfListOfInteger_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TColStd_ListOfInteger

        """
        return _TColStd.TColStd_HArray1OfListOfInteger_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TColStd_ListOfInteger

        """
        return _TColStd.TColStd_HArray1OfListOfInteger_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColStd_Array1OfListOfInteger

        """
        return _TColStd.TColStd_HArray1OfListOfInteger_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColStd_Array1OfListOfInteger

        """
        return _TColStd.TColStd_HArray1OfListOfInteger_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray1OfListOfInteger self)"""
        return _TColStd.TColStd_HArray1OfListOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray1OfListOfInteger self) -> Handle_TColStd_HArray1OfListOfInteger"""
        return _TColStd.TColStd_HArray1OfListOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray1OfListOfInteger.Init = new_instancemethod(_TColStd.TColStd_HArray1OfListOfInteger_Init,None,TColStd_HArray1OfListOfInteger)
TColStd_HArray1OfListOfInteger.Length = new_instancemethod(_TColStd.TColStd_HArray1OfListOfInteger_Length,None,TColStd_HArray1OfListOfInteger)
TColStd_HArray1OfListOfInteger.Lower = new_instancemethod(_TColStd.TColStd_HArray1OfListOfInteger_Lower,None,TColStd_HArray1OfListOfInteger)
TColStd_HArray1OfListOfInteger.Upper = new_instancemethod(_TColStd.TColStd_HArray1OfListOfInteger_Upper,None,TColStd_HArray1OfListOfInteger)
TColStd_HArray1OfListOfInteger.SetValue = new_instancemethod(_TColStd.TColStd_HArray1OfListOfInteger_SetValue,None,TColStd_HArray1OfListOfInteger)
TColStd_HArray1OfListOfInteger.Value = new_instancemethod(_TColStd.TColStd_HArray1OfListOfInteger_Value,None,TColStd_HArray1OfListOfInteger)
TColStd_HArray1OfListOfInteger.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray1OfListOfInteger_ChangeValue,None,TColStd_HArray1OfListOfInteger)
TColStd_HArray1OfListOfInteger.Array1 = new_instancemethod(_TColStd.TColStd_HArray1OfListOfInteger_Array1,None,TColStd_HArray1OfListOfInteger)
TColStd_HArray1OfListOfInteger.ChangeArray1 = new_instancemethod(_TColStd.TColStd_HArray1OfListOfInteger_ChangeArray1,None,TColStd_HArray1OfListOfInteger)
TColStd_HArray1OfListOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray1OfListOfInteger__kill_pointed,None,TColStd_HArray1OfListOfInteger)
TColStd_HArray1OfListOfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_HArray1OfListOfInteger_GetHandle,None,TColStd_HArray1OfListOfInteger)
TColStd_HArray1OfListOfInteger_swigregister = _TColStd.TColStd_HArray1OfListOfInteger_swigregister
TColStd_HArray1OfListOfInteger_swigregister(TColStd_HArray1OfListOfInteger)

class Handle_TColStd_HArray1OfListOfInteger(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray1OfListOfInteger_swiginit(self,_TColStd.new_Handle_TColStd_HArray1OfListOfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray1OfListOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray1OfListOfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfListOfInteger_Nullify,None,Handle_TColStd_HArray1OfListOfInteger)
Handle_TColStd_HArray1OfListOfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfListOfInteger_IsNull,None,Handle_TColStd_HArray1OfListOfInteger)
Handle_TColStd_HArray1OfListOfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfListOfInteger_GetObject,None,Handle_TColStd_HArray1OfListOfInteger)
Handle_TColStd_HArray1OfListOfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfListOfInteger__kill_pointed,None,Handle_TColStd_HArray1OfListOfInteger)
Handle_TColStd_HArray1OfListOfInteger_swigregister = _TColStd.Handle_TColStd_HArray1OfListOfInteger_swigregister
Handle_TColStd_HArray1OfListOfInteger_swigregister(Handle_TColStd_HArray1OfListOfInteger)

def Handle_TColStd_HArray1OfListOfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray1OfListOfInteger_DownCast(*args)
Handle_TColStd_HArray1OfListOfInteger_DownCast = _TColStd.Handle_TColStd_HArray1OfListOfInteger_DownCast

class TColStd_HArray1OfReal(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: float &
        :rtype: None

        """
        _TColStd.TColStd_HArray1OfReal_swiginit(self,_TColStd.new_TColStd_HArray1OfReal(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: float &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfReal_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfReal_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfReal_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfReal_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: float &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfReal_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: float

        """
        return _TColStd.TColStd_HArray1OfReal_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: float

        """
        return _TColStd.TColStd_HArray1OfReal_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColStd_Array1OfReal

        """
        return _TColStd.TColStd_HArray1OfReal_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColStd_Array1OfReal

        """
        return _TColStd.TColStd_HArray1OfReal_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray1OfReal self)"""
        return _TColStd.TColStd_HArray1OfReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray1OfReal self) -> Handle_TColStd_HArray1OfReal"""
        return _TColStd.TColStd_HArray1OfReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray1OfReal.Init = new_instancemethod(_TColStd.TColStd_HArray1OfReal_Init,None,TColStd_HArray1OfReal)
TColStd_HArray1OfReal.Length = new_instancemethod(_TColStd.TColStd_HArray1OfReal_Length,None,TColStd_HArray1OfReal)
TColStd_HArray1OfReal.Lower = new_instancemethod(_TColStd.TColStd_HArray1OfReal_Lower,None,TColStd_HArray1OfReal)
TColStd_HArray1OfReal.Upper = new_instancemethod(_TColStd.TColStd_HArray1OfReal_Upper,None,TColStd_HArray1OfReal)
TColStd_HArray1OfReal.SetValue = new_instancemethod(_TColStd.TColStd_HArray1OfReal_SetValue,None,TColStd_HArray1OfReal)
TColStd_HArray1OfReal.Value = new_instancemethod(_TColStd.TColStd_HArray1OfReal_Value,None,TColStd_HArray1OfReal)
TColStd_HArray1OfReal.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray1OfReal_ChangeValue,None,TColStd_HArray1OfReal)
TColStd_HArray1OfReal.Array1 = new_instancemethod(_TColStd.TColStd_HArray1OfReal_Array1,None,TColStd_HArray1OfReal)
TColStd_HArray1OfReal.ChangeArray1 = new_instancemethod(_TColStd.TColStd_HArray1OfReal_ChangeArray1,None,TColStd_HArray1OfReal)
TColStd_HArray1OfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray1OfReal__kill_pointed,None,TColStd_HArray1OfReal)
TColStd_HArray1OfReal.GetHandle = new_instancemethod(_TColStd.TColStd_HArray1OfReal_GetHandle,None,TColStd_HArray1OfReal)
TColStd_HArray1OfReal_swigregister = _TColStd.TColStd_HArray1OfReal_swigregister
TColStd_HArray1OfReal_swigregister(TColStd_HArray1OfReal)

class Handle_TColStd_HArray1OfReal(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray1OfReal_swiginit(self,_TColStd.new_Handle_TColStd_HArray1OfReal(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray1OfReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray1OfReal.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfReal_Nullify,None,Handle_TColStd_HArray1OfReal)
Handle_TColStd_HArray1OfReal.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfReal_IsNull,None,Handle_TColStd_HArray1OfReal)
Handle_TColStd_HArray1OfReal.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfReal_GetObject,None,Handle_TColStd_HArray1OfReal)
Handle_TColStd_HArray1OfReal._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfReal__kill_pointed,None,Handle_TColStd_HArray1OfReal)
Handle_TColStd_HArray1OfReal_swigregister = _TColStd.Handle_TColStd_HArray1OfReal_swigregister
Handle_TColStd_HArray1OfReal_swigregister(Handle_TColStd_HArray1OfReal)

def Handle_TColStd_HArray1OfReal_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray1OfReal_DownCast(*args)
Handle_TColStd_HArray1OfReal_DownCast = _TColStd.Handle_TColStd_HArray1OfReal_DownCast

class TColStd_HArray1OfTransient(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Handle_Standard_Transient &
        :rtype: None

        """
        _TColStd.TColStd_HArray1OfTransient_swiginit(self,_TColStd.new_TColStd_HArray1OfTransient(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfTransient_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfTransient_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfTransient_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray1OfTransient_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_HArray1OfTransient_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_HArray1OfTransient_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_HArray1OfTransient_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColStd_Array1OfTransient

        """
        return _TColStd.TColStd_HArray1OfTransient_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColStd_Array1OfTransient

        """
        return _TColStd.TColStd_HArray1OfTransient_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray1OfTransient self)"""
        return _TColStd.TColStd_HArray1OfTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray1OfTransient self) -> Handle_TColStd_HArray1OfTransient"""
        return _TColStd.TColStd_HArray1OfTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray1OfTransient.Init = new_instancemethod(_TColStd.TColStd_HArray1OfTransient_Init,None,TColStd_HArray1OfTransient)
TColStd_HArray1OfTransient.Length = new_instancemethod(_TColStd.TColStd_HArray1OfTransient_Length,None,TColStd_HArray1OfTransient)
TColStd_HArray1OfTransient.Lower = new_instancemethod(_TColStd.TColStd_HArray1OfTransient_Lower,None,TColStd_HArray1OfTransient)
TColStd_HArray1OfTransient.Upper = new_instancemethod(_TColStd.TColStd_HArray1OfTransient_Upper,None,TColStd_HArray1OfTransient)
TColStd_HArray1OfTransient.SetValue = new_instancemethod(_TColStd.TColStd_HArray1OfTransient_SetValue,None,TColStd_HArray1OfTransient)
TColStd_HArray1OfTransient.Value = new_instancemethod(_TColStd.TColStd_HArray1OfTransient_Value,None,TColStd_HArray1OfTransient)
TColStd_HArray1OfTransient.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray1OfTransient_ChangeValue,None,TColStd_HArray1OfTransient)
TColStd_HArray1OfTransient.Array1 = new_instancemethod(_TColStd.TColStd_HArray1OfTransient_Array1,None,TColStd_HArray1OfTransient)
TColStd_HArray1OfTransient.ChangeArray1 = new_instancemethod(_TColStd.TColStd_HArray1OfTransient_ChangeArray1,None,TColStd_HArray1OfTransient)
TColStd_HArray1OfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray1OfTransient__kill_pointed,None,TColStd_HArray1OfTransient)
TColStd_HArray1OfTransient.GetHandle = new_instancemethod(_TColStd.TColStd_HArray1OfTransient_GetHandle,None,TColStd_HArray1OfTransient)
TColStd_HArray1OfTransient_swigregister = _TColStd.TColStd_HArray1OfTransient_swigregister
TColStd_HArray1OfTransient_swigregister(TColStd_HArray1OfTransient)

class Handle_TColStd_HArray1OfTransient(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray1OfTransient_swiginit(self,_TColStd.new_Handle_TColStd_HArray1OfTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray1OfTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray1OfTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfTransient_Nullify,None,Handle_TColStd_HArray1OfTransient)
Handle_TColStd_HArray1OfTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfTransient_IsNull,None,Handle_TColStd_HArray1OfTransient)
Handle_TColStd_HArray1OfTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfTransient_GetObject,None,Handle_TColStd_HArray1OfTransient)
Handle_TColStd_HArray1OfTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray1OfTransient__kill_pointed,None,Handle_TColStd_HArray1OfTransient)
Handle_TColStd_HArray1OfTransient_swigregister = _TColStd.Handle_TColStd_HArray1OfTransient_swigregister
Handle_TColStd_HArray1OfTransient_swigregister(Handle_TColStd_HArray1OfTransient)

def Handle_TColStd_HArray1OfTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray1OfTransient_DownCast(*args)
Handle_TColStd_HArray1OfTransient_DownCast = _TColStd.Handle_TColStd_HArray1OfTransient_DownCast

class TColStd_HArray2OfBoolean(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: bool
        :rtype: None

        """
        _TColStd.TColStd_HArray2OfBoolean_swiginit(self,_TColStd.new_TColStd_HArray2OfBoolean(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: bool
        :rtype: None

        """
        return _TColStd.TColStd_HArray2OfBoolean_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfBoolean_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfBoolean_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfBoolean_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfBoolean_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfBoolean_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfBoolean_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: bool
        :rtype: None

        """
        return _TColStd.TColStd_HArray2OfBoolean_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: bool

        """
        return _TColStd.TColStd_HArray2OfBoolean_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: bool

        """
        return _TColStd.TColStd_HArray2OfBoolean_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColStd_Array2OfBoolean

        """
        return _TColStd.TColStd_HArray2OfBoolean_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColStd_Array2OfBoolean

        """
        return _TColStd.TColStd_HArray2OfBoolean_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray2OfBoolean self)"""
        return _TColStd.TColStd_HArray2OfBoolean__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray2OfBoolean self) -> Handle_TColStd_HArray2OfBoolean"""
        return _TColStd.TColStd_HArray2OfBoolean_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray2OfBoolean.Init = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_Init,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean.ColLength = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_ColLength,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean.RowLength = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_RowLength,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean.LowerCol = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_LowerCol,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean.LowerRow = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_LowerRow,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean.UpperCol = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_UpperCol,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean.UpperRow = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_UpperRow,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean.SetValue = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_SetValue,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean.Value = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_Value,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_ChangeValue,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean.Array2 = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_Array2,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean.ChangeArray2 = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_ChangeArray2,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean__kill_pointed,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean.GetHandle = new_instancemethod(_TColStd.TColStd_HArray2OfBoolean_GetHandle,None,TColStd_HArray2OfBoolean)
TColStd_HArray2OfBoolean_swigregister = _TColStd.TColStd_HArray2OfBoolean_swigregister
TColStd_HArray2OfBoolean_swigregister(TColStd_HArray2OfBoolean)

class Handle_TColStd_HArray2OfBoolean(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray2OfBoolean_swiginit(self,_TColStd.new_Handle_TColStd_HArray2OfBoolean(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray2OfBoolean_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray2OfBoolean.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfBoolean_Nullify,None,Handle_TColStd_HArray2OfBoolean)
Handle_TColStd_HArray2OfBoolean.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfBoolean_IsNull,None,Handle_TColStd_HArray2OfBoolean)
Handle_TColStd_HArray2OfBoolean.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfBoolean_GetObject,None,Handle_TColStd_HArray2OfBoolean)
Handle_TColStd_HArray2OfBoolean._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfBoolean__kill_pointed,None,Handle_TColStd_HArray2OfBoolean)
Handle_TColStd_HArray2OfBoolean_swigregister = _TColStd.Handle_TColStd_HArray2OfBoolean_swigregister
Handle_TColStd_HArray2OfBoolean_swigregister(Handle_TColStd_HArray2OfBoolean)

def Handle_TColStd_HArray2OfBoolean_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray2OfBoolean_DownCast(*args)
Handle_TColStd_HArray2OfBoolean_DownCast = _TColStd.Handle_TColStd_HArray2OfBoolean_DownCast

class TColStd_HArray2OfCharacter(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: Standard_Character &
        :rtype: None

        """
        _TColStd.TColStd_HArray2OfCharacter_swiginit(self,_TColStd.new_TColStd_HArray2OfCharacter(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Standard_Character &
        :rtype: None

        """
        return _TColStd.TColStd_HArray2OfCharacter_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfCharacter_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfCharacter_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfCharacter_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfCharacter_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfCharacter_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfCharacter_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Standard_Character &
        :rtype: None

        """
        return _TColStd.TColStd_HArray2OfCharacter_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Standard_Character

        """
        return _TColStd.TColStd_HArray2OfCharacter_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Standard_Character

        """
        return _TColStd.TColStd_HArray2OfCharacter_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColStd_Array2OfCharacter

        """
        return _TColStd.TColStd_HArray2OfCharacter_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColStd_Array2OfCharacter

        """
        return _TColStd.TColStd_HArray2OfCharacter_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray2OfCharacter self)"""
        return _TColStd.TColStd_HArray2OfCharacter__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray2OfCharacter self) -> Handle_TColStd_HArray2OfCharacter"""
        return _TColStd.TColStd_HArray2OfCharacter_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray2OfCharacter.Init = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_Init,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter.ColLength = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_ColLength,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter.RowLength = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_RowLength,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter.LowerCol = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_LowerCol,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter.LowerRow = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_LowerRow,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter.UpperCol = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_UpperCol,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter.UpperRow = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_UpperRow,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter.SetValue = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_SetValue,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter.Value = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_Value,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_ChangeValue,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter.Array2 = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_Array2,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter.ChangeArray2 = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_ChangeArray2,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter__kill_pointed,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter.GetHandle = new_instancemethod(_TColStd.TColStd_HArray2OfCharacter_GetHandle,None,TColStd_HArray2OfCharacter)
TColStd_HArray2OfCharacter_swigregister = _TColStd.TColStd_HArray2OfCharacter_swigregister
TColStd_HArray2OfCharacter_swigregister(TColStd_HArray2OfCharacter)

class Handle_TColStd_HArray2OfCharacter(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray2OfCharacter_swiginit(self,_TColStd.new_Handle_TColStd_HArray2OfCharacter(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray2OfCharacter_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray2OfCharacter.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfCharacter_Nullify,None,Handle_TColStd_HArray2OfCharacter)
Handle_TColStd_HArray2OfCharacter.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfCharacter_IsNull,None,Handle_TColStd_HArray2OfCharacter)
Handle_TColStd_HArray2OfCharacter.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfCharacter_GetObject,None,Handle_TColStd_HArray2OfCharacter)
Handle_TColStd_HArray2OfCharacter._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfCharacter__kill_pointed,None,Handle_TColStd_HArray2OfCharacter)
Handle_TColStd_HArray2OfCharacter_swigregister = _TColStd.Handle_TColStd_HArray2OfCharacter_swigregister
Handle_TColStd_HArray2OfCharacter_swigregister(Handle_TColStd_HArray2OfCharacter)

def Handle_TColStd_HArray2OfCharacter_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray2OfCharacter_DownCast(*args)
Handle_TColStd_HArray2OfCharacter_DownCast = _TColStd.Handle_TColStd_HArray2OfCharacter_DownCast

class TColStd_HArray2OfInteger(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: int &
        :rtype: None

        """
        _TColStd.TColStd_HArray2OfInteger_swiginit(self,_TColStd.new_TColStd_HArray2OfInteger(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: int &
        :rtype: None

        """
        return _TColStd.TColStd_HArray2OfInteger_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfInteger_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfInteger_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfInteger_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfInteger_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfInteger_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfInteger_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: int &
        :rtype: None

        """
        return _TColStd.TColStd_HArray2OfInteger_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfInteger_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfInteger_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColStd_Array2OfInteger

        """
        return _TColStd.TColStd_HArray2OfInteger_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColStd_Array2OfInteger

        """
        return _TColStd.TColStd_HArray2OfInteger_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray2OfInteger self)"""
        return _TColStd.TColStd_HArray2OfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray2OfInteger self) -> Handle_TColStd_HArray2OfInteger"""
        return _TColStd.TColStd_HArray2OfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray2OfInteger.Init = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_Init,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger.ColLength = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_ColLength,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger.RowLength = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_RowLength,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger.LowerCol = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_LowerCol,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger.LowerRow = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_LowerRow,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger.UpperCol = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_UpperCol,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger.UpperRow = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_UpperRow,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger.SetValue = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_SetValue,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger.Value = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_Value,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_ChangeValue,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger.Array2 = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_Array2,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger.ChangeArray2 = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_ChangeArray2,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray2OfInteger__kill_pointed,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_HArray2OfInteger_GetHandle,None,TColStd_HArray2OfInteger)
TColStd_HArray2OfInteger_swigregister = _TColStd.TColStd_HArray2OfInteger_swigregister
TColStd_HArray2OfInteger_swigregister(TColStd_HArray2OfInteger)

class Handle_TColStd_HArray2OfInteger(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray2OfInteger_swiginit(self,_TColStd.new_Handle_TColStd_HArray2OfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray2OfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray2OfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfInteger_Nullify,None,Handle_TColStd_HArray2OfInteger)
Handle_TColStd_HArray2OfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfInteger_IsNull,None,Handle_TColStd_HArray2OfInteger)
Handle_TColStd_HArray2OfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfInteger_GetObject,None,Handle_TColStd_HArray2OfInteger)
Handle_TColStd_HArray2OfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfInteger__kill_pointed,None,Handle_TColStd_HArray2OfInteger)
Handle_TColStd_HArray2OfInteger_swigregister = _TColStd.Handle_TColStd_HArray2OfInteger_swigregister
Handle_TColStd_HArray2OfInteger_swigregister(Handle_TColStd_HArray2OfInteger)

def Handle_TColStd_HArray2OfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray2OfInteger_DownCast(*args)
Handle_TColStd_HArray2OfInteger_DownCast = _TColStd.Handle_TColStd_HArray2OfInteger_DownCast

class TColStd_HArray2OfReal(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: float &
        :rtype: None

        """
        _TColStd.TColStd_HArray2OfReal_swiginit(self,_TColStd.new_TColStd_HArray2OfReal(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: float &
        :rtype: None

        """
        return _TColStd.TColStd_HArray2OfReal_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfReal_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfReal_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfReal_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfReal_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfReal_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfReal_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: float &
        :rtype: None

        """
        return _TColStd.TColStd_HArray2OfReal_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: float

        """
        return _TColStd.TColStd_HArray2OfReal_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: float

        """
        return _TColStd.TColStd_HArray2OfReal_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColStd_Array2OfReal

        """
        return _TColStd.TColStd_HArray2OfReal_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColStd_Array2OfReal

        """
        return _TColStd.TColStd_HArray2OfReal_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray2OfReal self)"""
        return _TColStd.TColStd_HArray2OfReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray2OfReal self) -> Handle_TColStd_HArray2OfReal"""
        return _TColStd.TColStd_HArray2OfReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray2OfReal.Init = new_instancemethod(_TColStd.TColStd_HArray2OfReal_Init,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal.ColLength = new_instancemethod(_TColStd.TColStd_HArray2OfReal_ColLength,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal.RowLength = new_instancemethod(_TColStd.TColStd_HArray2OfReal_RowLength,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal.LowerCol = new_instancemethod(_TColStd.TColStd_HArray2OfReal_LowerCol,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal.LowerRow = new_instancemethod(_TColStd.TColStd_HArray2OfReal_LowerRow,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal.UpperCol = new_instancemethod(_TColStd.TColStd_HArray2OfReal_UpperCol,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal.UpperRow = new_instancemethod(_TColStd.TColStd_HArray2OfReal_UpperRow,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal.SetValue = new_instancemethod(_TColStd.TColStd_HArray2OfReal_SetValue,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal.Value = new_instancemethod(_TColStd.TColStd_HArray2OfReal_Value,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray2OfReal_ChangeValue,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal.Array2 = new_instancemethod(_TColStd.TColStd_HArray2OfReal_Array2,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal.ChangeArray2 = new_instancemethod(_TColStd.TColStd_HArray2OfReal_ChangeArray2,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray2OfReal__kill_pointed,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal.GetHandle = new_instancemethod(_TColStd.TColStd_HArray2OfReal_GetHandle,None,TColStd_HArray2OfReal)
TColStd_HArray2OfReal_swigregister = _TColStd.TColStd_HArray2OfReal_swigregister
TColStd_HArray2OfReal_swigregister(TColStd_HArray2OfReal)

class Handle_TColStd_HArray2OfReal(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray2OfReal_swiginit(self,_TColStd.new_Handle_TColStd_HArray2OfReal(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray2OfReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray2OfReal.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfReal_Nullify,None,Handle_TColStd_HArray2OfReal)
Handle_TColStd_HArray2OfReal.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfReal_IsNull,None,Handle_TColStd_HArray2OfReal)
Handle_TColStd_HArray2OfReal.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfReal_GetObject,None,Handle_TColStd_HArray2OfReal)
Handle_TColStd_HArray2OfReal._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfReal__kill_pointed,None,Handle_TColStd_HArray2OfReal)
Handle_TColStd_HArray2OfReal_swigregister = _TColStd.Handle_TColStd_HArray2OfReal_swigregister
Handle_TColStd_HArray2OfReal_swigregister(Handle_TColStd_HArray2OfReal)

def Handle_TColStd_HArray2OfReal_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray2OfReal_DownCast(*args)
Handle_TColStd_HArray2OfReal_DownCast = _TColStd.Handle_TColStd_HArray2OfReal_DownCast

class TColStd_HArray2OfTransient(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: Handle_Standard_Transient &
        :rtype: None

        """
        _TColStd.TColStd_HArray2OfTransient_swiginit(self,_TColStd.new_TColStd_HArray2OfTransient(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_HArray2OfTransient_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfTransient_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfTransient_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfTransient_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfTransient_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfTransient_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HArray2OfTransient_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_HArray2OfTransient_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_HArray2OfTransient_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_HArray2OfTransient_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColStd_Array2OfTransient

        """
        return _TColStd.TColStd_HArray2OfTransient_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColStd_Array2OfTransient

        """
        return _TColStd.TColStd_HArray2OfTransient_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HArray2OfTransient self)"""
        return _TColStd.TColStd_HArray2OfTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HArray2OfTransient self) -> Handle_TColStd_HArray2OfTransient"""
        return _TColStd.TColStd_HArray2OfTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HArray2OfTransient.Init = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_Init,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient.ColLength = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_ColLength,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient.RowLength = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_RowLength,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient.LowerCol = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_LowerCol,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient.LowerRow = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_LowerRow,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient.UpperCol = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_UpperCol,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient.UpperRow = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_UpperRow,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient.SetValue = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_SetValue,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient.Value = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_Value,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient.ChangeValue = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_ChangeValue,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient.Array2 = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_Array2,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient.ChangeArray2 = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_ChangeArray2,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_HArray2OfTransient__kill_pointed,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient.GetHandle = new_instancemethod(_TColStd.TColStd_HArray2OfTransient_GetHandle,None,TColStd_HArray2OfTransient)
TColStd_HArray2OfTransient_swigregister = _TColStd.TColStd_HArray2OfTransient_swigregister
TColStd_HArray2OfTransient_swigregister(TColStd_HArray2OfTransient)

class Handle_TColStd_HArray2OfTransient(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HArray2OfTransient_swiginit(self,_TColStd.new_Handle_TColStd_HArray2OfTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HArray2OfTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HArray2OfTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfTransient_Nullify,None,Handle_TColStd_HArray2OfTransient)
Handle_TColStd_HArray2OfTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfTransient_IsNull,None,Handle_TColStd_HArray2OfTransient)
Handle_TColStd_HArray2OfTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfTransient_GetObject,None,Handle_TColStd_HArray2OfTransient)
Handle_TColStd_HArray2OfTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HArray2OfTransient__kill_pointed,None,Handle_TColStd_HArray2OfTransient)
Handle_TColStd_HArray2OfTransient_swigregister = _TColStd.Handle_TColStd_HArray2OfTransient_swigregister
Handle_TColStd_HArray2OfTransient_swigregister(Handle_TColStd_HArray2OfTransient)

def Handle_TColStd_HArray2OfTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_HArray2OfTransient_DownCast(*args)
Handle_TColStd_HArray2OfTransient_DownCast = _TColStd.Handle_TColStd_HArray2OfTransient_DownCast

class TColStd_HPackedMapOfInteger(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        :param theOther:
        :type theOther: TColStd_PackedMapOfInteger &
        :rtype: None

        """
        _TColStd.TColStd_HPackedMapOfInteger_swiginit(self,_TColStd.new_TColStd_HPackedMapOfInteger(*args))
    def Map(self, *args):
        """
        :rtype: TColStd_PackedMapOfInteger

        """
        return _TColStd.TColStd_HPackedMapOfInteger_Map(self, *args)

    def ChangeMap(self, *args):
        """
        :rtype: TColStd_PackedMapOfInteger

        """
        return _TColStd.TColStd_HPackedMapOfInteger_ChangeMap(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HPackedMapOfInteger self)"""
        return _TColStd.TColStd_HPackedMapOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HPackedMapOfInteger self) -> Handle_TColStd_HPackedMapOfInteger"""
        return _TColStd.TColStd_HPackedMapOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HPackedMapOfInteger.Map = new_instancemethod(_TColStd.TColStd_HPackedMapOfInteger_Map,None,TColStd_HPackedMapOfInteger)
TColStd_HPackedMapOfInteger.ChangeMap = new_instancemethod(_TColStd.TColStd_HPackedMapOfInteger_ChangeMap,None,TColStd_HPackedMapOfInteger)
TColStd_HPackedMapOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_HPackedMapOfInteger__kill_pointed,None,TColStd_HPackedMapOfInteger)
TColStd_HPackedMapOfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_HPackedMapOfInteger_GetHandle,None,TColStd_HPackedMapOfInteger)
TColStd_HPackedMapOfInteger_swigregister = _TColStd.TColStd_HPackedMapOfInteger_swigregister
TColStd_HPackedMapOfInteger_swigregister(TColStd_HPackedMapOfInteger)

class Handle_TColStd_HPackedMapOfInteger(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HPackedMapOfInteger_swiginit(self,_TColStd.new_Handle_TColStd_HPackedMapOfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HPackedMapOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HPackedMapOfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HPackedMapOfInteger_Nullify,None,Handle_TColStd_HPackedMapOfInteger)
Handle_TColStd_HPackedMapOfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HPackedMapOfInteger_IsNull,None,Handle_TColStd_HPackedMapOfInteger)
Handle_TColStd_HPackedMapOfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HPackedMapOfInteger_GetObject,None,Handle_TColStd_HPackedMapOfInteger)
Handle_TColStd_HPackedMapOfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HPackedMapOfInteger__kill_pointed,None,Handle_TColStd_HPackedMapOfInteger)
Handle_TColStd_HPackedMapOfInteger_swigregister = _TColStd.Handle_TColStd_HPackedMapOfInteger_swigregister
Handle_TColStd_HPackedMapOfInteger_swigregister(Handle_TColStd_HPackedMapOfInteger)

def Handle_TColStd_HPackedMapOfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_HPackedMapOfInteger_DownCast(*args)
Handle_TColStd_HPackedMapOfInteger_DownCast = _TColStd.Handle_TColStd_HPackedMapOfInteger_DownCast

class TColStd_HSequenceOfAsciiString(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_HSequenceOfAsciiString_swiginit(self,_TColStd.new_TColStd_HSequenceOfAsciiString(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: TCollection_AsciiString &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: TCollection_AsciiString &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: TCollection_AsciiString &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: TCollection_AsciiString &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColStd_HSequenceOfAsciiString

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: TCollection_AsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColStd_SequenceOfAsciiString

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColStd_SequenceOfAsciiString

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColStd_HSequenceOfAsciiString

        """
        return _TColStd.TColStd_HSequenceOfAsciiString_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HSequenceOfAsciiString self)"""
        return _TColStd.TColStd_HSequenceOfAsciiString__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HSequenceOfAsciiString self) -> Handle_TColStd_HSequenceOfAsciiString"""
        return _TColStd.TColStd_HSequenceOfAsciiString_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HSequenceOfAsciiString.IsEmpty = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_IsEmpty,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.Length = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_Length,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.Clear = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_Clear,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.Append = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_Append,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.Prepend = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_Prepend,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.Reverse = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_Reverse,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.InsertBefore = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_InsertBefore,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.InsertAfter = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_InsertAfter,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.Exchange = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_Exchange,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.Split = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_Split,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.SetValue = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_SetValue,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.Value = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_Value,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.ChangeValue = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_ChangeValue,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.Remove = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_Remove,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.Sequence = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_Sequence,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.ChangeSequence = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_ChangeSequence,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.ShallowCopy = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_ShallowCopy,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString__kill_pointed,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString.GetHandle = new_instancemethod(_TColStd.TColStd_HSequenceOfAsciiString_GetHandle,None,TColStd_HSequenceOfAsciiString)
TColStd_HSequenceOfAsciiString_swigregister = _TColStd.TColStd_HSequenceOfAsciiString_swigregister
TColStd_HSequenceOfAsciiString_swigregister(TColStd_HSequenceOfAsciiString)

class Handle_TColStd_HSequenceOfAsciiString(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HSequenceOfAsciiString_swiginit(self,_TColStd.new_Handle_TColStd_HSequenceOfAsciiString(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HSequenceOfAsciiString_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HSequenceOfAsciiString.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfAsciiString_Nullify,None,Handle_TColStd_HSequenceOfAsciiString)
Handle_TColStd_HSequenceOfAsciiString.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfAsciiString_IsNull,None,Handle_TColStd_HSequenceOfAsciiString)
Handle_TColStd_HSequenceOfAsciiString.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfAsciiString_GetObject,None,Handle_TColStd_HSequenceOfAsciiString)
Handle_TColStd_HSequenceOfAsciiString._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfAsciiString__kill_pointed,None,Handle_TColStd_HSequenceOfAsciiString)
Handle_TColStd_HSequenceOfAsciiString_swigregister = _TColStd.Handle_TColStd_HSequenceOfAsciiString_swigregister
Handle_TColStd_HSequenceOfAsciiString_swigregister(Handle_TColStd_HSequenceOfAsciiString)

def Handle_TColStd_HSequenceOfAsciiString_DownCast(*args):
  return _TColStd.Handle_TColStd_HSequenceOfAsciiString_DownCast(*args)
Handle_TColStd_HSequenceOfAsciiString_DownCast = _TColStd.Handle_TColStd_HSequenceOfAsciiString_DownCast

class TColStd_HSequenceOfExtendedString(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_HSequenceOfExtendedString_swiginit(self,_TColStd.new_TColStd_HSequenceOfExtendedString(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: TCollection_ExtendedString &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: TCollection_ExtendedString &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: TCollection_ExtendedString &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: TCollection_ExtendedString &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColStd_HSequenceOfExtendedString

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: TCollection_ExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColStd_SequenceOfExtendedString

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColStd_SequenceOfExtendedString

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColStd_HSequenceOfExtendedString

        """
        return _TColStd.TColStd_HSequenceOfExtendedString_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HSequenceOfExtendedString self)"""
        return _TColStd.TColStd_HSequenceOfExtendedString__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HSequenceOfExtendedString self) -> Handle_TColStd_HSequenceOfExtendedString"""
        return _TColStd.TColStd_HSequenceOfExtendedString_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HSequenceOfExtendedString.IsEmpty = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_IsEmpty,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.Length = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_Length,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.Clear = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_Clear,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.Append = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_Append,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.Prepend = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_Prepend,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.Reverse = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_Reverse,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.InsertBefore = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_InsertBefore,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.InsertAfter = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_InsertAfter,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.Exchange = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_Exchange,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.Split = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_Split,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.SetValue = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_SetValue,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.Value = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_Value,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.ChangeValue = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_ChangeValue,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.Remove = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_Remove,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.Sequence = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_Sequence,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.ChangeSequence = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_ChangeSequence,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.ShallowCopy = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_ShallowCopy,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString._kill_pointed = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString__kill_pointed,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString.GetHandle = new_instancemethod(_TColStd.TColStd_HSequenceOfExtendedString_GetHandle,None,TColStd_HSequenceOfExtendedString)
TColStd_HSequenceOfExtendedString_swigregister = _TColStd.TColStd_HSequenceOfExtendedString_swigregister
TColStd_HSequenceOfExtendedString_swigregister(TColStd_HSequenceOfExtendedString)

class Handle_TColStd_HSequenceOfExtendedString(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HSequenceOfExtendedString_swiginit(self,_TColStd.new_Handle_TColStd_HSequenceOfExtendedString(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HSequenceOfExtendedString_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HSequenceOfExtendedString.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfExtendedString_Nullify,None,Handle_TColStd_HSequenceOfExtendedString)
Handle_TColStd_HSequenceOfExtendedString.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfExtendedString_IsNull,None,Handle_TColStd_HSequenceOfExtendedString)
Handle_TColStd_HSequenceOfExtendedString.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfExtendedString_GetObject,None,Handle_TColStd_HSequenceOfExtendedString)
Handle_TColStd_HSequenceOfExtendedString._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfExtendedString__kill_pointed,None,Handle_TColStd_HSequenceOfExtendedString)
Handle_TColStd_HSequenceOfExtendedString_swigregister = _TColStd.Handle_TColStd_HSequenceOfExtendedString_swigregister
Handle_TColStd_HSequenceOfExtendedString_swigregister(Handle_TColStd_HSequenceOfExtendedString)

def Handle_TColStd_HSequenceOfExtendedString_DownCast(*args):
  return _TColStd.Handle_TColStd_HSequenceOfExtendedString_DownCast(*args)
Handle_TColStd_HSequenceOfExtendedString_DownCast = _TColStd.Handle_TColStd_HSequenceOfExtendedString_DownCast

class TColStd_HSequenceOfHAsciiString(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_HSequenceOfHAsciiString_swiginit(self,_TColStd.new_TColStd_HSequenceOfHAsciiString(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: Handle_TCollection_HAsciiString &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfHAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: Handle_TCollection_HAsciiString &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfHAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_TCollection_HAsciiString &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfHAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_TCollection_HAsciiString &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfHAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColStd_HSequenceOfHAsciiString

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TCollection_HAsciiString

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TCollection_HAsciiString

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColStd_SequenceOfHAsciiString

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColStd_SequenceOfHAsciiString

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColStd_HSequenceOfHAsciiString

        """
        return _TColStd.TColStd_HSequenceOfHAsciiString_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HSequenceOfHAsciiString self)"""
        return _TColStd.TColStd_HSequenceOfHAsciiString__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HSequenceOfHAsciiString self) -> Handle_TColStd_HSequenceOfHAsciiString"""
        return _TColStd.TColStd_HSequenceOfHAsciiString_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HSequenceOfHAsciiString.IsEmpty = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_IsEmpty,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.Length = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_Length,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.Clear = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_Clear,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.Append = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_Append,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.Prepend = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_Prepend,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.Reverse = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_Reverse,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.InsertBefore = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_InsertBefore,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.InsertAfter = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_InsertAfter,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.Exchange = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_Exchange,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.Split = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_Split,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.SetValue = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_SetValue,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.Value = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_Value,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.ChangeValue = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_ChangeValue,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.Remove = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_Remove,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.Sequence = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_Sequence,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.ChangeSequence = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_ChangeSequence,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.ShallowCopy = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_ShallowCopy,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString__kill_pointed,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString.GetHandle = new_instancemethod(_TColStd.TColStd_HSequenceOfHAsciiString_GetHandle,None,TColStd_HSequenceOfHAsciiString)
TColStd_HSequenceOfHAsciiString_swigregister = _TColStd.TColStd_HSequenceOfHAsciiString_swigregister
TColStd_HSequenceOfHAsciiString_swigregister(TColStd_HSequenceOfHAsciiString)

class Handle_TColStd_HSequenceOfHAsciiString(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HSequenceOfHAsciiString_swiginit(self,_TColStd.new_Handle_TColStd_HSequenceOfHAsciiString(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HSequenceOfHAsciiString_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HSequenceOfHAsciiString.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfHAsciiString_Nullify,None,Handle_TColStd_HSequenceOfHAsciiString)
Handle_TColStd_HSequenceOfHAsciiString.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfHAsciiString_IsNull,None,Handle_TColStd_HSequenceOfHAsciiString)
Handle_TColStd_HSequenceOfHAsciiString.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfHAsciiString_GetObject,None,Handle_TColStd_HSequenceOfHAsciiString)
Handle_TColStd_HSequenceOfHAsciiString._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfHAsciiString__kill_pointed,None,Handle_TColStd_HSequenceOfHAsciiString)
Handle_TColStd_HSequenceOfHAsciiString_swigregister = _TColStd.Handle_TColStd_HSequenceOfHAsciiString_swigregister
Handle_TColStd_HSequenceOfHAsciiString_swigregister(Handle_TColStd_HSequenceOfHAsciiString)

def Handle_TColStd_HSequenceOfHAsciiString_DownCast(*args):
  return _TColStd.Handle_TColStd_HSequenceOfHAsciiString_DownCast(*args)
Handle_TColStd_HSequenceOfHAsciiString_DownCast = _TColStd.Handle_TColStd_HSequenceOfHAsciiString_DownCast

class TColStd_HSequenceOfHExtendedString(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_HSequenceOfHExtendedString_swiginit(self,_TColStd.new_TColStd_HSequenceOfHExtendedString(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: Handle_TCollection_HExtendedString &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfHExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: Handle_TCollection_HExtendedString &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfHExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_TCollection_HExtendedString &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfHExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_TCollection_HExtendedString &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfHExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColStd_HSequenceOfHExtendedString

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_TCollection_HExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TCollection_HExtendedString

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TCollection_HExtendedString

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColStd_SequenceOfHExtendedString

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColStd_SequenceOfHExtendedString

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColStd_HSequenceOfHExtendedString

        """
        return _TColStd.TColStd_HSequenceOfHExtendedString_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HSequenceOfHExtendedString self)"""
        return _TColStd.TColStd_HSequenceOfHExtendedString__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HSequenceOfHExtendedString self) -> Handle_TColStd_HSequenceOfHExtendedString"""
        return _TColStd.TColStd_HSequenceOfHExtendedString_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HSequenceOfHExtendedString.IsEmpty = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_IsEmpty,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.Length = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_Length,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.Clear = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_Clear,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.Append = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_Append,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.Prepend = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_Prepend,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.Reverse = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_Reverse,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.InsertBefore = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_InsertBefore,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.InsertAfter = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_InsertAfter,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.Exchange = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_Exchange,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.Split = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_Split,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.SetValue = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_SetValue,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.Value = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_Value,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.ChangeValue = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_ChangeValue,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.Remove = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_Remove,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.Sequence = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_Sequence,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.ChangeSequence = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_ChangeSequence,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.ShallowCopy = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_ShallowCopy,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString._kill_pointed = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString__kill_pointed,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString.GetHandle = new_instancemethod(_TColStd.TColStd_HSequenceOfHExtendedString_GetHandle,None,TColStd_HSequenceOfHExtendedString)
TColStd_HSequenceOfHExtendedString_swigregister = _TColStd.TColStd_HSequenceOfHExtendedString_swigregister
TColStd_HSequenceOfHExtendedString_swigregister(TColStd_HSequenceOfHExtendedString)

class Handle_TColStd_HSequenceOfHExtendedString(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HSequenceOfHExtendedString_swiginit(self,_TColStd.new_Handle_TColStd_HSequenceOfHExtendedString(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HSequenceOfHExtendedString_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HSequenceOfHExtendedString.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfHExtendedString_Nullify,None,Handle_TColStd_HSequenceOfHExtendedString)
Handle_TColStd_HSequenceOfHExtendedString.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfHExtendedString_IsNull,None,Handle_TColStd_HSequenceOfHExtendedString)
Handle_TColStd_HSequenceOfHExtendedString.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfHExtendedString_GetObject,None,Handle_TColStd_HSequenceOfHExtendedString)
Handle_TColStd_HSequenceOfHExtendedString._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfHExtendedString__kill_pointed,None,Handle_TColStd_HSequenceOfHExtendedString)
Handle_TColStd_HSequenceOfHExtendedString_swigregister = _TColStd.Handle_TColStd_HSequenceOfHExtendedString_swigregister
Handle_TColStd_HSequenceOfHExtendedString_swigregister(Handle_TColStd_HSequenceOfHExtendedString)

def Handle_TColStd_HSequenceOfHExtendedString_DownCast(*args):
  return _TColStd.Handle_TColStd_HSequenceOfHExtendedString_DownCast(*args)
Handle_TColStd_HSequenceOfHExtendedString_DownCast = _TColStd.Handle_TColStd_HSequenceOfHExtendedString_DownCast

class TColStd_HSequenceOfInteger(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_HSequenceOfInteger_swiginit(self,_TColStd.new_TColStd_HSequenceOfInteger(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_HSequenceOfInteger_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HSequenceOfInteger_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfInteger_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: int &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfInteger_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: int &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfInteger_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfInteger_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: int &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfInteger_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: int &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfInteger_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfInteger_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColStd_HSequenceOfInteger

        """
        return _TColStd.TColStd_HSequenceOfInteger_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: int &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfInteger_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: int

        """
        return _TColStd.TColStd_HSequenceOfInteger_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: int

        """
        return _TColStd.TColStd_HSequenceOfInteger_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfInteger_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColStd_SequenceOfInteger

        """
        return _TColStd.TColStd_HSequenceOfInteger_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColStd_SequenceOfInteger

        """
        return _TColStd.TColStd_HSequenceOfInteger_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColStd_HSequenceOfInteger

        """
        return _TColStd.TColStd_HSequenceOfInteger_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HSequenceOfInteger self)"""
        return _TColStd.TColStd_HSequenceOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HSequenceOfInteger self) -> Handle_TColStd_HSequenceOfInteger"""
        return _TColStd.TColStd_HSequenceOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HSequenceOfInteger.IsEmpty = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_IsEmpty,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.Length = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_Length,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.Clear = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_Clear,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.Append = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_Append,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.Prepend = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_Prepend,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.Reverse = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_Reverse,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.InsertBefore = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_InsertBefore,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.InsertAfter = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_InsertAfter,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.Exchange = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_Exchange,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.Split = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_Split,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.SetValue = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_SetValue,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.Value = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_Value,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.ChangeValue = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_ChangeValue,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.Remove = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_Remove,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.Sequence = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_Sequence,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.ChangeSequence = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_ChangeSequence,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.ShallowCopy = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_ShallowCopy,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger__kill_pointed,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_HSequenceOfInteger_GetHandle,None,TColStd_HSequenceOfInteger)
TColStd_HSequenceOfInteger_swigregister = _TColStd.TColStd_HSequenceOfInteger_swigregister
TColStd_HSequenceOfInteger_swigregister(TColStd_HSequenceOfInteger)

class Handle_TColStd_HSequenceOfInteger(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HSequenceOfInteger_swiginit(self,_TColStd.new_Handle_TColStd_HSequenceOfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HSequenceOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HSequenceOfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfInteger_Nullify,None,Handle_TColStd_HSequenceOfInteger)
Handle_TColStd_HSequenceOfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfInteger_IsNull,None,Handle_TColStd_HSequenceOfInteger)
Handle_TColStd_HSequenceOfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfInteger_GetObject,None,Handle_TColStd_HSequenceOfInteger)
Handle_TColStd_HSequenceOfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfInteger__kill_pointed,None,Handle_TColStd_HSequenceOfInteger)
Handle_TColStd_HSequenceOfInteger_swigregister = _TColStd.Handle_TColStd_HSequenceOfInteger_swigregister
Handle_TColStd_HSequenceOfInteger_swigregister(Handle_TColStd_HSequenceOfInteger)

def Handle_TColStd_HSequenceOfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_HSequenceOfInteger_DownCast(*args)
Handle_TColStd_HSequenceOfInteger_DownCast = _TColStd.Handle_TColStd_HSequenceOfInteger_DownCast

class TColStd_HSequenceOfReal(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_HSequenceOfReal_swiginit(self,_TColStd.new_TColStd_HSequenceOfReal(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_HSequenceOfReal_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HSequenceOfReal_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfReal_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: float &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfReal_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: float &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfReal_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfReal_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: float &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfReal_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: float &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfReal_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfReal_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColStd_HSequenceOfReal

        """
        return _TColStd.TColStd_HSequenceOfReal_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: float &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfReal_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: float

        """
        return _TColStd.TColStd_HSequenceOfReal_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: float

        """
        return _TColStd.TColStd_HSequenceOfReal_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfReal_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColStd_SequenceOfReal

        """
        return _TColStd.TColStd_HSequenceOfReal_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColStd_SequenceOfReal

        """
        return _TColStd.TColStd_HSequenceOfReal_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColStd_HSequenceOfReal

        """
        return _TColStd.TColStd_HSequenceOfReal_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HSequenceOfReal self)"""
        return _TColStd.TColStd_HSequenceOfReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HSequenceOfReal self) -> Handle_TColStd_HSequenceOfReal"""
        return _TColStd.TColStd_HSequenceOfReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HSequenceOfReal.IsEmpty = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_IsEmpty,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.Length = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_Length,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.Clear = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_Clear,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.Append = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_Append,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.Prepend = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_Prepend,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.Reverse = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_Reverse,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.InsertBefore = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_InsertBefore,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.InsertAfter = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_InsertAfter,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.Exchange = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_Exchange,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.Split = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_Split,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.SetValue = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_SetValue,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.Value = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_Value,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.ChangeValue = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_ChangeValue,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.Remove = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_Remove,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.Sequence = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_Sequence,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.ChangeSequence = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_ChangeSequence,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.ShallowCopy = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_ShallowCopy,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_HSequenceOfReal__kill_pointed,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal.GetHandle = new_instancemethod(_TColStd.TColStd_HSequenceOfReal_GetHandle,None,TColStd_HSequenceOfReal)
TColStd_HSequenceOfReal_swigregister = _TColStd.TColStd_HSequenceOfReal_swigregister
TColStd_HSequenceOfReal_swigregister(TColStd_HSequenceOfReal)

class Handle_TColStd_HSequenceOfReal(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HSequenceOfReal_swiginit(self,_TColStd.new_Handle_TColStd_HSequenceOfReal(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HSequenceOfReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HSequenceOfReal.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfReal_Nullify,None,Handle_TColStd_HSequenceOfReal)
Handle_TColStd_HSequenceOfReal.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfReal_IsNull,None,Handle_TColStd_HSequenceOfReal)
Handle_TColStd_HSequenceOfReal.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfReal_GetObject,None,Handle_TColStd_HSequenceOfReal)
Handle_TColStd_HSequenceOfReal._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfReal__kill_pointed,None,Handle_TColStd_HSequenceOfReal)
Handle_TColStd_HSequenceOfReal_swigregister = _TColStd.Handle_TColStd_HSequenceOfReal_swigregister
Handle_TColStd_HSequenceOfReal_swigregister(Handle_TColStd_HSequenceOfReal)

def Handle_TColStd_HSequenceOfReal_DownCast(*args):
  return _TColStd.Handle_TColStd_HSequenceOfReal_DownCast(*args)
Handle_TColStd_HSequenceOfReal_DownCast = _TColStd.Handle_TColStd_HSequenceOfReal_DownCast

class TColStd_HSequenceOfTransient(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_HSequenceOfTransient_swiginit(self,_TColStd.new_TColStd_HSequenceOfTransient(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_HSequenceOfTransient_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HSequenceOfTransient_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfTransient_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: Handle_Standard_Transient &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfTransient_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: Handle_Standard_Transient &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfTransient_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfTransient_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Standard_Transient &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfTransient_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Standard_Transient &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColStd_HSequenceOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfTransient_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfTransient_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColStd_HSequenceOfTransient

        """
        return _TColStd.TColStd_HSequenceOfTransient_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfTransient_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_HSequenceOfTransient_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_HSequenceOfTransient_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_HSequenceOfTransient_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColStd_SequenceOfTransient

        """
        return _TColStd.TColStd_HSequenceOfTransient_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColStd_SequenceOfTransient

        """
        return _TColStd.TColStd_HSequenceOfTransient_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColStd_HSequenceOfTransient

        """
        return _TColStd.TColStd_HSequenceOfTransient_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HSequenceOfTransient self)"""
        return _TColStd.TColStd_HSequenceOfTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HSequenceOfTransient self) -> Handle_TColStd_HSequenceOfTransient"""
        return _TColStd.TColStd_HSequenceOfTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HSequenceOfTransient.IsEmpty = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_IsEmpty,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.Length = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_Length,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.Clear = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_Clear,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.Append = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_Append,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.Prepend = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_Prepend,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.Reverse = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_Reverse,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.InsertBefore = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_InsertBefore,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.InsertAfter = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_InsertAfter,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.Exchange = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_Exchange,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.Split = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_Split,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.SetValue = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_SetValue,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.Value = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_Value,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.ChangeValue = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_ChangeValue,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.Remove = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_Remove,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.Sequence = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_Sequence,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.ChangeSequence = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_ChangeSequence,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.ShallowCopy = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_ShallowCopy,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient__kill_pointed,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient.GetHandle = new_instancemethod(_TColStd.TColStd_HSequenceOfTransient_GetHandle,None,TColStd_HSequenceOfTransient)
TColStd_HSequenceOfTransient_swigregister = _TColStd.TColStd_HSequenceOfTransient_swigregister
TColStd_HSequenceOfTransient_swigregister(TColStd_HSequenceOfTransient)

class Handle_TColStd_HSequenceOfTransient(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HSequenceOfTransient_swiginit(self,_TColStd.new_Handle_TColStd_HSequenceOfTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HSequenceOfTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HSequenceOfTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfTransient_Nullify,None,Handle_TColStd_HSequenceOfTransient)
Handle_TColStd_HSequenceOfTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfTransient_IsNull,None,Handle_TColStd_HSequenceOfTransient)
Handle_TColStd_HSequenceOfTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfTransient_GetObject,None,Handle_TColStd_HSequenceOfTransient)
Handle_TColStd_HSequenceOfTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HSequenceOfTransient__kill_pointed,None,Handle_TColStd_HSequenceOfTransient)
Handle_TColStd_HSequenceOfTransient_swigregister = _TColStd.Handle_TColStd_HSequenceOfTransient_swigregister
Handle_TColStd_HSequenceOfTransient_swigregister(Handle_TColStd_HSequenceOfTransient)

def Handle_TColStd_HSequenceOfTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_HSequenceOfTransient_DownCast(*args)
Handle_TColStd_HSequenceOfTransient_DownCast = _TColStd.Handle_TColStd_HSequenceOfTransient_DownCast

class TColStd_HSetOfInteger(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_HSetOfInteger_swiginit(self,_TColStd.new_TColStd_HSetOfInteger(*args))
    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HSetOfInteger_Extent(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfInteger_IsEmpty(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSetOfInteger_Clear(self, *args)

    def Add(self, *args):
        """
        :param T:
        :type T: int &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfInteger_Add(self, *args)

    def Remove(self, *args):
        """
        :param T:
        :type T: int &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfInteger_Remove(self, *args)

    def Union(self, *args):
        """
        :param B:
        :type B: Handle_TColStd_HSetOfInteger &
        :rtype: Handle_TColStd_HSetOfInteger

        """
        return _TColStd.TColStd_HSetOfInteger_Union(self, *args)

    def Intersection(self, *args):
        """
        :param B:
        :type B: Handle_TColStd_HSetOfInteger &
        :rtype: Handle_TColStd_HSetOfInteger

        """
        return _TColStd.TColStd_HSetOfInteger_Intersection(self, *args)

    def Difference(self, *args):
        """
        :param B:
        :type B: Handle_TColStd_HSetOfInteger &
        :rtype: Handle_TColStd_HSetOfInteger

        """
        return _TColStd.TColStd_HSetOfInteger_Difference(self, *args)

    def Contains(self, *args):
        """
        :param T:
        :type T: int &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfInteger_Contains(self, *args)

    def IsASubset(self, *args):
        """
        :param S:
        :type S: Handle_TColStd_HSetOfInteger &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfInteger_IsASubset(self, *args)

    def IsAProperSubset(self, *args):
        """
        :param S:
        :type S: Handle_TColStd_HSetOfInteger &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfInteger_IsAProperSubset(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColStd_HSetOfInteger

        """
        return _TColStd.TColStd_HSetOfInteger_ShallowCopy(self, *args)

    def Set(self, *args):
        """
        :rtype: TColStd_SetOfInteger

        """
        return _TColStd.TColStd_HSetOfInteger_Set(self, *args)

    def ChangeSet(self, *args):
        """
        :rtype: TColStd_SetOfInteger

        """
        return _TColStd.TColStd_HSetOfInteger_ChangeSet(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HSetOfInteger self)"""
        return _TColStd.TColStd_HSetOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HSetOfInteger self) -> Handle_TColStd_HSetOfInteger"""
        return _TColStd.TColStd_HSetOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HSetOfInteger.Extent = new_instancemethod(_TColStd.TColStd_HSetOfInteger_Extent,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.IsEmpty = new_instancemethod(_TColStd.TColStd_HSetOfInteger_IsEmpty,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.Clear = new_instancemethod(_TColStd.TColStd_HSetOfInteger_Clear,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.Add = new_instancemethod(_TColStd.TColStd_HSetOfInteger_Add,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.Remove = new_instancemethod(_TColStd.TColStd_HSetOfInteger_Remove,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.Union = new_instancemethod(_TColStd.TColStd_HSetOfInteger_Union,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.Intersection = new_instancemethod(_TColStd.TColStd_HSetOfInteger_Intersection,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.Difference = new_instancemethod(_TColStd.TColStd_HSetOfInteger_Difference,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.Contains = new_instancemethod(_TColStd.TColStd_HSetOfInteger_Contains,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.IsASubset = new_instancemethod(_TColStd.TColStd_HSetOfInteger_IsASubset,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.IsAProperSubset = new_instancemethod(_TColStd.TColStd_HSetOfInteger_IsAProperSubset,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.ShallowCopy = new_instancemethod(_TColStd.TColStd_HSetOfInteger_ShallowCopy,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.Set = new_instancemethod(_TColStd.TColStd_HSetOfInteger_Set,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.ChangeSet = new_instancemethod(_TColStd.TColStd_HSetOfInteger_ChangeSet,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_HSetOfInteger__kill_pointed,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_HSetOfInteger_GetHandle,None,TColStd_HSetOfInteger)
TColStd_HSetOfInteger_swigregister = _TColStd.TColStd_HSetOfInteger_swigregister
TColStd_HSetOfInteger_swigregister(TColStd_HSetOfInteger)

class Handle_TColStd_HSetOfInteger(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HSetOfInteger_swiginit(self,_TColStd.new_Handle_TColStd_HSetOfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HSetOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HSetOfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HSetOfInteger_Nullify,None,Handle_TColStd_HSetOfInteger)
Handle_TColStd_HSetOfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HSetOfInteger_IsNull,None,Handle_TColStd_HSetOfInteger)
Handle_TColStd_HSetOfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HSetOfInteger_GetObject,None,Handle_TColStd_HSetOfInteger)
Handle_TColStd_HSetOfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HSetOfInteger__kill_pointed,None,Handle_TColStd_HSetOfInteger)
Handle_TColStd_HSetOfInteger_swigregister = _TColStd.Handle_TColStd_HSetOfInteger_swigregister
Handle_TColStd_HSetOfInteger_swigregister(Handle_TColStd_HSetOfInteger)

def Handle_TColStd_HSetOfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_HSetOfInteger_DownCast(*args)
Handle_TColStd_HSetOfInteger_DownCast = _TColStd.Handle_TColStd_HSetOfInteger_DownCast

class TColStd_HSetOfReal(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_HSetOfReal_swiginit(self,_TColStd.new_TColStd_HSetOfReal(*args))
    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HSetOfReal_Extent(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfReal_IsEmpty(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSetOfReal_Clear(self, *args)

    def Add(self, *args):
        """
        :param T:
        :type T: float &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfReal_Add(self, *args)

    def Remove(self, *args):
        """
        :param T:
        :type T: float &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfReal_Remove(self, *args)

    def Union(self, *args):
        """
        :param B:
        :type B: Handle_TColStd_HSetOfReal &
        :rtype: Handle_TColStd_HSetOfReal

        """
        return _TColStd.TColStd_HSetOfReal_Union(self, *args)

    def Intersection(self, *args):
        """
        :param B:
        :type B: Handle_TColStd_HSetOfReal &
        :rtype: Handle_TColStd_HSetOfReal

        """
        return _TColStd.TColStd_HSetOfReal_Intersection(self, *args)

    def Difference(self, *args):
        """
        :param B:
        :type B: Handle_TColStd_HSetOfReal &
        :rtype: Handle_TColStd_HSetOfReal

        """
        return _TColStd.TColStd_HSetOfReal_Difference(self, *args)

    def Contains(self, *args):
        """
        :param T:
        :type T: float &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfReal_Contains(self, *args)

    def IsASubset(self, *args):
        """
        :param S:
        :type S: Handle_TColStd_HSetOfReal &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfReal_IsASubset(self, *args)

    def IsAProperSubset(self, *args):
        """
        :param S:
        :type S: Handle_TColStd_HSetOfReal &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfReal_IsAProperSubset(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColStd_HSetOfReal

        """
        return _TColStd.TColStd_HSetOfReal_ShallowCopy(self, *args)

    def Set(self, *args):
        """
        :rtype: TColStd_SetOfReal

        """
        return _TColStd.TColStd_HSetOfReal_Set(self, *args)

    def ChangeSet(self, *args):
        """
        :rtype: TColStd_SetOfReal

        """
        return _TColStd.TColStd_HSetOfReal_ChangeSet(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HSetOfReal self)"""
        return _TColStd.TColStd_HSetOfReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HSetOfReal self) -> Handle_TColStd_HSetOfReal"""
        return _TColStd.TColStd_HSetOfReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HSetOfReal.Extent = new_instancemethod(_TColStd.TColStd_HSetOfReal_Extent,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.IsEmpty = new_instancemethod(_TColStd.TColStd_HSetOfReal_IsEmpty,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.Clear = new_instancemethod(_TColStd.TColStd_HSetOfReal_Clear,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.Add = new_instancemethod(_TColStd.TColStd_HSetOfReal_Add,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.Remove = new_instancemethod(_TColStd.TColStd_HSetOfReal_Remove,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.Union = new_instancemethod(_TColStd.TColStd_HSetOfReal_Union,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.Intersection = new_instancemethod(_TColStd.TColStd_HSetOfReal_Intersection,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.Difference = new_instancemethod(_TColStd.TColStd_HSetOfReal_Difference,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.Contains = new_instancemethod(_TColStd.TColStd_HSetOfReal_Contains,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.IsASubset = new_instancemethod(_TColStd.TColStd_HSetOfReal_IsASubset,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.IsAProperSubset = new_instancemethod(_TColStd.TColStd_HSetOfReal_IsAProperSubset,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.ShallowCopy = new_instancemethod(_TColStd.TColStd_HSetOfReal_ShallowCopy,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.Set = new_instancemethod(_TColStd.TColStd_HSetOfReal_Set,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.ChangeSet = new_instancemethod(_TColStd.TColStd_HSetOfReal_ChangeSet,None,TColStd_HSetOfReal)
TColStd_HSetOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_HSetOfReal__kill_pointed,None,TColStd_HSetOfReal)
TColStd_HSetOfReal.GetHandle = new_instancemethod(_TColStd.TColStd_HSetOfReal_GetHandle,None,TColStd_HSetOfReal)
TColStd_HSetOfReal_swigregister = _TColStd.TColStd_HSetOfReal_swigregister
TColStd_HSetOfReal_swigregister(TColStd_HSetOfReal)

class Handle_TColStd_HSetOfReal(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HSetOfReal_swiginit(self,_TColStd.new_Handle_TColStd_HSetOfReal(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HSetOfReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HSetOfReal.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HSetOfReal_Nullify,None,Handle_TColStd_HSetOfReal)
Handle_TColStd_HSetOfReal.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HSetOfReal_IsNull,None,Handle_TColStd_HSetOfReal)
Handle_TColStd_HSetOfReal.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HSetOfReal_GetObject,None,Handle_TColStd_HSetOfReal)
Handle_TColStd_HSetOfReal._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HSetOfReal__kill_pointed,None,Handle_TColStd_HSetOfReal)
Handle_TColStd_HSetOfReal_swigregister = _TColStd.Handle_TColStd_HSetOfReal_swigregister
Handle_TColStd_HSetOfReal_swigregister(Handle_TColStd_HSetOfReal)

def Handle_TColStd_HSetOfReal_DownCast(*args):
  return _TColStd.Handle_TColStd_HSetOfReal_DownCast(*args)
Handle_TColStd_HSetOfReal_DownCast = _TColStd.Handle_TColStd_HSetOfReal_DownCast

class TColStd_HSetOfTransient(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_HSetOfTransient_swiginit(self,_TColStd.new_TColStd_HSetOfTransient(*args))
    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_HSetOfTransient_Extent(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfTransient_IsEmpty(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_HSetOfTransient_Clear(self, *args)

    def Add(self, *args):
        """
        :param T:
        :type T: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfTransient_Add(self, *args)

    def Remove(self, *args):
        """
        :param T:
        :type T: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfTransient_Remove(self, *args)

    def Union(self, *args):
        """
        :param B:
        :type B: Handle_TColStd_HSetOfTransient &
        :rtype: Handle_TColStd_HSetOfTransient

        """
        return _TColStd.TColStd_HSetOfTransient_Union(self, *args)

    def Intersection(self, *args):
        """
        :param B:
        :type B: Handle_TColStd_HSetOfTransient &
        :rtype: Handle_TColStd_HSetOfTransient

        """
        return _TColStd.TColStd_HSetOfTransient_Intersection(self, *args)

    def Difference(self, *args):
        """
        :param B:
        :type B: Handle_TColStd_HSetOfTransient &
        :rtype: Handle_TColStd_HSetOfTransient

        """
        return _TColStd.TColStd_HSetOfTransient_Difference(self, *args)

    def Contains(self, *args):
        """
        :param T:
        :type T: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfTransient_Contains(self, *args)

    def IsASubset(self, *args):
        """
        :param S:
        :type S: Handle_TColStd_HSetOfTransient &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfTransient_IsASubset(self, *args)

    def IsAProperSubset(self, *args):
        """
        :param S:
        :type S: Handle_TColStd_HSetOfTransient &
        :rtype: bool

        """
        return _TColStd.TColStd_HSetOfTransient_IsAProperSubset(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColStd_HSetOfTransient

        """
        return _TColStd.TColStd_HSetOfTransient_ShallowCopy(self, *args)

    def Set(self, *args):
        """
        :rtype: TColStd_SetOfTransient

        """
        return _TColStd.TColStd_HSetOfTransient_Set(self, *args)

    def ChangeSet(self, *args):
        """
        :rtype: TColStd_SetOfTransient

        """
        return _TColStd.TColStd_HSetOfTransient_ChangeSet(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_HSetOfTransient self)"""
        return _TColStd.TColStd_HSetOfTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_HSetOfTransient self) -> Handle_TColStd_HSetOfTransient"""
        return _TColStd.TColStd_HSetOfTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_HSetOfTransient.Extent = new_instancemethod(_TColStd.TColStd_HSetOfTransient_Extent,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.IsEmpty = new_instancemethod(_TColStd.TColStd_HSetOfTransient_IsEmpty,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.Clear = new_instancemethod(_TColStd.TColStd_HSetOfTransient_Clear,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.Add = new_instancemethod(_TColStd.TColStd_HSetOfTransient_Add,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.Remove = new_instancemethod(_TColStd.TColStd_HSetOfTransient_Remove,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.Union = new_instancemethod(_TColStd.TColStd_HSetOfTransient_Union,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.Intersection = new_instancemethod(_TColStd.TColStd_HSetOfTransient_Intersection,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.Difference = new_instancemethod(_TColStd.TColStd_HSetOfTransient_Difference,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.Contains = new_instancemethod(_TColStd.TColStd_HSetOfTransient_Contains,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.IsASubset = new_instancemethod(_TColStd.TColStd_HSetOfTransient_IsASubset,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.IsAProperSubset = new_instancemethod(_TColStd.TColStd_HSetOfTransient_IsAProperSubset,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.ShallowCopy = new_instancemethod(_TColStd.TColStd_HSetOfTransient_ShallowCopy,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.Set = new_instancemethod(_TColStd.TColStd_HSetOfTransient_Set,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.ChangeSet = new_instancemethod(_TColStd.TColStd_HSetOfTransient_ChangeSet,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_HSetOfTransient__kill_pointed,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient.GetHandle = new_instancemethod(_TColStd.TColStd_HSetOfTransient_GetHandle,None,TColStd_HSetOfTransient)
TColStd_HSetOfTransient_swigregister = _TColStd.TColStd_HSetOfTransient_swigregister
TColStd_HSetOfTransient_swigregister(TColStd_HSetOfTransient)

class Handle_TColStd_HSetOfTransient(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_HSetOfTransient_swiginit(self,_TColStd.new_Handle_TColStd_HSetOfTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_HSetOfTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_HSetOfTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_HSetOfTransient_Nullify,None,Handle_TColStd_HSetOfTransient)
Handle_TColStd_HSetOfTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_HSetOfTransient_IsNull,None,Handle_TColStd_HSetOfTransient)
Handle_TColStd_HSetOfTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_HSetOfTransient_GetObject,None,Handle_TColStd_HSetOfTransient)
Handle_TColStd_HSetOfTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_HSetOfTransient__kill_pointed,None,Handle_TColStd_HSetOfTransient)
Handle_TColStd_HSetOfTransient_swigregister = _TColStd.Handle_TColStd_HSetOfTransient_swigregister
Handle_TColStd_HSetOfTransient_swigregister(Handle_TColStd_HSetOfTransient)

def Handle_TColStd_HSetOfTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_HSetOfTransient_DownCast(*args)
Handle_TColStd_HSetOfTransient_DownCast = _TColStd.Handle_TColStd_HSetOfTransient_DownCast

class TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K1:
        :type K1: Handle_Standard_Transient &
        :param K2:
        :type K2: int
        :param I:
        :type I: Handle_Standard_Transient &
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_swiginit(self,_TColStd.new_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient(*args))
    def Key1(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_Key1(self, *args)

    def GetKey2(self):
        """GetKey2(TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient self) -> Standard_Integer"""
        return _TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_GetKey2(self)

    def SetKey2(self, *args):
        """SetKey2(TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient self, Standard_Integer value)"""
        return _TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_SetKey2(self, *args)

    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_Next2(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient self)"""
        return _TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient self) -> Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient"""
        return _TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient.Key1 = new_instancemethod(_TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_Key1,None,TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient.GetKey2 = new_instancemethod(_TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_GetKey2,None,TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient.SetKey2 = new_instancemethod(_TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_SetKey2,None,TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient.Next2 = new_instancemethod(_TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_Next2,None,TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient.Value = new_instancemethod(_TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_Value,None,TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient__kill_pointed,None,TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient.GetHandle = new_instancemethod(_TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_GetHandle,None,TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_swigregister = _TColStd.TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_swigregister
TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_swigregister(TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)

class Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_swiginit(self,_TColStd.new_Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_Nullify,None,Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)
Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_IsNull,None,Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)
Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_GetObject,None,Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)
Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient__kill_pointed,None,Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)
Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_swigregister = _TColStd.Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_swigregister
Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_swigregister(Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient)

def Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_DownCast(*args)
Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_DownCast = _TColStd.Handle_TColStd_IndexedDataMapNodeOfIndexedDataMapOfTransientTransient_DownCast

class TColStd_IndexedDataMapOfTransientTransient(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_IndexedDataMapOfTransientTransient_swiginit(self,_TColStd.new_TColStd_IndexedDataMapOfTransientTransient(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_IndexedDataMapOfTransientTransient &
        :rtype: TColStd_IndexedDataMapOfTransientTransient

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_IndexedDataMapOfTransientTransient &
        :rtype: TColStd_IndexedDataMapOfTransientTransient

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_Clear(self, *args)

    def Add(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :param I:
        :type I: Handle_Standard_Transient &
        :rtype: int

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_Add(self, *args)

    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: Handle_Standard_Transient &
        :param T:
        :type T: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_Substitute(self, *args)

    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_RemoveLast(self, *args)

    def Contains(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_Contains(self, *args)

    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_FindKey(self, *args)

    def FindFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_FindFromIndex(self, *args)

    def ChangeFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_ChangeFromIndex(self, *args)

    def FindIndex(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: int

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_FindIndex(self, *args)

    def FindFromKey(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_FindFromKey(self, *args)

    def ChangeFromKey(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_ChangeFromKey(self, *args)

    def FindFromKey1(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_FindFromKey1(self, *args)

    def ChangeFromKey1(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient_ChangeFromKey1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_IndexedDataMapOfTransientTransient self)"""
        return _TColStd.TColStd_IndexedDataMapOfTransientTransient__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_IndexedDataMapOfTransientTransient.Assign = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Assign,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.Set = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Set,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.ReSize = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_ReSize,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.Clear = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Clear,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.Add = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Add,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.Substitute = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Substitute,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.RemoveLast = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_RemoveLast,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.Contains = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Contains,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.FindKey = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_FindKey,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.FindFromIndex = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_FindFromIndex,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.ChangeFromIndex = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_ChangeFromIndex,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.FindIndex = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_FindIndex,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.FindFromKey = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_FindFromKey,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.ChangeFromKey = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_ChangeFromKey,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.FindFromKey1 = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_FindFromKey1,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient.ChangeFromKey1 = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient_ChangeFromKey1,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_IndexedDataMapOfTransientTransient__kill_pointed,None,TColStd_IndexedDataMapOfTransientTransient)
TColStd_IndexedDataMapOfTransientTransient_swigregister = _TColStd.TColStd_IndexedDataMapOfTransientTransient_swigregister
TColStd_IndexedDataMapOfTransientTransient_swigregister(TColStd_IndexedDataMapOfTransientTransient)

class TColStd_IndexedMapNodeOfIndexedMapOfInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K1:
        :type K1: int &
        :param K2:
        :type K2: int
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_swiginit(self,_TColStd.new_TColStd_IndexedMapNodeOfIndexedMapOfInteger(*args))
    def GetKey1(self):
        """GetKey1(TColStd_IndexedMapNodeOfIndexedMapOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_GetKey1(self)

    def SetKey1(self, *args):
        """SetKey1(TColStd_IndexedMapNodeOfIndexedMapOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_SetKey1(self, *args)

    def GetKey2(self):
        """GetKey2(TColStd_IndexedMapNodeOfIndexedMapOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_GetKey2(self)

    def SetKey2(self, *args):
        """SetKey2(TColStd_IndexedMapNodeOfIndexedMapOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_SetKey2(self, *args)

    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_Next2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_IndexedMapNodeOfIndexedMapOfInteger self)"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_IndexedMapNodeOfIndexedMapOfInteger self) -> Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_IndexedMapNodeOfIndexedMapOfInteger.GetKey1 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_GetKey1,None,TColStd_IndexedMapNodeOfIndexedMapOfInteger)
TColStd_IndexedMapNodeOfIndexedMapOfInteger.SetKey1 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_SetKey1,None,TColStd_IndexedMapNodeOfIndexedMapOfInteger)
TColStd_IndexedMapNodeOfIndexedMapOfInteger.GetKey2 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_GetKey2,None,TColStd_IndexedMapNodeOfIndexedMapOfInteger)
TColStd_IndexedMapNodeOfIndexedMapOfInteger.SetKey2 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_SetKey2,None,TColStd_IndexedMapNodeOfIndexedMapOfInteger)
TColStd_IndexedMapNodeOfIndexedMapOfInteger.Next2 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_Next2,None,TColStd_IndexedMapNodeOfIndexedMapOfInteger)
TColStd_IndexedMapNodeOfIndexedMapOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger__kill_pointed,None,TColStd_IndexedMapNodeOfIndexedMapOfInteger)
TColStd_IndexedMapNodeOfIndexedMapOfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_GetHandle,None,TColStd_IndexedMapNodeOfIndexedMapOfInteger)
TColStd_IndexedMapNodeOfIndexedMapOfInteger_swigregister = _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfInteger_swigregister
TColStd_IndexedMapNodeOfIndexedMapOfInteger_swigregister(TColStd_IndexedMapNodeOfIndexedMapOfInteger)

class Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger_swiginit(self,_TColStd.new_Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger_Nullify,None,Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger_IsNull,None,Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger_GetObject,None,Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger__kill_pointed,None,Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger_swigregister = _TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger_swigregister
Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger_swigregister(Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger)

def Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger_DownCast(*args)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger_DownCast = _TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfInteger_DownCast

class TColStd_IndexedMapNodeOfIndexedMapOfReal(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K1:
        :type K1: float &
        :param K2:
        :type K2: int
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_swiginit(self,_TColStd.new_TColStd_IndexedMapNodeOfIndexedMapOfReal(*args))
    def GetKey1(self):
        """GetKey1(TColStd_IndexedMapNodeOfIndexedMapOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_GetKey1(self)

    def SetKey1(self, *args):
        """SetKey1(TColStd_IndexedMapNodeOfIndexedMapOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_SetKey1(self, *args)

    def GetKey2(self):
        """GetKey2(TColStd_IndexedMapNodeOfIndexedMapOfReal self) -> Standard_Integer"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_GetKey2(self)

    def SetKey2(self, *args):
        """SetKey2(TColStd_IndexedMapNodeOfIndexedMapOfReal self, Standard_Integer value)"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_SetKey2(self, *args)

    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_Next2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_IndexedMapNodeOfIndexedMapOfReal self)"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_IndexedMapNodeOfIndexedMapOfReal self) -> Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_IndexedMapNodeOfIndexedMapOfReal.GetKey1 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_GetKey1,None,TColStd_IndexedMapNodeOfIndexedMapOfReal)
TColStd_IndexedMapNodeOfIndexedMapOfReal.SetKey1 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_SetKey1,None,TColStd_IndexedMapNodeOfIndexedMapOfReal)
TColStd_IndexedMapNodeOfIndexedMapOfReal.GetKey2 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_GetKey2,None,TColStd_IndexedMapNodeOfIndexedMapOfReal)
TColStd_IndexedMapNodeOfIndexedMapOfReal.SetKey2 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_SetKey2,None,TColStd_IndexedMapNodeOfIndexedMapOfReal)
TColStd_IndexedMapNodeOfIndexedMapOfReal.Next2 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_Next2,None,TColStd_IndexedMapNodeOfIndexedMapOfReal)
TColStd_IndexedMapNodeOfIndexedMapOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal__kill_pointed,None,TColStd_IndexedMapNodeOfIndexedMapOfReal)
TColStd_IndexedMapNodeOfIndexedMapOfReal.GetHandle = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_GetHandle,None,TColStd_IndexedMapNodeOfIndexedMapOfReal)
TColStd_IndexedMapNodeOfIndexedMapOfReal_swigregister = _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfReal_swigregister
TColStd_IndexedMapNodeOfIndexedMapOfReal_swigregister(TColStd_IndexedMapNodeOfIndexedMapOfReal)

class Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal_swiginit(self,_TColStd.new_Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal.Nullify = new_instancemethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal_Nullify,None,Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal.IsNull = new_instancemethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal_IsNull,None,Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal.GetObject = new_instancemethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal_GetObject,None,Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal__kill_pointed,None,Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal_swigregister = _TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal_swigregister
Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal_swigregister(Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal)

def Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal_DownCast(*args):
  return _TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal_DownCast(*args)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal_DownCast = _TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfReal_DownCast

class TColStd_IndexedMapNodeOfIndexedMapOfTransient(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K1:
        :type K1: Handle_Standard_Transient &
        :param K2:
        :type K2: int
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient_swiginit(self,_TColStd.new_TColStd_IndexedMapNodeOfIndexedMapOfTransient(*args))
    def Key1(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient_Key1(self, *args)

    def GetKey2(self):
        """GetKey2(TColStd_IndexedMapNodeOfIndexedMapOfTransient self) -> Standard_Integer"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient_GetKey2(self)

    def SetKey2(self, *args):
        """SetKey2(TColStd_IndexedMapNodeOfIndexedMapOfTransient self, Standard_Integer value)"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient_SetKey2(self, *args)

    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient_Next2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_IndexedMapNodeOfIndexedMapOfTransient self)"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_IndexedMapNodeOfIndexedMapOfTransient self) -> Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient"""
        return _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_IndexedMapNodeOfIndexedMapOfTransient.Key1 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient_Key1,None,TColStd_IndexedMapNodeOfIndexedMapOfTransient)
TColStd_IndexedMapNodeOfIndexedMapOfTransient.GetKey2 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient_GetKey2,None,TColStd_IndexedMapNodeOfIndexedMapOfTransient)
TColStd_IndexedMapNodeOfIndexedMapOfTransient.SetKey2 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient_SetKey2,None,TColStd_IndexedMapNodeOfIndexedMapOfTransient)
TColStd_IndexedMapNodeOfIndexedMapOfTransient.Next2 = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient_Next2,None,TColStd_IndexedMapNodeOfIndexedMapOfTransient)
TColStd_IndexedMapNodeOfIndexedMapOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient__kill_pointed,None,TColStd_IndexedMapNodeOfIndexedMapOfTransient)
TColStd_IndexedMapNodeOfIndexedMapOfTransient.GetHandle = new_instancemethod(_TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient_GetHandle,None,TColStd_IndexedMapNodeOfIndexedMapOfTransient)
TColStd_IndexedMapNodeOfIndexedMapOfTransient_swigregister = _TColStd.TColStd_IndexedMapNodeOfIndexedMapOfTransient_swigregister
TColStd_IndexedMapNodeOfIndexedMapOfTransient_swigregister(TColStd_IndexedMapNodeOfIndexedMapOfTransient)

class Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient_swiginit(self,_TColStd.new_Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient_Nullify,None,Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient_IsNull,None,Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient_GetObject,None,Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient__kill_pointed,None,Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient_swigregister = _TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient_swigregister
Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient_swigregister(Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient)

def Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient_DownCast(*args)
Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient_DownCast = _TColStd.Handle_TColStd_IndexedMapNodeOfIndexedMapOfTransient_DownCast

class TColStd_IndexedMapOfInteger(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_IndexedMapOfInteger_swiginit(self,_TColStd.new_TColStd_IndexedMapOfInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_IndexedMapOfInteger &
        :rtype: TColStd_IndexedMapOfInteger

        """
        return _TColStd.TColStd_IndexedMapOfInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_IndexedMapOfInteger &
        :rtype: TColStd_IndexedMapOfInteger

        """
        return _TColStd.TColStd_IndexedMapOfInteger_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_IndexedMapOfInteger_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_IndexedMapOfInteger_Clear(self, *args)

    def Add(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: int

        """
        return _TColStd.TColStd_IndexedMapOfInteger_Add(self, *args)

    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: int &
        :rtype: None

        """
        return _TColStd.TColStd_IndexedMapOfInteger_Substitute(self, *args)

    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_IndexedMapOfInteger_RemoveLast(self, *args)

    def Contains(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TColStd.TColStd_IndexedMapOfInteger_Contains(self, *args)

    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: int

        """
        return _TColStd.TColStd_IndexedMapOfInteger_FindKey(self, *args)

    def FindIndex(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: int

        """
        return _TColStd.TColStd_IndexedMapOfInteger_FindIndex(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_IndexedMapOfInteger self)"""
        return _TColStd.TColStd_IndexedMapOfInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_IndexedMapOfInteger.Assign = new_instancemethod(_TColStd.TColStd_IndexedMapOfInteger_Assign,None,TColStd_IndexedMapOfInteger)
TColStd_IndexedMapOfInteger.Set = new_instancemethod(_TColStd.TColStd_IndexedMapOfInteger_Set,None,TColStd_IndexedMapOfInteger)
TColStd_IndexedMapOfInteger.ReSize = new_instancemethod(_TColStd.TColStd_IndexedMapOfInteger_ReSize,None,TColStd_IndexedMapOfInteger)
TColStd_IndexedMapOfInteger.Clear = new_instancemethod(_TColStd.TColStd_IndexedMapOfInteger_Clear,None,TColStd_IndexedMapOfInteger)
TColStd_IndexedMapOfInteger.Add = new_instancemethod(_TColStd.TColStd_IndexedMapOfInteger_Add,None,TColStd_IndexedMapOfInteger)
TColStd_IndexedMapOfInteger.Substitute = new_instancemethod(_TColStd.TColStd_IndexedMapOfInteger_Substitute,None,TColStd_IndexedMapOfInteger)
TColStd_IndexedMapOfInteger.RemoveLast = new_instancemethod(_TColStd.TColStd_IndexedMapOfInteger_RemoveLast,None,TColStd_IndexedMapOfInteger)
TColStd_IndexedMapOfInteger.Contains = new_instancemethod(_TColStd.TColStd_IndexedMapOfInteger_Contains,None,TColStd_IndexedMapOfInteger)
TColStd_IndexedMapOfInteger.FindKey = new_instancemethod(_TColStd.TColStd_IndexedMapOfInteger_FindKey,None,TColStd_IndexedMapOfInteger)
TColStd_IndexedMapOfInteger.FindIndex = new_instancemethod(_TColStd.TColStd_IndexedMapOfInteger_FindIndex,None,TColStd_IndexedMapOfInteger)
TColStd_IndexedMapOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_IndexedMapOfInteger__kill_pointed,None,TColStd_IndexedMapOfInteger)
TColStd_IndexedMapOfInteger_swigregister = _TColStd.TColStd_IndexedMapOfInteger_swigregister
TColStd_IndexedMapOfInteger_swigregister(TColStd_IndexedMapOfInteger)

class TColStd_IndexedMapOfReal(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_IndexedMapOfReal_swiginit(self,_TColStd.new_TColStd_IndexedMapOfReal(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_IndexedMapOfReal &
        :rtype: TColStd_IndexedMapOfReal

        """
        return _TColStd.TColStd_IndexedMapOfReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_IndexedMapOfReal &
        :rtype: TColStd_IndexedMapOfReal

        """
        return _TColStd.TColStd_IndexedMapOfReal_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_IndexedMapOfReal_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_IndexedMapOfReal_Clear(self, *args)

    def Add(self, *args):
        """
        :param K:
        :type K: float &
        :rtype: int

        """
        return _TColStd.TColStd_IndexedMapOfReal_Add(self, *args)

    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: float &
        :rtype: None

        """
        return _TColStd.TColStd_IndexedMapOfReal_Substitute(self, *args)

    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_IndexedMapOfReal_RemoveLast(self, *args)

    def Contains(self, *args):
        """
        :param K:
        :type K: float &
        :rtype: bool

        """
        return _TColStd.TColStd_IndexedMapOfReal_Contains(self, *args)

    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: float

        """
        return _TColStd.TColStd_IndexedMapOfReal_FindKey(self, *args)

    def FindIndex(self, *args):
        """
        :param K:
        :type K: float &
        :rtype: int

        """
        return _TColStd.TColStd_IndexedMapOfReal_FindIndex(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_IndexedMapOfReal self)"""
        return _TColStd.TColStd_IndexedMapOfReal__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_IndexedMapOfReal.Assign = new_instancemethod(_TColStd.TColStd_IndexedMapOfReal_Assign,None,TColStd_IndexedMapOfReal)
TColStd_IndexedMapOfReal.Set = new_instancemethod(_TColStd.TColStd_IndexedMapOfReal_Set,None,TColStd_IndexedMapOfReal)
TColStd_IndexedMapOfReal.ReSize = new_instancemethod(_TColStd.TColStd_IndexedMapOfReal_ReSize,None,TColStd_IndexedMapOfReal)
TColStd_IndexedMapOfReal.Clear = new_instancemethod(_TColStd.TColStd_IndexedMapOfReal_Clear,None,TColStd_IndexedMapOfReal)
TColStd_IndexedMapOfReal.Add = new_instancemethod(_TColStd.TColStd_IndexedMapOfReal_Add,None,TColStd_IndexedMapOfReal)
TColStd_IndexedMapOfReal.Substitute = new_instancemethod(_TColStd.TColStd_IndexedMapOfReal_Substitute,None,TColStd_IndexedMapOfReal)
TColStd_IndexedMapOfReal.RemoveLast = new_instancemethod(_TColStd.TColStd_IndexedMapOfReal_RemoveLast,None,TColStd_IndexedMapOfReal)
TColStd_IndexedMapOfReal.Contains = new_instancemethod(_TColStd.TColStd_IndexedMapOfReal_Contains,None,TColStd_IndexedMapOfReal)
TColStd_IndexedMapOfReal.FindKey = new_instancemethod(_TColStd.TColStd_IndexedMapOfReal_FindKey,None,TColStd_IndexedMapOfReal)
TColStd_IndexedMapOfReal.FindIndex = new_instancemethod(_TColStd.TColStd_IndexedMapOfReal_FindIndex,None,TColStd_IndexedMapOfReal)
TColStd_IndexedMapOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_IndexedMapOfReal__kill_pointed,None,TColStd_IndexedMapOfReal)
TColStd_IndexedMapOfReal_swigregister = _TColStd.TColStd_IndexedMapOfReal_swigregister
TColStd_IndexedMapOfReal_swigregister(TColStd_IndexedMapOfReal)

class TColStd_IndexedMapOfTransient(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_IndexedMapOfTransient_swiginit(self,_TColStd.new_TColStd_IndexedMapOfTransient(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_IndexedMapOfTransient &
        :rtype: TColStd_IndexedMapOfTransient

        """
        return _TColStd.TColStd_IndexedMapOfTransient_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_IndexedMapOfTransient &
        :rtype: TColStd_IndexedMapOfTransient

        """
        return _TColStd.TColStd_IndexedMapOfTransient_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_IndexedMapOfTransient_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_IndexedMapOfTransient_Clear(self, *args)

    def Add(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: int

        """
        return _TColStd.TColStd_IndexedMapOfTransient_Add(self, *args)

    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_IndexedMapOfTransient_Substitute(self, *args)

    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_IndexedMapOfTransient_RemoveLast(self, *args)

    def Contains(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_IndexedMapOfTransient_Contains(self, *args)

    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_IndexedMapOfTransient_FindKey(self, *args)

    def FindIndex(self, *args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :rtype: int

        """
        return _TColStd.TColStd_IndexedMapOfTransient_FindIndex(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_IndexedMapOfTransient self)"""
        return _TColStd.TColStd_IndexedMapOfTransient__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_IndexedMapOfTransient.Assign = new_instancemethod(_TColStd.TColStd_IndexedMapOfTransient_Assign,None,TColStd_IndexedMapOfTransient)
TColStd_IndexedMapOfTransient.Set = new_instancemethod(_TColStd.TColStd_IndexedMapOfTransient_Set,None,TColStd_IndexedMapOfTransient)
TColStd_IndexedMapOfTransient.ReSize = new_instancemethod(_TColStd.TColStd_IndexedMapOfTransient_ReSize,None,TColStd_IndexedMapOfTransient)
TColStd_IndexedMapOfTransient.Clear = new_instancemethod(_TColStd.TColStd_IndexedMapOfTransient_Clear,None,TColStd_IndexedMapOfTransient)
TColStd_IndexedMapOfTransient.Add = new_instancemethod(_TColStd.TColStd_IndexedMapOfTransient_Add,None,TColStd_IndexedMapOfTransient)
TColStd_IndexedMapOfTransient.Substitute = new_instancemethod(_TColStd.TColStd_IndexedMapOfTransient_Substitute,None,TColStd_IndexedMapOfTransient)
TColStd_IndexedMapOfTransient.RemoveLast = new_instancemethod(_TColStd.TColStd_IndexedMapOfTransient_RemoveLast,None,TColStd_IndexedMapOfTransient)
TColStd_IndexedMapOfTransient.Contains = new_instancemethod(_TColStd.TColStd_IndexedMapOfTransient_Contains,None,TColStd_IndexedMapOfTransient)
TColStd_IndexedMapOfTransient.FindKey = new_instancemethod(_TColStd.TColStd_IndexedMapOfTransient_FindKey,None,TColStd_IndexedMapOfTransient)
TColStd_IndexedMapOfTransient.FindIndex = new_instancemethod(_TColStd.TColStd_IndexedMapOfTransient_FindIndex,None,TColStd_IndexedMapOfTransient)
TColStd_IndexedMapOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_IndexedMapOfTransient__kill_pointed,None,TColStd_IndexedMapOfTransient)
TColStd_IndexedMapOfTransient_swigregister = _TColStd.TColStd_IndexedMapOfTransient_swigregister
TColStd_IndexedMapOfTransient_swigregister(TColStd_IndexedMapOfTransient)

class TColStd_ListIteratorOfListOfAsciiString(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param L:
        :type L: TColStd_ListOfAsciiString &
        :rtype: None

        """
        _TColStd.TColStd_ListIteratorOfListOfAsciiString_swiginit(self,_TColStd.new_TColStd_ListIteratorOfListOfAsciiString(*args))
    def Initialize(self, *args):
        """
        :param L:
        :type L: TColStd_ListOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfListOfAsciiString_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_ListIteratorOfListOfAsciiString_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfListOfAsciiString_Next(self, *args)

    def Value(self, *args):
        """
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_ListIteratorOfListOfAsciiString_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListIteratorOfListOfAsciiString.Initialize = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfAsciiString_Initialize,None,TColStd_ListIteratorOfListOfAsciiString)
TColStd_ListIteratorOfListOfAsciiString.More = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfAsciiString_More,None,TColStd_ListIteratorOfListOfAsciiString)
TColStd_ListIteratorOfListOfAsciiString.Next = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfAsciiString_Next,None,TColStd_ListIteratorOfListOfAsciiString)
TColStd_ListIteratorOfListOfAsciiString.Value = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfAsciiString_Value,None,TColStd_ListIteratorOfListOfAsciiString)
TColStd_ListIteratorOfListOfAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfAsciiString__kill_pointed,None,TColStd_ListIteratorOfListOfAsciiString)
TColStd_ListIteratorOfListOfAsciiString_swigregister = _TColStd.TColStd_ListIteratorOfListOfAsciiString_swigregister
TColStd_ListIteratorOfListOfAsciiString_swigregister(TColStd_ListIteratorOfListOfAsciiString)

class TColStd_ListIteratorOfListOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param L:
        :type L: TColStd_ListOfInteger &
        :rtype: None

        """
        _TColStd.TColStd_ListIteratorOfListOfInteger_swiginit(self,_TColStd.new_TColStd_ListIteratorOfListOfInteger(*args))
    def Initialize(self, *args):
        """
        :param L:
        :type L: TColStd_ListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfListOfInteger_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_ListIteratorOfListOfInteger_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfListOfInteger_Next(self, *args)

    def GetValue(self):
        """GetValue(TColStd_ListIteratorOfListOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_ListIteratorOfListOfInteger_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_ListIteratorOfListOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_ListIteratorOfListOfInteger_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListIteratorOfListOfInteger self)"""
        return _TColStd.TColStd_ListIteratorOfListOfInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListIteratorOfListOfInteger.Initialize = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfInteger_Initialize,None,TColStd_ListIteratorOfListOfInteger)
TColStd_ListIteratorOfListOfInteger.More = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfInteger_More,None,TColStd_ListIteratorOfListOfInteger)
TColStd_ListIteratorOfListOfInteger.Next = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfInteger_Next,None,TColStd_ListIteratorOfListOfInteger)
TColStd_ListIteratorOfListOfInteger.GetValue = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfInteger_GetValue,None,TColStd_ListIteratorOfListOfInteger)
TColStd_ListIteratorOfListOfInteger.SetValue = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfInteger_SetValue,None,TColStd_ListIteratorOfListOfInteger)
TColStd_ListIteratorOfListOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfInteger__kill_pointed,None,TColStd_ListIteratorOfListOfInteger)
TColStd_ListIteratorOfListOfInteger_swigregister = _TColStd.TColStd_ListIteratorOfListOfInteger_swigregister
TColStd_ListIteratorOfListOfInteger_swigregister(TColStd_ListIteratorOfListOfInteger)

class TColStd_ListIteratorOfListOfReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param L:
        :type L: TColStd_ListOfReal &
        :rtype: None

        """
        _TColStd.TColStd_ListIteratorOfListOfReal_swiginit(self,_TColStd.new_TColStd_ListIteratorOfListOfReal(*args))
    def Initialize(self, *args):
        """
        :param L:
        :type L: TColStd_ListOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfListOfReal_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_ListIteratorOfListOfReal_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfListOfReal_Next(self, *args)

    def GetValue(self):
        """GetValue(TColStd_ListIteratorOfListOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_ListIteratorOfListOfReal_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_ListIteratorOfListOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_ListIteratorOfListOfReal_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListIteratorOfListOfReal self)"""
        return _TColStd.TColStd_ListIteratorOfListOfReal__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListIteratorOfListOfReal.Initialize = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfReal_Initialize,None,TColStd_ListIteratorOfListOfReal)
TColStd_ListIteratorOfListOfReal.More = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfReal_More,None,TColStd_ListIteratorOfListOfReal)
TColStd_ListIteratorOfListOfReal.Next = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfReal_Next,None,TColStd_ListIteratorOfListOfReal)
TColStd_ListIteratorOfListOfReal.GetValue = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfReal_GetValue,None,TColStd_ListIteratorOfListOfReal)
TColStd_ListIteratorOfListOfReal.SetValue = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfReal_SetValue,None,TColStd_ListIteratorOfListOfReal)
TColStd_ListIteratorOfListOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfReal__kill_pointed,None,TColStd_ListIteratorOfListOfReal)
TColStd_ListIteratorOfListOfReal_swigregister = _TColStd.TColStd_ListIteratorOfListOfReal_swigregister
TColStd_ListIteratorOfListOfReal_swigregister(TColStd_ListIteratorOfListOfReal)

class TColStd_ListIteratorOfListOfTransient(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param L:
        :type L: TColStd_ListOfTransient &
        :rtype: None

        """
        _TColStd.TColStd_ListIteratorOfListOfTransient_swiginit(self,_TColStd.new_TColStd_ListIteratorOfListOfTransient(*args))
    def Initialize(self, *args):
        """
        :param L:
        :type L: TColStd_ListOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfListOfTransient_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_ListIteratorOfListOfTransient_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfListOfTransient_Next(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_ListIteratorOfListOfTransient_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListIteratorOfListOfTransient.Initialize = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfTransient_Initialize,None,TColStd_ListIteratorOfListOfTransient)
TColStd_ListIteratorOfListOfTransient.More = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfTransient_More,None,TColStd_ListIteratorOfListOfTransient)
TColStd_ListIteratorOfListOfTransient.Next = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfTransient_Next,None,TColStd_ListIteratorOfListOfTransient)
TColStd_ListIteratorOfListOfTransient.Value = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfTransient_Value,None,TColStd_ListIteratorOfListOfTransient)
TColStd_ListIteratorOfListOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_ListIteratorOfListOfTransient__kill_pointed,None,TColStd_ListIteratorOfListOfTransient)
TColStd_ListIteratorOfListOfTransient_swigregister = _TColStd.TColStd_ListIteratorOfListOfTransient_swigregister
TColStd_ListIteratorOfListOfTransient_swigregister(TColStd_ListIteratorOfListOfTransient)

class TColStd_ListIteratorOfSetListOfSetOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param L:
        :type L: TColStd_SetListOfSetOfInteger &
        :rtype: None

        """
        _TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger_swiginit(self,_TColStd.new_TColStd_ListIteratorOfSetListOfSetOfInteger(*args))
    def Initialize(self, *args):
        """
        :param L:
        :type L: TColStd_SetListOfSetOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger_Next(self, *args)

    def GetValue(self):
        """GetValue(TColStd_ListIteratorOfSetListOfSetOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_ListIteratorOfSetListOfSetOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListIteratorOfSetListOfSetOfInteger self)"""
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListIteratorOfSetListOfSetOfInteger.Initialize = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger_Initialize,None,TColStd_ListIteratorOfSetListOfSetOfInteger)
TColStd_ListIteratorOfSetListOfSetOfInteger.More = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger_More,None,TColStd_ListIteratorOfSetListOfSetOfInteger)
TColStd_ListIteratorOfSetListOfSetOfInteger.Next = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger_Next,None,TColStd_ListIteratorOfSetListOfSetOfInteger)
TColStd_ListIteratorOfSetListOfSetOfInteger.GetValue = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger_GetValue,None,TColStd_ListIteratorOfSetListOfSetOfInteger)
TColStd_ListIteratorOfSetListOfSetOfInteger.SetValue = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger_SetValue,None,TColStd_ListIteratorOfSetListOfSetOfInteger)
TColStd_ListIteratorOfSetListOfSetOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger__kill_pointed,None,TColStd_ListIteratorOfSetListOfSetOfInteger)
TColStd_ListIteratorOfSetListOfSetOfInteger_swigregister = _TColStd.TColStd_ListIteratorOfSetListOfSetOfInteger_swigregister
TColStd_ListIteratorOfSetListOfSetOfInteger_swigregister(TColStd_ListIteratorOfSetListOfSetOfInteger)

class TColStd_ListIteratorOfSetListOfSetOfReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param L:
        :type L: TColStd_SetListOfSetOfReal &
        :rtype: None

        """
        _TColStd.TColStd_ListIteratorOfSetListOfSetOfReal_swiginit(self,_TColStd.new_TColStd_ListIteratorOfSetListOfSetOfReal(*args))
    def Initialize(self, *args):
        """
        :param L:
        :type L: TColStd_SetListOfSetOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfReal_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfReal_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfReal_Next(self, *args)

    def GetValue(self):
        """GetValue(TColStd_ListIteratorOfSetListOfSetOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfReal_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_ListIteratorOfSetListOfSetOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfReal_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListIteratorOfSetListOfSetOfReal self)"""
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfReal__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListIteratorOfSetListOfSetOfReal.Initialize = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfReal_Initialize,None,TColStd_ListIteratorOfSetListOfSetOfReal)
TColStd_ListIteratorOfSetListOfSetOfReal.More = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfReal_More,None,TColStd_ListIteratorOfSetListOfSetOfReal)
TColStd_ListIteratorOfSetListOfSetOfReal.Next = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfReal_Next,None,TColStd_ListIteratorOfSetListOfSetOfReal)
TColStd_ListIteratorOfSetListOfSetOfReal.GetValue = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfReal_GetValue,None,TColStd_ListIteratorOfSetListOfSetOfReal)
TColStd_ListIteratorOfSetListOfSetOfReal.SetValue = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfReal_SetValue,None,TColStd_ListIteratorOfSetListOfSetOfReal)
TColStd_ListIteratorOfSetListOfSetOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfReal__kill_pointed,None,TColStd_ListIteratorOfSetListOfSetOfReal)
TColStd_ListIteratorOfSetListOfSetOfReal_swigregister = _TColStd.TColStd_ListIteratorOfSetListOfSetOfReal_swigregister
TColStd_ListIteratorOfSetListOfSetOfReal_swigregister(TColStd_ListIteratorOfSetListOfSetOfReal)

class TColStd_ListIteratorOfSetListOfSetOfTransient(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param L:
        :type L: TColStd_SetListOfSetOfTransient &
        :rtype: None

        """
        _TColStd.TColStd_ListIteratorOfSetListOfSetOfTransient_swiginit(self,_TColStd.new_TColStd_ListIteratorOfSetListOfSetOfTransient(*args))
    def Initialize(self, *args):
        """
        :param L:
        :type L: TColStd_SetListOfSetOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfTransient_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfTransient_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfTransient_Next(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_ListIteratorOfSetListOfSetOfTransient_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListIteratorOfSetListOfSetOfTransient.Initialize = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfTransient_Initialize,None,TColStd_ListIteratorOfSetListOfSetOfTransient)
TColStd_ListIteratorOfSetListOfSetOfTransient.More = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfTransient_More,None,TColStd_ListIteratorOfSetListOfSetOfTransient)
TColStd_ListIteratorOfSetListOfSetOfTransient.Next = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfTransient_Next,None,TColStd_ListIteratorOfSetListOfSetOfTransient)
TColStd_ListIteratorOfSetListOfSetOfTransient.Value = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfTransient_Value,None,TColStd_ListIteratorOfSetListOfSetOfTransient)
TColStd_ListIteratorOfSetListOfSetOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_ListIteratorOfSetListOfSetOfTransient__kill_pointed,None,TColStd_ListIteratorOfSetListOfSetOfTransient)
TColStd_ListIteratorOfSetListOfSetOfTransient_swigregister = _TColStd.TColStd_ListIteratorOfSetListOfSetOfTransient_swigregister
TColStd_ListIteratorOfSetListOfSetOfTransient_swigregister(TColStd_ListIteratorOfSetListOfSetOfTransient)

class TColStd_ListNodeOfListOfAsciiString(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: TCollection_AsciiString &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_ListNodeOfListOfAsciiString_swiginit(self,_TColStd.new_TColStd_ListNodeOfListOfAsciiString(*args))
    def Value(self, *args):
        """
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_ListNodeOfListOfAsciiString_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListNodeOfListOfAsciiString self)"""
        return _TColStd.TColStd_ListNodeOfListOfAsciiString__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_ListNodeOfListOfAsciiString self) -> Handle_TColStd_ListNodeOfListOfAsciiString"""
        return _TColStd.TColStd_ListNodeOfListOfAsciiString_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListNodeOfListOfAsciiString.Value = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfAsciiString_Value,None,TColStd_ListNodeOfListOfAsciiString)
TColStd_ListNodeOfListOfAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfAsciiString__kill_pointed,None,TColStd_ListNodeOfListOfAsciiString)
TColStd_ListNodeOfListOfAsciiString.GetHandle = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfAsciiString_GetHandle,None,TColStd_ListNodeOfListOfAsciiString)
TColStd_ListNodeOfListOfAsciiString_swigregister = _TColStd.TColStd_ListNodeOfListOfAsciiString_swigregister
TColStd_ListNodeOfListOfAsciiString_swigregister(TColStd_ListNodeOfListOfAsciiString)

class Handle_TColStd_ListNodeOfListOfAsciiString(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_ListNodeOfListOfAsciiString_swiginit(self,_TColStd.new_Handle_TColStd_ListNodeOfListOfAsciiString(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_ListNodeOfListOfAsciiString_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_ListNodeOfListOfAsciiString.Nullify = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfAsciiString_Nullify,None,Handle_TColStd_ListNodeOfListOfAsciiString)
Handle_TColStd_ListNodeOfListOfAsciiString.IsNull = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfAsciiString_IsNull,None,Handle_TColStd_ListNodeOfListOfAsciiString)
Handle_TColStd_ListNodeOfListOfAsciiString.GetObject = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfAsciiString_GetObject,None,Handle_TColStd_ListNodeOfListOfAsciiString)
Handle_TColStd_ListNodeOfListOfAsciiString._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfAsciiString__kill_pointed,None,Handle_TColStd_ListNodeOfListOfAsciiString)
Handle_TColStd_ListNodeOfListOfAsciiString_swigregister = _TColStd.Handle_TColStd_ListNodeOfListOfAsciiString_swigregister
Handle_TColStd_ListNodeOfListOfAsciiString_swigregister(Handle_TColStd_ListNodeOfListOfAsciiString)

def Handle_TColStd_ListNodeOfListOfAsciiString_DownCast(*args):
  return _TColStd.Handle_TColStd_ListNodeOfListOfAsciiString_DownCast(*args)
Handle_TColStd_ListNodeOfListOfAsciiString_DownCast = _TColStd.Handle_TColStd_ListNodeOfListOfAsciiString_DownCast

class TColStd_ListNodeOfListOfInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: int &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_ListNodeOfListOfInteger_swiginit(self,_TColStd.new_TColStd_ListNodeOfListOfInteger(*args))
    def GetValue(self):
        """GetValue(TColStd_ListNodeOfListOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_ListNodeOfListOfInteger_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_ListNodeOfListOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_ListNodeOfListOfInteger_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListNodeOfListOfInteger self)"""
        return _TColStd.TColStd_ListNodeOfListOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_ListNodeOfListOfInteger self) -> Handle_TColStd_ListNodeOfListOfInteger"""
        return _TColStd.TColStd_ListNodeOfListOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListNodeOfListOfInteger.GetValue = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfInteger_GetValue,None,TColStd_ListNodeOfListOfInteger)
TColStd_ListNodeOfListOfInteger.SetValue = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfInteger_SetValue,None,TColStd_ListNodeOfListOfInteger)
TColStd_ListNodeOfListOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfInteger__kill_pointed,None,TColStd_ListNodeOfListOfInteger)
TColStd_ListNodeOfListOfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfInteger_GetHandle,None,TColStd_ListNodeOfListOfInteger)
TColStd_ListNodeOfListOfInteger_swigregister = _TColStd.TColStd_ListNodeOfListOfInteger_swigregister
TColStd_ListNodeOfListOfInteger_swigregister(TColStd_ListNodeOfListOfInteger)

class Handle_TColStd_ListNodeOfListOfInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_ListNodeOfListOfInteger_swiginit(self,_TColStd.new_Handle_TColStd_ListNodeOfListOfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_ListNodeOfListOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_ListNodeOfListOfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfInteger_Nullify,None,Handle_TColStd_ListNodeOfListOfInteger)
Handle_TColStd_ListNodeOfListOfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfInteger_IsNull,None,Handle_TColStd_ListNodeOfListOfInteger)
Handle_TColStd_ListNodeOfListOfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfInteger_GetObject,None,Handle_TColStd_ListNodeOfListOfInteger)
Handle_TColStd_ListNodeOfListOfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfInteger__kill_pointed,None,Handle_TColStd_ListNodeOfListOfInteger)
Handle_TColStd_ListNodeOfListOfInteger_swigregister = _TColStd.Handle_TColStd_ListNodeOfListOfInteger_swigregister
Handle_TColStd_ListNodeOfListOfInteger_swigregister(Handle_TColStd_ListNodeOfListOfInteger)

def Handle_TColStd_ListNodeOfListOfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_ListNodeOfListOfInteger_DownCast(*args)
Handle_TColStd_ListNodeOfListOfInteger_DownCast = _TColStd.Handle_TColStd_ListNodeOfListOfInteger_DownCast

class TColStd_ListNodeOfListOfReal(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: float &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_ListNodeOfListOfReal_swiginit(self,_TColStd.new_TColStd_ListNodeOfListOfReal(*args))
    def GetValue(self):
        """GetValue(TColStd_ListNodeOfListOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_ListNodeOfListOfReal_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_ListNodeOfListOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_ListNodeOfListOfReal_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListNodeOfListOfReal self)"""
        return _TColStd.TColStd_ListNodeOfListOfReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_ListNodeOfListOfReal self) -> Handle_TColStd_ListNodeOfListOfReal"""
        return _TColStd.TColStd_ListNodeOfListOfReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListNodeOfListOfReal.GetValue = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfReal_GetValue,None,TColStd_ListNodeOfListOfReal)
TColStd_ListNodeOfListOfReal.SetValue = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfReal_SetValue,None,TColStd_ListNodeOfListOfReal)
TColStd_ListNodeOfListOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfReal__kill_pointed,None,TColStd_ListNodeOfListOfReal)
TColStd_ListNodeOfListOfReal.GetHandle = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfReal_GetHandle,None,TColStd_ListNodeOfListOfReal)
TColStd_ListNodeOfListOfReal_swigregister = _TColStd.TColStd_ListNodeOfListOfReal_swigregister
TColStd_ListNodeOfListOfReal_swigregister(TColStd_ListNodeOfListOfReal)

class Handle_TColStd_ListNodeOfListOfReal(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_ListNodeOfListOfReal_swiginit(self,_TColStd.new_Handle_TColStd_ListNodeOfListOfReal(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_ListNodeOfListOfReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_ListNodeOfListOfReal.Nullify = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfReal_Nullify,None,Handle_TColStd_ListNodeOfListOfReal)
Handle_TColStd_ListNodeOfListOfReal.IsNull = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfReal_IsNull,None,Handle_TColStd_ListNodeOfListOfReal)
Handle_TColStd_ListNodeOfListOfReal.GetObject = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfReal_GetObject,None,Handle_TColStd_ListNodeOfListOfReal)
Handle_TColStd_ListNodeOfListOfReal._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfReal__kill_pointed,None,Handle_TColStd_ListNodeOfListOfReal)
Handle_TColStd_ListNodeOfListOfReal_swigregister = _TColStd.Handle_TColStd_ListNodeOfListOfReal_swigregister
Handle_TColStd_ListNodeOfListOfReal_swigregister(Handle_TColStd_ListNodeOfListOfReal)

def Handle_TColStd_ListNodeOfListOfReal_DownCast(*args):
  return _TColStd.Handle_TColStd_ListNodeOfListOfReal_DownCast(*args)
Handle_TColStd_ListNodeOfListOfReal_DownCast = _TColStd.Handle_TColStd_ListNodeOfListOfReal_DownCast

class TColStd_ListNodeOfListOfTransient(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_ListNodeOfListOfTransient_swiginit(self,_TColStd.new_TColStd_ListNodeOfListOfTransient(*args))
    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_ListNodeOfListOfTransient_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListNodeOfListOfTransient self)"""
        return _TColStd.TColStd_ListNodeOfListOfTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_ListNodeOfListOfTransient self) -> Handle_TColStd_ListNodeOfListOfTransient"""
        return _TColStd.TColStd_ListNodeOfListOfTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListNodeOfListOfTransient.Value = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfTransient_Value,None,TColStd_ListNodeOfListOfTransient)
TColStd_ListNodeOfListOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfTransient__kill_pointed,None,TColStd_ListNodeOfListOfTransient)
TColStd_ListNodeOfListOfTransient.GetHandle = new_instancemethod(_TColStd.TColStd_ListNodeOfListOfTransient_GetHandle,None,TColStd_ListNodeOfListOfTransient)
TColStd_ListNodeOfListOfTransient_swigregister = _TColStd.TColStd_ListNodeOfListOfTransient_swigregister
TColStd_ListNodeOfListOfTransient_swigregister(TColStd_ListNodeOfListOfTransient)

class Handle_TColStd_ListNodeOfListOfTransient(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_ListNodeOfListOfTransient_swiginit(self,_TColStd.new_Handle_TColStd_ListNodeOfListOfTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_ListNodeOfListOfTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_ListNodeOfListOfTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfTransient_Nullify,None,Handle_TColStd_ListNodeOfListOfTransient)
Handle_TColStd_ListNodeOfListOfTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfTransient_IsNull,None,Handle_TColStd_ListNodeOfListOfTransient)
Handle_TColStd_ListNodeOfListOfTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfTransient_GetObject,None,Handle_TColStd_ListNodeOfListOfTransient)
Handle_TColStd_ListNodeOfListOfTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfListOfTransient__kill_pointed,None,Handle_TColStd_ListNodeOfListOfTransient)
Handle_TColStd_ListNodeOfListOfTransient_swigregister = _TColStd.Handle_TColStd_ListNodeOfListOfTransient_swigregister
Handle_TColStd_ListNodeOfListOfTransient_swigregister(Handle_TColStd_ListNodeOfListOfTransient)

def Handle_TColStd_ListNodeOfListOfTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_ListNodeOfListOfTransient_DownCast(*args)
Handle_TColStd_ListNodeOfListOfTransient_DownCast = _TColStd.Handle_TColStd_ListNodeOfListOfTransient_DownCast

class TColStd_ListNodeOfSetListOfSetOfInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: int &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_ListNodeOfSetListOfSetOfInteger_swiginit(self,_TColStd.new_TColStd_ListNodeOfSetListOfSetOfInteger(*args))
    def GetValue(self):
        """GetValue(TColStd_ListNodeOfSetListOfSetOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_ListNodeOfSetListOfSetOfInteger_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_ListNodeOfSetListOfSetOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_ListNodeOfSetListOfSetOfInteger_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListNodeOfSetListOfSetOfInteger self)"""
        return _TColStd.TColStd_ListNodeOfSetListOfSetOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_ListNodeOfSetListOfSetOfInteger self) -> Handle_TColStd_ListNodeOfSetListOfSetOfInteger"""
        return _TColStd.TColStd_ListNodeOfSetListOfSetOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListNodeOfSetListOfSetOfInteger.GetValue = new_instancemethod(_TColStd.TColStd_ListNodeOfSetListOfSetOfInteger_GetValue,None,TColStd_ListNodeOfSetListOfSetOfInteger)
TColStd_ListNodeOfSetListOfSetOfInteger.SetValue = new_instancemethod(_TColStd.TColStd_ListNodeOfSetListOfSetOfInteger_SetValue,None,TColStd_ListNodeOfSetListOfSetOfInteger)
TColStd_ListNodeOfSetListOfSetOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_ListNodeOfSetListOfSetOfInteger__kill_pointed,None,TColStd_ListNodeOfSetListOfSetOfInteger)
TColStd_ListNodeOfSetListOfSetOfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_ListNodeOfSetListOfSetOfInteger_GetHandle,None,TColStd_ListNodeOfSetListOfSetOfInteger)
TColStd_ListNodeOfSetListOfSetOfInteger_swigregister = _TColStd.TColStd_ListNodeOfSetListOfSetOfInteger_swigregister
TColStd_ListNodeOfSetListOfSetOfInteger_swigregister(TColStd_ListNodeOfSetListOfSetOfInteger)

class Handle_TColStd_ListNodeOfSetListOfSetOfInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfInteger_swiginit(self,_TColStd.new_Handle_TColStd_ListNodeOfSetListOfSetOfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_ListNodeOfSetListOfSetOfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfInteger_Nullify,None,Handle_TColStd_ListNodeOfSetListOfSetOfInteger)
Handle_TColStd_ListNodeOfSetListOfSetOfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfInteger_IsNull,None,Handle_TColStd_ListNodeOfSetListOfSetOfInteger)
Handle_TColStd_ListNodeOfSetListOfSetOfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfInteger_GetObject,None,Handle_TColStd_ListNodeOfSetListOfSetOfInteger)
Handle_TColStd_ListNodeOfSetListOfSetOfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfInteger__kill_pointed,None,Handle_TColStd_ListNodeOfSetListOfSetOfInteger)
Handle_TColStd_ListNodeOfSetListOfSetOfInteger_swigregister = _TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfInteger_swigregister
Handle_TColStd_ListNodeOfSetListOfSetOfInteger_swigregister(Handle_TColStd_ListNodeOfSetListOfSetOfInteger)

def Handle_TColStd_ListNodeOfSetListOfSetOfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfInteger_DownCast(*args)
Handle_TColStd_ListNodeOfSetListOfSetOfInteger_DownCast = _TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfInteger_DownCast

class TColStd_ListNodeOfSetListOfSetOfReal(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: float &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_ListNodeOfSetListOfSetOfReal_swiginit(self,_TColStd.new_TColStd_ListNodeOfSetListOfSetOfReal(*args))
    def GetValue(self):
        """GetValue(TColStd_ListNodeOfSetListOfSetOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_ListNodeOfSetListOfSetOfReal_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_ListNodeOfSetListOfSetOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_ListNodeOfSetListOfSetOfReal_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListNodeOfSetListOfSetOfReal self)"""
        return _TColStd.TColStd_ListNodeOfSetListOfSetOfReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_ListNodeOfSetListOfSetOfReal self) -> Handle_TColStd_ListNodeOfSetListOfSetOfReal"""
        return _TColStd.TColStd_ListNodeOfSetListOfSetOfReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListNodeOfSetListOfSetOfReal.GetValue = new_instancemethod(_TColStd.TColStd_ListNodeOfSetListOfSetOfReal_GetValue,None,TColStd_ListNodeOfSetListOfSetOfReal)
TColStd_ListNodeOfSetListOfSetOfReal.SetValue = new_instancemethod(_TColStd.TColStd_ListNodeOfSetListOfSetOfReal_SetValue,None,TColStd_ListNodeOfSetListOfSetOfReal)
TColStd_ListNodeOfSetListOfSetOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_ListNodeOfSetListOfSetOfReal__kill_pointed,None,TColStd_ListNodeOfSetListOfSetOfReal)
TColStd_ListNodeOfSetListOfSetOfReal.GetHandle = new_instancemethod(_TColStd.TColStd_ListNodeOfSetListOfSetOfReal_GetHandle,None,TColStd_ListNodeOfSetListOfSetOfReal)
TColStd_ListNodeOfSetListOfSetOfReal_swigregister = _TColStd.TColStd_ListNodeOfSetListOfSetOfReal_swigregister
TColStd_ListNodeOfSetListOfSetOfReal_swigregister(TColStd_ListNodeOfSetListOfSetOfReal)

class Handle_TColStd_ListNodeOfSetListOfSetOfReal(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfReal_swiginit(self,_TColStd.new_Handle_TColStd_ListNodeOfSetListOfSetOfReal(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_ListNodeOfSetListOfSetOfReal.Nullify = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfReal_Nullify,None,Handle_TColStd_ListNodeOfSetListOfSetOfReal)
Handle_TColStd_ListNodeOfSetListOfSetOfReal.IsNull = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfReal_IsNull,None,Handle_TColStd_ListNodeOfSetListOfSetOfReal)
Handle_TColStd_ListNodeOfSetListOfSetOfReal.GetObject = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfReal_GetObject,None,Handle_TColStd_ListNodeOfSetListOfSetOfReal)
Handle_TColStd_ListNodeOfSetListOfSetOfReal._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfReal__kill_pointed,None,Handle_TColStd_ListNodeOfSetListOfSetOfReal)
Handle_TColStd_ListNodeOfSetListOfSetOfReal_swigregister = _TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfReal_swigregister
Handle_TColStd_ListNodeOfSetListOfSetOfReal_swigregister(Handle_TColStd_ListNodeOfSetListOfSetOfReal)

def Handle_TColStd_ListNodeOfSetListOfSetOfReal_DownCast(*args):
  return _TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfReal_DownCast(*args)
Handle_TColStd_ListNodeOfSetListOfSetOfReal_DownCast = _TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfReal_DownCast

class TColStd_ListNodeOfSetListOfSetOfTransient(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_ListNodeOfSetListOfSetOfTransient_swiginit(self,_TColStd.new_TColStd_ListNodeOfSetListOfSetOfTransient(*args))
    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_ListNodeOfSetListOfSetOfTransient_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListNodeOfSetListOfSetOfTransient self)"""
        return _TColStd.TColStd_ListNodeOfSetListOfSetOfTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_ListNodeOfSetListOfSetOfTransient self) -> Handle_TColStd_ListNodeOfSetListOfSetOfTransient"""
        return _TColStd.TColStd_ListNodeOfSetListOfSetOfTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListNodeOfSetListOfSetOfTransient.Value = new_instancemethod(_TColStd.TColStd_ListNodeOfSetListOfSetOfTransient_Value,None,TColStd_ListNodeOfSetListOfSetOfTransient)
TColStd_ListNodeOfSetListOfSetOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_ListNodeOfSetListOfSetOfTransient__kill_pointed,None,TColStd_ListNodeOfSetListOfSetOfTransient)
TColStd_ListNodeOfSetListOfSetOfTransient.GetHandle = new_instancemethod(_TColStd.TColStd_ListNodeOfSetListOfSetOfTransient_GetHandle,None,TColStd_ListNodeOfSetListOfSetOfTransient)
TColStd_ListNodeOfSetListOfSetOfTransient_swigregister = _TColStd.TColStd_ListNodeOfSetListOfSetOfTransient_swigregister
TColStd_ListNodeOfSetListOfSetOfTransient_swigregister(TColStd_ListNodeOfSetListOfSetOfTransient)

class Handle_TColStd_ListNodeOfSetListOfSetOfTransient(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfTransient_swiginit(self,_TColStd.new_Handle_TColStd_ListNodeOfSetListOfSetOfTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_ListNodeOfSetListOfSetOfTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfTransient_Nullify,None,Handle_TColStd_ListNodeOfSetListOfSetOfTransient)
Handle_TColStd_ListNodeOfSetListOfSetOfTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfTransient_IsNull,None,Handle_TColStd_ListNodeOfSetListOfSetOfTransient)
Handle_TColStd_ListNodeOfSetListOfSetOfTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfTransient_GetObject,None,Handle_TColStd_ListNodeOfSetListOfSetOfTransient)
Handle_TColStd_ListNodeOfSetListOfSetOfTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfTransient__kill_pointed,None,Handle_TColStd_ListNodeOfSetListOfSetOfTransient)
Handle_TColStd_ListNodeOfSetListOfSetOfTransient_swigregister = _TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfTransient_swigregister
Handle_TColStd_ListNodeOfSetListOfSetOfTransient_swigregister(Handle_TColStd_ListNodeOfSetListOfSetOfTransient)

def Handle_TColStd_ListNodeOfSetListOfSetOfTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfTransient_DownCast(*args)
Handle_TColStd_ListNodeOfSetListOfSetOfTransient_DownCast = _TColStd.Handle_TColStd_ListNodeOfSetListOfSetOfTransient_DownCast

class TColStd_ListOfAsciiString(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_ListOfAsciiString_swiginit(self,_TColStd.new_TColStd_ListOfAsciiString(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_ListOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfAsciiString_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_ListOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfAsciiString_Set(self, *args)

    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_ListOfAsciiString_Extent(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListOfAsciiString_Clear(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_ListOfAsciiString_IsEmpty(self, *args)

    def Prepend(self, *args):
        """
        :param I:
        :type I: TCollection_AsciiString &
        :rtype: None

        :param I:
        :type I: TCollection_AsciiString &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfListOfAsciiString &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfAsciiString_Prepend(self, *args)

    def Append(self, *args):
        """
        :param I:
        :type I: TCollection_AsciiString &
        :rtype: None

        :param I:
        :type I: TCollection_AsciiString &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfListOfAsciiString &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfAsciiString_Append(self, *args)

    def First(self, *args):
        """
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_ListOfAsciiString_First(self, *args)

    def Last(self, *args):
        """
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_ListOfAsciiString_Last(self, *args)

    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListOfAsciiString_RemoveFirst(self, *args)

    def Remove(self, *args):
        """
        :param It:
        :type It: TColStd_ListIteratorOfListOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfAsciiString_Remove(self, *args)

    def InsertBefore(self, *args):
        """
        :param I:
        :type I: TCollection_AsciiString &
        :param It:
        :type It: TColStd_ListIteratorOfListOfAsciiString &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfAsciiString &
        :param It:
        :type It: TColStd_ListIteratorOfListOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfAsciiString_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param I:
        :type I: TCollection_AsciiString &
        :param It:
        :type It: TColStd_ListIteratorOfListOfAsciiString &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfAsciiString &
        :param It:
        :type It: TColStd_ListIteratorOfListOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfAsciiString_InsertAfter(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListOfAsciiString.Assign = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_Assign,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString.Set = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_Set,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString.Extent = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_Extent,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString.Clear = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_Clear,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString.IsEmpty = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_IsEmpty,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString.Prepend = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_Prepend,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString.Append = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_Append,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString.First = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_First,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString.Last = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_Last,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString.RemoveFirst = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_RemoveFirst,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString.Remove = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_Remove,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString.InsertBefore = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_InsertBefore,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString.InsertAfter = new_instancemethod(_TColStd.TColStd_ListOfAsciiString_InsertAfter,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_ListOfAsciiString__kill_pointed,None,TColStd_ListOfAsciiString)
TColStd_ListOfAsciiString_swigregister = _TColStd.TColStd_ListOfAsciiString_swigregister
TColStd_ListOfAsciiString_swigregister(TColStd_ListOfAsciiString)

class TColStd_ListOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_ListOfInteger_swiginit(self,_TColStd.new_TColStd_ListOfInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_ListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_ListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfInteger_Set(self, *args)

    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_ListOfInteger_Extent(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListOfInteger_Clear(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_ListOfInteger_IsEmpty(self, *args)

    def Prepend(self, *args):
        """
        :param I:
        :type I: int &
        :rtype: None

        :param I:
        :type I: int &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfListOfInteger &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfInteger_Prepend(self, *args)

    def Append(self, *args):
        """
        :param I:
        :type I: int &
        :rtype: None

        :param I:
        :type I: int &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfListOfInteger &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfInteger_Append(self, *args)

    def GetFirst(self):
        """GetFirst(TColStd_ListOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_ListOfInteger_GetFirst(self)

    def SetFirst(self, *args):
        """SetFirst(TColStd_ListOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_ListOfInteger_SetFirst(self, *args)

    def GetLast(self):
        """GetLast(TColStd_ListOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_ListOfInteger_GetLast(self)

    def SetLast(self, *args):
        """SetLast(TColStd_ListOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_ListOfInteger_SetLast(self, *args)

    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListOfInteger_RemoveFirst(self, *args)

    def Remove(self, *args):
        """
        :param It:
        :type It: TColStd_ListIteratorOfListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfInteger_Remove(self, *args)

    def InsertBefore(self, *args):
        """
        :param I:
        :type I: int &
        :param It:
        :type It: TColStd_ListIteratorOfListOfInteger &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfInteger &
        :param It:
        :type It: TColStd_ListIteratorOfListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfInteger_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param I:
        :type I: int &
        :param It:
        :type It: TColStd_ListIteratorOfListOfInteger &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfInteger &
        :param It:
        :type It: TColStd_ListIteratorOfListOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfInteger_InsertAfter(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListOfInteger self)"""
        return _TColStd.TColStd_ListOfInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListOfInteger.Assign = new_instancemethod(_TColStd.TColStd_ListOfInteger_Assign,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.Set = new_instancemethod(_TColStd.TColStd_ListOfInteger_Set,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.Extent = new_instancemethod(_TColStd.TColStd_ListOfInteger_Extent,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.Clear = new_instancemethod(_TColStd.TColStd_ListOfInteger_Clear,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.IsEmpty = new_instancemethod(_TColStd.TColStd_ListOfInteger_IsEmpty,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.Prepend = new_instancemethod(_TColStd.TColStd_ListOfInteger_Prepend,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.Append = new_instancemethod(_TColStd.TColStd_ListOfInteger_Append,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.GetFirst = new_instancemethod(_TColStd.TColStd_ListOfInteger_GetFirst,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.SetFirst = new_instancemethod(_TColStd.TColStd_ListOfInteger_SetFirst,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.GetLast = new_instancemethod(_TColStd.TColStd_ListOfInteger_GetLast,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.SetLast = new_instancemethod(_TColStd.TColStd_ListOfInteger_SetLast,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.RemoveFirst = new_instancemethod(_TColStd.TColStd_ListOfInteger_RemoveFirst,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.Remove = new_instancemethod(_TColStd.TColStd_ListOfInteger_Remove,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.InsertBefore = new_instancemethod(_TColStd.TColStd_ListOfInteger_InsertBefore,None,TColStd_ListOfInteger)
TColStd_ListOfInteger.InsertAfter = new_instancemethod(_TColStd.TColStd_ListOfInteger_InsertAfter,None,TColStd_ListOfInteger)
TColStd_ListOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_ListOfInteger__kill_pointed,None,TColStd_ListOfInteger)
TColStd_ListOfInteger_swigregister = _TColStd.TColStd_ListOfInteger_swigregister
TColStd_ListOfInteger_swigregister(TColStd_ListOfInteger)

class TColStd_ListOfReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_ListOfReal_swiginit(self,_TColStd.new_TColStd_ListOfReal(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_ListOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_ListOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfReal_Set(self, *args)

    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_ListOfReal_Extent(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListOfReal_Clear(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_ListOfReal_IsEmpty(self, *args)

    def Prepend(self, *args):
        """
        :param I:
        :type I: float &
        :rtype: None

        :param I:
        :type I: float &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfListOfReal &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfReal_Prepend(self, *args)

    def Append(self, *args):
        """
        :param I:
        :type I: float &
        :rtype: None

        :param I:
        :type I: float &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfListOfReal &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfReal_Append(self, *args)

    def GetFirst(self):
        """GetFirst(TColStd_ListOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_ListOfReal_GetFirst(self)

    def SetFirst(self, *args):
        """SetFirst(TColStd_ListOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_ListOfReal_SetFirst(self, *args)

    def GetLast(self):
        """GetLast(TColStd_ListOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_ListOfReal_GetLast(self)

    def SetLast(self, *args):
        """SetLast(TColStd_ListOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_ListOfReal_SetLast(self, *args)

    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListOfReal_RemoveFirst(self, *args)

    def Remove(self, *args):
        """
        :param It:
        :type It: TColStd_ListIteratorOfListOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfReal_Remove(self, *args)

    def InsertBefore(self, *args):
        """
        :param I:
        :type I: float &
        :param It:
        :type It: TColStd_ListIteratorOfListOfReal &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfReal &
        :param It:
        :type It: TColStd_ListIteratorOfListOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfReal_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param I:
        :type I: float &
        :param It:
        :type It: TColStd_ListIteratorOfListOfReal &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfReal &
        :param It:
        :type It: TColStd_ListIteratorOfListOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfReal_InsertAfter(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_ListOfReal self)"""
        return _TColStd.TColStd_ListOfReal__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListOfReal.Assign = new_instancemethod(_TColStd.TColStd_ListOfReal_Assign,None,TColStd_ListOfReal)
TColStd_ListOfReal.Set = new_instancemethod(_TColStd.TColStd_ListOfReal_Set,None,TColStd_ListOfReal)
TColStd_ListOfReal.Extent = new_instancemethod(_TColStd.TColStd_ListOfReal_Extent,None,TColStd_ListOfReal)
TColStd_ListOfReal.Clear = new_instancemethod(_TColStd.TColStd_ListOfReal_Clear,None,TColStd_ListOfReal)
TColStd_ListOfReal.IsEmpty = new_instancemethod(_TColStd.TColStd_ListOfReal_IsEmpty,None,TColStd_ListOfReal)
TColStd_ListOfReal.Prepend = new_instancemethod(_TColStd.TColStd_ListOfReal_Prepend,None,TColStd_ListOfReal)
TColStd_ListOfReal.Append = new_instancemethod(_TColStd.TColStd_ListOfReal_Append,None,TColStd_ListOfReal)
TColStd_ListOfReal.GetFirst = new_instancemethod(_TColStd.TColStd_ListOfReal_GetFirst,None,TColStd_ListOfReal)
TColStd_ListOfReal.SetFirst = new_instancemethod(_TColStd.TColStd_ListOfReal_SetFirst,None,TColStd_ListOfReal)
TColStd_ListOfReal.GetLast = new_instancemethod(_TColStd.TColStd_ListOfReal_GetLast,None,TColStd_ListOfReal)
TColStd_ListOfReal.SetLast = new_instancemethod(_TColStd.TColStd_ListOfReal_SetLast,None,TColStd_ListOfReal)
TColStd_ListOfReal.RemoveFirst = new_instancemethod(_TColStd.TColStd_ListOfReal_RemoveFirst,None,TColStd_ListOfReal)
TColStd_ListOfReal.Remove = new_instancemethod(_TColStd.TColStd_ListOfReal_Remove,None,TColStd_ListOfReal)
TColStd_ListOfReal.InsertBefore = new_instancemethod(_TColStd.TColStd_ListOfReal_InsertBefore,None,TColStd_ListOfReal)
TColStd_ListOfReal.InsertAfter = new_instancemethod(_TColStd.TColStd_ListOfReal_InsertAfter,None,TColStd_ListOfReal)
TColStd_ListOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_ListOfReal__kill_pointed,None,TColStd_ListOfReal)
TColStd_ListOfReal_swigregister = _TColStd.TColStd_ListOfReal_swigregister
TColStd_ListOfReal_swigregister(TColStd_ListOfReal)

class TColStd_ListOfTransient(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_ListOfTransient_swiginit(self,_TColStd.new_TColStd_ListOfTransient(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_ListOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfTransient_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_ListOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfTransient_Set(self, *args)

    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_ListOfTransient_Extent(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListOfTransient_Clear(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_ListOfTransient_IsEmpty(self, *args)

    def Prepend(self, *args):
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :rtype: None

        :param I:
        :type I: Handle_Standard_Transient &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfListOfTransient &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfTransient_Prepend(self, *args)

    def Append(self, *args):
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :rtype: None

        :param I:
        :type I: Handle_Standard_Transient &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfListOfTransient &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfTransient_Append(self, *args)

    def First(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_ListOfTransient_First(self, *args)

    def Last(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_ListOfTransient_Last(self, *args)

    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_ListOfTransient_RemoveFirst(self, *args)

    def Remove(self, *args):
        """
        :param It:
        :type It: TColStd_ListIteratorOfListOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfTransient_Remove(self, *args)

    def InsertBefore(self, *args):
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :param It:
        :type It: TColStd_ListIteratorOfListOfTransient &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfTransient &
        :param It:
        :type It: TColStd_ListIteratorOfListOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfTransient_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :param It:
        :type It: TColStd_ListIteratorOfListOfTransient &
        :rtype: None

        :param Other:
        :type Other: TColStd_ListOfTransient &
        :param It:
        :type It: TColStd_ListIteratorOfListOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_ListOfTransient_InsertAfter(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_ListOfTransient.Assign = new_instancemethod(_TColStd.TColStd_ListOfTransient_Assign,None,TColStd_ListOfTransient)
TColStd_ListOfTransient.Set = new_instancemethod(_TColStd.TColStd_ListOfTransient_Set,None,TColStd_ListOfTransient)
TColStd_ListOfTransient.Extent = new_instancemethod(_TColStd.TColStd_ListOfTransient_Extent,None,TColStd_ListOfTransient)
TColStd_ListOfTransient.Clear = new_instancemethod(_TColStd.TColStd_ListOfTransient_Clear,None,TColStd_ListOfTransient)
TColStd_ListOfTransient.IsEmpty = new_instancemethod(_TColStd.TColStd_ListOfTransient_IsEmpty,None,TColStd_ListOfTransient)
TColStd_ListOfTransient.Prepend = new_instancemethod(_TColStd.TColStd_ListOfTransient_Prepend,None,TColStd_ListOfTransient)
TColStd_ListOfTransient.Append = new_instancemethod(_TColStd.TColStd_ListOfTransient_Append,None,TColStd_ListOfTransient)
TColStd_ListOfTransient.First = new_instancemethod(_TColStd.TColStd_ListOfTransient_First,None,TColStd_ListOfTransient)
TColStd_ListOfTransient.Last = new_instancemethod(_TColStd.TColStd_ListOfTransient_Last,None,TColStd_ListOfTransient)
TColStd_ListOfTransient.RemoveFirst = new_instancemethod(_TColStd.TColStd_ListOfTransient_RemoveFirst,None,TColStd_ListOfTransient)
TColStd_ListOfTransient.Remove = new_instancemethod(_TColStd.TColStd_ListOfTransient_Remove,None,TColStd_ListOfTransient)
TColStd_ListOfTransient.InsertBefore = new_instancemethod(_TColStd.TColStd_ListOfTransient_InsertBefore,None,TColStd_ListOfTransient)
TColStd_ListOfTransient.InsertAfter = new_instancemethod(_TColStd.TColStd_ListOfTransient_InsertAfter,None,TColStd_ListOfTransient)
TColStd_ListOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_ListOfTransient__kill_pointed,None,TColStd_ListOfTransient)
TColStd_ListOfTransient_swigregister = _TColStd.TColStd_ListOfTransient_swigregister
TColStd_ListOfTransient_swigregister(TColStd_ListOfTransient)

class TColStd_MapIntegerHasher(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def HashCode(*args):
        """
        :param K:
        :type K: int &
        :param Upper:
        :type Upper: int
        :rtype: int

        """
        return _TColStd.TColStd_MapIntegerHasher_HashCode(*args)

    HashCode = staticmethod(HashCode)
    def IsEqual(*args):
        """
        :param K1:
        :type K1: int &
        :param K2:
        :type K2: int &
        :rtype: bool

        """
        return _TColStd.TColStd_MapIntegerHasher_IsEqual(*args)

    IsEqual = staticmethod(IsEqual)
    def __init__(self): 
        _TColStd.TColStd_MapIntegerHasher_swiginit(self,_TColStd.new_TColStd_MapIntegerHasher())
    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_MapIntegerHasher._kill_pointed = new_instancemethod(_TColStd.TColStd_MapIntegerHasher__kill_pointed,None,TColStd_MapIntegerHasher)
TColStd_MapIntegerHasher_swigregister = _TColStd.TColStd_MapIntegerHasher_swigregister
TColStd_MapIntegerHasher_swigregister(TColStd_MapIntegerHasher)

def TColStd_MapIntegerHasher_HashCode(*args):
  """
    :param K:
    :type K: int &
    :param Upper:
    :type Upper: int
    :rtype: int

    """
  return _TColStd.TColStd_MapIntegerHasher_HashCode(*args)

def TColStd_MapIntegerHasher_IsEqual(*args):
  """
    :param K1:
    :type K1: int &
    :param K2:
    :type K2: int &
    :rtype: bool

    """
  return _TColStd.TColStd_MapIntegerHasher_IsEqual(*args)

class TColStd_MapIteratorOfMapOfAsciiString(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TColStd_MapOfAsciiString &
        :rtype: None

        """
        _TColStd.TColStd_MapIteratorOfMapOfAsciiString_swiginit(self,_TColStd.new_TColStd_MapIteratorOfMapOfAsciiString(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TColStd_MapOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_MapIteratorOfMapOfAsciiString_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_MapIteratorOfMapOfAsciiString_Key(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_MapIteratorOfMapOfAsciiString.Initialize = new_instancemethod(_TColStd.TColStd_MapIteratorOfMapOfAsciiString_Initialize,None,TColStd_MapIteratorOfMapOfAsciiString)
TColStd_MapIteratorOfMapOfAsciiString.Key = new_instancemethod(_TColStd.TColStd_MapIteratorOfMapOfAsciiString_Key,None,TColStd_MapIteratorOfMapOfAsciiString)
TColStd_MapIteratorOfMapOfAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_MapIteratorOfMapOfAsciiString__kill_pointed,None,TColStd_MapIteratorOfMapOfAsciiString)
TColStd_MapIteratorOfMapOfAsciiString_swigregister = _TColStd.TColStd_MapIteratorOfMapOfAsciiString_swigregister
TColStd_MapIteratorOfMapOfAsciiString_swigregister(TColStd_MapIteratorOfMapOfAsciiString)

class TColStd_MapIteratorOfMapOfInteger(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TColStd_MapOfInteger &
        :rtype: None

        """
        _TColStd.TColStd_MapIteratorOfMapOfInteger_swiginit(self,_TColStd.new_TColStd_MapIteratorOfMapOfInteger(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TColStd_MapOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_MapIteratorOfMapOfInteger_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_MapIteratorOfMapOfInteger_Key(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_MapIteratorOfMapOfInteger.Initialize = new_instancemethod(_TColStd.TColStd_MapIteratorOfMapOfInteger_Initialize,None,TColStd_MapIteratorOfMapOfInteger)
TColStd_MapIteratorOfMapOfInteger.Key = new_instancemethod(_TColStd.TColStd_MapIteratorOfMapOfInteger_Key,None,TColStd_MapIteratorOfMapOfInteger)
TColStd_MapIteratorOfMapOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_MapIteratorOfMapOfInteger__kill_pointed,None,TColStd_MapIteratorOfMapOfInteger)
TColStd_MapIteratorOfMapOfInteger_swigregister = _TColStd.TColStd_MapIteratorOfMapOfInteger_swigregister
TColStd_MapIteratorOfMapOfInteger_swigregister(TColStd_MapIteratorOfMapOfInteger)

class TColStd_MapIteratorOfMapOfReal(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TColStd_MapOfReal &
        :rtype: None

        """
        _TColStd.TColStd_MapIteratorOfMapOfReal_swiginit(self,_TColStd.new_TColStd_MapIteratorOfMapOfReal(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TColStd_MapOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_MapIteratorOfMapOfReal_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: float

        """
        return _TColStd.TColStd_MapIteratorOfMapOfReal_Key(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_MapIteratorOfMapOfReal.Initialize = new_instancemethod(_TColStd.TColStd_MapIteratorOfMapOfReal_Initialize,None,TColStd_MapIteratorOfMapOfReal)
TColStd_MapIteratorOfMapOfReal.Key = new_instancemethod(_TColStd.TColStd_MapIteratorOfMapOfReal_Key,None,TColStd_MapIteratorOfMapOfReal)
TColStd_MapIteratorOfMapOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_MapIteratorOfMapOfReal__kill_pointed,None,TColStd_MapIteratorOfMapOfReal)
TColStd_MapIteratorOfMapOfReal_swigregister = _TColStd.TColStd_MapIteratorOfMapOfReal_swigregister
TColStd_MapIteratorOfMapOfReal_swigregister(TColStd_MapIteratorOfMapOfReal)

class TColStd_MapIteratorOfMapOfTransient(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TColStd_MapOfTransient &
        :rtype: None

        """
        _TColStd.TColStd_MapIteratorOfMapOfTransient_swiginit(self,_TColStd.new_TColStd_MapIteratorOfMapOfTransient(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TColStd_MapOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_MapIteratorOfMapOfTransient_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_MapIteratorOfMapOfTransient_Key(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_MapIteratorOfMapOfTransient.Initialize = new_instancemethod(_TColStd.TColStd_MapIteratorOfMapOfTransient_Initialize,None,TColStd_MapIteratorOfMapOfTransient)
TColStd_MapIteratorOfMapOfTransient.Key = new_instancemethod(_TColStd.TColStd_MapIteratorOfMapOfTransient_Key,None,TColStd_MapIteratorOfMapOfTransient)
TColStd_MapIteratorOfMapOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_MapIteratorOfMapOfTransient__kill_pointed,None,TColStd_MapIteratorOfMapOfTransient)
TColStd_MapIteratorOfMapOfTransient_swigregister = _TColStd.TColStd_MapIteratorOfMapOfTransient_swigregister
TColStd_MapIteratorOfMapOfTransient_swigregister(TColStd_MapIteratorOfMapOfTransient)

class TColStd_MapIteratorOfPackedMapOfInteger(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        * /// Empty Constructor.

        :rtype: None

        * /// Constructor.

        :param &:
        :type &: TColStd_PackedMapOfInteger
        :rtype: None

        """
        _TColStd.TColStd_MapIteratorOfPackedMapOfInteger_swiginit(self,_TColStd.new_TColStd_MapIteratorOfPackedMapOfInteger(*args))
    def Initialize(self, *args):
        """
        * /// Re-initialize with the same or another Map instance.

        :param &:
        :type &: TColStd_PackedMapOfInteger
        :rtype: None

        """
        return _TColStd.TColStd_MapIteratorOfPackedMapOfInteger_Initialize(self, *args)

    def Reset(self, *args):
        """
        * /// Restart the iteraton

        :rtype: None

        """
        return _TColStd.TColStd_MapIteratorOfPackedMapOfInteger_Reset(self, *args)

    def Key(self, *args):
        """
        * /// Query the iterated key. Defined in TColStd_PackedMapOfInteger.cxx

        :rtype: inline int

        """
        return _TColStd.TColStd_MapIteratorOfPackedMapOfInteger_Key(self, *args)

    def Next(self, *args):
        """
        * /// Increment the iterator

        :rtype: None

        """
        return _TColStd.TColStd_MapIteratorOfPackedMapOfInteger_Next(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_MapIteratorOfPackedMapOfInteger.Initialize = new_instancemethod(_TColStd.TColStd_MapIteratorOfPackedMapOfInteger_Initialize,None,TColStd_MapIteratorOfPackedMapOfInteger)
TColStd_MapIteratorOfPackedMapOfInteger.Reset = new_instancemethod(_TColStd.TColStd_MapIteratorOfPackedMapOfInteger_Reset,None,TColStd_MapIteratorOfPackedMapOfInteger)
TColStd_MapIteratorOfPackedMapOfInteger.Key = new_instancemethod(_TColStd.TColStd_MapIteratorOfPackedMapOfInteger_Key,None,TColStd_MapIteratorOfPackedMapOfInteger)
TColStd_MapIteratorOfPackedMapOfInteger.Next = new_instancemethod(_TColStd.TColStd_MapIteratorOfPackedMapOfInteger_Next,None,TColStd_MapIteratorOfPackedMapOfInteger)
TColStd_MapIteratorOfPackedMapOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_MapIteratorOfPackedMapOfInteger__kill_pointed,None,TColStd_MapIteratorOfPackedMapOfInteger)
TColStd_MapIteratorOfPackedMapOfInteger_swigregister = _TColStd.TColStd_MapIteratorOfPackedMapOfInteger_swigregister
TColStd_MapIteratorOfPackedMapOfInteger_swigregister(TColStd_MapIteratorOfPackedMapOfInteger)

class TColStd_MapOfAsciiString(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_MapOfAsciiString_swiginit(self,_TColStd.new_TColStd_MapOfAsciiString(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_MapOfAsciiString &
        :rtype: TColStd_MapOfAsciiString

        """
        return _TColStd.TColStd_MapOfAsciiString_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_MapOfAsciiString &
        :rtype: TColStd_MapOfAsciiString

        """
        return _TColStd.TColStd_MapOfAsciiString_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_MapOfAsciiString_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_MapOfAsciiString_Clear(self, *args)

    def Add(self, *args):
        """
        :param aKey:
        :type aKey: TCollection_AsciiString &
        :rtype: bool

        """
        return _TColStd.TColStd_MapOfAsciiString_Add(self, *args)

    def Contains(self, *args):
        """
        :param aKey:
        :type aKey: TCollection_AsciiString &
        :rtype: bool

        """
        return _TColStd.TColStd_MapOfAsciiString_Contains(self, *args)

    def Remove(self, *args):
        """
        :param aKey:
        :type aKey: TCollection_AsciiString &
        :rtype: bool

        """
        return _TColStd.TColStd_MapOfAsciiString_Remove(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_MapOfAsciiString self)"""
        return _TColStd.TColStd_MapOfAsciiString__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_MapOfAsciiString.Assign = new_instancemethod(_TColStd.TColStd_MapOfAsciiString_Assign,None,TColStd_MapOfAsciiString)
TColStd_MapOfAsciiString.Set = new_instancemethod(_TColStd.TColStd_MapOfAsciiString_Set,None,TColStd_MapOfAsciiString)
TColStd_MapOfAsciiString.ReSize = new_instancemethod(_TColStd.TColStd_MapOfAsciiString_ReSize,None,TColStd_MapOfAsciiString)
TColStd_MapOfAsciiString.Clear = new_instancemethod(_TColStd.TColStd_MapOfAsciiString_Clear,None,TColStd_MapOfAsciiString)
TColStd_MapOfAsciiString.Add = new_instancemethod(_TColStd.TColStd_MapOfAsciiString_Add,None,TColStd_MapOfAsciiString)
TColStd_MapOfAsciiString.Contains = new_instancemethod(_TColStd.TColStd_MapOfAsciiString_Contains,None,TColStd_MapOfAsciiString)
TColStd_MapOfAsciiString.Remove = new_instancemethod(_TColStd.TColStd_MapOfAsciiString_Remove,None,TColStd_MapOfAsciiString)
TColStd_MapOfAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_MapOfAsciiString__kill_pointed,None,TColStd_MapOfAsciiString)
TColStd_MapOfAsciiString_swigregister = _TColStd.TColStd_MapOfAsciiString_swigregister
TColStd_MapOfAsciiString_swigregister(TColStd_MapOfAsciiString)

class TColStd_MapOfInteger(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_MapOfInteger_swiginit(self,_TColStd.new_TColStd_MapOfInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_MapOfInteger &
        :rtype: TColStd_MapOfInteger

        """
        return _TColStd.TColStd_MapOfInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_MapOfInteger &
        :rtype: TColStd_MapOfInteger

        """
        return _TColStd.TColStd_MapOfInteger_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_MapOfInteger_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_MapOfInteger_Clear(self, *args)

    def Add(self, *args):
        """
        :param aKey:
        :type aKey: int &
        :rtype: bool

        """
        return _TColStd.TColStd_MapOfInteger_Add(self, *args)

    def Contains(self, *args):
        """
        :param aKey:
        :type aKey: int &
        :rtype: bool

        """
        return _TColStd.TColStd_MapOfInteger_Contains(self, *args)

    def Remove(self, *args):
        """
        :param aKey:
        :type aKey: int &
        :rtype: bool

        """
        return _TColStd.TColStd_MapOfInteger_Remove(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_MapOfInteger self)"""
        return _TColStd.TColStd_MapOfInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_MapOfInteger.Assign = new_instancemethod(_TColStd.TColStd_MapOfInteger_Assign,None,TColStd_MapOfInteger)
TColStd_MapOfInteger.Set = new_instancemethod(_TColStd.TColStd_MapOfInteger_Set,None,TColStd_MapOfInteger)
TColStd_MapOfInteger.ReSize = new_instancemethod(_TColStd.TColStd_MapOfInteger_ReSize,None,TColStd_MapOfInteger)
TColStd_MapOfInteger.Clear = new_instancemethod(_TColStd.TColStd_MapOfInteger_Clear,None,TColStd_MapOfInteger)
TColStd_MapOfInteger.Add = new_instancemethod(_TColStd.TColStd_MapOfInteger_Add,None,TColStd_MapOfInteger)
TColStd_MapOfInteger.Contains = new_instancemethod(_TColStd.TColStd_MapOfInteger_Contains,None,TColStd_MapOfInteger)
TColStd_MapOfInteger.Remove = new_instancemethod(_TColStd.TColStd_MapOfInteger_Remove,None,TColStd_MapOfInteger)
TColStd_MapOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_MapOfInteger__kill_pointed,None,TColStd_MapOfInteger)
TColStd_MapOfInteger_swigregister = _TColStd.TColStd_MapOfInteger_swigregister
TColStd_MapOfInteger_swigregister(TColStd_MapOfInteger)

class TColStd_MapOfReal(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_MapOfReal_swiginit(self,_TColStd.new_TColStd_MapOfReal(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_MapOfReal &
        :rtype: TColStd_MapOfReal

        """
        return _TColStd.TColStd_MapOfReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_MapOfReal &
        :rtype: TColStd_MapOfReal

        """
        return _TColStd.TColStd_MapOfReal_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_MapOfReal_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_MapOfReal_Clear(self, *args)

    def Add(self, *args):
        """
        :param aKey:
        :type aKey: float &
        :rtype: bool

        """
        return _TColStd.TColStd_MapOfReal_Add(self, *args)

    def Contains(self, *args):
        """
        :param aKey:
        :type aKey: float &
        :rtype: bool

        """
        return _TColStd.TColStd_MapOfReal_Contains(self, *args)

    def Remove(self, *args):
        """
        :param aKey:
        :type aKey: float &
        :rtype: bool

        """
        return _TColStd.TColStd_MapOfReal_Remove(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_MapOfReal self)"""
        return _TColStd.TColStd_MapOfReal__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_MapOfReal.Assign = new_instancemethod(_TColStd.TColStd_MapOfReal_Assign,None,TColStd_MapOfReal)
TColStd_MapOfReal.Set = new_instancemethod(_TColStd.TColStd_MapOfReal_Set,None,TColStd_MapOfReal)
TColStd_MapOfReal.ReSize = new_instancemethod(_TColStd.TColStd_MapOfReal_ReSize,None,TColStd_MapOfReal)
TColStd_MapOfReal.Clear = new_instancemethod(_TColStd.TColStd_MapOfReal_Clear,None,TColStd_MapOfReal)
TColStd_MapOfReal.Add = new_instancemethod(_TColStd.TColStd_MapOfReal_Add,None,TColStd_MapOfReal)
TColStd_MapOfReal.Contains = new_instancemethod(_TColStd.TColStd_MapOfReal_Contains,None,TColStd_MapOfReal)
TColStd_MapOfReal.Remove = new_instancemethod(_TColStd.TColStd_MapOfReal_Remove,None,TColStd_MapOfReal)
TColStd_MapOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_MapOfReal__kill_pointed,None,TColStd_MapOfReal)
TColStd_MapOfReal_swigregister = _TColStd.TColStd_MapOfReal_swigregister
TColStd_MapOfReal_swigregister(TColStd_MapOfReal)

class TColStd_MapOfTransient(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColStd.TColStd_MapOfTransient_swiginit(self,_TColStd.new_TColStd_MapOfTransient(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_MapOfTransient &
        :rtype: TColStd_MapOfTransient

        """
        return _TColStd.TColStd_MapOfTransient_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_MapOfTransient &
        :rtype: TColStd_MapOfTransient

        """
        return _TColStd.TColStd_MapOfTransient_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColStd.TColStd_MapOfTransient_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_MapOfTransient_Clear(self, *args)

    def Add(self, *args):
        """
        :param aKey:
        :type aKey: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_MapOfTransient_Add(self, *args)

    def Contains(self, *args):
        """
        :param aKey:
        :type aKey: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_MapOfTransient_Contains(self, *args)

    def Remove(self, *args):
        """
        :param aKey:
        :type aKey: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_MapOfTransient_Remove(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_MapOfTransient self)"""
        return _TColStd.TColStd_MapOfTransient__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_MapOfTransient.Assign = new_instancemethod(_TColStd.TColStd_MapOfTransient_Assign,None,TColStd_MapOfTransient)
TColStd_MapOfTransient.Set = new_instancemethod(_TColStd.TColStd_MapOfTransient_Set,None,TColStd_MapOfTransient)
TColStd_MapOfTransient.ReSize = new_instancemethod(_TColStd.TColStd_MapOfTransient_ReSize,None,TColStd_MapOfTransient)
TColStd_MapOfTransient.Clear = new_instancemethod(_TColStd.TColStd_MapOfTransient_Clear,None,TColStd_MapOfTransient)
TColStd_MapOfTransient.Add = new_instancemethod(_TColStd.TColStd_MapOfTransient_Add,None,TColStd_MapOfTransient)
TColStd_MapOfTransient.Contains = new_instancemethod(_TColStd.TColStd_MapOfTransient_Contains,None,TColStd_MapOfTransient)
TColStd_MapOfTransient.Remove = new_instancemethod(_TColStd.TColStd_MapOfTransient_Remove,None,TColStd_MapOfTransient)
TColStd_MapOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_MapOfTransient__kill_pointed,None,TColStd_MapOfTransient)
TColStd_MapOfTransient_swigregister = _TColStd.TColStd_MapOfTransient_swigregister
TColStd_MapOfTransient_swigregister(TColStd_MapOfTransient)

class TColStd_MapRealHasher(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def HashCode(*args):
        """
        :param K:
        :type K: float &
        :param Upper:
        :type Upper: int
        :rtype: int

        """
        return _TColStd.TColStd_MapRealHasher_HashCode(*args)

    HashCode = staticmethod(HashCode)
    def IsEqual(*args):
        """
        :param K1:
        :type K1: float &
        :param K2:
        :type K2: float &
        :rtype: bool

        """
        return _TColStd.TColStd_MapRealHasher_IsEqual(*args)

    IsEqual = staticmethod(IsEqual)
    def __init__(self): 
        _TColStd.TColStd_MapRealHasher_swiginit(self,_TColStd.new_TColStd_MapRealHasher())
    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_MapRealHasher._kill_pointed = new_instancemethod(_TColStd.TColStd_MapRealHasher__kill_pointed,None,TColStd_MapRealHasher)
TColStd_MapRealHasher_swigregister = _TColStd.TColStd_MapRealHasher_swigregister
TColStd_MapRealHasher_swigregister(TColStd_MapRealHasher)

def TColStd_MapRealHasher_HashCode(*args):
  """
    :param K:
    :type K: float &
    :param Upper:
    :type Upper: int
    :rtype: int

    """
  return _TColStd.TColStd_MapRealHasher_HashCode(*args)

def TColStd_MapRealHasher_IsEqual(*args):
  """
    :param K1:
    :type K1: float &
    :param K2:
    :type K2: float &
    :rtype: bool

    """
  return _TColStd.TColStd_MapRealHasher_IsEqual(*args)

class TColStd_MapTransientHasher(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def HashCode(*args):
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :param Upper:
        :type Upper: int
        :rtype: int

        """
        return _TColStd.TColStd_MapTransientHasher_HashCode(*args)

    HashCode = staticmethod(HashCode)
    def IsEqual(*args):
        """
        :param K1:
        :type K1: Handle_Standard_Transient &
        :param K2:
        :type K2: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_MapTransientHasher_IsEqual(*args)

    IsEqual = staticmethod(IsEqual)
    def __init__(self): 
        _TColStd.TColStd_MapTransientHasher_swiginit(self,_TColStd.new_TColStd_MapTransientHasher())
    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_MapTransientHasher._kill_pointed = new_instancemethod(_TColStd.TColStd_MapTransientHasher__kill_pointed,None,TColStd_MapTransientHasher)
TColStd_MapTransientHasher_swigregister = _TColStd.TColStd_MapTransientHasher_swigregister
TColStd_MapTransientHasher_swigregister(TColStd_MapTransientHasher)

def TColStd_MapTransientHasher_HashCode(*args):
  """
    :param K:
    :type K: Handle_Standard_Transient &
    :param Upper:
    :type Upper: int
    :rtype: int

    """
  return _TColStd.TColStd_MapTransientHasher_HashCode(*args)

def TColStd_MapTransientHasher_IsEqual(*args):
  """
    :param K1:
    :type K1: Handle_Standard_Transient &
    :param K2:
    :type K2: Handle_Standard_Transient &
    :rtype: bool

    """
  return _TColStd.TColStd_MapTransientHasher_IsEqual(*args)

class TColStd_QueueNodeOfQueueOfInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: int &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_QueueNodeOfQueueOfInteger_swiginit(self,_TColStd.new_TColStd_QueueNodeOfQueueOfInteger(*args))
    def GetValue(self):
        """GetValue(TColStd_QueueNodeOfQueueOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_QueueNodeOfQueueOfInteger_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_QueueNodeOfQueueOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_QueueNodeOfQueueOfInteger_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_QueueNodeOfQueueOfInteger self)"""
        return _TColStd.TColStd_QueueNodeOfQueueOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_QueueNodeOfQueueOfInteger self) -> Handle_TColStd_QueueNodeOfQueueOfInteger"""
        return _TColStd.TColStd_QueueNodeOfQueueOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_QueueNodeOfQueueOfInteger.GetValue = new_instancemethod(_TColStd.TColStd_QueueNodeOfQueueOfInteger_GetValue,None,TColStd_QueueNodeOfQueueOfInteger)
TColStd_QueueNodeOfQueueOfInteger.SetValue = new_instancemethod(_TColStd.TColStd_QueueNodeOfQueueOfInteger_SetValue,None,TColStd_QueueNodeOfQueueOfInteger)
TColStd_QueueNodeOfQueueOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_QueueNodeOfQueueOfInteger__kill_pointed,None,TColStd_QueueNodeOfQueueOfInteger)
TColStd_QueueNodeOfQueueOfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_QueueNodeOfQueueOfInteger_GetHandle,None,TColStd_QueueNodeOfQueueOfInteger)
TColStd_QueueNodeOfQueueOfInteger_swigregister = _TColStd.TColStd_QueueNodeOfQueueOfInteger_swigregister
TColStd_QueueNodeOfQueueOfInteger_swigregister(TColStd_QueueNodeOfQueueOfInteger)

class Handle_TColStd_QueueNodeOfQueueOfInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_QueueNodeOfQueueOfInteger_swiginit(self,_TColStd.new_Handle_TColStd_QueueNodeOfQueueOfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_QueueNodeOfQueueOfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfInteger_Nullify,None,Handle_TColStd_QueueNodeOfQueueOfInteger)
Handle_TColStd_QueueNodeOfQueueOfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfInteger_IsNull,None,Handle_TColStd_QueueNodeOfQueueOfInteger)
Handle_TColStd_QueueNodeOfQueueOfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfInteger_GetObject,None,Handle_TColStd_QueueNodeOfQueueOfInteger)
Handle_TColStd_QueueNodeOfQueueOfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfInteger__kill_pointed,None,Handle_TColStd_QueueNodeOfQueueOfInteger)
Handle_TColStd_QueueNodeOfQueueOfInteger_swigregister = _TColStd.Handle_TColStd_QueueNodeOfQueueOfInteger_swigregister
Handle_TColStd_QueueNodeOfQueueOfInteger_swigregister(Handle_TColStd_QueueNodeOfQueueOfInteger)

def Handle_TColStd_QueueNodeOfQueueOfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_QueueNodeOfQueueOfInteger_DownCast(*args)
Handle_TColStd_QueueNodeOfQueueOfInteger_DownCast = _TColStd.Handle_TColStd_QueueNodeOfQueueOfInteger_DownCast

class TColStd_QueueNodeOfQueueOfReal(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: float &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_QueueNodeOfQueueOfReal_swiginit(self,_TColStd.new_TColStd_QueueNodeOfQueueOfReal(*args))
    def GetValue(self):
        """GetValue(TColStd_QueueNodeOfQueueOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_QueueNodeOfQueueOfReal_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_QueueNodeOfQueueOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_QueueNodeOfQueueOfReal_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_QueueNodeOfQueueOfReal self)"""
        return _TColStd.TColStd_QueueNodeOfQueueOfReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_QueueNodeOfQueueOfReal self) -> Handle_TColStd_QueueNodeOfQueueOfReal"""
        return _TColStd.TColStd_QueueNodeOfQueueOfReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_QueueNodeOfQueueOfReal.GetValue = new_instancemethod(_TColStd.TColStd_QueueNodeOfQueueOfReal_GetValue,None,TColStd_QueueNodeOfQueueOfReal)
TColStd_QueueNodeOfQueueOfReal.SetValue = new_instancemethod(_TColStd.TColStd_QueueNodeOfQueueOfReal_SetValue,None,TColStd_QueueNodeOfQueueOfReal)
TColStd_QueueNodeOfQueueOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_QueueNodeOfQueueOfReal__kill_pointed,None,TColStd_QueueNodeOfQueueOfReal)
TColStd_QueueNodeOfQueueOfReal.GetHandle = new_instancemethod(_TColStd.TColStd_QueueNodeOfQueueOfReal_GetHandle,None,TColStd_QueueNodeOfQueueOfReal)
TColStd_QueueNodeOfQueueOfReal_swigregister = _TColStd.TColStd_QueueNodeOfQueueOfReal_swigregister
TColStd_QueueNodeOfQueueOfReal_swigregister(TColStd_QueueNodeOfQueueOfReal)

class Handle_TColStd_QueueNodeOfQueueOfReal(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_QueueNodeOfQueueOfReal_swiginit(self,_TColStd.new_Handle_TColStd_QueueNodeOfQueueOfReal(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_QueueNodeOfQueueOfReal.Nullify = new_instancemethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfReal_Nullify,None,Handle_TColStd_QueueNodeOfQueueOfReal)
Handle_TColStd_QueueNodeOfQueueOfReal.IsNull = new_instancemethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfReal_IsNull,None,Handle_TColStd_QueueNodeOfQueueOfReal)
Handle_TColStd_QueueNodeOfQueueOfReal.GetObject = new_instancemethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfReal_GetObject,None,Handle_TColStd_QueueNodeOfQueueOfReal)
Handle_TColStd_QueueNodeOfQueueOfReal._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfReal__kill_pointed,None,Handle_TColStd_QueueNodeOfQueueOfReal)
Handle_TColStd_QueueNodeOfQueueOfReal_swigregister = _TColStd.Handle_TColStd_QueueNodeOfQueueOfReal_swigregister
Handle_TColStd_QueueNodeOfQueueOfReal_swigregister(Handle_TColStd_QueueNodeOfQueueOfReal)

def Handle_TColStd_QueueNodeOfQueueOfReal_DownCast(*args):
  return _TColStd.Handle_TColStd_QueueNodeOfQueueOfReal_DownCast(*args)
Handle_TColStd_QueueNodeOfQueueOfReal_DownCast = _TColStd.Handle_TColStd_QueueNodeOfQueueOfReal_DownCast

class TColStd_QueueNodeOfQueueOfTransient(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_QueueNodeOfQueueOfTransient_swiginit(self,_TColStd.new_TColStd_QueueNodeOfQueueOfTransient(*args))
    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_QueueNodeOfQueueOfTransient_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_QueueNodeOfQueueOfTransient self)"""
        return _TColStd.TColStd_QueueNodeOfQueueOfTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_QueueNodeOfQueueOfTransient self) -> Handle_TColStd_QueueNodeOfQueueOfTransient"""
        return _TColStd.TColStd_QueueNodeOfQueueOfTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_QueueNodeOfQueueOfTransient.Value = new_instancemethod(_TColStd.TColStd_QueueNodeOfQueueOfTransient_Value,None,TColStd_QueueNodeOfQueueOfTransient)
TColStd_QueueNodeOfQueueOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_QueueNodeOfQueueOfTransient__kill_pointed,None,TColStd_QueueNodeOfQueueOfTransient)
TColStd_QueueNodeOfQueueOfTransient.GetHandle = new_instancemethod(_TColStd.TColStd_QueueNodeOfQueueOfTransient_GetHandle,None,TColStd_QueueNodeOfQueueOfTransient)
TColStd_QueueNodeOfQueueOfTransient_swigregister = _TColStd.TColStd_QueueNodeOfQueueOfTransient_swigregister
TColStd_QueueNodeOfQueueOfTransient_swigregister(TColStd_QueueNodeOfQueueOfTransient)

class Handle_TColStd_QueueNodeOfQueueOfTransient(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_QueueNodeOfQueueOfTransient_swiginit(self,_TColStd.new_Handle_TColStd_QueueNodeOfQueueOfTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_QueueNodeOfQueueOfTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfTransient_Nullify,None,Handle_TColStd_QueueNodeOfQueueOfTransient)
Handle_TColStd_QueueNodeOfQueueOfTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfTransient_IsNull,None,Handle_TColStd_QueueNodeOfQueueOfTransient)
Handle_TColStd_QueueNodeOfQueueOfTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfTransient_GetObject,None,Handle_TColStd_QueueNodeOfQueueOfTransient)
Handle_TColStd_QueueNodeOfQueueOfTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_QueueNodeOfQueueOfTransient__kill_pointed,None,Handle_TColStd_QueueNodeOfQueueOfTransient)
Handle_TColStd_QueueNodeOfQueueOfTransient_swigregister = _TColStd.Handle_TColStd_QueueNodeOfQueueOfTransient_swigregister
Handle_TColStd_QueueNodeOfQueueOfTransient_swigregister(Handle_TColStd_QueueNodeOfQueueOfTransient)

def Handle_TColStd_QueueNodeOfQueueOfTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_QueueNodeOfQueueOfTransient_DownCast(*args)
Handle_TColStd_QueueNodeOfQueueOfTransient_DownCast = _TColStd.Handle_TColStd_QueueNodeOfQueueOfTransient_DownCast

class TColStd_QueueOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_QueueOfInteger_swiginit(self,_TColStd.new_TColStd_QueueOfInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_QueueOfInteger &
        :rtype: TColStd_QueueOfInteger

        """
        return _TColStd.TColStd_QueueOfInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_QueueOfInteger &
        :rtype: TColStd_QueueOfInteger

        """
        return _TColStd.TColStd_QueueOfInteger_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_QueueOfInteger_Length(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_QueueOfInteger_IsEmpty(self, *args)

    def Front(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_QueueOfInteger_Front(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_QueueOfInteger_Clear(self, *args)

    def Push(self, *args):
        """
        :param T:
        :type T: int &
        :rtype: None

        """
        return _TColStd.TColStd_QueueOfInteger_Push(self, *args)

    def Pop(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_QueueOfInteger_Pop(self, *args)

    def GetChangeFront(self):
        """GetChangeFront(TColStd_QueueOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_QueueOfInteger_GetChangeFront(self)

    def SetChangeFront(self, *args):
        """SetChangeFront(TColStd_QueueOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_QueueOfInteger_SetChangeFront(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_QueueOfInteger self)"""
        return _TColStd.TColStd_QueueOfInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_QueueOfInteger.Assign = new_instancemethod(_TColStd.TColStd_QueueOfInteger_Assign,None,TColStd_QueueOfInteger)
TColStd_QueueOfInteger.Set = new_instancemethod(_TColStd.TColStd_QueueOfInteger_Set,None,TColStd_QueueOfInteger)
TColStd_QueueOfInteger.Length = new_instancemethod(_TColStd.TColStd_QueueOfInteger_Length,None,TColStd_QueueOfInteger)
TColStd_QueueOfInteger.IsEmpty = new_instancemethod(_TColStd.TColStd_QueueOfInteger_IsEmpty,None,TColStd_QueueOfInteger)
TColStd_QueueOfInteger.Front = new_instancemethod(_TColStd.TColStd_QueueOfInteger_Front,None,TColStd_QueueOfInteger)
TColStd_QueueOfInteger.Clear = new_instancemethod(_TColStd.TColStd_QueueOfInteger_Clear,None,TColStd_QueueOfInteger)
TColStd_QueueOfInteger.Push = new_instancemethod(_TColStd.TColStd_QueueOfInteger_Push,None,TColStd_QueueOfInteger)
TColStd_QueueOfInteger.Pop = new_instancemethod(_TColStd.TColStd_QueueOfInteger_Pop,None,TColStd_QueueOfInteger)
TColStd_QueueOfInteger.GetChangeFront = new_instancemethod(_TColStd.TColStd_QueueOfInteger_GetChangeFront,None,TColStd_QueueOfInteger)
TColStd_QueueOfInteger.SetChangeFront = new_instancemethod(_TColStd.TColStd_QueueOfInteger_SetChangeFront,None,TColStd_QueueOfInteger)
TColStd_QueueOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_QueueOfInteger__kill_pointed,None,TColStd_QueueOfInteger)
TColStd_QueueOfInteger_swigregister = _TColStd.TColStd_QueueOfInteger_swigregister
TColStd_QueueOfInteger_swigregister(TColStd_QueueOfInteger)

class TColStd_QueueOfReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_QueueOfReal_swiginit(self,_TColStd.new_TColStd_QueueOfReal(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_QueueOfReal &
        :rtype: TColStd_QueueOfReal

        """
        return _TColStd.TColStd_QueueOfReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_QueueOfReal &
        :rtype: TColStd_QueueOfReal

        """
        return _TColStd.TColStd_QueueOfReal_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_QueueOfReal_Length(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_QueueOfReal_IsEmpty(self, *args)

    def Front(self, *args):
        """
        :rtype: float

        """
        return _TColStd.TColStd_QueueOfReal_Front(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_QueueOfReal_Clear(self, *args)

    def Push(self, *args):
        """
        :param T:
        :type T: float &
        :rtype: None

        """
        return _TColStd.TColStd_QueueOfReal_Push(self, *args)

    def Pop(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_QueueOfReal_Pop(self, *args)

    def GetChangeFront(self):
        """GetChangeFront(TColStd_QueueOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_QueueOfReal_GetChangeFront(self)

    def SetChangeFront(self, *args):
        """SetChangeFront(TColStd_QueueOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_QueueOfReal_SetChangeFront(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_QueueOfReal self)"""
        return _TColStd.TColStd_QueueOfReal__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_QueueOfReal.Assign = new_instancemethod(_TColStd.TColStd_QueueOfReal_Assign,None,TColStd_QueueOfReal)
TColStd_QueueOfReal.Set = new_instancemethod(_TColStd.TColStd_QueueOfReal_Set,None,TColStd_QueueOfReal)
TColStd_QueueOfReal.Length = new_instancemethod(_TColStd.TColStd_QueueOfReal_Length,None,TColStd_QueueOfReal)
TColStd_QueueOfReal.IsEmpty = new_instancemethod(_TColStd.TColStd_QueueOfReal_IsEmpty,None,TColStd_QueueOfReal)
TColStd_QueueOfReal.Front = new_instancemethod(_TColStd.TColStd_QueueOfReal_Front,None,TColStd_QueueOfReal)
TColStd_QueueOfReal.Clear = new_instancemethod(_TColStd.TColStd_QueueOfReal_Clear,None,TColStd_QueueOfReal)
TColStd_QueueOfReal.Push = new_instancemethod(_TColStd.TColStd_QueueOfReal_Push,None,TColStd_QueueOfReal)
TColStd_QueueOfReal.Pop = new_instancemethod(_TColStd.TColStd_QueueOfReal_Pop,None,TColStd_QueueOfReal)
TColStd_QueueOfReal.GetChangeFront = new_instancemethod(_TColStd.TColStd_QueueOfReal_GetChangeFront,None,TColStd_QueueOfReal)
TColStd_QueueOfReal.SetChangeFront = new_instancemethod(_TColStd.TColStd_QueueOfReal_SetChangeFront,None,TColStd_QueueOfReal)
TColStd_QueueOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_QueueOfReal__kill_pointed,None,TColStd_QueueOfReal)
TColStd_QueueOfReal_swigregister = _TColStd.TColStd_QueueOfReal_swigregister
TColStd_QueueOfReal_swigregister(TColStd_QueueOfReal)

class TColStd_QueueOfTransient(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_QueueOfTransient_swiginit(self,_TColStd.new_TColStd_QueueOfTransient(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_QueueOfTransient &
        :rtype: TColStd_QueueOfTransient

        """
        return _TColStd.TColStd_QueueOfTransient_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_QueueOfTransient &
        :rtype: TColStd_QueueOfTransient

        """
        return _TColStd.TColStd_QueueOfTransient_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_QueueOfTransient_Length(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_QueueOfTransient_IsEmpty(self, *args)

    def Front(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_QueueOfTransient_Front(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_QueueOfTransient_Clear(self, *args)

    def Push(self, *args):
        """
        :param T:
        :type T: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_QueueOfTransient_Push(self, *args)

    def Pop(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_QueueOfTransient_Pop(self, *args)

    def ChangeFront(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_QueueOfTransient_ChangeFront(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_QueueOfTransient.Assign = new_instancemethod(_TColStd.TColStd_QueueOfTransient_Assign,None,TColStd_QueueOfTransient)
TColStd_QueueOfTransient.Set = new_instancemethod(_TColStd.TColStd_QueueOfTransient_Set,None,TColStd_QueueOfTransient)
TColStd_QueueOfTransient.Length = new_instancemethod(_TColStd.TColStd_QueueOfTransient_Length,None,TColStd_QueueOfTransient)
TColStd_QueueOfTransient.IsEmpty = new_instancemethod(_TColStd.TColStd_QueueOfTransient_IsEmpty,None,TColStd_QueueOfTransient)
TColStd_QueueOfTransient.Front = new_instancemethod(_TColStd.TColStd_QueueOfTransient_Front,None,TColStd_QueueOfTransient)
TColStd_QueueOfTransient.Clear = new_instancemethod(_TColStd.TColStd_QueueOfTransient_Clear,None,TColStd_QueueOfTransient)
TColStd_QueueOfTransient.Push = new_instancemethod(_TColStd.TColStd_QueueOfTransient_Push,None,TColStd_QueueOfTransient)
TColStd_QueueOfTransient.Pop = new_instancemethod(_TColStd.TColStd_QueueOfTransient_Pop,None,TColStd_QueueOfTransient)
TColStd_QueueOfTransient.ChangeFront = new_instancemethod(_TColStd.TColStd_QueueOfTransient_ChangeFront,None,TColStd_QueueOfTransient)
TColStd_QueueOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_QueueOfTransient__kill_pointed,None,TColStd_QueueOfTransient)
TColStd_QueueOfTransient_swigregister = _TColStd.TColStd_QueueOfTransient_swigregister
TColStd_QueueOfTransient_swigregister(TColStd_QueueOfTransient)

class TColStd_SequenceNodeOfSequenceOfAddress(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: Standard_Address &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_SequenceNodeOfSequenceOfAddress_swiginit(self,_TColStd.new_TColStd_SequenceNodeOfSequenceOfAddress(*args))
    def Value(self, *args):
        """
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_SequenceNodeOfSequenceOfAddress_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_SequenceNodeOfSequenceOfAddress self)"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfAddress__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_SequenceNodeOfSequenceOfAddress self) -> Handle_TColStd_SequenceNodeOfSequenceOfAddress"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfAddress_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceNodeOfSequenceOfAddress.Value = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfAddress_Value,None,TColStd_SequenceNodeOfSequenceOfAddress)
TColStd_SequenceNodeOfSequenceOfAddress._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfAddress__kill_pointed,None,TColStd_SequenceNodeOfSequenceOfAddress)
TColStd_SequenceNodeOfSequenceOfAddress.GetHandle = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfAddress_GetHandle,None,TColStd_SequenceNodeOfSequenceOfAddress)
TColStd_SequenceNodeOfSequenceOfAddress_swigregister = _TColStd.TColStd_SequenceNodeOfSequenceOfAddress_swigregister
TColStd_SequenceNodeOfSequenceOfAddress_swigregister(TColStd_SequenceNodeOfSequenceOfAddress)

class Handle_TColStd_SequenceNodeOfSequenceOfAddress(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAddress_swiginit(self,_TColStd.new_Handle_TColStd_SequenceNodeOfSequenceOfAddress(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAddress_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_SequenceNodeOfSequenceOfAddress.Nullify = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAddress_Nullify,None,Handle_TColStd_SequenceNodeOfSequenceOfAddress)
Handle_TColStd_SequenceNodeOfSequenceOfAddress.IsNull = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAddress_IsNull,None,Handle_TColStd_SequenceNodeOfSequenceOfAddress)
Handle_TColStd_SequenceNodeOfSequenceOfAddress.GetObject = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAddress_GetObject,None,Handle_TColStd_SequenceNodeOfSequenceOfAddress)
Handle_TColStd_SequenceNodeOfSequenceOfAddress._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAddress__kill_pointed,None,Handle_TColStd_SequenceNodeOfSequenceOfAddress)
Handle_TColStd_SequenceNodeOfSequenceOfAddress_swigregister = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAddress_swigregister
Handle_TColStd_SequenceNodeOfSequenceOfAddress_swigregister(Handle_TColStd_SequenceNodeOfSequenceOfAddress)

def Handle_TColStd_SequenceNodeOfSequenceOfAddress_DownCast(*args):
  return _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAddress_DownCast(*args)
Handle_TColStd_SequenceNodeOfSequenceOfAddress_DownCast = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAddress_DownCast

class TColStd_SequenceNodeOfSequenceOfAsciiString(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: TCollection_AsciiString &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_SequenceNodeOfSequenceOfAsciiString_swiginit(self,_TColStd.new_TColStd_SequenceNodeOfSequenceOfAsciiString(*args))
    def Value(self, *args):
        """
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_SequenceNodeOfSequenceOfAsciiString_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_SequenceNodeOfSequenceOfAsciiString self)"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfAsciiString__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_SequenceNodeOfSequenceOfAsciiString self) -> Handle_TColStd_SequenceNodeOfSequenceOfAsciiString"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfAsciiString_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceNodeOfSequenceOfAsciiString.Value = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfAsciiString_Value,None,TColStd_SequenceNodeOfSequenceOfAsciiString)
TColStd_SequenceNodeOfSequenceOfAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfAsciiString__kill_pointed,None,TColStd_SequenceNodeOfSequenceOfAsciiString)
TColStd_SequenceNodeOfSequenceOfAsciiString.GetHandle = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfAsciiString_GetHandle,None,TColStd_SequenceNodeOfSequenceOfAsciiString)
TColStd_SequenceNodeOfSequenceOfAsciiString_swigregister = _TColStd.TColStd_SequenceNodeOfSequenceOfAsciiString_swigregister
TColStd_SequenceNodeOfSequenceOfAsciiString_swigregister(TColStd_SequenceNodeOfSequenceOfAsciiString)

class Handle_TColStd_SequenceNodeOfSequenceOfAsciiString(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAsciiString_swiginit(self,_TColStd.new_Handle_TColStd_SequenceNodeOfSequenceOfAsciiString(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAsciiString_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_SequenceNodeOfSequenceOfAsciiString.Nullify = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAsciiString_Nullify,None,Handle_TColStd_SequenceNodeOfSequenceOfAsciiString)
Handle_TColStd_SequenceNodeOfSequenceOfAsciiString.IsNull = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAsciiString_IsNull,None,Handle_TColStd_SequenceNodeOfSequenceOfAsciiString)
Handle_TColStd_SequenceNodeOfSequenceOfAsciiString.GetObject = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAsciiString_GetObject,None,Handle_TColStd_SequenceNodeOfSequenceOfAsciiString)
Handle_TColStd_SequenceNodeOfSequenceOfAsciiString._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAsciiString__kill_pointed,None,Handle_TColStd_SequenceNodeOfSequenceOfAsciiString)
Handle_TColStd_SequenceNodeOfSequenceOfAsciiString_swigregister = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAsciiString_swigregister
Handle_TColStd_SequenceNodeOfSequenceOfAsciiString_swigregister(Handle_TColStd_SequenceNodeOfSequenceOfAsciiString)

def Handle_TColStd_SequenceNodeOfSequenceOfAsciiString_DownCast(*args):
  return _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAsciiString_DownCast(*args)
Handle_TColStd_SequenceNodeOfSequenceOfAsciiString_DownCast = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfAsciiString_DownCast

class TColStd_SequenceNodeOfSequenceOfBoolean(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: bool
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_SequenceNodeOfSequenceOfBoolean_swiginit(self,_TColStd.new_TColStd_SequenceNodeOfSequenceOfBoolean(*args))
    def GetValue(self):
        """GetValue(TColStd_SequenceNodeOfSequenceOfBoolean self) -> Standard_Boolean"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfBoolean_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_SequenceNodeOfSequenceOfBoolean self, Standard_Boolean value)"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfBoolean_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_SequenceNodeOfSequenceOfBoolean self)"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfBoolean__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_SequenceNodeOfSequenceOfBoolean self) -> Handle_TColStd_SequenceNodeOfSequenceOfBoolean"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfBoolean_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceNodeOfSequenceOfBoolean.GetValue = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfBoolean_GetValue,None,TColStd_SequenceNodeOfSequenceOfBoolean)
TColStd_SequenceNodeOfSequenceOfBoolean.SetValue = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfBoolean_SetValue,None,TColStd_SequenceNodeOfSequenceOfBoolean)
TColStd_SequenceNodeOfSequenceOfBoolean._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfBoolean__kill_pointed,None,TColStd_SequenceNodeOfSequenceOfBoolean)
TColStd_SequenceNodeOfSequenceOfBoolean.GetHandle = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfBoolean_GetHandle,None,TColStd_SequenceNodeOfSequenceOfBoolean)
TColStd_SequenceNodeOfSequenceOfBoolean_swigregister = _TColStd.TColStd_SequenceNodeOfSequenceOfBoolean_swigregister
TColStd_SequenceNodeOfSequenceOfBoolean_swigregister(TColStd_SequenceNodeOfSequenceOfBoolean)

class Handle_TColStd_SequenceNodeOfSequenceOfBoolean(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfBoolean_swiginit(self,_TColStd.new_Handle_TColStd_SequenceNodeOfSequenceOfBoolean(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfBoolean_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_SequenceNodeOfSequenceOfBoolean.Nullify = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfBoolean_Nullify,None,Handle_TColStd_SequenceNodeOfSequenceOfBoolean)
Handle_TColStd_SequenceNodeOfSequenceOfBoolean.IsNull = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfBoolean_IsNull,None,Handle_TColStd_SequenceNodeOfSequenceOfBoolean)
Handle_TColStd_SequenceNodeOfSequenceOfBoolean.GetObject = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfBoolean_GetObject,None,Handle_TColStd_SequenceNodeOfSequenceOfBoolean)
Handle_TColStd_SequenceNodeOfSequenceOfBoolean._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfBoolean__kill_pointed,None,Handle_TColStd_SequenceNodeOfSequenceOfBoolean)
Handle_TColStd_SequenceNodeOfSequenceOfBoolean_swigregister = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfBoolean_swigregister
Handle_TColStd_SequenceNodeOfSequenceOfBoolean_swigregister(Handle_TColStd_SequenceNodeOfSequenceOfBoolean)

def Handle_TColStd_SequenceNodeOfSequenceOfBoolean_DownCast(*args):
  return _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfBoolean_DownCast(*args)
Handle_TColStd_SequenceNodeOfSequenceOfBoolean_DownCast = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfBoolean_DownCast

class TColStd_SequenceNodeOfSequenceOfExtendedString(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: TCollection_ExtendedString &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_SequenceNodeOfSequenceOfExtendedString_swiginit(self,_TColStd.new_TColStd_SequenceNodeOfSequenceOfExtendedString(*args))
    def Value(self, *args):
        """
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_SequenceNodeOfSequenceOfExtendedString_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_SequenceNodeOfSequenceOfExtendedString self)"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfExtendedString__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_SequenceNodeOfSequenceOfExtendedString self) -> Handle_TColStd_SequenceNodeOfSequenceOfExtendedString"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfExtendedString_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceNodeOfSequenceOfExtendedString.Value = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfExtendedString_Value,None,TColStd_SequenceNodeOfSequenceOfExtendedString)
TColStd_SequenceNodeOfSequenceOfExtendedString._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfExtendedString__kill_pointed,None,TColStd_SequenceNodeOfSequenceOfExtendedString)
TColStd_SequenceNodeOfSequenceOfExtendedString.GetHandle = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfExtendedString_GetHandle,None,TColStd_SequenceNodeOfSequenceOfExtendedString)
TColStd_SequenceNodeOfSequenceOfExtendedString_swigregister = _TColStd.TColStd_SequenceNodeOfSequenceOfExtendedString_swigregister
TColStd_SequenceNodeOfSequenceOfExtendedString_swigregister(TColStd_SequenceNodeOfSequenceOfExtendedString)

class Handle_TColStd_SequenceNodeOfSequenceOfExtendedString(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfExtendedString_swiginit(self,_TColStd.new_Handle_TColStd_SequenceNodeOfSequenceOfExtendedString(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfExtendedString_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_SequenceNodeOfSequenceOfExtendedString.Nullify = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfExtendedString_Nullify,None,Handle_TColStd_SequenceNodeOfSequenceOfExtendedString)
Handle_TColStd_SequenceNodeOfSequenceOfExtendedString.IsNull = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfExtendedString_IsNull,None,Handle_TColStd_SequenceNodeOfSequenceOfExtendedString)
Handle_TColStd_SequenceNodeOfSequenceOfExtendedString.GetObject = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfExtendedString_GetObject,None,Handle_TColStd_SequenceNodeOfSequenceOfExtendedString)
Handle_TColStd_SequenceNodeOfSequenceOfExtendedString._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfExtendedString__kill_pointed,None,Handle_TColStd_SequenceNodeOfSequenceOfExtendedString)
Handle_TColStd_SequenceNodeOfSequenceOfExtendedString_swigregister = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfExtendedString_swigregister
Handle_TColStd_SequenceNodeOfSequenceOfExtendedString_swigregister(Handle_TColStd_SequenceNodeOfSequenceOfExtendedString)

def Handle_TColStd_SequenceNodeOfSequenceOfExtendedString_DownCast(*args):
  return _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfExtendedString_DownCast(*args)
Handle_TColStd_SequenceNodeOfSequenceOfExtendedString_DownCast = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfExtendedString_DownCast

class TColStd_SequenceNodeOfSequenceOfHAsciiString(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: Handle_TCollection_HAsciiString &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_SequenceNodeOfSequenceOfHAsciiString_swiginit(self,_TColStd.new_TColStd_SequenceNodeOfSequenceOfHAsciiString(*args))
    def Value(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _TColStd.TColStd_SequenceNodeOfSequenceOfHAsciiString_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_SequenceNodeOfSequenceOfHAsciiString self)"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfHAsciiString__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_SequenceNodeOfSequenceOfHAsciiString self) -> Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfHAsciiString_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceNodeOfSequenceOfHAsciiString.Value = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfHAsciiString_Value,None,TColStd_SequenceNodeOfSequenceOfHAsciiString)
TColStd_SequenceNodeOfSequenceOfHAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfHAsciiString__kill_pointed,None,TColStd_SequenceNodeOfSequenceOfHAsciiString)
TColStd_SequenceNodeOfSequenceOfHAsciiString.GetHandle = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfHAsciiString_GetHandle,None,TColStd_SequenceNodeOfSequenceOfHAsciiString)
TColStd_SequenceNodeOfSequenceOfHAsciiString_swigregister = _TColStd.TColStd_SequenceNodeOfSequenceOfHAsciiString_swigregister
TColStd_SequenceNodeOfSequenceOfHAsciiString_swigregister(TColStd_SequenceNodeOfSequenceOfHAsciiString)

class Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString_swiginit(self,_TColStd.new_Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString.Nullify = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString_Nullify,None,Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString)
Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString.IsNull = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString_IsNull,None,Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString)
Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString.GetObject = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString_GetObject,None,Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString)
Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString__kill_pointed,None,Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString)
Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString_swigregister = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString_swigregister
Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString_swigregister(Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString)

def Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString_DownCast(*args):
  return _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString_DownCast(*args)
Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString_DownCast = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHAsciiString_DownCast

class TColStd_SequenceNodeOfSequenceOfHExtendedString(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: Handle_TCollection_HExtendedString &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_SequenceNodeOfSequenceOfHExtendedString_swiginit(self,_TColStd.new_TColStd_SequenceNodeOfSequenceOfHExtendedString(*args))
    def Value(self, *args):
        """
        :rtype: Handle_TCollection_HExtendedString

        """
        return _TColStd.TColStd_SequenceNodeOfSequenceOfHExtendedString_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_SequenceNodeOfSequenceOfHExtendedString self)"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfHExtendedString__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_SequenceNodeOfSequenceOfHExtendedString self) -> Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfHExtendedString_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceNodeOfSequenceOfHExtendedString.Value = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfHExtendedString_Value,None,TColStd_SequenceNodeOfSequenceOfHExtendedString)
TColStd_SequenceNodeOfSequenceOfHExtendedString._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfHExtendedString__kill_pointed,None,TColStd_SequenceNodeOfSequenceOfHExtendedString)
TColStd_SequenceNodeOfSequenceOfHExtendedString.GetHandle = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfHExtendedString_GetHandle,None,TColStd_SequenceNodeOfSequenceOfHExtendedString)
TColStd_SequenceNodeOfSequenceOfHExtendedString_swigregister = _TColStd.TColStd_SequenceNodeOfSequenceOfHExtendedString_swigregister
TColStd_SequenceNodeOfSequenceOfHExtendedString_swigregister(TColStd_SequenceNodeOfSequenceOfHExtendedString)

class Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString_swiginit(self,_TColStd.new_Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString.Nullify = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString_Nullify,None,Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString)
Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString.IsNull = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString_IsNull,None,Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString)
Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString.GetObject = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString_GetObject,None,Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString)
Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString__kill_pointed,None,Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString)
Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString_swigregister = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString_swigregister
Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString_swigregister(Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString)

def Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString_DownCast(*args):
  return _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString_DownCast(*args)
Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString_DownCast = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfHExtendedString_DownCast

class TColStd_SequenceNodeOfSequenceOfInteger(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: int &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_SequenceNodeOfSequenceOfInteger_swiginit(self,_TColStd.new_TColStd_SequenceNodeOfSequenceOfInteger(*args))
    def GetValue(self):
        """GetValue(TColStd_SequenceNodeOfSequenceOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfInteger_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_SequenceNodeOfSequenceOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfInteger_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_SequenceNodeOfSequenceOfInteger self)"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_SequenceNodeOfSequenceOfInteger self) -> Handle_TColStd_SequenceNodeOfSequenceOfInteger"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceNodeOfSequenceOfInteger.GetValue = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfInteger_GetValue,None,TColStd_SequenceNodeOfSequenceOfInteger)
TColStd_SequenceNodeOfSequenceOfInteger.SetValue = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfInteger_SetValue,None,TColStd_SequenceNodeOfSequenceOfInteger)
TColStd_SequenceNodeOfSequenceOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfInteger__kill_pointed,None,TColStd_SequenceNodeOfSequenceOfInteger)
TColStd_SequenceNodeOfSequenceOfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfInteger_GetHandle,None,TColStd_SequenceNodeOfSequenceOfInteger)
TColStd_SequenceNodeOfSequenceOfInteger_swigregister = _TColStd.TColStd_SequenceNodeOfSequenceOfInteger_swigregister
TColStd_SequenceNodeOfSequenceOfInteger_swigregister(TColStd_SequenceNodeOfSequenceOfInteger)

class Handle_TColStd_SequenceNodeOfSequenceOfInteger(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfInteger_swiginit(self,_TColStd.new_Handle_TColStd_SequenceNodeOfSequenceOfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_SequenceNodeOfSequenceOfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfInteger_Nullify,None,Handle_TColStd_SequenceNodeOfSequenceOfInteger)
Handle_TColStd_SequenceNodeOfSequenceOfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfInteger_IsNull,None,Handle_TColStd_SequenceNodeOfSequenceOfInteger)
Handle_TColStd_SequenceNodeOfSequenceOfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfInteger_GetObject,None,Handle_TColStd_SequenceNodeOfSequenceOfInteger)
Handle_TColStd_SequenceNodeOfSequenceOfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfInteger__kill_pointed,None,Handle_TColStd_SequenceNodeOfSequenceOfInteger)
Handle_TColStd_SequenceNodeOfSequenceOfInteger_swigregister = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfInteger_swigregister
Handle_TColStd_SequenceNodeOfSequenceOfInteger_swigregister(Handle_TColStd_SequenceNodeOfSequenceOfInteger)

def Handle_TColStd_SequenceNodeOfSequenceOfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfInteger_DownCast(*args)
Handle_TColStd_SequenceNodeOfSequenceOfInteger_DownCast = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfInteger_DownCast

class TColStd_SequenceNodeOfSequenceOfReal(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: float &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_SequenceNodeOfSequenceOfReal_swiginit(self,_TColStd.new_TColStd_SequenceNodeOfSequenceOfReal(*args))
    def GetValue(self):
        """GetValue(TColStd_SequenceNodeOfSequenceOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfReal_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_SequenceNodeOfSequenceOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfReal_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_SequenceNodeOfSequenceOfReal self)"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_SequenceNodeOfSequenceOfReal self) -> Handle_TColStd_SequenceNodeOfSequenceOfReal"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceNodeOfSequenceOfReal.GetValue = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfReal_GetValue,None,TColStd_SequenceNodeOfSequenceOfReal)
TColStd_SequenceNodeOfSequenceOfReal.SetValue = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfReal_SetValue,None,TColStd_SequenceNodeOfSequenceOfReal)
TColStd_SequenceNodeOfSequenceOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfReal__kill_pointed,None,TColStd_SequenceNodeOfSequenceOfReal)
TColStd_SequenceNodeOfSequenceOfReal.GetHandle = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfReal_GetHandle,None,TColStd_SequenceNodeOfSequenceOfReal)
TColStd_SequenceNodeOfSequenceOfReal_swigregister = _TColStd.TColStd_SequenceNodeOfSequenceOfReal_swigregister
TColStd_SequenceNodeOfSequenceOfReal_swigregister(TColStd_SequenceNodeOfSequenceOfReal)

class Handle_TColStd_SequenceNodeOfSequenceOfReal(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfReal_swiginit(self,_TColStd.new_Handle_TColStd_SequenceNodeOfSequenceOfReal(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_SequenceNodeOfSequenceOfReal.Nullify = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfReal_Nullify,None,Handle_TColStd_SequenceNodeOfSequenceOfReal)
Handle_TColStd_SequenceNodeOfSequenceOfReal.IsNull = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfReal_IsNull,None,Handle_TColStd_SequenceNodeOfSequenceOfReal)
Handle_TColStd_SequenceNodeOfSequenceOfReal.GetObject = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfReal_GetObject,None,Handle_TColStd_SequenceNodeOfSequenceOfReal)
Handle_TColStd_SequenceNodeOfSequenceOfReal._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfReal__kill_pointed,None,Handle_TColStd_SequenceNodeOfSequenceOfReal)
Handle_TColStd_SequenceNodeOfSequenceOfReal_swigregister = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfReal_swigregister
Handle_TColStd_SequenceNodeOfSequenceOfReal_swigregister(Handle_TColStd_SequenceNodeOfSequenceOfReal)

def Handle_TColStd_SequenceNodeOfSequenceOfReal_DownCast(*args):
  return _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfReal_DownCast(*args)
Handle_TColStd_SequenceNodeOfSequenceOfReal_DownCast = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfReal_DownCast

class TColStd_SequenceNodeOfSequenceOfTransient(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_SequenceNodeOfSequenceOfTransient_swiginit(self,_TColStd.new_TColStd_SequenceNodeOfSequenceOfTransient(*args))
    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_SequenceNodeOfSequenceOfTransient_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_SequenceNodeOfSequenceOfTransient self)"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_SequenceNodeOfSequenceOfTransient self) -> Handle_TColStd_SequenceNodeOfSequenceOfTransient"""
        return _TColStd.TColStd_SequenceNodeOfSequenceOfTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceNodeOfSequenceOfTransient.Value = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfTransient_Value,None,TColStd_SequenceNodeOfSequenceOfTransient)
TColStd_SequenceNodeOfSequenceOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfTransient__kill_pointed,None,TColStd_SequenceNodeOfSequenceOfTransient)
TColStd_SequenceNodeOfSequenceOfTransient.GetHandle = new_instancemethod(_TColStd.TColStd_SequenceNodeOfSequenceOfTransient_GetHandle,None,TColStd_SequenceNodeOfSequenceOfTransient)
TColStd_SequenceNodeOfSequenceOfTransient_swigregister = _TColStd.TColStd_SequenceNodeOfSequenceOfTransient_swigregister
TColStd_SequenceNodeOfSequenceOfTransient_swigregister(TColStd_SequenceNodeOfSequenceOfTransient)

class Handle_TColStd_SequenceNodeOfSequenceOfTransient(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfTransient_swiginit(self,_TColStd.new_Handle_TColStd_SequenceNodeOfSequenceOfTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_SequenceNodeOfSequenceOfTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfTransient_Nullify,None,Handle_TColStd_SequenceNodeOfSequenceOfTransient)
Handle_TColStd_SequenceNodeOfSequenceOfTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfTransient_IsNull,None,Handle_TColStd_SequenceNodeOfSequenceOfTransient)
Handle_TColStd_SequenceNodeOfSequenceOfTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfTransient_GetObject,None,Handle_TColStd_SequenceNodeOfSequenceOfTransient)
Handle_TColStd_SequenceNodeOfSequenceOfTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_SequenceNodeOfSequenceOfTransient__kill_pointed,None,Handle_TColStd_SequenceNodeOfSequenceOfTransient)
Handle_TColStd_SequenceNodeOfSequenceOfTransient_swigregister = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfTransient_swigregister
Handle_TColStd_SequenceNodeOfSequenceOfTransient_swigregister(Handle_TColStd_SequenceNodeOfSequenceOfTransient)

def Handle_TColStd_SequenceNodeOfSequenceOfTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfTransient_DownCast(*args)
Handle_TColStd_SequenceNodeOfSequenceOfTransient_DownCast = _TColStd.Handle_TColStd_SequenceNodeOfSequenceOfTransient_DownCast

class TColStd_SequenceOfAddress(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SequenceOfAddress_swiginit(self,_TColStd.new_TColStd_SequenceOfAddress(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAddress_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfAddress &
        :rtype: TColStd_SequenceOfAddress

        """
        return _TColStd.TColStd_SequenceOfAddress_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfAddress &
        :rtype: TColStd_SequenceOfAddress

        """
        return _TColStd.TColStd_SequenceOfAddress_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: Standard_Address &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfAddress &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAddress_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: Standard_Address &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfAddress &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAddress_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Standard_Address &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfAddress &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAddress_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Standard_Address &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfAddress &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAddress_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_SequenceOfAddress_First(self, *args)

    def Last(self, *args):
        """
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_SequenceOfAddress_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColStd_SequenceOfAddress &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAddress_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_SequenceOfAddress_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Standard_Address &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAddress_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_Address

        """
        return _TColStd.TColStd_SequenceOfAddress_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAddress_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceOfAddress.Clear = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_Clear,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.Assign = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_Assign,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.Set = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_Set,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.Append = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_Append,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.Prepend = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_Prepend,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.InsertBefore = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_InsertBefore,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.InsertAfter = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_InsertAfter,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.First = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_First,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.Last = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_Last,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.Split = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_Split,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.Value = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_Value,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.SetValue = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_SetValue,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.ChangeValue = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_ChangeValue,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress.Remove = new_instancemethod(_TColStd.TColStd_SequenceOfAddress_Remove,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceOfAddress__kill_pointed,None,TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress_swigregister = _TColStd.TColStd_SequenceOfAddress_swigregister
TColStd_SequenceOfAddress_swigregister(TColStd_SequenceOfAddress)

class TColStd_SequenceOfAsciiString(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SequenceOfAsciiString_swiginit(self,_TColStd.new_TColStd_SequenceOfAsciiString(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAsciiString_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfAsciiString &
        :rtype: TColStd_SequenceOfAsciiString

        """
        return _TColStd.TColStd_SequenceOfAsciiString_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfAsciiString &
        :rtype: TColStd_SequenceOfAsciiString

        """
        return _TColStd.TColStd_SequenceOfAsciiString_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: TCollection_AsciiString &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAsciiString_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: TCollection_AsciiString &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAsciiString_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: TCollection_AsciiString &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAsciiString_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: TCollection_AsciiString &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAsciiString_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_SequenceOfAsciiString_First(self, *args)

    def Last(self, *args):
        """
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_SequenceOfAsciiString_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColStd_SequenceOfAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAsciiString_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_SequenceOfAsciiString_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: TCollection_AsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAsciiString_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_SequenceOfAsciiString_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfAsciiString_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceOfAsciiString.Clear = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_Clear,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.Assign = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_Assign,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.Set = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_Set,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.Append = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_Append,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.Prepend = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_Prepend,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.InsertBefore = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_InsertBefore,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.InsertAfter = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_InsertAfter,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.First = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_First,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.Last = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_Last,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.Split = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_Split,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.Value = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_Value,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.SetValue = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_SetValue,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.ChangeValue = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_ChangeValue,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString.Remove = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString_Remove,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceOfAsciiString__kill_pointed,None,TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString_swigregister = _TColStd.TColStd_SequenceOfAsciiString_swigregister
TColStd_SequenceOfAsciiString_swigregister(TColStd_SequenceOfAsciiString)

class TColStd_SequenceOfBoolean(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SequenceOfBoolean_swiginit(self,_TColStd.new_TColStd_SequenceOfBoolean(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfBoolean_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfBoolean &
        :rtype: TColStd_SequenceOfBoolean

        """
        return _TColStd.TColStd_SequenceOfBoolean_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfBoolean &
        :rtype: TColStd_SequenceOfBoolean

        """
        return _TColStd.TColStd_SequenceOfBoolean_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: bool
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfBoolean &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfBoolean_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: bool
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfBoolean &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfBoolean_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: bool
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfBoolean &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfBoolean_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: bool
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfBoolean &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfBoolean_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_SequenceOfBoolean_First(self, *args)

    def Last(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_SequenceOfBoolean_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColStd_SequenceOfBoolean &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfBoolean_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: bool

        """
        return _TColStd.TColStd_SequenceOfBoolean_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: bool
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfBoolean_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: bool

        """
        return _TColStd.TColStd_SequenceOfBoolean_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfBoolean_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceOfBoolean.Clear = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_Clear,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.Assign = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_Assign,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.Set = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_Set,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.Append = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_Append,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.Prepend = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_Prepend,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.InsertBefore = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_InsertBefore,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.InsertAfter = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_InsertAfter,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.First = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_First,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.Last = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_Last,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.Split = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_Split,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.Value = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_Value,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.SetValue = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_SetValue,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.ChangeValue = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_ChangeValue,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean.Remove = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean_Remove,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceOfBoolean__kill_pointed,None,TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean_swigregister = _TColStd.TColStd_SequenceOfBoolean_swigregister
TColStd_SequenceOfBoolean_swigregister(TColStd_SequenceOfBoolean)

class TColStd_SequenceOfExtendedString(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SequenceOfExtendedString_swiginit(self,_TColStd.new_TColStd_SequenceOfExtendedString(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfExtendedString_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfExtendedString &
        :rtype: TColStd_SequenceOfExtendedString

        """
        return _TColStd.TColStd_SequenceOfExtendedString_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfExtendedString &
        :rtype: TColStd_SequenceOfExtendedString

        """
        return _TColStd.TColStd_SequenceOfExtendedString_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: TCollection_ExtendedString &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfExtendedString_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: TCollection_ExtendedString &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfExtendedString_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: TCollection_ExtendedString &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfExtendedString_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: TCollection_ExtendedString &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfExtendedString_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_SequenceOfExtendedString_First(self, *args)

    def Last(self, *args):
        """
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_SequenceOfExtendedString_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColStd_SequenceOfExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfExtendedString_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_SequenceOfExtendedString_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: TCollection_ExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfExtendedString_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TCollection_ExtendedString

        """
        return _TColStd.TColStd_SequenceOfExtendedString_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfExtendedString_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceOfExtendedString.Clear = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_Clear,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.Assign = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_Assign,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.Set = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_Set,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.Append = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_Append,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.Prepend = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_Prepend,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.InsertBefore = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_InsertBefore,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.InsertAfter = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_InsertAfter,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.First = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_First,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.Last = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_Last,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.Split = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_Split,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.Value = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_Value,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.SetValue = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_SetValue,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.ChangeValue = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_ChangeValue,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString.Remove = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString_Remove,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceOfExtendedString__kill_pointed,None,TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString_swigregister = _TColStd.TColStd_SequenceOfExtendedString_swigregister
TColStd_SequenceOfExtendedString_swigregister(TColStd_SequenceOfExtendedString)

class TColStd_SequenceOfHAsciiString(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SequenceOfHAsciiString_swiginit(self,_TColStd.new_TColStd_SequenceOfHAsciiString(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfHAsciiString &
        :rtype: TColStd_SequenceOfHAsciiString

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfHAsciiString &
        :rtype: TColStd_SequenceOfHAsciiString

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: Handle_TCollection_HAsciiString &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfHAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: Handle_TCollection_HAsciiString &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfHAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_TCollection_HAsciiString &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfHAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_TCollection_HAsciiString &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfHAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_First(self, *args)

    def Last(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColStd_SequenceOfHAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_TCollection_HAsciiString

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_TCollection_HAsciiString

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHAsciiString_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceOfHAsciiString.Clear = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_Clear,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.Assign = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_Assign,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.Set = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_Set,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.Append = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_Append,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.Prepend = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_Prepend,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.InsertBefore = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_InsertBefore,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.InsertAfter = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_InsertAfter,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.First = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_First,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.Last = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_Last,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.Split = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_Split,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.Value = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_Value,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.SetValue = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_SetValue,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.ChangeValue = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_ChangeValue,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString.Remove = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString_Remove,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceOfHAsciiString__kill_pointed,None,TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString_swigregister = _TColStd.TColStd_SequenceOfHAsciiString_swigregister
TColStd_SequenceOfHAsciiString_swigregister(TColStd_SequenceOfHAsciiString)

class TColStd_SequenceOfHExtendedString(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SequenceOfHExtendedString_swiginit(self,_TColStd.new_TColStd_SequenceOfHExtendedString(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfHExtendedString &
        :rtype: TColStd_SequenceOfHExtendedString

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfHExtendedString &
        :rtype: TColStd_SequenceOfHExtendedString

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: Handle_TCollection_HExtendedString &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfHExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: Handle_TCollection_HExtendedString &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfHExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_TCollection_HExtendedString &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfHExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_TCollection_HExtendedString &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfHExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: Handle_TCollection_HExtendedString

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_First(self, *args)

    def Last(self, *args):
        """
        :rtype: Handle_TCollection_HExtendedString

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColStd_SequenceOfHExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_TCollection_HExtendedString

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Handle_TCollection_HExtendedString &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_TCollection_HExtendedString

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfHExtendedString_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceOfHExtendedString.Clear = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_Clear,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.Assign = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_Assign,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.Set = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_Set,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.Append = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_Append,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.Prepend = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_Prepend,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.InsertBefore = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_InsertBefore,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.InsertAfter = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_InsertAfter,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.First = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_First,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.Last = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_Last,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.Split = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_Split,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.Value = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_Value,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.SetValue = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_SetValue,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.ChangeValue = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_ChangeValue,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString.Remove = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString_Remove,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceOfHExtendedString__kill_pointed,None,TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString_swigregister = _TColStd.TColStd_SequenceOfHExtendedString_swigregister
TColStd_SequenceOfHExtendedString_swigregister(TColStd_SequenceOfHExtendedString)

class TColStd_SequenceOfInteger(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SequenceOfInteger_swiginit(self,_TColStd.new_TColStd_SequenceOfInteger(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfInteger_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfInteger &
        :rtype: TColStd_SequenceOfInteger

        """
        return _TColStd.TColStd_SequenceOfInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfInteger &
        :rtype: TColStd_SequenceOfInteger

        """
        return _TColStd.TColStd_SequenceOfInteger_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: int &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfInteger_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: int &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfInteger_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: int &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfInteger_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: int &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfInteger_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_SequenceOfInteger_First(self, *args)

    def Last(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_SequenceOfInteger_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColStd_SequenceOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfInteger_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: int

        """
        return _TColStd.TColStd_SequenceOfInteger_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: int &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfInteger_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: int

        """
        return _TColStd.TColStd_SequenceOfInteger_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfInteger_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceOfInteger.Clear = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_Clear,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.Assign = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_Assign,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.Set = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_Set,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.Append = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_Append,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.Prepend = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_Prepend,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.InsertBefore = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_InsertBefore,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.InsertAfter = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_InsertAfter,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.First = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_First,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.Last = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_Last,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.Split = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_Split,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.Value = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_Value,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.SetValue = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_SetValue,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.ChangeValue = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_ChangeValue,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger.Remove = new_instancemethod(_TColStd.TColStd_SequenceOfInteger_Remove,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceOfInteger__kill_pointed,None,TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger_swigregister = _TColStd.TColStd_SequenceOfInteger_swigregister
TColStd_SequenceOfInteger_swigregister(TColStd_SequenceOfInteger)

class TColStd_SequenceOfReal(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SequenceOfReal_swiginit(self,_TColStd.new_TColStd_SequenceOfReal(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfReal_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfReal &
        :rtype: TColStd_SequenceOfReal

        """
        return _TColStd.TColStd_SequenceOfReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfReal &
        :rtype: TColStd_SequenceOfReal

        """
        return _TColStd.TColStd_SequenceOfReal_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: float &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfReal_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: float &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfReal_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: float &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfReal_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: float &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfReal_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: float

        """
        return _TColStd.TColStd_SequenceOfReal_First(self, *args)

    def Last(self, *args):
        """
        :rtype: float

        """
        return _TColStd.TColStd_SequenceOfReal_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColStd_SequenceOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfReal_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: float

        """
        return _TColStd.TColStd_SequenceOfReal_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: float &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfReal_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: float

        """
        return _TColStd.TColStd_SequenceOfReal_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfReal_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceOfReal.Clear = new_instancemethod(_TColStd.TColStd_SequenceOfReal_Clear,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.Assign = new_instancemethod(_TColStd.TColStd_SequenceOfReal_Assign,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.Set = new_instancemethod(_TColStd.TColStd_SequenceOfReal_Set,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.Append = new_instancemethod(_TColStd.TColStd_SequenceOfReal_Append,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.Prepend = new_instancemethod(_TColStd.TColStd_SequenceOfReal_Prepend,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.InsertBefore = new_instancemethod(_TColStd.TColStd_SequenceOfReal_InsertBefore,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.InsertAfter = new_instancemethod(_TColStd.TColStd_SequenceOfReal_InsertAfter,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.First = new_instancemethod(_TColStd.TColStd_SequenceOfReal_First,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.Last = new_instancemethod(_TColStd.TColStd_SequenceOfReal_Last,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.Split = new_instancemethod(_TColStd.TColStd_SequenceOfReal_Split,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.Value = new_instancemethod(_TColStd.TColStd_SequenceOfReal_Value,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.SetValue = new_instancemethod(_TColStd.TColStd_SequenceOfReal_SetValue,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.ChangeValue = new_instancemethod(_TColStd.TColStd_SequenceOfReal_ChangeValue,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal.Remove = new_instancemethod(_TColStd.TColStd_SequenceOfReal_Remove,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceOfReal__kill_pointed,None,TColStd_SequenceOfReal)
TColStd_SequenceOfReal_swigregister = _TColStd.TColStd_SequenceOfReal_swigregister
TColStd_SequenceOfReal_swigregister(TColStd_SequenceOfReal)

class TColStd_SequenceOfTransient(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SequenceOfTransient_swiginit(self,_TColStd.new_TColStd_SequenceOfTransient(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfTransient_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfTransient &
        :rtype: TColStd_SequenceOfTransient

        """
        return _TColStd.TColStd_SequenceOfTransient_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_SequenceOfTransient &
        :rtype: TColStd_SequenceOfTransient

        """
        return _TColStd.TColStd_SequenceOfTransient_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: Handle_Standard_Transient &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfTransient_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: Handle_Standard_Transient &
        :rtype: None

        :param S:
        :type S: TColStd_SequenceOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfTransient_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_Standard_Transient &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfTransient_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_Standard_Transient &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColStd_SequenceOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfTransient_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_SequenceOfTransient_First(self, *args)

    def Last(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_SequenceOfTransient_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColStd_SequenceOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfTransient_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_SequenceOfTransient_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfTransient_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_SequenceOfTransient_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColStd.TColStd_SequenceOfTransient_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SequenceOfTransient.Clear = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_Clear,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.Assign = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_Assign,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.Set = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_Set,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.Append = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_Append,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.Prepend = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_Prepend,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.InsertBefore = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_InsertBefore,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.InsertAfter = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_InsertAfter,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.First = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_First,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.Last = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_Last,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.Split = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_Split,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.Value = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_Value,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.SetValue = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_SetValue,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.ChangeValue = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_ChangeValue,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient.Remove = new_instancemethod(_TColStd.TColStd_SequenceOfTransient_Remove,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_SequenceOfTransient__kill_pointed,None,TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient_swigregister = _TColStd.TColStd_SequenceOfTransient_swigregister
TColStd_SequenceOfTransient_swigregister(TColStd_SequenceOfTransient)

class TColStd_SetIteratorOfSetOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param S:
        :type S: TColStd_SetOfInteger &
        :rtype: None

        """
        _TColStd.TColStd_SetIteratorOfSetOfInteger_swiginit(self,_TColStd.new_TColStd_SetIteratorOfSetOfInteger(*args))
    def Initialize(self, *args):
        """
        :param S:
        :type S: TColStd_SetOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SetIteratorOfSetOfInteger_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_SetIteratorOfSetOfInteger_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SetIteratorOfSetOfInteger_Next(self, *args)

    def Value(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_SetIteratorOfSetOfInteger_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SetIteratorOfSetOfInteger.Initialize = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfInteger_Initialize,None,TColStd_SetIteratorOfSetOfInteger)
TColStd_SetIteratorOfSetOfInteger.More = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfInteger_More,None,TColStd_SetIteratorOfSetOfInteger)
TColStd_SetIteratorOfSetOfInteger.Next = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfInteger_Next,None,TColStd_SetIteratorOfSetOfInteger)
TColStd_SetIteratorOfSetOfInteger.Value = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfInteger_Value,None,TColStd_SetIteratorOfSetOfInteger)
TColStd_SetIteratorOfSetOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfInteger__kill_pointed,None,TColStd_SetIteratorOfSetOfInteger)
TColStd_SetIteratorOfSetOfInteger_swigregister = _TColStd.TColStd_SetIteratorOfSetOfInteger_swigregister
TColStd_SetIteratorOfSetOfInteger_swigregister(TColStd_SetIteratorOfSetOfInteger)

class TColStd_SetIteratorOfSetOfReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param S:
        :type S: TColStd_SetOfReal &
        :rtype: None

        """
        _TColStd.TColStd_SetIteratorOfSetOfReal_swiginit(self,_TColStd.new_TColStd_SetIteratorOfSetOfReal(*args))
    def Initialize(self, *args):
        """
        :param S:
        :type S: TColStd_SetOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SetIteratorOfSetOfReal_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_SetIteratorOfSetOfReal_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SetIteratorOfSetOfReal_Next(self, *args)

    def Value(self, *args):
        """
        :rtype: float

        """
        return _TColStd.TColStd_SetIteratorOfSetOfReal_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SetIteratorOfSetOfReal.Initialize = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfReal_Initialize,None,TColStd_SetIteratorOfSetOfReal)
TColStd_SetIteratorOfSetOfReal.More = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfReal_More,None,TColStd_SetIteratorOfSetOfReal)
TColStd_SetIteratorOfSetOfReal.Next = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfReal_Next,None,TColStd_SetIteratorOfSetOfReal)
TColStd_SetIteratorOfSetOfReal.Value = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfReal_Value,None,TColStd_SetIteratorOfSetOfReal)
TColStd_SetIteratorOfSetOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfReal__kill_pointed,None,TColStd_SetIteratorOfSetOfReal)
TColStd_SetIteratorOfSetOfReal_swigregister = _TColStd.TColStd_SetIteratorOfSetOfReal_swigregister
TColStd_SetIteratorOfSetOfReal_swigregister(TColStd_SetIteratorOfSetOfReal)

class TColStd_SetIteratorOfSetOfTransient(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param S:
        :type S: TColStd_SetOfTransient &
        :rtype: None

        """
        _TColStd.TColStd_SetIteratorOfSetOfTransient_swiginit(self,_TColStd.new_TColStd_SetIteratorOfSetOfTransient(*args))
    def Initialize(self, *args):
        """
        :param S:
        :type S: TColStd_SetOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SetIteratorOfSetOfTransient_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_SetIteratorOfSetOfTransient_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SetIteratorOfSetOfTransient_Next(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_SetIteratorOfSetOfTransient_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SetIteratorOfSetOfTransient.Initialize = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfTransient_Initialize,None,TColStd_SetIteratorOfSetOfTransient)
TColStd_SetIteratorOfSetOfTransient.More = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfTransient_More,None,TColStd_SetIteratorOfSetOfTransient)
TColStd_SetIteratorOfSetOfTransient.Next = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfTransient_Next,None,TColStd_SetIteratorOfSetOfTransient)
TColStd_SetIteratorOfSetOfTransient.Value = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfTransient_Value,None,TColStd_SetIteratorOfSetOfTransient)
TColStd_SetIteratorOfSetOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_SetIteratorOfSetOfTransient__kill_pointed,None,TColStd_SetIteratorOfSetOfTransient)
TColStd_SetIteratorOfSetOfTransient_swigregister = _TColStd.TColStd_SetIteratorOfSetOfTransient_swigregister
TColStd_SetIteratorOfSetOfTransient_swigregister(TColStd_SetIteratorOfSetOfTransient)

class TColStd_SetListOfSetOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SetListOfSetOfInteger_swiginit(self,_TColStd.new_TColStd_SetListOfSetOfInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_SetListOfSetOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_SetListOfSetOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfInteger_Set(self, *args)

    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_SetListOfSetOfInteger_Extent(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfInteger_Clear(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_SetListOfSetOfInteger_IsEmpty(self, *args)

    def Prepend(self, *args):
        """
        :param I:
        :type I: int &
        :rtype: None

        :param I:
        :type I: int &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfSetListOfSetOfInteger &
        :rtype: None

        :param Other:
        :type Other: TColStd_SetListOfSetOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfInteger_Prepend(self, *args)

    def Append(self, *args):
        """
        :param I:
        :type I: int &
        :rtype: None

        :param I:
        :type I: int &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfSetListOfSetOfInteger &
        :rtype: None

        :param Other:
        :type Other: TColStd_SetListOfSetOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfInteger_Append(self, *args)

    def GetFirst(self):
        """GetFirst(TColStd_SetListOfSetOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_SetListOfSetOfInteger_GetFirst(self)

    def SetFirst(self, *args):
        """SetFirst(TColStd_SetListOfSetOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_SetListOfSetOfInteger_SetFirst(self, *args)

    def GetLast(self):
        """GetLast(TColStd_SetListOfSetOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_SetListOfSetOfInteger_GetLast(self)

    def SetLast(self, *args):
        """SetLast(TColStd_SetListOfSetOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_SetListOfSetOfInteger_SetLast(self, *args)

    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfInteger_RemoveFirst(self, *args)

    def Remove(self, *args):
        """
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfInteger_Remove(self, *args)

    def InsertBefore(self, *args):
        """
        :param I:
        :type I: int &
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfInteger &
        :rtype: None

        :param Other:
        :type Other: TColStd_SetListOfSetOfInteger &
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfInteger_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param I:
        :type I: int &
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfInteger &
        :rtype: None

        :param Other:
        :type Other: TColStd_SetListOfSetOfInteger &
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfInteger_InsertAfter(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_SetListOfSetOfInteger self)"""
        return _TColStd.TColStd_SetListOfSetOfInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SetListOfSetOfInteger.Assign = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_Assign,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.Set = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_Set,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.Extent = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_Extent,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.Clear = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_Clear,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.IsEmpty = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_IsEmpty,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.Prepend = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_Prepend,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.Append = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_Append,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.GetFirst = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_GetFirst,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.SetFirst = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_SetFirst,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.GetLast = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_GetLast,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.SetLast = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_SetLast,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.RemoveFirst = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_RemoveFirst,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.Remove = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_Remove,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.InsertBefore = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_InsertBefore,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger.InsertAfter = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger_InsertAfter,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_SetListOfSetOfInteger__kill_pointed,None,TColStd_SetListOfSetOfInteger)
TColStd_SetListOfSetOfInteger_swigregister = _TColStd.TColStd_SetListOfSetOfInteger_swigregister
TColStd_SetListOfSetOfInteger_swigregister(TColStd_SetListOfSetOfInteger)

class TColStd_SetListOfSetOfReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SetListOfSetOfReal_swiginit(self,_TColStd.new_TColStd_SetListOfSetOfReal(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_SetListOfSetOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_SetListOfSetOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfReal_Set(self, *args)

    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_SetListOfSetOfReal_Extent(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfReal_Clear(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_SetListOfSetOfReal_IsEmpty(self, *args)

    def Prepend(self, *args):
        """
        :param I:
        :type I: float &
        :rtype: None

        :param I:
        :type I: float &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfSetListOfSetOfReal &
        :rtype: None

        :param Other:
        :type Other: TColStd_SetListOfSetOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfReal_Prepend(self, *args)

    def Append(self, *args):
        """
        :param I:
        :type I: float &
        :rtype: None

        :param I:
        :type I: float &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfSetListOfSetOfReal &
        :rtype: None

        :param Other:
        :type Other: TColStd_SetListOfSetOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfReal_Append(self, *args)

    def GetFirst(self):
        """GetFirst(TColStd_SetListOfSetOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_SetListOfSetOfReal_GetFirst(self)

    def SetFirst(self, *args):
        """SetFirst(TColStd_SetListOfSetOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_SetListOfSetOfReal_SetFirst(self, *args)

    def GetLast(self):
        """GetLast(TColStd_SetListOfSetOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_SetListOfSetOfReal_GetLast(self)

    def SetLast(self, *args):
        """SetLast(TColStd_SetListOfSetOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_SetListOfSetOfReal_SetLast(self, *args)

    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfReal_RemoveFirst(self, *args)

    def Remove(self, *args):
        """
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfReal_Remove(self, *args)

    def InsertBefore(self, *args):
        """
        :param I:
        :type I: float &
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfReal &
        :rtype: None

        :param Other:
        :type Other: TColStd_SetListOfSetOfReal &
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfReal_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param I:
        :type I: float &
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfReal &
        :rtype: None

        :param Other:
        :type Other: TColStd_SetListOfSetOfReal &
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfReal_InsertAfter(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_SetListOfSetOfReal self)"""
        return _TColStd.TColStd_SetListOfSetOfReal__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SetListOfSetOfReal.Assign = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_Assign,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.Set = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_Set,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.Extent = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_Extent,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.Clear = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_Clear,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.IsEmpty = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_IsEmpty,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.Prepend = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_Prepend,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.Append = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_Append,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.GetFirst = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_GetFirst,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.SetFirst = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_SetFirst,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.GetLast = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_GetLast,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.SetLast = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_SetLast,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.RemoveFirst = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_RemoveFirst,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.Remove = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_Remove,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.InsertBefore = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_InsertBefore,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal.InsertAfter = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal_InsertAfter,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_SetListOfSetOfReal__kill_pointed,None,TColStd_SetListOfSetOfReal)
TColStd_SetListOfSetOfReal_swigregister = _TColStd.TColStd_SetListOfSetOfReal_swigregister
TColStd_SetListOfSetOfReal_swigregister(TColStd_SetListOfSetOfReal)

class TColStd_SetListOfSetOfTransient(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SetListOfSetOfTransient_swiginit(self,_TColStd.new_TColStd_SetListOfSetOfTransient(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_SetListOfSetOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_SetListOfSetOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_Set(self, *args)

    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_Extent(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_Clear(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_IsEmpty(self, *args)

    def Prepend(self, *args):
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :rtype: None

        :param I:
        :type I: Handle_Standard_Transient &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfSetListOfSetOfTransient &
        :rtype: None

        :param Other:
        :type Other: TColStd_SetListOfSetOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_Prepend(self, *args)

    def Append(self, *args):
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :rtype: None

        :param I:
        :type I: Handle_Standard_Transient &
        :param theIt:
        :type theIt: TColStd_ListIteratorOfSetListOfSetOfTransient &
        :rtype: None

        :param Other:
        :type Other: TColStd_SetListOfSetOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_Append(self, *args)

    def First(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_First(self, *args)

    def Last(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_Last(self, *args)

    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_RemoveFirst(self, *args)

    def Remove(self, *args):
        """
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_Remove(self, *args)

    def InsertBefore(self, *args):
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfTransient &
        :rtype: None

        :param Other:
        :type Other: TColStd_SetListOfSetOfTransient &
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfTransient &
        :rtype: None

        :param Other:
        :type Other: TColStd_SetListOfSetOfTransient &
        :param It:
        :type It: TColStd_ListIteratorOfSetListOfSetOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SetListOfSetOfTransient_InsertAfter(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SetListOfSetOfTransient.Assign = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_Assign,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient.Set = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_Set,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient.Extent = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_Extent,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient.Clear = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_Clear,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient.IsEmpty = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_IsEmpty,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient.Prepend = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_Prepend,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient.Append = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_Append,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient.First = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_First,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient.Last = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_Last,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient.RemoveFirst = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_RemoveFirst,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient.Remove = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_Remove,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient.InsertBefore = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_InsertBefore,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient.InsertAfter = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient_InsertAfter,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_SetListOfSetOfTransient__kill_pointed,None,TColStd_SetListOfSetOfTransient)
TColStd_SetListOfSetOfTransient_swigregister = _TColStd.TColStd_SetListOfSetOfTransient_swigregister
TColStd_SetListOfSetOfTransient_swigregister(TColStd_SetListOfSetOfTransient)

class TColStd_SetOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SetOfInteger_swiginit(self,_TColStd.new_TColStd_SetOfInteger(*args))
    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_SetOfInteger_Extent(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfInteger_IsEmpty(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SetOfInteger_Clear(self, *args)

    def Add(self, *args):
        """
        :param T:
        :type T: int &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfInteger_Add(self, *args)

    def Remove(self, *args):
        """
        :param T:
        :type T: int &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfInteger_Remove(self, *args)

    def Union(self, *args):
        """
        :param B:
        :type B: TColStd_SetOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SetOfInteger_Union(self, *args)

    def Intersection(self, *args):
        """
        :param B:
        :type B: TColStd_SetOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SetOfInteger_Intersection(self, *args)

    def Difference(self, *args):
        """
        :param B:
        :type B: TColStd_SetOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_SetOfInteger_Difference(self, *args)

    def Contains(self, *args):
        """
        :param T:
        :type T: int &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfInteger_Contains(self, *args)

    def IsASubset(self, *args):
        """
        :param S:
        :type S: TColStd_SetOfInteger &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfInteger_IsASubset(self, *args)

    def IsAProperSubset(self, *args):
        """
        :param S:
        :type S: TColStd_SetOfInteger &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfInteger_IsAProperSubset(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SetOfInteger.Extent = new_instancemethod(_TColStd.TColStd_SetOfInteger_Extent,None,TColStd_SetOfInteger)
TColStd_SetOfInteger.IsEmpty = new_instancemethod(_TColStd.TColStd_SetOfInteger_IsEmpty,None,TColStd_SetOfInteger)
TColStd_SetOfInteger.Clear = new_instancemethod(_TColStd.TColStd_SetOfInteger_Clear,None,TColStd_SetOfInteger)
TColStd_SetOfInteger.Add = new_instancemethod(_TColStd.TColStd_SetOfInteger_Add,None,TColStd_SetOfInteger)
TColStd_SetOfInteger.Remove = new_instancemethod(_TColStd.TColStd_SetOfInteger_Remove,None,TColStd_SetOfInteger)
TColStd_SetOfInteger.Union = new_instancemethod(_TColStd.TColStd_SetOfInteger_Union,None,TColStd_SetOfInteger)
TColStd_SetOfInteger.Intersection = new_instancemethod(_TColStd.TColStd_SetOfInteger_Intersection,None,TColStd_SetOfInteger)
TColStd_SetOfInteger.Difference = new_instancemethod(_TColStd.TColStd_SetOfInteger_Difference,None,TColStd_SetOfInteger)
TColStd_SetOfInteger.Contains = new_instancemethod(_TColStd.TColStd_SetOfInteger_Contains,None,TColStd_SetOfInteger)
TColStd_SetOfInteger.IsASubset = new_instancemethod(_TColStd.TColStd_SetOfInteger_IsASubset,None,TColStd_SetOfInteger)
TColStd_SetOfInteger.IsAProperSubset = new_instancemethod(_TColStd.TColStd_SetOfInteger_IsAProperSubset,None,TColStd_SetOfInteger)
TColStd_SetOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_SetOfInteger__kill_pointed,None,TColStd_SetOfInteger)
TColStd_SetOfInteger_swigregister = _TColStd.TColStd_SetOfInteger_swigregister
TColStd_SetOfInteger_swigregister(TColStd_SetOfInteger)

class TColStd_SetOfReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SetOfReal_swiginit(self,_TColStd.new_TColStd_SetOfReal(*args))
    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_SetOfReal_Extent(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfReal_IsEmpty(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SetOfReal_Clear(self, *args)

    def Add(self, *args):
        """
        :param T:
        :type T: float &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfReal_Add(self, *args)

    def Remove(self, *args):
        """
        :param T:
        :type T: float &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfReal_Remove(self, *args)

    def Union(self, *args):
        """
        :param B:
        :type B: TColStd_SetOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SetOfReal_Union(self, *args)

    def Intersection(self, *args):
        """
        :param B:
        :type B: TColStd_SetOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SetOfReal_Intersection(self, *args)

    def Difference(self, *args):
        """
        :param B:
        :type B: TColStd_SetOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_SetOfReal_Difference(self, *args)

    def Contains(self, *args):
        """
        :param T:
        :type T: float &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfReal_Contains(self, *args)

    def IsASubset(self, *args):
        """
        :param S:
        :type S: TColStd_SetOfReal &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfReal_IsASubset(self, *args)

    def IsAProperSubset(self, *args):
        """
        :param S:
        :type S: TColStd_SetOfReal &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfReal_IsAProperSubset(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SetOfReal.Extent = new_instancemethod(_TColStd.TColStd_SetOfReal_Extent,None,TColStd_SetOfReal)
TColStd_SetOfReal.IsEmpty = new_instancemethod(_TColStd.TColStd_SetOfReal_IsEmpty,None,TColStd_SetOfReal)
TColStd_SetOfReal.Clear = new_instancemethod(_TColStd.TColStd_SetOfReal_Clear,None,TColStd_SetOfReal)
TColStd_SetOfReal.Add = new_instancemethod(_TColStd.TColStd_SetOfReal_Add,None,TColStd_SetOfReal)
TColStd_SetOfReal.Remove = new_instancemethod(_TColStd.TColStd_SetOfReal_Remove,None,TColStd_SetOfReal)
TColStd_SetOfReal.Union = new_instancemethod(_TColStd.TColStd_SetOfReal_Union,None,TColStd_SetOfReal)
TColStd_SetOfReal.Intersection = new_instancemethod(_TColStd.TColStd_SetOfReal_Intersection,None,TColStd_SetOfReal)
TColStd_SetOfReal.Difference = new_instancemethod(_TColStd.TColStd_SetOfReal_Difference,None,TColStd_SetOfReal)
TColStd_SetOfReal.Contains = new_instancemethod(_TColStd.TColStd_SetOfReal_Contains,None,TColStd_SetOfReal)
TColStd_SetOfReal.IsASubset = new_instancemethod(_TColStd.TColStd_SetOfReal_IsASubset,None,TColStd_SetOfReal)
TColStd_SetOfReal.IsAProperSubset = new_instancemethod(_TColStd.TColStd_SetOfReal_IsAProperSubset,None,TColStd_SetOfReal)
TColStd_SetOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_SetOfReal__kill_pointed,None,TColStd_SetOfReal)
TColStd_SetOfReal_swigregister = _TColStd.TColStd_SetOfReal_swigregister
TColStd_SetOfReal_swigregister(TColStd_SetOfReal)

class TColStd_SetOfTransient(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_SetOfTransient_swiginit(self,_TColStd.new_TColStd_SetOfTransient(*args))
    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_SetOfTransient_Extent(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfTransient_IsEmpty(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_SetOfTransient_Clear(self, *args)

    def Add(self, *args):
        """
        :param T:
        :type T: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfTransient_Add(self, *args)

    def Remove(self, *args):
        """
        :param T:
        :type T: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfTransient_Remove(self, *args)

    def Union(self, *args):
        """
        :param B:
        :type B: TColStd_SetOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SetOfTransient_Union(self, *args)

    def Intersection(self, *args):
        """
        :param B:
        :type B: TColStd_SetOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SetOfTransient_Intersection(self, *args)

    def Difference(self, *args):
        """
        :param B:
        :type B: TColStd_SetOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_SetOfTransient_Difference(self, *args)

    def Contains(self, *args):
        """
        :param T:
        :type T: Handle_Standard_Transient &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfTransient_Contains(self, *args)

    def IsASubset(self, *args):
        """
        :param S:
        :type S: TColStd_SetOfTransient &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfTransient_IsASubset(self, *args)

    def IsAProperSubset(self, *args):
        """
        :param S:
        :type S: TColStd_SetOfTransient &
        :rtype: bool

        """
        return _TColStd.TColStd_SetOfTransient_IsAProperSubset(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_SetOfTransient.Extent = new_instancemethod(_TColStd.TColStd_SetOfTransient_Extent,None,TColStd_SetOfTransient)
TColStd_SetOfTransient.IsEmpty = new_instancemethod(_TColStd.TColStd_SetOfTransient_IsEmpty,None,TColStd_SetOfTransient)
TColStd_SetOfTransient.Clear = new_instancemethod(_TColStd.TColStd_SetOfTransient_Clear,None,TColStd_SetOfTransient)
TColStd_SetOfTransient.Add = new_instancemethod(_TColStd.TColStd_SetOfTransient_Add,None,TColStd_SetOfTransient)
TColStd_SetOfTransient.Remove = new_instancemethod(_TColStd.TColStd_SetOfTransient_Remove,None,TColStd_SetOfTransient)
TColStd_SetOfTransient.Union = new_instancemethod(_TColStd.TColStd_SetOfTransient_Union,None,TColStd_SetOfTransient)
TColStd_SetOfTransient.Intersection = new_instancemethod(_TColStd.TColStd_SetOfTransient_Intersection,None,TColStd_SetOfTransient)
TColStd_SetOfTransient.Difference = new_instancemethod(_TColStd.TColStd_SetOfTransient_Difference,None,TColStd_SetOfTransient)
TColStd_SetOfTransient.Contains = new_instancemethod(_TColStd.TColStd_SetOfTransient_Contains,None,TColStd_SetOfTransient)
TColStd_SetOfTransient.IsASubset = new_instancemethod(_TColStd.TColStd_SetOfTransient_IsASubset,None,TColStd_SetOfTransient)
TColStd_SetOfTransient.IsAProperSubset = new_instancemethod(_TColStd.TColStd_SetOfTransient_IsAProperSubset,None,TColStd_SetOfTransient)
TColStd_SetOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_SetOfTransient__kill_pointed,None,TColStd_SetOfTransient)
TColStd_SetOfTransient_swigregister = _TColStd.TColStd_SetOfTransient_swigregister
TColStd_SetOfTransient_swigregister(TColStd_SetOfTransient)

class TColStd_StackIteratorOfStackOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param S:
        :type S: TColStd_StackOfInteger &
        :rtype: None

        """
        _TColStd.TColStd_StackIteratorOfStackOfInteger_swiginit(self,_TColStd.new_TColStd_StackIteratorOfStackOfInteger(*args))
    def Initialize(self, *args):
        """
        :param S:
        :type S: TColStd_StackOfInteger &
        :rtype: None

        """
        return _TColStd.TColStd_StackIteratorOfStackOfInteger_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_StackIteratorOfStackOfInteger_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_StackIteratorOfStackOfInteger_Next(self, *args)

    def Value(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_StackIteratorOfStackOfInteger_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StackIteratorOfStackOfInteger.Initialize = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfInteger_Initialize,None,TColStd_StackIteratorOfStackOfInteger)
TColStd_StackIteratorOfStackOfInteger.More = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfInteger_More,None,TColStd_StackIteratorOfStackOfInteger)
TColStd_StackIteratorOfStackOfInteger.Next = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfInteger_Next,None,TColStd_StackIteratorOfStackOfInteger)
TColStd_StackIteratorOfStackOfInteger.Value = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfInteger_Value,None,TColStd_StackIteratorOfStackOfInteger)
TColStd_StackIteratorOfStackOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfInteger__kill_pointed,None,TColStd_StackIteratorOfStackOfInteger)
TColStd_StackIteratorOfStackOfInteger_swigregister = _TColStd.TColStd_StackIteratorOfStackOfInteger_swigregister
TColStd_StackIteratorOfStackOfInteger_swigregister(TColStd_StackIteratorOfStackOfInteger)

class TColStd_StackIteratorOfStackOfReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param S:
        :type S: TColStd_StackOfReal &
        :rtype: None

        """
        _TColStd.TColStd_StackIteratorOfStackOfReal_swiginit(self,_TColStd.new_TColStd_StackIteratorOfStackOfReal(*args))
    def Initialize(self, *args):
        """
        :param S:
        :type S: TColStd_StackOfReal &
        :rtype: None

        """
        return _TColStd.TColStd_StackIteratorOfStackOfReal_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_StackIteratorOfStackOfReal_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_StackIteratorOfStackOfReal_Next(self, *args)

    def Value(self, *args):
        """
        :rtype: float

        """
        return _TColStd.TColStd_StackIteratorOfStackOfReal_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StackIteratorOfStackOfReal.Initialize = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfReal_Initialize,None,TColStd_StackIteratorOfStackOfReal)
TColStd_StackIteratorOfStackOfReal.More = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfReal_More,None,TColStd_StackIteratorOfStackOfReal)
TColStd_StackIteratorOfStackOfReal.Next = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfReal_Next,None,TColStd_StackIteratorOfStackOfReal)
TColStd_StackIteratorOfStackOfReal.Value = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfReal_Value,None,TColStd_StackIteratorOfStackOfReal)
TColStd_StackIteratorOfStackOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfReal__kill_pointed,None,TColStd_StackIteratorOfStackOfReal)
TColStd_StackIteratorOfStackOfReal_swigregister = _TColStd.TColStd_StackIteratorOfStackOfReal_swigregister
TColStd_StackIteratorOfStackOfReal_swigregister(TColStd_StackIteratorOfStackOfReal)

class TColStd_StackIteratorOfStackOfTransient(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param S:
        :type S: TColStd_StackOfTransient &
        :rtype: None

        """
        _TColStd.TColStd_StackIteratorOfStackOfTransient_swiginit(self,_TColStd.new_TColStd_StackIteratorOfStackOfTransient(*args))
    def Initialize(self, *args):
        """
        :param S:
        :type S: TColStd_StackOfTransient &
        :rtype: None

        """
        return _TColStd.TColStd_StackIteratorOfStackOfTransient_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_StackIteratorOfStackOfTransient_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_StackIteratorOfStackOfTransient_Next(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_StackIteratorOfStackOfTransient_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StackIteratorOfStackOfTransient.Initialize = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfTransient_Initialize,None,TColStd_StackIteratorOfStackOfTransient)
TColStd_StackIteratorOfStackOfTransient.More = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfTransient_More,None,TColStd_StackIteratorOfStackOfTransient)
TColStd_StackIteratorOfStackOfTransient.Next = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfTransient_Next,None,TColStd_StackIteratorOfStackOfTransient)
TColStd_StackIteratorOfStackOfTransient.Value = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfTransient_Value,None,TColStd_StackIteratorOfStackOfTransient)
TColStd_StackIteratorOfStackOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_StackIteratorOfStackOfTransient__kill_pointed,None,TColStd_StackIteratorOfStackOfTransient)
TColStd_StackIteratorOfStackOfTransient_swigregister = _TColStd.TColStd_StackIteratorOfStackOfTransient_swigregister
TColStd_StackIteratorOfStackOfTransient_swigregister(TColStd_StackIteratorOfStackOfTransient)

class TColStd_StackNodeOfStackOfInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: int &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_StackNodeOfStackOfInteger_swiginit(self,_TColStd.new_TColStd_StackNodeOfStackOfInteger(*args))
    def GetValue(self):
        """GetValue(TColStd_StackNodeOfStackOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_StackNodeOfStackOfInteger_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_StackNodeOfStackOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_StackNodeOfStackOfInteger_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_StackNodeOfStackOfInteger self)"""
        return _TColStd.TColStd_StackNodeOfStackOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_StackNodeOfStackOfInteger self) -> Handle_TColStd_StackNodeOfStackOfInteger"""
        return _TColStd.TColStd_StackNodeOfStackOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StackNodeOfStackOfInteger.GetValue = new_instancemethod(_TColStd.TColStd_StackNodeOfStackOfInteger_GetValue,None,TColStd_StackNodeOfStackOfInteger)
TColStd_StackNodeOfStackOfInteger.SetValue = new_instancemethod(_TColStd.TColStd_StackNodeOfStackOfInteger_SetValue,None,TColStd_StackNodeOfStackOfInteger)
TColStd_StackNodeOfStackOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_StackNodeOfStackOfInteger__kill_pointed,None,TColStd_StackNodeOfStackOfInteger)
TColStd_StackNodeOfStackOfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_StackNodeOfStackOfInteger_GetHandle,None,TColStd_StackNodeOfStackOfInteger)
TColStd_StackNodeOfStackOfInteger_swigregister = _TColStd.TColStd_StackNodeOfStackOfInteger_swigregister
TColStd_StackNodeOfStackOfInteger_swigregister(TColStd_StackNodeOfStackOfInteger)

class Handle_TColStd_StackNodeOfStackOfInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_StackNodeOfStackOfInteger_swiginit(self,_TColStd.new_Handle_TColStd_StackNodeOfStackOfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_StackNodeOfStackOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_StackNodeOfStackOfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_StackNodeOfStackOfInteger_Nullify,None,Handle_TColStd_StackNodeOfStackOfInteger)
Handle_TColStd_StackNodeOfStackOfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_StackNodeOfStackOfInteger_IsNull,None,Handle_TColStd_StackNodeOfStackOfInteger)
Handle_TColStd_StackNodeOfStackOfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_StackNodeOfStackOfInteger_GetObject,None,Handle_TColStd_StackNodeOfStackOfInteger)
Handle_TColStd_StackNodeOfStackOfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_StackNodeOfStackOfInteger__kill_pointed,None,Handle_TColStd_StackNodeOfStackOfInteger)
Handle_TColStd_StackNodeOfStackOfInteger_swigregister = _TColStd.Handle_TColStd_StackNodeOfStackOfInteger_swigregister
Handle_TColStd_StackNodeOfStackOfInteger_swigregister(Handle_TColStd_StackNodeOfStackOfInteger)

def Handle_TColStd_StackNodeOfStackOfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_StackNodeOfStackOfInteger_DownCast(*args)
Handle_TColStd_StackNodeOfStackOfInteger_DownCast = _TColStd.Handle_TColStd_StackNodeOfStackOfInteger_DownCast

class TColStd_StackNodeOfStackOfReal(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: float &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_StackNodeOfStackOfReal_swiginit(self,_TColStd.new_TColStd_StackNodeOfStackOfReal(*args))
    def GetValue(self):
        """GetValue(TColStd_StackNodeOfStackOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_StackNodeOfStackOfReal_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TColStd_StackNodeOfStackOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_StackNodeOfStackOfReal_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_StackNodeOfStackOfReal self)"""
        return _TColStd.TColStd_StackNodeOfStackOfReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_StackNodeOfStackOfReal self) -> Handle_TColStd_StackNodeOfStackOfReal"""
        return _TColStd.TColStd_StackNodeOfStackOfReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StackNodeOfStackOfReal.GetValue = new_instancemethod(_TColStd.TColStd_StackNodeOfStackOfReal_GetValue,None,TColStd_StackNodeOfStackOfReal)
TColStd_StackNodeOfStackOfReal.SetValue = new_instancemethod(_TColStd.TColStd_StackNodeOfStackOfReal_SetValue,None,TColStd_StackNodeOfStackOfReal)
TColStd_StackNodeOfStackOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_StackNodeOfStackOfReal__kill_pointed,None,TColStd_StackNodeOfStackOfReal)
TColStd_StackNodeOfStackOfReal.GetHandle = new_instancemethod(_TColStd.TColStd_StackNodeOfStackOfReal_GetHandle,None,TColStd_StackNodeOfStackOfReal)
TColStd_StackNodeOfStackOfReal_swigregister = _TColStd.TColStd_StackNodeOfStackOfReal_swigregister
TColStd_StackNodeOfStackOfReal_swigregister(TColStd_StackNodeOfStackOfReal)

class Handle_TColStd_StackNodeOfStackOfReal(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_StackNodeOfStackOfReal_swiginit(self,_TColStd.new_Handle_TColStd_StackNodeOfStackOfReal(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_StackNodeOfStackOfReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_StackNodeOfStackOfReal.Nullify = new_instancemethod(_TColStd.Handle_TColStd_StackNodeOfStackOfReal_Nullify,None,Handle_TColStd_StackNodeOfStackOfReal)
Handle_TColStd_StackNodeOfStackOfReal.IsNull = new_instancemethod(_TColStd.Handle_TColStd_StackNodeOfStackOfReal_IsNull,None,Handle_TColStd_StackNodeOfStackOfReal)
Handle_TColStd_StackNodeOfStackOfReal.GetObject = new_instancemethod(_TColStd.Handle_TColStd_StackNodeOfStackOfReal_GetObject,None,Handle_TColStd_StackNodeOfStackOfReal)
Handle_TColStd_StackNodeOfStackOfReal._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_StackNodeOfStackOfReal__kill_pointed,None,Handle_TColStd_StackNodeOfStackOfReal)
Handle_TColStd_StackNodeOfStackOfReal_swigregister = _TColStd.Handle_TColStd_StackNodeOfStackOfReal_swigregister
Handle_TColStd_StackNodeOfStackOfReal_swigregister(Handle_TColStd_StackNodeOfStackOfReal)

def Handle_TColStd_StackNodeOfStackOfReal_DownCast(*args):
  return _TColStd.Handle_TColStd_StackNodeOfStackOfReal_DownCast(*args)
Handle_TColStd_StackNodeOfStackOfReal_DownCast = _TColStd.Handle_TColStd_StackNodeOfStackOfReal_DownCast

class TColStd_StackNodeOfStackOfTransient(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_StackNodeOfStackOfTransient_swiginit(self,_TColStd.new_TColStd_StackNodeOfStackOfTransient(*args))
    def Value(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_StackNodeOfStackOfTransient_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_StackNodeOfStackOfTransient self)"""
        return _TColStd.TColStd_StackNodeOfStackOfTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_StackNodeOfStackOfTransient self) -> Handle_TColStd_StackNodeOfStackOfTransient"""
        return _TColStd.TColStd_StackNodeOfStackOfTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StackNodeOfStackOfTransient.Value = new_instancemethod(_TColStd.TColStd_StackNodeOfStackOfTransient_Value,None,TColStd_StackNodeOfStackOfTransient)
TColStd_StackNodeOfStackOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_StackNodeOfStackOfTransient__kill_pointed,None,TColStd_StackNodeOfStackOfTransient)
TColStd_StackNodeOfStackOfTransient.GetHandle = new_instancemethod(_TColStd.TColStd_StackNodeOfStackOfTransient_GetHandle,None,TColStd_StackNodeOfStackOfTransient)
TColStd_StackNodeOfStackOfTransient_swigregister = _TColStd.TColStd_StackNodeOfStackOfTransient_swigregister
TColStd_StackNodeOfStackOfTransient_swigregister(TColStd_StackNodeOfStackOfTransient)

class Handle_TColStd_StackNodeOfStackOfTransient(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_StackNodeOfStackOfTransient_swiginit(self,_TColStd.new_Handle_TColStd_StackNodeOfStackOfTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_StackNodeOfStackOfTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_StackNodeOfStackOfTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_StackNodeOfStackOfTransient_Nullify,None,Handle_TColStd_StackNodeOfStackOfTransient)
Handle_TColStd_StackNodeOfStackOfTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_StackNodeOfStackOfTransient_IsNull,None,Handle_TColStd_StackNodeOfStackOfTransient)
Handle_TColStd_StackNodeOfStackOfTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_StackNodeOfStackOfTransient_GetObject,None,Handle_TColStd_StackNodeOfStackOfTransient)
Handle_TColStd_StackNodeOfStackOfTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_StackNodeOfStackOfTransient__kill_pointed,None,Handle_TColStd_StackNodeOfStackOfTransient)
Handle_TColStd_StackNodeOfStackOfTransient_swigregister = _TColStd.Handle_TColStd_StackNodeOfStackOfTransient_swigregister
Handle_TColStd_StackNodeOfStackOfTransient_swigregister(Handle_TColStd_StackNodeOfStackOfTransient)

def Handle_TColStd_StackNodeOfStackOfTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_StackNodeOfStackOfTransient_DownCast(*args)
Handle_TColStd_StackNodeOfStackOfTransient_DownCast = _TColStd.Handle_TColStd_StackNodeOfStackOfTransient_DownCast

class TColStd_StackOfInteger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_StackOfInteger_swiginit(self,_TColStd.new_TColStd_StackOfInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_StackOfInteger &
        :rtype: TColStd_StackOfInteger

        """
        return _TColStd.TColStd_StackOfInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_StackOfInteger &
        :rtype: TColStd_StackOfInteger

        """
        return _TColStd.TColStd_StackOfInteger_Set(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_StackOfInteger_IsEmpty(self, *args)

    def Depth(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_StackOfInteger_Depth(self, *args)

    def Top(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_StackOfInteger_Top(self, *args)

    def Push(self, *args):
        """
        :param I:
        :type I: int &
        :rtype: None

        """
        return _TColStd.TColStd_StackOfInteger_Push(self, *args)

    def Pop(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_StackOfInteger_Pop(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_StackOfInteger_Clear(self, *args)

    def GetChangeTop(self):
        """GetChangeTop(TColStd_StackOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_StackOfInteger_GetChangeTop(self)

    def SetChangeTop(self, *args):
        """SetChangeTop(TColStd_StackOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_StackOfInteger_SetChangeTop(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_StackOfInteger self)"""
        return _TColStd.TColStd_StackOfInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StackOfInteger.Assign = new_instancemethod(_TColStd.TColStd_StackOfInteger_Assign,None,TColStd_StackOfInteger)
TColStd_StackOfInteger.Set = new_instancemethod(_TColStd.TColStd_StackOfInteger_Set,None,TColStd_StackOfInteger)
TColStd_StackOfInteger.IsEmpty = new_instancemethod(_TColStd.TColStd_StackOfInteger_IsEmpty,None,TColStd_StackOfInteger)
TColStd_StackOfInteger.Depth = new_instancemethod(_TColStd.TColStd_StackOfInteger_Depth,None,TColStd_StackOfInteger)
TColStd_StackOfInteger.Top = new_instancemethod(_TColStd.TColStd_StackOfInteger_Top,None,TColStd_StackOfInteger)
TColStd_StackOfInteger.Push = new_instancemethod(_TColStd.TColStd_StackOfInteger_Push,None,TColStd_StackOfInteger)
TColStd_StackOfInteger.Pop = new_instancemethod(_TColStd.TColStd_StackOfInteger_Pop,None,TColStd_StackOfInteger)
TColStd_StackOfInteger.Clear = new_instancemethod(_TColStd.TColStd_StackOfInteger_Clear,None,TColStd_StackOfInteger)
TColStd_StackOfInteger.GetChangeTop = new_instancemethod(_TColStd.TColStd_StackOfInteger_GetChangeTop,None,TColStd_StackOfInteger)
TColStd_StackOfInteger.SetChangeTop = new_instancemethod(_TColStd.TColStd_StackOfInteger_SetChangeTop,None,TColStd_StackOfInteger)
TColStd_StackOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_StackOfInteger__kill_pointed,None,TColStd_StackOfInteger)
TColStd_StackOfInteger_swigregister = _TColStd.TColStd_StackOfInteger_swigregister
TColStd_StackOfInteger_swigregister(TColStd_StackOfInteger)

class TColStd_StackOfReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_StackOfReal_swiginit(self,_TColStd.new_TColStd_StackOfReal(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_StackOfReal &
        :rtype: TColStd_StackOfReal

        """
        return _TColStd.TColStd_StackOfReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_StackOfReal &
        :rtype: TColStd_StackOfReal

        """
        return _TColStd.TColStd_StackOfReal_Set(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_StackOfReal_IsEmpty(self, *args)

    def Depth(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_StackOfReal_Depth(self, *args)

    def Top(self, *args):
        """
        :rtype: float

        """
        return _TColStd.TColStd_StackOfReal_Top(self, *args)

    def Push(self, *args):
        """
        :param I:
        :type I: float &
        :rtype: None

        """
        return _TColStd.TColStd_StackOfReal_Push(self, *args)

    def Pop(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_StackOfReal_Pop(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_StackOfReal_Clear(self, *args)

    def GetChangeTop(self):
        """GetChangeTop(TColStd_StackOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_StackOfReal_GetChangeTop(self)

    def SetChangeTop(self, *args):
        """SetChangeTop(TColStd_StackOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_StackOfReal_SetChangeTop(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_StackOfReal self)"""
        return _TColStd.TColStd_StackOfReal__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StackOfReal.Assign = new_instancemethod(_TColStd.TColStd_StackOfReal_Assign,None,TColStd_StackOfReal)
TColStd_StackOfReal.Set = new_instancemethod(_TColStd.TColStd_StackOfReal_Set,None,TColStd_StackOfReal)
TColStd_StackOfReal.IsEmpty = new_instancemethod(_TColStd.TColStd_StackOfReal_IsEmpty,None,TColStd_StackOfReal)
TColStd_StackOfReal.Depth = new_instancemethod(_TColStd.TColStd_StackOfReal_Depth,None,TColStd_StackOfReal)
TColStd_StackOfReal.Top = new_instancemethod(_TColStd.TColStd_StackOfReal_Top,None,TColStd_StackOfReal)
TColStd_StackOfReal.Push = new_instancemethod(_TColStd.TColStd_StackOfReal_Push,None,TColStd_StackOfReal)
TColStd_StackOfReal.Pop = new_instancemethod(_TColStd.TColStd_StackOfReal_Pop,None,TColStd_StackOfReal)
TColStd_StackOfReal.Clear = new_instancemethod(_TColStd.TColStd_StackOfReal_Clear,None,TColStd_StackOfReal)
TColStd_StackOfReal.GetChangeTop = new_instancemethod(_TColStd.TColStd_StackOfReal_GetChangeTop,None,TColStd_StackOfReal)
TColStd_StackOfReal.SetChangeTop = new_instancemethod(_TColStd.TColStd_StackOfReal_SetChangeTop,None,TColStd_StackOfReal)
TColStd_StackOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_StackOfReal__kill_pointed,None,TColStd_StackOfReal)
TColStd_StackOfReal_swigregister = _TColStd.TColStd_StackOfReal_swigregister
TColStd_StackOfReal_swigregister(TColStd_StackOfReal)

class TColStd_StackOfTransient(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColStd.TColStd_StackOfTransient_swiginit(self,_TColStd.new_TColStd_StackOfTransient(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColStd_StackOfTransient &
        :rtype: TColStd_StackOfTransient

        """
        return _TColStd.TColStd_StackOfTransient_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColStd_StackOfTransient &
        :rtype: TColStd_StackOfTransient

        """
        return _TColStd.TColStd_StackOfTransient_Set(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColStd.TColStd_StackOfTransient_IsEmpty(self, *args)

    def Depth(self, *args):
        """
        :rtype: int

        """
        return _TColStd.TColStd_StackOfTransient_Depth(self, *args)

    def Top(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_StackOfTransient_Top(self, *args)

    def Push(self, *args):
        """
        :param I:
        :type I: Handle_Standard_Transient &
        :rtype: None

        """
        return _TColStd.TColStd_StackOfTransient_Push(self, *args)

    def Pop(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_StackOfTransient_Pop(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColStd.TColStd_StackOfTransient_Clear(self, *args)

    def ChangeTop(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_StackOfTransient_ChangeTop(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StackOfTransient.Assign = new_instancemethod(_TColStd.TColStd_StackOfTransient_Assign,None,TColStd_StackOfTransient)
TColStd_StackOfTransient.Set = new_instancemethod(_TColStd.TColStd_StackOfTransient_Set,None,TColStd_StackOfTransient)
TColStd_StackOfTransient.IsEmpty = new_instancemethod(_TColStd.TColStd_StackOfTransient_IsEmpty,None,TColStd_StackOfTransient)
TColStd_StackOfTransient.Depth = new_instancemethod(_TColStd.TColStd_StackOfTransient_Depth,None,TColStd_StackOfTransient)
TColStd_StackOfTransient.Top = new_instancemethod(_TColStd.TColStd_StackOfTransient_Top,None,TColStd_StackOfTransient)
TColStd_StackOfTransient.Push = new_instancemethod(_TColStd.TColStd_StackOfTransient_Push,None,TColStd_StackOfTransient)
TColStd_StackOfTransient.Pop = new_instancemethod(_TColStd.TColStd_StackOfTransient_Pop,None,TColStd_StackOfTransient)
TColStd_StackOfTransient.Clear = new_instancemethod(_TColStd.TColStd_StackOfTransient_Clear,None,TColStd_StackOfTransient)
TColStd_StackOfTransient.ChangeTop = new_instancemethod(_TColStd.TColStd_StackOfTransient_ChangeTop,None,TColStd_StackOfTransient)
TColStd_StackOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_StackOfTransient__kill_pointed,None,TColStd_StackOfTransient)
TColStd_StackOfTransient_swigregister = _TColStd.TColStd_StackOfTransient_swigregister
TColStd_StackOfTransient_swigregister(TColStd_StackOfTransient)

class TColStd_StdMapNodeOfMapOfAsciiString(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TCollection_AsciiString &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_StdMapNodeOfMapOfAsciiString_swiginit(self,_TColStd.new_TColStd_StdMapNodeOfMapOfAsciiString(*args))
    def Key(self, *args):
        """
        :rtype: TCollection_AsciiString

        """
        return _TColStd.TColStd_StdMapNodeOfMapOfAsciiString_Key(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_StdMapNodeOfMapOfAsciiString self)"""
        return _TColStd.TColStd_StdMapNodeOfMapOfAsciiString__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_StdMapNodeOfMapOfAsciiString self) -> Handle_TColStd_StdMapNodeOfMapOfAsciiString"""
        return _TColStd.TColStd_StdMapNodeOfMapOfAsciiString_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StdMapNodeOfMapOfAsciiString.Key = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfAsciiString_Key,None,TColStd_StdMapNodeOfMapOfAsciiString)
TColStd_StdMapNodeOfMapOfAsciiString._kill_pointed = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfAsciiString__kill_pointed,None,TColStd_StdMapNodeOfMapOfAsciiString)
TColStd_StdMapNodeOfMapOfAsciiString.GetHandle = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfAsciiString_GetHandle,None,TColStd_StdMapNodeOfMapOfAsciiString)
TColStd_StdMapNodeOfMapOfAsciiString_swigregister = _TColStd.TColStd_StdMapNodeOfMapOfAsciiString_swigregister
TColStd_StdMapNodeOfMapOfAsciiString_swigregister(TColStd_StdMapNodeOfMapOfAsciiString)

class Handle_TColStd_StdMapNodeOfMapOfAsciiString(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_StdMapNodeOfMapOfAsciiString_swiginit(self,_TColStd.new_Handle_TColStd_StdMapNodeOfMapOfAsciiString(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfAsciiString_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_StdMapNodeOfMapOfAsciiString.Nullify = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfAsciiString_Nullify,None,Handle_TColStd_StdMapNodeOfMapOfAsciiString)
Handle_TColStd_StdMapNodeOfMapOfAsciiString.IsNull = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfAsciiString_IsNull,None,Handle_TColStd_StdMapNodeOfMapOfAsciiString)
Handle_TColStd_StdMapNodeOfMapOfAsciiString.GetObject = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfAsciiString_GetObject,None,Handle_TColStd_StdMapNodeOfMapOfAsciiString)
Handle_TColStd_StdMapNodeOfMapOfAsciiString._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfAsciiString__kill_pointed,None,Handle_TColStd_StdMapNodeOfMapOfAsciiString)
Handle_TColStd_StdMapNodeOfMapOfAsciiString_swigregister = _TColStd.Handle_TColStd_StdMapNodeOfMapOfAsciiString_swigregister
Handle_TColStd_StdMapNodeOfMapOfAsciiString_swigregister(Handle_TColStd_StdMapNodeOfMapOfAsciiString)

def Handle_TColStd_StdMapNodeOfMapOfAsciiString_DownCast(*args):
  return _TColStd.Handle_TColStd_StdMapNodeOfMapOfAsciiString_DownCast(*args)
Handle_TColStd_StdMapNodeOfMapOfAsciiString_DownCast = _TColStd.Handle_TColStd_StdMapNodeOfMapOfAsciiString_DownCast

class TColStd_StdMapNodeOfMapOfInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: int &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_StdMapNodeOfMapOfInteger_swiginit(self,_TColStd.new_TColStd_StdMapNodeOfMapOfInteger(*args))
    def GetKey(self):
        """GetKey(TColStd_StdMapNodeOfMapOfInteger self) -> Standard_Integer"""
        return _TColStd.TColStd_StdMapNodeOfMapOfInteger_GetKey(self)

    def SetKey(self, *args):
        """SetKey(TColStd_StdMapNodeOfMapOfInteger self, Standard_Integer value)"""
        return _TColStd.TColStd_StdMapNodeOfMapOfInteger_SetKey(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_StdMapNodeOfMapOfInteger self)"""
        return _TColStd.TColStd_StdMapNodeOfMapOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_StdMapNodeOfMapOfInteger self) -> Handle_TColStd_StdMapNodeOfMapOfInteger"""
        return _TColStd.TColStd_StdMapNodeOfMapOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StdMapNodeOfMapOfInteger.GetKey = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfInteger_GetKey,None,TColStd_StdMapNodeOfMapOfInteger)
TColStd_StdMapNodeOfMapOfInteger.SetKey = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfInteger_SetKey,None,TColStd_StdMapNodeOfMapOfInteger)
TColStd_StdMapNodeOfMapOfInteger._kill_pointed = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfInteger__kill_pointed,None,TColStd_StdMapNodeOfMapOfInteger)
TColStd_StdMapNodeOfMapOfInteger.GetHandle = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfInteger_GetHandle,None,TColStd_StdMapNodeOfMapOfInteger)
TColStd_StdMapNodeOfMapOfInteger_swigregister = _TColStd.TColStd_StdMapNodeOfMapOfInteger_swigregister
TColStd_StdMapNodeOfMapOfInteger_swigregister(TColStd_StdMapNodeOfMapOfInteger)

class Handle_TColStd_StdMapNodeOfMapOfInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_StdMapNodeOfMapOfInteger_swiginit(self,_TColStd.new_Handle_TColStd_StdMapNodeOfMapOfInteger(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_StdMapNodeOfMapOfInteger.Nullify = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfInteger_Nullify,None,Handle_TColStd_StdMapNodeOfMapOfInteger)
Handle_TColStd_StdMapNodeOfMapOfInteger.IsNull = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfInteger_IsNull,None,Handle_TColStd_StdMapNodeOfMapOfInteger)
Handle_TColStd_StdMapNodeOfMapOfInteger.GetObject = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfInteger_GetObject,None,Handle_TColStd_StdMapNodeOfMapOfInteger)
Handle_TColStd_StdMapNodeOfMapOfInteger._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfInteger__kill_pointed,None,Handle_TColStd_StdMapNodeOfMapOfInteger)
Handle_TColStd_StdMapNodeOfMapOfInteger_swigregister = _TColStd.Handle_TColStd_StdMapNodeOfMapOfInteger_swigregister
Handle_TColStd_StdMapNodeOfMapOfInteger_swigregister(Handle_TColStd_StdMapNodeOfMapOfInteger)

def Handle_TColStd_StdMapNodeOfMapOfInteger_DownCast(*args):
  return _TColStd.Handle_TColStd_StdMapNodeOfMapOfInteger_DownCast(*args)
Handle_TColStd_StdMapNodeOfMapOfInteger_DownCast = _TColStd.Handle_TColStd_StdMapNodeOfMapOfInteger_DownCast

class TColStd_StdMapNodeOfMapOfReal(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: float &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_StdMapNodeOfMapOfReal_swiginit(self,_TColStd.new_TColStd_StdMapNodeOfMapOfReal(*args))
    def GetKey(self):
        """GetKey(TColStd_StdMapNodeOfMapOfReal self) -> Standard_Real"""
        return _TColStd.TColStd_StdMapNodeOfMapOfReal_GetKey(self)

    def SetKey(self, *args):
        """SetKey(TColStd_StdMapNodeOfMapOfReal self, Standard_Real value)"""
        return _TColStd.TColStd_StdMapNodeOfMapOfReal_SetKey(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_StdMapNodeOfMapOfReal self)"""
        return _TColStd.TColStd_StdMapNodeOfMapOfReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_StdMapNodeOfMapOfReal self) -> Handle_TColStd_StdMapNodeOfMapOfReal"""
        return _TColStd.TColStd_StdMapNodeOfMapOfReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StdMapNodeOfMapOfReal.GetKey = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfReal_GetKey,None,TColStd_StdMapNodeOfMapOfReal)
TColStd_StdMapNodeOfMapOfReal.SetKey = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfReal_SetKey,None,TColStd_StdMapNodeOfMapOfReal)
TColStd_StdMapNodeOfMapOfReal._kill_pointed = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfReal__kill_pointed,None,TColStd_StdMapNodeOfMapOfReal)
TColStd_StdMapNodeOfMapOfReal.GetHandle = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfReal_GetHandle,None,TColStd_StdMapNodeOfMapOfReal)
TColStd_StdMapNodeOfMapOfReal_swigregister = _TColStd.TColStd_StdMapNodeOfMapOfReal_swigregister
TColStd_StdMapNodeOfMapOfReal_swigregister(TColStd_StdMapNodeOfMapOfReal)

class Handle_TColStd_StdMapNodeOfMapOfReal(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_StdMapNodeOfMapOfReal_swiginit(self,_TColStd.new_Handle_TColStd_StdMapNodeOfMapOfReal(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_StdMapNodeOfMapOfReal.Nullify = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfReal_Nullify,None,Handle_TColStd_StdMapNodeOfMapOfReal)
Handle_TColStd_StdMapNodeOfMapOfReal.IsNull = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfReal_IsNull,None,Handle_TColStd_StdMapNodeOfMapOfReal)
Handle_TColStd_StdMapNodeOfMapOfReal.GetObject = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfReal_GetObject,None,Handle_TColStd_StdMapNodeOfMapOfReal)
Handle_TColStd_StdMapNodeOfMapOfReal._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfReal__kill_pointed,None,Handle_TColStd_StdMapNodeOfMapOfReal)
Handle_TColStd_StdMapNodeOfMapOfReal_swigregister = _TColStd.Handle_TColStd_StdMapNodeOfMapOfReal_swigregister
Handle_TColStd_StdMapNodeOfMapOfReal_swigregister(Handle_TColStd_StdMapNodeOfMapOfReal)

def Handle_TColStd_StdMapNodeOfMapOfReal_DownCast(*args):
  return _TColStd.Handle_TColStd_StdMapNodeOfMapOfReal_DownCast(*args)
Handle_TColStd_StdMapNodeOfMapOfReal_DownCast = _TColStd.Handle_TColStd_StdMapNodeOfMapOfReal_DownCast

class TColStd_StdMapNodeOfMapOfTransient(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: Handle_Standard_Transient &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColStd.TColStd_StdMapNodeOfMapOfTransient_swiginit(self,_TColStd.new_TColStd_StdMapNodeOfMapOfTransient(*args))
    def Key(self, *args):
        """
        :rtype: Handle_Standard_Transient

        """
        return _TColStd.TColStd_StdMapNodeOfMapOfTransient_Key(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColStd_StdMapNodeOfMapOfTransient self)"""
        return _TColStd.TColStd_StdMapNodeOfMapOfTransient__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColStd_StdMapNodeOfMapOfTransient self) -> Handle_TColStd_StdMapNodeOfMapOfTransient"""
        return _TColStd.TColStd_StdMapNodeOfMapOfTransient_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColStd_StdMapNodeOfMapOfTransient.Key = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfTransient_Key,None,TColStd_StdMapNodeOfMapOfTransient)
TColStd_StdMapNodeOfMapOfTransient._kill_pointed = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfTransient__kill_pointed,None,TColStd_StdMapNodeOfMapOfTransient)
TColStd_StdMapNodeOfMapOfTransient.GetHandle = new_instancemethod(_TColStd.TColStd_StdMapNodeOfMapOfTransient_GetHandle,None,TColStd_StdMapNodeOfMapOfTransient)
TColStd_StdMapNodeOfMapOfTransient_swigregister = _TColStd.TColStd_StdMapNodeOfMapOfTransient_swigregister
TColStd_StdMapNodeOfMapOfTransient_swigregister(TColStd_StdMapNodeOfMapOfTransient)

class Handle_TColStd_StdMapNodeOfMapOfTransient(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColStd.Handle_TColStd_StdMapNodeOfMapOfTransient_swiginit(self,_TColStd.new_Handle_TColStd_StdMapNodeOfMapOfTransient(*args))
    DownCast = staticmethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfTransient_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColStd_StdMapNodeOfMapOfTransient.Nullify = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfTransient_Nullify,None,Handle_TColStd_StdMapNodeOfMapOfTransient)
Handle_TColStd_StdMapNodeOfMapOfTransient.IsNull = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfTransient_IsNull,None,Handle_TColStd_StdMapNodeOfMapOfTransient)
Handle_TColStd_StdMapNodeOfMapOfTransient.GetObject = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfTransient_GetObject,None,Handle_TColStd_StdMapNodeOfMapOfTransient)
Handle_TColStd_StdMapNodeOfMapOfTransient._kill_pointed = new_instancemethod(_TColStd.Handle_TColStd_StdMapNodeOfMapOfTransient__kill_pointed,None,Handle_TColStd_StdMapNodeOfMapOfTransient)
Handle_TColStd_StdMapNodeOfMapOfTransient_swigregister = _TColStd.Handle_TColStd_StdMapNodeOfMapOfTransient_swigregister
Handle_TColStd_StdMapNodeOfMapOfTransient_swigregister(Handle_TColStd_StdMapNodeOfMapOfTransient)

def Handle_TColStd_StdMapNodeOfMapOfTransient_DownCast(*args):
  return _TColStd.Handle_TColStd_StdMapNodeOfMapOfTransient_DownCast(*args)
Handle_TColStd_StdMapNodeOfMapOfTransient_DownCast = _TColStd.Handle_TColStd_StdMapNodeOfMapOfTransient_DownCast



