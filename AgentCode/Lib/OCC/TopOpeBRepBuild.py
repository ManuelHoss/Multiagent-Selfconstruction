# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _TopOpeBRepBuild.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_TopOpeBRepBuild', [dirname(__file__)])
        except ImportError:
            import _TopOpeBRepBuild
            return _TopOpeBRepBuild
        if fp is not None:
            try:
                _mod = imp.load_module('_TopOpeBRepBuild', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _TopOpeBRepBuild = swig_import_helper()
    del swig_import_helper
else:
    import _TopOpeBRepBuild
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TopOpeBRepBuild.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_TopOpeBRepBuild.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _TopOpeBRepBuild.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

import OCC.Standard
import OCC.TopoDS
import OCC.MMgt
import OCC.TCollection
import OCC.TopLoc
import OCC.gp
import OCC.TopAbs
import OCC.TopOpeBRepTool
import OCC.TopTools
import OCC.TColStd
import OCC.Message
import OCC.Bnd
import OCC.Geom2d
import OCC.GeomAbs
import OCC.TColgp
import OCC.GeomAdaptor
import OCC.Adaptor3d
import OCC.Geom
import OCC.Adaptor2d
import OCC.math
import OCC.BRepClass3d
import OCC.IntCurveSurface
import OCC.Intf
import OCC.IntSurf
import OCC.BRepAdaptor
import OCC.Geom2dAdaptor
import OCC.IntCurvesFace
import OCC.Extrema
import OCC.TopOpeBRepDS

_TopOpeBRepBuild.TopOpeBRepBuild_ANYLOOP_swigconstant(_TopOpeBRepBuild)
TopOpeBRepBuild_ANYLOOP = _TopOpeBRepBuild.TopOpeBRepBuild_ANYLOOP

_TopOpeBRepBuild.TopOpeBRepBuild_BOUNDARY_swigconstant(_TopOpeBRepBuild)
TopOpeBRepBuild_BOUNDARY = _TopOpeBRepBuild.TopOpeBRepBuild_BOUNDARY

_TopOpeBRepBuild.TopOpeBRepBuild_BLOCK_swigconstant(_TopOpeBRepBuild)
TopOpeBRepBuild_BLOCK = _TopOpeBRepBuild.TopOpeBRepBuild_BLOCK
class TopOpeBRepBuild_AreaBuilder(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Creates a AreaBuilder to build the areas on the shapes described by <LS> using the classifier <LC>.

        :param LS:
        :type LS: TopOpeBRepBuild_LoopSet &
        :param LC:
        :type LC: TopOpeBRepBuild_LoopClassifier &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_AreaBuilder(*args))

    def Delete(self, *args):
        """
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_Delete(self, *args)


    def InitAreaBuilder(self, *args):
        """
        * Sets a AreaBuilder to find the areas on the shapes described by <LS> using the classifier <LC>.

        :param LS:
        :type LS: TopOpeBRepBuild_LoopSet &
        :param LC:
        :type LC: TopOpeBRepBuild_LoopClassifier &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitAreaBuilder(self, *args)


    def InitArea(self, *args):
        """
        * Initialize iteration on areas.

        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitArea(self, *args)


    def MoreArea(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_MoreArea(self, *args)


    def NextArea(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_NextArea(self, *args)


    def InitLoop(self, *args):
        """
        * Initialize iteration on loops of current Area.

        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitLoop(self, *args)


    def MoreLoop(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_MoreLoop(self, *args)


    def NextLoop(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_NextLoop(self, *args)


    def Loop(self, *args):
        """
        * Returns the current Loop in the current area.

        :rtype: Handle_TopOpeBRepBuild_Loop

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_Loop(self, *args)


    def ADD_Loop_TO_LISTOFLoop(self, *args):
        """
        :param L:
        :type L: Handle_TopOpeBRepBuild_Loop &
        :param LOL:
        :type LOL: TopOpeBRepBuild_ListOfLoop &
        :param s: default value is NULL
        :type s: Standard_Address
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_ADD_Loop_TO_LISTOFLoop(self, *args)


    def REM_Loop_FROM_LISTOFLoop(self, *args):
        """
        :param ITLOL:
        :type ITLOL: TopOpeBRepBuild_ListIteratorOfListOfLoop &
        :param LOL:
        :type LOL: TopOpeBRepBuild_ListOfLoop &
        :param s: default value is NULL
        :type s: Standard_Address
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_REM_Loop_FROM_LISTOFLoop(self, *args)


    def ADD_LISTOFLoop_TO_LISTOFLoop(self, *args):
        """
        :param LOL1:
        :type LOL1: TopOpeBRepBuild_ListOfLoop &
        :param LOL2:
        :type LOL2: TopOpeBRepBuild_ListOfLoop &
        :param s: default value is NULL
        :type s: Standard_Address
        :param s1: default value is NULL
        :type s1: Standard_Address
        :param s2: default value is NULL
        :type s2: Standard_Address
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_ADD_LISTOFLoop_TO_LISTOFLoop(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_AreaBuilder.Delete = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_Delete, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.InitAreaBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitAreaBuilder, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.InitArea = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitArea, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.MoreArea = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_MoreArea, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.NextArea = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_NextArea, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.InitLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitLoop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.MoreLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_MoreLoop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.NextLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_NextLoop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.Loop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_Loop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.ADD_Loop_TO_LISTOFLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_ADD_Loop_TO_LISTOFLoop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.REM_Loop_FROM_LISTOFLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_REM_Loop_FROM_LISTOFLoop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder.ADD_LISTOFLoop_TO_LISTOFLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_ADD_LISTOFLoop_TO_LISTOFLoop, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder__kill_pointed, None, TopOpeBRepBuild_AreaBuilder)
TopOpeBRepBuild_AreaBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_swigregister
TopOpeBRepBuild_AreaBuilder_swigregister(TopOpeBRepBuild_AreaBuilder)

class TopOpeBRepBuild_BlockBuilder(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param SS:
        :type SS: TopOpeBRepBuild_ShapeSet &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_BlockBuilder(*args))

    def MakeBlock(self, *args):
        """
        :param SS:
        :type SS: TopOpeBRepBuild_ShapeSet &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_MakeBlock(self, *args)


    def InitBlock(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_InitBlock(self, *args)


    def MoreBlock(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_MoreBlock(self, *args)


    def NextBlock(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_NextBlock(self, *args)


    def BlockIterator(self, *args):
        """
        :rtype: TopOpeBRepBuild_BlockIterator

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_BlockIterator(self, *args)


    def Element(self, *args):
        """
        * Returns the current element of <BI>.

        :param BI:
        :type BI: TopOpeBRepBuild_BlockIterator &
        :rtype: TopoDS_Shape

        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        :param S:
        :type S: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_Element(self, *args)


    def ElementIsValid(self, *args):
        """
        :param BI:
        :type BI: TopOpeBRepBuild_BlockIterator &
        :rtype: bool

        :param I:
        :type I: int
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_ElementIsValid(self, *args)


    def AddElement(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_AddElement(self, *args)


    def SetValid(self, *args):
        """
        :param BI:
        :type BI: TopOpeBRepBuild_BlockIterator &
        :param isvalid:
        :type isvalid: bool
        :rtype: None

        :param I:
        :type I: int
        :param isvalid:
        :type isvalid: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_SetValid(self, *args)


    def CurrentBlockIsRegular(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_CurrentBlockIsRegular(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_BlockBuilder.MakeBlock = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_MakeBlock, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.InitBlock = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_InitBlock, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.MoreBlock = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_MoreBlock, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.NextBlock = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_NextBlock, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.BlockIterator = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_BlockIterator, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.Element = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_Element, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.ElementIsValid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_ElementIsValid, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.AddElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_AddElement, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.SetValid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_SetValid, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder.CurrentBlockIsRegular = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_CurrentBlockIsRegular, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder__kill_pointed, None, TopOpeBRepBuild_BlockBuilder)
TopOpeBRepBuild_BlockBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_swigregister
TopOpeBRepBuild_BlockBuilder_swigregister(TopOpeBRepBuild_BlockBuilder)

class TopOpeBRepBuild_BlockIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param Lower:
        :type Lower: int
        :param Upper:
        :type Upper: int
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_BlockIterator(*args))

    def Initialize(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Initialize(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Next(self, *args)


    def Value(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Value(self, *args)


    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Extent(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_BlockIterator.Initialize = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Initialize, None, TopOpeBRepBuild_BlockIterator)
TopOpeBRepBuild_BlockIterator.More = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_More, None, TopOpeBRepBuild_BlockIterator)
TopOpeBRepBuild_BlockIterator.Next = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Next, None, TopOpeBRepBuild_BlockIterator)
TopOpeBRepBuild_BlockIterator.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Value, None, TopOpeBRepBuild_BlockIterator)
TopOpeBRepBuild_BlockIterator.Extent = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Extent, None, TopOpeBRepBuild_BlockIterator)
TopOpeBRepBuild_BlockIterator._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator__kill_pointed, None, TopOpeBRepBuild_BlockIterator)
TopOpeBRepBuild_BlockIterator_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_swigregister
TopOpeBRepBuild_BlockIterator_swigregister(TopOpeBRepBuild_BlockIterator)

class TopOpeBRepBuild_BuilderON(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param PB:
        :type PB: TopOpeBRepBuild_PBuilder &
        :param F:
        :type F: TopoDS_Shape &
        :param PG:
        :type PG: TopOpeBRepBuild_PGTopo &
        :param PLSclass:
        :type PLSclass: TopOpeBRepTool_Plos &
        :param PWES:
        :type PWES: TopOpeBRepBuild_PWireEdgeSet &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_BuilderON(*args))

    def Perform(self, *args):
        """
        :param PB:
        :type PB: TopOpeBRepBuild_PBuilder &
        :param F:
        :type F: TopoDS_Shape &
        :param PG:
        :type PG: TopOpeBRepBuild_PGTopo &
        :param PLSclass:
        :type PLSclass: TopOpeBRepTool_Plos &
        :param PWES:
        :type PWES: TopOpeBRepBuild_PWireEdgeSet &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_Perform(self, *args)


    def GFillONCheckI(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONCheckI(self, *args)


    def GFillONPartsWES1(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONPartsWES1(self, *args)


    def GFillONPartsWES2(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param EspON:
        :type EspON: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONPartsWES2(self, *args)


    def Perform2d(self, *args):
        """
        :param PB:
        :type PB: TopOpeBRepBuild_PBuilder &
        :param F:
        :type F: TopoDS_Shape &
        :param PG:
        :type PG: TopOpeBRepBuild_PGTopo &
        :param PLSclass:
        :type PLSclass: TopOpeBRepTool_Plos &
        :param PWES:
        :type PWES: TopOpeBRepBuild_PWireEdgeSet &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_Perform2d(self, *args)


    def GFillONParts2dWES2(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepDS_Interference &
        :param EspON:
        :type EspON: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONParts2dWES2(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_BuilderON.Perform = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_Perform, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON.GFillONCheckI = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONCheckI, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON.GFillONPartsWES1 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONPartsWES1, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON.GFillONPartsWES2 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONPartsWES2, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON.Perform2d = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_Perform2d, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON.GFillONParts2dWES2 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONParts2dWES2, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON__kill_pointed, None, TopOpeBRepBuild_BuilderON)
TopOpeBRepBuild_BuilderON_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_swigregister
TopOpeBRepBuild_BuilderON_swigregister(TopOpeBRepBuild_BuilderON)

class TopOpeBRepBuild_CorrectFace2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aFace:
        :type aFace: TopoDS_Face &
        :param anAvoidMap:
        :type anAvoidMap: TopTools_IndexedMapOfOrientedShape &
        :param aMap:
        :type aMap: TopTools_IndexedDataMapOfShapeShape &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_CorrectFace2d(*args))

    def Face(self, *args):
        """
        :rtype: TopoDS_Face

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_Face(self, *args)


    def Perform(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_IsDone(self, *args)


    def ErrorStatus(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_ErrorStatus(self, *args)


    def CorrectedFace(self, *args):
        """
        :rtype: TopoDS_Face

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_CorrectedFace(self, *args)


    def SetMapOfTrans2dInfo(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_IndexedDataMapOfShapeShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_SetMapOfTrans2dInfo(self, *args)


    def MapOfTrans2dInfo(self, *args):
        """
        :rtype: TopTools_IndexedDataMapOfShapeShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_MapOfTrans2dInfo(self, *args)


    def GetP2dFL(*args):
        """
        :param aFace:
        :type aFace: TopoDS_Face &
        :param anEdge:
        :type anEdge: TopoDS_Edge &
        :param P2dF:
        :type P2dF: gp_Pnt2d
        :param P2dL:
        :type P2dL: gp_Pnt2d
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_GetP2dFL(*args)

    GetP2dFL = staticmethod(GetP2dFL)

    def CheckList(*args):
        """
        :param aFace:
        :type aFace: TopoDS_Face &
        :param aHeadList:
        :type aHeadList: TopTools_ListOfShape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_CheckList(*args)

    CheckList = staticmethod(CheckList)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_CorrectFace2d.Face = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_Face, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d.Perform = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_Perform, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d.IsDone = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_IsDone, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d.ErrorStatus = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_ErrorStatus, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d.CorrectedFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_CorrectedFace, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d.SetMapOfTrans2dInfo = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_SetMapOfTrans2dInfo, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d.MapOfTrans2dInfo = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_MapOfTrans2dInfo, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d__kill_pointed, None, TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_swigregister
TopOpeBRepBuild_CorrectFace2d_swigregister(TopOpeBRepBuild_CorrectFace2d)

def TopOpeBRepBuild_CorrectFace2d_GetP2dFL(*args):
    """
    :param aFace:
    :type aFace: TopoDS_Face &
    :param anEdge:
    :type anEdge: TopoDS_Edge &
    :param P2dF:
    :type P2dF: gp_Pnt2d
    :param P2dL:
    :type P2dL: gp_Pnt2d
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_GetP2dFL(*args)

def TopOpeBRepBuild_CorrectFace2d_CheckList(*args):
    """
    :param aFace:
    :type aFace: TopoDS_Face &
    :param aHeadList:
    :type aHeadList: TopTools_ListOfShape &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_CheckList(*args)

class TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param aMap:
        :type aMap: TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape(*args))

    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape_Initialize(self, *args)


    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepBuild_ListOfShapeListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape.Initialize = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape_Initialize, None, TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape.Key = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape_Key, None, TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape_Value, None, TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape__kill_pointed, None, TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape_swigregister
TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape_swigregister(TopOpeBRepBuild_DataMapIteratorOfDataMapOfShapeListOfShapeListOfShape)

class TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopOpeBRepBuild_ListOfShapeListOfShape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape(*args))

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_Key(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepBuild_ListOfShapeListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape self) -> Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape.Key = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_Key, None, TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_Value, None, TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape__kill_pointed, None, TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape.GetHandle = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_GetHandle, None, TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_swigregister
TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_swigregister(TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape)

class Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape(*args))
    DownCast = staticmethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape.Nullify = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_Nullify, None, Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape)
Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape.IsNull = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_IsNull, None, Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape)
Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape.GetObject = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_GetObject, None, Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape)
Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape._kill_pointed = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape__kill_pointed, None, Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape)
Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_swigregister = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_swigregister
Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_swigregister(Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape)

def Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_DownCast(AnObject):
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_DownCast(AnObject)
Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_DataMapNodeOfDataMapOfShapeListOfShapeListOfShape_DownCast

class TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape &
        :rtype: TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape &
        :rtype: TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Clear(self, *args)


    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopOpeBRepBuild_ListOfShapeListOfShape &
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Bind(self, *args)


    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_IsBound(self, *args)


    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_UnBind(self, *args)


    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopOpeBRepBuild_ListOfShapeListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Find(self, *args)


    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopOpeBRepBuild_ListOfShapeListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_ChangeFind(self, *args)


    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Find1(self, *args)


    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_ChangeFind1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Assign = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Assign, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Set, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.ReSize = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_ReSize, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Clear, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Bind = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Bind, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.IsBound = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_IsBound, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.UnBind = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_UnBind, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Find = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Find, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.ChangeFind = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_ChangeFind, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.Find1 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Find1, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape.ChangeFind1 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_ChangeFind1, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape__kill_pointed, None, TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_swigregister
TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_swigregister(TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)

class TopOpeBRepBuild_FaceBuilder(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Create a FaceBuilder to build the faces on the shapes (wires, blocks of edge) described by <LS>.

        :param ES:
        :type ES: TopOpeBRepBuild_WireEdgeSet &
        :param F:
        :type F: TopoDS_Shape &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_FaceBuilder(*args))

    def InitFaceBuilder(self, *args):
        """
        :param ES:
        :type ES: TopOpeBRepBuild_WireEdgeSet &
        :param F:
        :type F: TopoDS_Shape &
        :param ForceClass:
        :type ForceClass: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitFaceBuilder(self, *args)


    def DetectUnclosedWire(self, *args):
        """
        * Removes are non 3d-closed wires. Fills up maps <mapVVsameG> and <mapVon1Edge>, in order to correct 3d-closed but unclosed (topologic connexity) wires. modifies myBlockBuilder

        :param mapVVsameG:
        :type mapVVsameG: TopTools_IndexedDataMapOfShapeShape &
        :param mapVon1Edge:
        :type mapVon1Edge: TopTools_IndexedDataMapOfShapeShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_DetectUnclosedWire(self, *args)


    def CorrectGclosedWire(self, *args):
        """
        * Using the given maps, change the topology of the 3d-closed wires, in order to get closed wires.

        :param mapVVref:
        :type mapVVref: TopTools_IndexedDataMapOfShapeShape &
        :param mapVon1Edge:
        :type mapVon1Edge: TopTools_IndexedDataMapOfShapeShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_CorrectGclosedWire(self, *args)


    def DetectPseudoInternalEdge(self, *args):
        """
        * Removes edges appearing twice (FORWARD,REVERSED) with a bounding vertex not connected to any other edge. mapE contains edges found. modifies myBlockBuilder.

        :param mapE:
        :type mapE: TopTools_IndexedMapOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_DetectPseudoInternalEdge(self, *args)


    def Face(self, *args):
        """
        * return myFace

        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_Face(self, *args)


    def InitFace(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitFace(self, *args)


    def MoreFace(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreFace(self, *args)


    def NextFace(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextFace(self, *args)


    def InitWire(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitWire(self, *args)


    def MoreWire(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreWire(self, *args)


    def NextWire(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextWire(self, *args)


    def IsOldWire(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_IsOldWire(self, *args)


    def OldWire(self, *args):
        """
        * Returns current wire This wire may be : * an old wire OldWire(), which has not been reconstructed; * a new wire made of edges described by ...NewEdge() methods.

        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_OldWire(self, *args)


    def FindNextValidElement(self, *args):
        """
        * Iterates on myBlockIterator until finding a valid element

        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_FindNextValidElement(self, *args)


    def InitEdge(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitEdge(self, *args)


    def MoreEdge(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreEdge(self, *args)


    def NextEdge(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextEdge(self, *args)


    def Edge(self, *args):
        """
        * Returns current new edge of current new wire.

        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_Edge(self, *args)


    def EdgeConnexity(self, *args):
        """
        :param E:
        :type E: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_EdgeConnexity(self, *args)


    def AddEdgeWire(self, *args):
        """
        :param E:
        :type E: TopoDS_Shape &
        :param W:
        :type W: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_AddEdgeWire(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_FaceBuilder.InitFaceBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitFaceBuilder, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.DetectUnclosedWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_DetectUnclosedWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.CorrectGclosedWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_CorrectGclosedWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.DetectPseudoInternalEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_DetectPseudoInternalEdge, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.Face = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_Face, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.InitFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitFace, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.MoreFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreFace, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.NextFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextFace, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.InitWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.MoreWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.NextWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.IsOldWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_IsOldWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.OldWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_OldWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.FindNextValidElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_FindNextValidElement, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.InitEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitEdge, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.MoreEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreEdge, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.NextEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextEdge, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.Edge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_Edge, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.EdgeConnexity = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_EdgeConnexity, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder.AddEdgeWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_AddEdgeWire, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder__kill_pointed, None, TopOpeBRepBuild_FaceBuilder)
TopOpeBRepBuild_FaceBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_swigregister
TopOpeBRepBuild_FaceBuilder_swigregister(TopOpeBRepBuild_FaceBuilder)

class TopOpeBRepBuild_FuseFace(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param LIF:
        :type LIF: TopTools_ListOfShape &
        :param LRF:
        :type LRF: TopTools_ListOfShape &
        :param CXM:
        :type CXM: int
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_FuseFace(*args))

    def Init(self, *args):
        """
        :param LIF:
        :type LIF: TopTools_ListOfShape &
        :param LRF:
        :type LRF: TopTools_ListOfShape &
        :param CXM:
        :type CXM: int
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_Init(self, *args)


    def PerformFace(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_PerformFace(self, *args)


    def PerformEdge(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_PerformEdge(self, *args)


    def ClearEdge(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_ClearEdge(self, *args)


    def ClearVertex(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_ClearVertex(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_IsDone(self, *args)


    def IsModified(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_IsModified(self, *args)


    def LFuseFace(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LFuseFace(self, *args)


    def LInternEdge(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LInternEdge(self, *args)


    def LExternEdge(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LExternEdge(self, *args)


    def LModifEdge(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LModifEdge(self, *args)


    def LInternVertex(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LInternVertex(self, *args)


    def LExternVertex(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LExternVertex(self, *args)


    def LModifVertex(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LModifVertex(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_FuseFace.Init = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_Init, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.PerformFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_PerformFace, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.PerformEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_PerformEdge, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.ClearEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_ClearEdge, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.ClearVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_ClearVertex, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.IsDone = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_IsDone, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.IsModified = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_IsModified, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LFuseFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LFuseFace, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LInternEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LInternEdge, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LExternEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LExternEdge, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LModifEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LModifEdge, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LInternVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LInternVertex, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LExternVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LExternVertex, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace.LModifVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LModifVertex, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace__kill_pointed, None, TopOpeBRepBuild_FuseFace)
TopOpeBRepBuild_FuseFace_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_swigregister
TopOpeBRepBuild_FuseFace_swigregister(TopOpeBRepBuild_FuseFace)

class TopOpeBRepBuild_GIter(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_GIter_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_GIter(*args))

    def Init(self, *args):
        """
        :rtype: None

        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GIter_Init(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GIter_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GIter_Next(self, *args)


    def Current(self, *args):
        """
        :param s1:
        :type s1: TopAbs_State &
        :param s2:
        :type s2: TopAbs_State &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GIter_Current(self, *args)


    def DumpToString(self):
        """DumpToString(TopOpeBRepBuild_GIter self) -> std::string"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GIter_DumpToString(self)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_GIter self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GIter__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_GIter.Init = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_Init, None, TopOpeBRepBuild_GIter)
TopOpeBRepBuild_GIter.More = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_More, None, TopOpeBRepBuild_GIter)
TopOpeBRepBuild_GIter.Next = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_Next, None, TopOpeBRepBuild_GIter)
TopOpeBRepBuild_GIter.Current = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_Current, None, TopOpeBRepBuild_GIter)
TopOpeBRepBuild_GIter.DumpToString = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_DumpToString, None, TopOpeBRepBuild_GIter)
TopOpeBRepBuild_GIter._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GIter__kill_pointed, None, TopOpeBRepBuild_GIter)
TopOpeBRepBuild_GIter_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_GIter_swigregister
TopOpeBRepBuild_GIter_swigregister(TopOpeBRepBuild_GIter)

class TopOpeBRepBuild_GTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def GFusUnsh(*args):
        """
        :param s1:
        :type s1: TopAbs_ShapeEnum
        :param s2:
        :type s2: TopAbs_ShapeEnum
        :rtype: TopOpeBRepBuild_GTopo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusUnsh(*args)

    GFusUnsh = staticmethod(GFusUnsh)

    def GFusSame(*args):
        """
        :param s1:
        :type s1: TopAbs_ShapeEnum
        :param s2:
        :type s2: TopAbs_ShapeEnum
        :rtype: TopOpeBRepBuild_GTopo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusSame(*args)

    GFusSame = staticmethod(GFusSame)

    def GFusDiff(*args):
        """
        :param s1:
        :type s1: TopAbs_ShapeEnum
        :param s2:
        :type s2: TopAbs_ShapeEnum
        :rtype: TopOpeBRepBuild_GTopo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusDiff(*args)

    GFusDiff = staticmethod(GFusDiff)

    def GCutUnsh(*args):
        """
        :param s1:
        :type s1: TopAbs_ShapeEnum
        :param s2:
        :type s2: TopAbs_ShapeEnum
        :rtype: TopOpeBRepBuild_GTopo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutUnsh(*args)

    GCutUnsh = staticmethod(GCutUnsh)

    def GCutSame(*args):
        """
        :param s1:
        :type s1: TopAbs_ShapeEnum
        :param s2:
        :type s2: TopAbs_ShapeEnum
        :rtype: TopOpeBRepBuild_GTopo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutSame(*args)

    GCutSame = staticmethod(GCutSame)

    def GCutDiff(*args):
        """
        :param s1:
        :type s1: TopAbs_ShapeEnum
        :param s2:
        :type s2: TopAbs_ShapeEnum
        :rtype: TopOpeBRepBuild_GTopo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutDiff(*args)

    GCutDiff = staticmethod(GCutDiff)

    def GComUnsh(*args):
        """
        :param s1:
        :type s1: TopAbs_ShapeEnum
        :param s2:
        :type s2: TopAbs_ShapeEnum
        :rtype: TopOpeBRepBuild_GTopo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComUnsh(*args)

    GComUnsh = staticmethod(GComUnsh)

    def GComSame(*args):
        """
        :param s1:
        :type s1: TopAbs_ShapeEnum
        :param s2:
        :type s2: TopAbs_ShapeEnum
        :rtype: TopOpeBRepBuild_GTopo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComSame(*args)

    GComSame = staticmethod(GComSame)

    def GComDiff(*args):
        """
        :param s1:
        :type s1: TopAbs_ShapeEnum
        :param s2:
        :type s2: TopAbs_ShapeEnum
        :rtype: TopOpeBRepBuild_GTopo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComDiff(*args)

    GComDiff = staticmethod(GComDiff)

    def DumpToString(self):
        """DumpToString(TopOpeBRepBuild_GTool self) -> std::string"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_DumpToString(self)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_GTool self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTool__kill_pointed(self)


    def __init__(self):
        """__init__(TopOpeBRepBuild_GTool self) -> TopOpeBRepBuild_GTool"""
        _TopOpeBRepBuild.TopOpeBRepBuild_GTool_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_GTool())

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_GTool.DumpToString = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTool_DumpToString, None, TopOpeBRepBuild_GTool)
TopOpeBRepBuild_GTool._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTool__kill_pointed, None, TopOpeBRepBuild_GTool)
TopOpeBRepBuild_GTool_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_GTool_swigregister
TopOpeBRepBuild_GTool_swigregister(TopOpeBRepBuild_GTool)

def TopOpeBRepBuild_GTool_GFusUnsh(*args):
    """
    :param s1:
    :type s1: TopAbs_ShapeEnum
    :param s2:
    :type s2: TopAbs_ShapeEnum
    :rtype: TopOpeBRepBuild_GTopo

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusUnsh(*args)

def TopOpeBRepBuild_GTool_GFusSame(*args):
    """
    :param s1:
    :type s1: TopAbs_ShapeEnum
    :param s2:
    :type s2: TopAbs_ShapeEnum
    :rtype: TopOpeBRepBuild_GTopo

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusSame(*args)

def TopOpeBRepBuild_GTool_GFusDiff(*args):
    """
    :param s1:
    :type s1: TopAbs_ShapeEnum
    :param s2:
    :type s2: TopAbs_ShapeEnum
    :rtype: TopOpeBRepBuild_GTopo

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusDiff(*args)

def TopOpeBRepBuild_GTool_GCutUnsh(*args):
    """
    :param s1:
    :type s1: TopAbs_ShapeEnum
    :param s2:
    :type s2: TopAbs_ShapeEnum
    :rtype: TopOpeBRepBuild_GTopo

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutUnsh(*args)

def TopOpeBRepBuild_GTool_GCutSame(*args):
    """
    :param s1:
    :type s1: TopAbs_ShapeEnum
    :param s2:
    :type s2: TopAbs_ShapeEnum
    :rtype: TopOpeBRepBuild_GTopo

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutSame(*args)

def TopOpeBRepBuild_GTool_GCutDiff(*args):
    """
    :param s1:
    :type s1: TopAbs_ShapeEnum
    :param s2:
    :type s2: TopAbs_ShapeEnum
    :rtype: TopOpeBRepBuild_GTopo

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutDiff(*args)

def TopOpeBRepBuild_GTool_GComUnsh(*args):
    """
    :param s1:
    :type s1: TopAbs_ShapeEnum
    :param s2:
    :type s2: TopAbs_ShapeEnum
    :rtype: TopOpeBRepBuild_GTopo

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComUnsh(*args)

def TopOpeBRepBuild_GTool_GComSame(*args):
    """
    :param s1:
    :type s1: TopAbs_ShapeEnum
    :param s2:
    :type s2: TopAbs_ShapeEnum
    :rtype: TopOpeBRepBuild_GTopo

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComSame(*args)

def TopOpeBRepBuild_GTool_GComDiff(*args):
    """
    :param s1:
    :type s1: TopAbs_ShapeEnum
    :param s2:
    :type s2: TopAbs_ShapeEnum
    :rtype: TopOpeBRepBuild_GTopo

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComDiff(*args)

class TopOpeBRepBuild_GTopo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param II:
        :type II: int
        :param IN:
        :type IN: int
        :param IO:
        :type IO: int
        :param NI:
        :type NI: int
        :param NN:
        :type NN: int
        :param NO:
        :type NO: int
        :param OI:
        :type OI: int
        :param ON:
        :type ON: int
        :param OO:
        :type OO: int
        :param t1:
        :type t1: TopAbs_ShapeEnum
        :param t2:
        :type t2: TopAbs_ShapeEnum
        :param C1:
        :type C1: TopOpeBRepDS_Config
        :param C2:
        :type C2: TopOpeBRepDS_Config
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_GTopo(*args))

    def Reset(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Reset(self, *args)


    def Set(self, *args):
        """
        :param II:
        :type II: bool
        :param IN:
        :type IN: bool
        :param IO:
        :type IO: bool
        :param NI:
        :type NI: bool
        :param NN:
        :type NN: bool
        :param NO:
        :type NO: bool
        :param OI:
        :type OI: bool
        :param ON:
        :type ON: bool
        :param OO:
        :type OO: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Set(self, *args)


    def Type(self, *args):
        """
        :param t1:
        :type t1: TopAbs_ShapeEnum &
        :param t2:
        :type t2: TopAbs_ShapeEnum &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Type(self, *args)


    def ChangeType(self, *args):
        """
        :param t1:
        :type t1: TopAbs_ShapeEnum
        :param t2:
        :type t2: TopAbs_ShapeEnum
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeType(self, *args)


    def Config1(self, *args):
        """
        :rtype: TopOpeBRepDS_Config

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Config1(self, *args)


    def Config2(self, *args):
        """
        :rtype: TopOpeBRepDS_Config

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Config2(self, *args)


    def ChangeConfig(self, *args):
        """
        :param C1:
        :type C1: TopOpeBRepDS_Config
        :param C2:
        :type C2: TopOpeBRepDS_Config
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeConfig(self, *args)


    def Value(self, *args):
        """
        :param s1:
        :type s1: TopAbs_State
        :param s2:
        :type s2: TopAbs_State
        :rtype: bool

        :param I1:
        :type I1: int
        :param I2:
        :type I2: int
        :rtype: bool

        :param II:
        :type II: int
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param i1:
        :type i1: int
        :param i2:
        :type i2: int
        :param b:
        :type b: bool
        :rtype: None

        :param s1:
        :type s1: TopAbs_State
        :param s2:
        :type s2: TopAbs_State
        :param b:
        :type b: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeValue(self, *args)


    def GIndex(self, *args):
        """
        :param S:
        :type S: TopAbs_State
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_GIndex(self, *args)


    def GState(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopAbs_State

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_GState(self, *args)


    def Index(self, *args):
        """
        :param II:
        :type II: int
        :param i1:
        :type i1: int &
        :param i2:
        :type i2: int &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Index(self, *args)


    def DumpVal(self, *args):
        """
        :param OS:
        :type OS: Standard_OStream &
        :param s1:
        :type s1: TopAbs_State
        :param s2:
        :type s2: TopAbs_State
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpVal(self, *args)


    def DumpTypeToString(self):
        """DumpTypeToString(TopOpeBRepBuild_GTopo self) -> std::string"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpTypeToString(self)


    def DumpSSB(*args):
        """
        :param OS:
        :type OS: Standard_OStream &
        :param s1:
        :type s1: TopAbs_State
        :param s2:
        :type s2: TopAbs_State
        :param b:
        :type b: bool
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpSSB(*args)

    DumpSSB = staticmethod(DumpSSB)

    def Dump(self, *args):
        """
        :param OS:
        :type OS: Standard_OStream &
        :param s: default value is NULL
        :type s: Standard_Address
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Dump(self, *args)


    def StatesON(self, *args):
        """
        :param s1:
        :type s1: TopAbs_State &
        :param s2:
        :type s2: TopAbs_State &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_StatesON(self, *args)


    def IsToReverse1(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_IsToReverse1(self, *args)


    def IsToReverse2(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_IsToReverse2(self, *args)


    def SetReverse(self, *args):
        """
        :param rev:
        :type rev: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_SetReverse(self, *args)


    def Reverse(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Reverse(self, *args)


    def CopyPermuted(self, *args):
        """
        :rtype: TopOpeBRepBuild_GTopo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_CopyPermuted(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_GTopo self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_GTopo.Reset = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Reset, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Set, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Type = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Type, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.ChangeType = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeType, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Config1 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Config1, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Config2 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Config2, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.ChangeConfig = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeConfig, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Value, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.ChangeValue = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeValue, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.GIndex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_GIndex, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.GState = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_GState, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Index = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Index, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.DumpVal = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpVal, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.DumpTypeToString = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpTypeToString, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Dump = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Dump, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.StatesON = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_StatesON, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.IsToReverse1 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_IsToReverse1, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.IsToReverse2 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_IsToReverse2, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.SetReverse = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_SetReverse, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.Reverse = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Reverse, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo.CopyPermuted = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_CopyPermuted, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo__kill_pointed, None, TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_swigregister
TopOpeBRepBuild_GTopo_swigregister(TopOpeBRepBuild_GTopo)

def TopOpeBRepBuild_GTopo_DumpSSB(*args):
    """
    :param OS:
    :type OS: Standard_OStream &
    :param s1:
    :type s1: TopAbs_State
    :param s2:
    :type s2: TopAbs_State
    :param b:
    :type b: bool
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpSSB(*args)

class TopOpeBRepBuild_HBuilder(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param BT:
        :type BT: TopOpeBRepDS_BuildTool &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_HBuilder(*args))

    def BuildTool(self, *args):
        """
        :rtype: TopOpeBRepDS_BuildTool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_BuildTool(self, *args)


    def Perform(self, *args):
        """
        * Stores the data structure <HDS>, Create shapes from the new geometries described in <HDS>.

        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :rtype: None

        * Same as previous + evaluates if an operation performed on shapes S1,S2 is a particular case.

        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :param S1:
        :type S1: TopoDS_Shape &
        :param S2:
        :type S2: TopoDS_Shape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Perform(self, *args)


    def Clear(self, *args):
        """
        * Removes all split and merge already performed. 	 Does NOT clear the handled DS.

        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Clear(self, *args)


    def DataStructure(self, *args):
        """
        * returns the DS handled by this builder

        :rtype: Handle_TopOpeBRepDS_HDataStructure

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_DataStructure(self, *args)


    def ChangeBuildTool(self, *args):
        """
        :rtype: TopOpeBRepDS_BuildTool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeBuildTool(self, *args)


    def MergeShapes(self, *args):
        """
        * Merges the two shapes <S1> and <S2> keeping the parts of states <TB1>,<TB2> in <S1>,<S2>.

        :param S1:
        :type S1: TopoDS_Shape &
        :param TB1:
        :type TB1: TopAbs_State
        :param S2:
        :type S2: TopoDS_Shape &
        :param TB2:
        :type TB2: TopAbs_State
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeShapes(self, *args)


    def MergeSolids(self, *args):
        """
        * Merges the two solids <S1> and <S2> keeping the parts in each solid of states <TB1> and <TB2>.

        :param S1:
        :type S1: TopoDS_Shape &
        :param TB1:
        :type TB1: TopAbs_State
        :param S2:
        :type S2: TopoDS_Shape &
        :param TB2:
        :type TB2: TopAbs_State
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeSolids(self, *args)


    def MergeSolid(self, *args):
        """
        * Merges the solid <S> keeping the parts of state <TB>.

        :param S:
        :type S: TopoDS_Shape &
        :param TB:
        :type TB: TopAbs_State
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeSolid(self, *args)


    def IsSplit(self, *args):
        """
        * Returns True if the shape <S> has been split.

        :param S:
        :type S: TopoDS_Shape &
        :param ToBuild:
        :type ToBuild: TopAbs_State
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsSplit(self, *args)


    def Splits(self, *args):
        """
        * Returns the split parts <ToBuild> of shape <S>.

        :param S:
        :type S: TopoDS_Shape &
        :param ToBuild:
        :type ToBuild: TopAbs_State
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Splits(self, *args)


    def IsMerged(self, *args):
        """
        * Returns True if the shape <S> has been merged.

        :param S:
        :type S: TopoDS_Shape &
        :param ToBuild:
        :type ToBuild: TopAbs_State
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsMerged(self, *args)


    def Merged(self, *args):
        """
        * Returns the merged parts <ToBuild> of shape <S>.

        :param S:
        :type S: TopoDS_Shape &
        :param ToBuild:
        :type ToBuild: TopAbs_State
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Merged(self, *args)


    def NewVertex(self, *args):
        """
        * Returns the vertex created on point <I>.

        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewVertex(self, *args)


    def NewEdges(self, *args):
        """
        * Returns the edges created on curve <I>.

        :param I:
        :type I: int
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewEdges(self, *args)


    def ChangeNewEdges(self, *args):
        """
        * Returns the edges created on curve <I>.

        :param I:
        :type I: int
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeNewEdges(self, *args)


    def NewFaces(self, *args):
        """
        * Returns the faces created on surface <I>.

        :param I:
        :type I: int
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewFaces(self, *args)


    def Section(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Section(self, *args)


    def InitExtendedSectionDS(self, *args):
        """
        :param k: default value is 3
        :type k: int
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_InitExtendedSectionDS(self, *args)


    def InitSection(self, *args):
        """
        :param k: default value is 3
        :type k: int
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_InitSection(self, *args)


    def MoreSection(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MoreSection(self, *args)


    def NextSection(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NextSection(self, *args)


    def CurrentSection(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_CurrentSection(self, *args)


    def GetDSEdgeFromSectEdge(self, *args):
        """
        :param E:
        :type E: TopoDS_Shape &
        :param rank:
        :type rank: int
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSEdgeFromSectEdge(self, *args)


    def GetDSFaceFromDSEdge(self, *args):
        """
        :param indexEdg:
        :type indexEdg: int
        :param rank:
        :type rank: int
        :rtype: TColStd_ListOfInteger

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSFaceFromDSEdge(self, *args)


    def GetDSCurveFromSectEdge(self, *args):
        """
        :param SectEdge:
        :type SectEdge: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSCurveFromSectEdge(self, *args)


    def GetDSFaceFromDSCurve(self, *args):
        """
        :param indexCur:
        :type indexCur: int
        :param rank:
        :type rank: int
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSFaceFromDSCurve(self, *args)


    def GetDSPointFromNewVertex(self, *args):
        """
        :param NewVert:
        :type NewVert: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSPointFromNewVertex(self, *args)


    def EdgeCurveAncestors(self, *args):
        """
        * search for the couple of face F1,F2 (from arguments of supra Perform(S1,S2,HDS)) method which intersection gives section edge E built on an intersection curve. returns True if F1,F2 have been valued. returns False if E is not a section edge built on intersection curve IC.

        :param E:
        :type E: TopoDS_Shape &
        :param F1:
        :type F1: TopoDS_Shape &
        :param F2:
        :type F2: TopoDS_Shape &
        :param IC:
        :type IC: int &
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_EdgeCurveAncestors(self, *args)


    def EdgeSectionAncestors(self, *args):
        """
        * search for the couple of face F1,F2 (from arguments of supra Perform(S1,S2,HDS)) method which intersection gives section edge E built on at least one edge . returns True if F1,F2 have been valued. returns False if E is not a section edge built on at least one edge of S1 and/or S2. LE1,LE2 are edges of S1,S2 which common part is edge E. LE1 or LE2 may be empty() but not both.

        :param E:
        :type E: TopoDS_Shape &
        :param LF1:
        :type LF1: TopTools_ListOfShape &
        :param LF2:
        :type LF2: TopTools_ListOfShape &
        :param LE1:
        :type LE1: TopTools_ListOfShape &
        :param LE2:
        :type LE2: TopTools_ListOfShape &
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_EdgeSectionAncestors(self, *args)


    def IsKPart(self, *args):
        """
        * Returns 0 is standard operation, != 0 if particular case

        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsKPart(self, *args)


    def MergeKPart(self, *args):
        """
        :param TB1:
        :type TB1: TopAbs_State
        :param TB2:
        :type TB2: TopAbs_State
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeKPart(self, *args)


    def ChangeBuilder(self, *args):
        """
        :rtype: TopOpeBRepBuild_Builder

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeBuilder(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_HBuilder self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepBuild_HBuilder self) -> Handle_TopOpeBRepBuild_HBuilder"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_HBuilder.BuildTool = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_BuildTool, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.Perform = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Perform, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Clear, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.DataStructure = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_DataStructure, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.ChangeBuildTool = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeBuildTool, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.MergeShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeShapes, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.MergeSolids = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeSolids, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.MergeSolid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeSolid, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.IsSplit = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsSplit, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.Splits = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Splits, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.IsMerged = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsMerged, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.Merged = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Merged, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.NewVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewVertex, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.NewEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewEdges, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.ChangeNewEdges = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeNewEdges, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.NewFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewFaces, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.Section = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Section, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.InitExtendedSectionDS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_InitExtendedSectionDS, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.InitSection = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_InitSection, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.MoreSection = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MoreSection, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.NextSection = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NextSection, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.CurrentSection = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_CurrentSection, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.GetDSEdgeFromSectEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSEdgeFromSectEdge, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.GetDSFaceFromDSEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSFaceFromDSEdge, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.GetDSCurveFromSectEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSCurveFromSectEdge, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.GetDSFaceFromDSCurve = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSFaceFromDSCurve, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.GetDSPointFromNewVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSPointFromNewVertex, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.EdgeCurveAncestors = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_EdgeCurveAncestors, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.EdgeSectionAncestors = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_EdgeSectionAncestors, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.IsKPart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsKPart, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.MergeKPart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeKPart, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.ChangeBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeBuilder, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder__kill_pointed, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder.GetHandle = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetHandle, None, TopOpeBRepBuild_HBuilder)
TopOpeBRepBuild_HBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_swigregister
TopOpeBRepBuild_HBuilder_swigregister(TopOpeBRepBuild_HBuilder)

class Handle_TopOpeBRepBuild_HBuilder(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_swiginit(self, _TopOpeBRepBuild.new_Handle_TopOpeBRepBuild_HBuilder(*args))
    DownCast = staticmethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepBuild_HBuilder.Nullify = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_Nullify, None, Handle_TopOpeBRepBuild_HBuilder)
Handle_TopOpeBRepBuild_HBuilder.IsNull = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_IsNull, None, Handle_TopOpeBRepBuild_HBuilder)
Handle_TopOpeBRepBuild_HBuilder.GetObject = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_GetObject, None, Handle_TopOpeBRepBuild_HBuilder)
Handle_TopOpeBRepBuild_HBuilder._kill_pointed = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder__kill_pointed, None, Handle_TopOpeBRepBuild_HBuilder)
Handle_TopOpeBRepBuild_HBuilder_swigregister = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_swigregister
Handle_TopOpeBRepBuild_HBuilder_swigregister(Handle_TopOpeBRepBuild_HBuilder)

def Handle_TopOpeBRepBuild_HBuilder_DownCast(AnObject):
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_DownCast(AnObject)
Handle_TopOpeBRepBuild_HBuilder_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_DownCast

class TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param K1:
        :type K1: TopoDS_Shape &
        :param K2:
        :type K2: int
        :param I:
        :type I: TopOpeBRepBuild_VertexInfo &
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo(*args))

    def Key1(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_Key1(self, *args)


    def GetKey2(self):
        """GetKey2(TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo self) -> Standard_Integer"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_GetKey2(self)


    def SetKey2(self, value):
        """SetKey2(TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo self, Standard_Integer value)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_SetKey2(self, value)


    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_Next2(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepBuild_VertexInfo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo self) -> Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo.Key1 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_Key1, None, TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo.GetKey2 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_GetKey2, None, TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo.SetKey2 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_SetKey2, None, TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo.Next2 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_Next2, None, TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_Value, None, TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo__kill_pointed, None, TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo.GetHandle = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_GetHandle, None, TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_swigregister
TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_swigregister(TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)

class Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_swiginit(self, _TopOpeBRepBuild.new_Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo(*args))
    DownCast = staticmethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo.Nullify = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_Nullify, None, Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)
Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo.IsNull = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_IsNull, None, Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)
Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo.GetObject = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_GetObject, None, Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)
Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo._kill_pointed = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo__kill_pointed, None, Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)
Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_swigregister = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_swigregister
Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_swigregister(Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo)

def Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_DownCast(AnObject):
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_DownCast(AnObject)
Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_IndexedDataMapNodeOfIndexedDataMapOfShapeVertexInfo_DownCast

class TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo &
        :rtype: TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo &
        :rtype: TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Set(self, *args)


    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ReSize(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Clear(self, *args)


    def Add(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopOpeBRepBuild_VertexInfo &
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Add(self, *args)


    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: TopoDS_Shape &
        :param T:
        :type T: TopOpeBRepBuild_VertexInfo &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Substitute(self, *args)


    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_RemoveLast(self, *args)


    def Contains(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Contains(self, *args)


    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindKey(self, *args)


    def FindFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepBuild_VertexInfo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindFromIndex(self, *args)


    def ChangeFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopOpeBRepBuild_VertexInfo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ChangeFromIndex(self, *args)


    def FindIndex(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindIndex(self, *args)


    def FindFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopOpeBRepBuild_VertexInfo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindFromKey(self, *args)


    def ChangeFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopOpeBRepBuild_VertexInfo

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ChangeFromKey(self, *args)


    def FindFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindFromKey1(self, *args)


    def ChangeFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ChangeFromKey1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo__kill_pointed(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Assign = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Assign, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Set, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.ReSize = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ReSize, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Clear, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Add = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Add, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Substitute = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Substitute, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.RemoveLast = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_RemoveLast, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.Contains = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Contains, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.FindKey = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindKey, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.FindFromIndex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindFromIndex, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.ChangeFromIndex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ChangeFromIndex, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.FindIndex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindIndex, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.FindFromKey = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindFromKey, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.ChangeFromKey = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ChangeFromKey, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.FindFromKey1 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindFromKey1, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo.ChangeFromKey1 = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ChangeFromKey1, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo__kill_pointed, None, TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_swigregister
TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_swigregister(TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)

class TopOpeBRepBuild_ListIteratorOfListOfListOfLoop(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param L:
        :type L: TopOpeBRepBuild_ListOfListOfLoop &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListIteratorOfListOfListOfLoop(*args))

    def Initialize(self, *args):
        """
        :param L:
        :type L: TopOpeBRepBuild_ListOfListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_Initialize(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_Next(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepBuild_ListOfLoop

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ListIteratorOfListOfListOfLoop.Initialize = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_Initialize, None, TopOpeBRepBuild_ListIteratorOfListOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfListOfLoop.More = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_More, None, TopOpeBRepBuild_ListIteratorOfListOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfListOfLoop.Next = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_Next, None, TopOpeBRepBuild_ListIteratorOfListOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfListOfLoop.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_Value, None, TopOpeBRepBuild_ListIteratorOfListOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfListOfLoop._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop__kill_pointed, None, TopOpeBRepBuild_ListIteratorOfListOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_swigregister
TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_swigregister(TopOpeBRepBuild_ListIteratorOfListOfListOfLoop)

class TopOpeBRepBuild_ListIteratorOfListOfLoop(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param L:
        :type L: TopOpeBRepBuild_ListOfLoop &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListIteratorOfListOfLoop(*args))

    def Initialize(self, *args):
        """
        :param L:
        :type L: TopOpeBRepBuild_ListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_Initialize(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_Next(self, *args)


    def Value(self, *args):
        """
        :rtype: Handle_TopOpeBRepBuild_Loop

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ListIteratorOfListOfLoop.Initialize = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_Initialize, None, TopOpeBRepBuild_ListIteratorOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfLoop.More = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_More, None, TopOpeBRepBuild_ListIteratorOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfLoop.Next = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_Next, None, TopOpeBRepBuild_ListIteratorOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfLoop.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_Value, None, TopOpeBRepBuild_ListIteratorOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfLoop._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop__kill_pointed, None, TopOpeBRepBuild_ListIteratorOfListOfLoop)
TopOpeBRepBuild_ListIteratorOfListOfLoop_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_swigregister
TopOpeBRepBuild_ListIteratorOfListOfLoop_swigregister(TopOpeBRepBuild_ListIteratorOfListOfLoop)

class TopOpeBRepBuild_ListIteratorOfListOfPave(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param L:
        :type L: TopOpeBRepBuild_ListOfPave &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListIteratorOfListOfPave(*args))

    def Initialize(self, *args):
        """
        :param L:
        :type L: TopOpeBRepBuild_ListOfPave &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_Initialize(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_Next(self, *args)


    def Value(self, *args):
        """
        :rtype: Handle_TopOpeBRepBuild_Pave

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ListIteratorOfListOfPave.Initialize = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_Initialize, None, TopOpeBRepBuild_ListIteratorOfListOfPave)
TopOpeBRepBuild_ListIteratorOfListOfPave.More = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_More, None, TopOpeBRepBuild_ListIteratorOfListOfPave)
TopOpeBRepBuild_ListIteratorOfListOfPave.Next = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_Next, None, TopOpeBRepBuild_ListIteratorOfListOfPave)
TopOpeBRepBuild_ListIteratorOfListOfPave.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_Value, None, TopOpeBRepBuild_ListIteratorOfListOfPave)
TopOpeBRepBuild_ListIteratorOfListOfPave._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave__kill_pointed, None, TopOpeBRepBuild_ListIteratorOfListOfPave)
TopOpeBRepBuild_ListIteratorOfListOfPave_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_swigregister
TopOpeBRepBuild_ListIteratorOfListOfPave_swigregister(TopOpeBRepBuild_ListIteratorOfListOfPave)

class TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param L:
        :type L: TopOpeBRepBuild_ListOfShapeListOfShape &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape(*args))

    def Initialize(self, *args):
        """
        :param L:
        :type L: TopOpeBRepBuild_ListOfShapeListOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_Initialize(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_Next(self, *args)


    def Value(self, *args):
        """
        :rtype: TopOpeBRepBuild_ShapeListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape.Initialize = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_Initialize, None, TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape)
TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape.More = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_More, None, TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape)
TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape.Next = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_Next, None, TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape)
TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_Value, None, TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape)
TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape__kill_pointed, None, TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape)
TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_swigregister
TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_swigregister(TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape)

class TopOpeBRepBuild_ListNodeOfListOfListOfLoop(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: TopOpeBRepBuild_ListOfLoop &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListNodeOfListOfListOfLoop(*args))

    def Value(self, *args):
        """
        :rtype: TopOpeBRepBuild_ListOfLoop

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfListOfLoop_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_ListNodeOfListOfListOfLoop self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfListOfLoop__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepBuild_ListNodeOfListOfListOfLoop self) -> Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfListOfLoop_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ListNodeOfListOfListOfLoop.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfListOfLoop_Value, None, TopOpeBRepBuild_ListNodeOfListOfListOfLoop)
TopOpeBRepBuild_ListNodeOfListOfListOfLoop._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfListOfLoop__kill_pointed, None, TopOpeBRepBuild_ListNodeOfListOfListOfLoop)
TopOpeBRepBuild_ListNodeOfListOfListOfLoop.GetHandle = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfListOfLoop_GetHandle, None, TopOpeBRepBuild_ListNodeOfListOfListOfLoop)
TopOpeBRepBuild_ListNodeOfListOfListOfLoop_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfListOfLoop_swigregister
TopOpeBRepBuild_ListNodeOfListOfListOfLoop_swigregister(TopOpeBRepBuild_ListNodeOfListOfListOfLoop)

class Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop(*args))
    DownCast = staticmethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop.Nullify = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop_Nullify, None, Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop)
Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop.IsNull = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop_IsNull, None, Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop)
Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop.GetObject = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop_GetObject, None, Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop)
Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop._kill_pointed = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop__kill_pointed, None, Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop)
Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop_swigregister = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop_swigregister
Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop_swigregister(Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop)

def Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop_DownCast(AnObject):
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop_DownCast(AnObject)
Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfListOfLoop_DownCast

class TopOpeBRepBuild_ListNodeOfListOfLoop(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepBuild_Loop &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListNodeOfListOfLoop(*args))

    def Value(self, *args):
        """
        :rtype: Handle_TopOpeBRepBuild_Loop

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfLoop_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_ListNodeOfListOfLoop self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfLoop__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepBuild_ListNodeOfListOfLoop self) -> Handle_TopOpeBRepBuild_ListNodeOfListOfLoop"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfLoop_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ListNodeOfListOfLoop.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfLoop_Value, None, TopOpeBRepBuild_ListNodeOfListOfLoop)
TopOpeBRepBuild_ListNodeOfListOfLoop._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfLoop__kill_pointed, None, TopOpeBRepBuild_ListNodeOfListOfLoop)
TopOpeBRepBuild_ListNodeOfListOfLoop.GetHandle = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfLoop_GetHandle, None, TopOpeBRepBuild_ListNodeOfListOfLoop)
TopOpeBRepBuild_ListNodeOfListOfLoop_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfLoop_swigregister
TopOpeBRepBuild_ListNodeOfListOfLoop_swigregister(TopOpeBRepBuild_ListNodeOfListOfLoop)

class Handle_TopOpeBRepBuild_ListNodeOfListOfLoop(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_Handle_TopOpeBRepBuild_ListNodeOfListOfLoop(*args))
    DownCast = staticmethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfLoop_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepBuild_ListNodeOfListOfLoop.Nullify = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfLoop_Nullify, None, Handle_TopOpeBRepBuild_ListNodeOfListOfLoop)
Handle_TopOpeBRepBuild_ListNodeOfListOfLoop.IsNull = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfLoop_IsNull, None, Handle_TopOpeBRepBuild_ListNodeOfListOfLoop)
Handle_TopOpeBRepBuild_ListNodeOfListOfLoop.GetObject = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfLoop_GetObject, None, Handle_TopOpeBRepBuild_ListNodeOfListOfLoop)
Handle_TopOpeBRepBuild_ListNodeOfListOfLoop._kill_pointed = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfLoop__kill_pointed, None, Handle_TopOpeBRepBuild_ListNodeOfListOfLoop)
Handle_TopOpeBRepBuild_ListNodeOfListOfLoop_swigregister = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfLoop_swigregister
Handle_TopOpeBRepBuild_ListNodeOfListOfLoop_swigregister(Handle_TopOpeBRepBuild_ListNodeOfListOfLoop)

def Handle_TopOpeBRepBuild_ListNodeOfListOfLoop_DownCast(AnObject):
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfLoop_DownCast(AnObject)
Handle_TopOpeBRepBuild_ListNodeOfListOfLoop_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfLoop_DownCast

class TopOpeBRepBuild_ListNodeOfListOfPave(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepBuild_Pave &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfPave_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListNodeOfListOfPave(*args))

    def Value(self, *args):
        """
        :rtype: Handle_TopOpeBRepBuild_Pave

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfPave_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_ListNodeOfListOfPave self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfPave__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepBuild_ListNodeOfListOfPave self) -> Handle_TopOpeBRepBuild_ListNodeOfListOfPave"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfPave_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ListNodeOfListOfPave.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfPave_Value, None, TopOpeBRepBuild_ListNodeOfListOfPave)
TopOpeBRepBuild_ListNodeOfListOfPave._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfPave__kill_pointed, None, TopOpeBRepBuild_ListNodeOfListOfPave)
TopOpeBRepBuild_ListNodeOfListOfPave.GetHandle = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfPave_GetHandle, None, TopOpeBRepBuild_ListNodeOfListOfPave)
TopOpeBRepBuild_ListNodeOfListOfPave_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfPave_swigregister
TopOpeBRepBuild_ListNodeOfListOfPave_swigregister(TopOpeBRepBuild_ListNodeOfListOfPave)

class Handle_TopOpeBRepBuild_ListNodeOfListOfPave(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfPave_swiginit(self, _TopOpeBRepBuild.new_Handle_TopOpeBRepBuild_ListNodeOfListOfPave(*args))
    DownCast = staticmethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfPave_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepBuild_ListNodeOfListOfPave.Nullify = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfPave_Nullify, None, Handle_TopOpeBRepBuild_ListNodeOfListOfPave)
Handle_TopOpeBRepBuild_ListNodeOfListOfPave.IsNull = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfPave_IsNull, None, Handle_TopOpeBRepBuild_ListNodeOfListOfPave)
Handle_TopOpeBRepBuild_ListNodeOfListOfPave.GetObject = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfPave_GetObject, None, Handle_TopOpeBRepBuild_ListNodeOfListOfPave)
Handle_TopOpeBRepBuild_ListNodeOfListOfPave._kill_pointed = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfPave__kill_pointed, None, Handle_TopOpeBRepBuild_ListNodeOfListOfPave)
Handle_TopOpeBRepBuild_ListNodeOfListOfPave_swigregister = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfPave_swigregister
Handle_TopOpeBRepBuild_ListNodeOfListOfPave_swigregister(Handle_TopOpeBRepBuild_ListNodeOfListOfPave)

def Handle_TopOpeBRepBuild_ListNodeOfListOfPave_DownCast(AnObject):
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfPave_DownCast(AnObject)
Handle_TopOpeBRepBuild_ListNodeOfListOfPave_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfPave_DownCast

class TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: TopOpeBRepBuild_ShapeListOfShape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape(*args))

    def Value(self, *args):
        """
        :rtype: TopOpeBRepBuild_ShapeListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape self) -> Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape.Value = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_Value, None, TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape)
TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape__kill_pointed, None, TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape)
TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape.GetHandle = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_GetHandle, None, TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape)
TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_swigregister
TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_swigregister(TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape)

class Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape(*args))
    DownCast = staticmethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape.Nullify = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_Nullify, None, Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape)
Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape.IsNull = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_IsNull, None, Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape)
Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape.GetObject = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_GetObject, None, Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape)
Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape._kill_pointed = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape__kill_pointed, None, Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape)
Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_swigregister = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_swigregister
Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_swigregister(Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape)

def Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_DownCast(AnObject):
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_DownCast(AnObject)
Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_ListNodeOfListOfShapeListOfShape_DownCast

class TopOpeBRepBuild_ListOfListOfLoop(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListOfListOfLoop(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepBuild_ListOfListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepBuild_ListOfListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Set(self, *args)


    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Extent(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Clear(self, *args)


    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_IsEmpty(self, *args)


    def Prepend(self, *args):
        """
        :param I:
        :type I: TopOpeBRepBuild_ListOfLoop &
        :rtype: None

        :param I:
        :type I: TopOpeBRepBuild_ListOfLoop &
        :param theIt:
        :type theIt: TopOpeBRepBuild_ListIteratorOfListOfListOfLoop &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Prepend(self, *args)


    def Append(self, *args):
        """
        :param I:
        :type I: TopOpeBRepBuild_ListOfLoop &
        :rtype: None

        :param I:
        :type I: TopOpeBRepBuild_ListOfLoop &
        :param theIt:
        :type theIt: TopOpeBRepBuild_ListIteratorOfListOfListOfLoop &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Append(self, *args)


    def First(self, *args):
        """
        :rtype: TopOpeBRepBuild_ListOfLoop

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_First(self, *args)


    def Last(self, *args):
        """
        :rtype: TopOpeBRepBuild_ListOfLoop

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Last(self, *args)


    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_RemoveFirst(self, *args)


    def Remove(self, *args):
        """
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Remove(self, *args)


    def InsertBefore(self, *args):
        """
        :param I:
        :type I: TopOpeBRepBuild_ListOfLoop &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfListOfLoop &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfListOfLoop &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param I:
        :type I: TopOpeBRepBuild_ListOfLoop &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfListOfLoop &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfListOfLoop &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_InsertAfter(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ListOfListOfLoop.Assign = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Assign, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Set, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Extent = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Extent, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Clear, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.IsEmpty = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_IsEmpty, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Prepend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Prepend, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Append = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Append, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.First = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_First, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Last = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Last, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.RemoveFirst = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_RemoveFirst, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.Remove = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Remove, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.InsertBefore = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_InsertBefore, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop.InsertAfter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_InsertAfter, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop__kill_pointed, None, TopOpeBRepBuild_ListOfListOfLoop)
TopOpeBRepBuild_ListOfListOfLoop_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_swigregister
TopOpeBRepBuild_ListOfListOfLoop_swigregister(TopOpeBRepBuild_ListOfListOfLoop)

class TopOpeBRepBuild_ListOfLoop(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListOfLoop(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepBuild_ListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepBuild_ListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Set(self, *args)


    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Extent(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Clear(self, *args)


    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_IsEmpty(self, *args)


    def Prepend(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepBuild_Loop &
        :rtype: None

        :param I:
        :type I: Handle_TopOpeBRepBuild_Loop &
        :param theIt:
        :type theIt: TopOpeBRepBuild_ListIteratorOfListOfLoop &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Prepend(self, *args)


    def Append(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepBuild_Loop &
        :rtype: None

        :param I:
        :type I: Handle_TopOpeBRepBuild_Loop &
        :param theIt:
        :type theIt: TopOpeBRepBuild_ListIteratorOfListOfLoop &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Append(self, *args)


    def First(self, *args):
        """
        :rtype: Handle_TopOpeBRepBuild_Loop

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Handle_TopOpeBRepBuild_Loop

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Last(self, *args)


    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_RemoveFirst(self, *args)


    def Remove(self, *args):
        """
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Remove(self, *args)


    def InsertBefore(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepBuild_Loop &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfLoop &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfLoop &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepBuild_Loop &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfLoop &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfLoop &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfLoop &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_InsertAfter(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ListOfLoop.Assign = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Assign, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Set, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Extent = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Extent, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Clear, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.IsEmpty = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_IsEmpty, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Prepend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Prepend, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Append = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Append, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.First = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_First, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Last = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Last, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.RemoveFirst = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_RemoveFirst, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.Remove = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Remove, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.InsertBefore = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_InsertBefore, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop.InsertAfter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_InsertAfter, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop__kill_pointed, None, TopOpeBRepBuild_ListOfLoop)
TopOpeBRepBuild_ListOfLoop_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_swigregister
TopOpeBRepBuild_ListOfLoop_swigregister(TopOpeBRepBuild_ListOfLoop)

class TopOpeBRepBuild_ListOfPave(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListOfPave(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepBuild_ListOfPave &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepBuild_ListOfPave &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Set(self, *args)


    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Extent(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Clear(self, *args)


    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_IsEmpty(self, *args)


    def Prepend(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepBuild_Pave &
        :rtype: None

        :param I:
        :type I: Handle_TopOpeBRepBuild_Pave &
        :param theIt:
        :type theIt: TopOpeBRepBuild_ListIteratorOfListOfPave &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfPave &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Prepend(self, *args)


    def Append(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepBuild_Pave &
        :rtype: None

        :param I:
        :type I: Handle_TopOpeBRepBuild_Pave &
        :param theIt:
        :type theIt: TopOpeBRepBuild_ListIteratorOfListOfPave &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfPave &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Append(self, *args)


    def First(self, *args):
        """
        :rtype: Handle_TopOpeBRepBuild_Pave

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Handle_TopOpeBRepBuild_Pave

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Last(self, *args)


    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_RemoveFirst(self, *args)


    def Remove(self, *args):
        """
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfPave &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Remove(self, *args)


    def InsertBefore(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepBuild_Pave &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfPave &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfPave &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfPave &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param I:
        :type I: Handle_TopOpeBRepBuild_Pave &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfPave &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfPave &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfPave &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_InsertAfter(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ListOfPave.Assign = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Assign, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Set, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Extent = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Extent, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Clear, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.IsEmpty = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_IsEmpty, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Prepend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Prepend, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Append = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Append, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.First = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_First, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Last = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Last, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.RemoveFirst = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_RemoveFirst, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.Remove = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Remove, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.InsertBefore = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_InsertBefore, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave.InsertAfter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_InsertAfter, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave__kill_pointed, None, TopOpeBRepBuild_ListOfPave)
TopOpeBRepBuild_ListOfPave_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_swigregister
TopOpeBRepBuild_ListOfPave_swigregister(TopOpeBRepBuild_ListOfPave)

class TopOpeBRepBuild_ListOfShapeListOfShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListOfShapeListOfShape(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepBuild_ListOfShapeListOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TopOpeBRepBuild_ListOfShapeListOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Set(self, *args)


    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Extent(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Clear(self, *args)


    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_IsEmpty(self, *args)


    def Prepend(self, *args):
        """
        :param I:
        :type I: TopOpeBRepBuild_ShapeListOfShape &
        :rtype: None

        :param I:
        :type I: TopOpeBRepBuild_ShapeListOfShape &
        :param theIt:
        :type theIt: TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfShapeListOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Prepend(self, *args)


    def Append(self, *args):
        """
        :param I:
        :type I: TopOpeBRepBuild_ShapeListOfShape &
        :rtype: None

        :param I:
        :type I: TopOpeBRepBuild_ShapeListOfShape &
        :param theIt:
        :type theIt: TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfShapeListOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Append(self, *args)


    def First(self, *args):
        """
        :rtype: TopOpeBRepBuild_ShapeListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_First(self, *args)


    def Last(self, *args):
        """
        :rtype: TopOpeBRepBuild_ShapeListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Last(self, *args)


    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_RemoveFirst(self, *args)


    def Remove(self, *args):
        """
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Remove(self, *args)


    def InsertBefore(self, *args):
        """
        :param I:
        :type I: TopOpeBRepBuild_ShapeListOfShape &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfShapeListOfShape &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param I:
        :type I: TopOpeBRepBuild_ShapeListOfShape &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape &
        :rtype: None

        :param Other:
        :type Other: TopOpeBRepBuild_ListOfShapeListOfShape &
        :param It:
        :type It: TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_InsertAfter(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ListOfShapeListOfShape.Assign = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Assign, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Set = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Set, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Extent = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Extent, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Clear, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.IsEmpty = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_IsEmpty, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Prepend = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Prepend, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Append = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Append, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.First = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_First, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Last = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Last, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.RemoveFirst = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_RemoveFirst, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.Remove = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Remove, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.InsertBefore = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_InsertBefore, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape.InsertAfter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_InsertAfter, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape__kill_pointed, None, TopOpeBRepBuild_ListOfShapeListOfShape)
TopOpeBRepBuild_ListOfShapeListOfShape_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_swigregister
TopOpeBRepBuild_ListOfShapeListOfShape_swigregister(TopOpeBRepBuild_ListOfShapeListOfShape)

class TopOpeBRepBuild_Loop(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :rtype: None

        :param BI:
        :type BI: TopOpeBRepBuild_BlockIterator &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Loop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Loop(*args))

    def IsShape(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Loop_IsShape(self, *args)


    def Shape(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Loop_Shape(self, *args)


    def BlockIterator(self, *args):
        """
        :rtype: TopOpeBRepBuild_BlockIterator

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Loop_BlockIterator(self, *args)


    def Dump(self, *args):
        """
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Loop_Dump(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_Loop self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Loop__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepBuild_Loop self) -> Handle_TopOpeBRepBuild_Loop"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Loop_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_Loop.IsShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_IsShape, None, TopOpeBRepBuild_Loop)
TopOpeBRepBuild_Loop.Shape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_Shape, None, TopOpeBRepBuild_Loop)
TopOpeBRepBuild_Loop.BlockIterator = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_BlockIterator, None, TopOpeBRepBuild_Loop)
TopOpeBRepBuild_Loop.Dump = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_Dump, None, TopOpeBRepBuild_Loop)
TopOpeBRepBuild_Loop._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Loop__kill_pointed, None, TopOpeBRepBuild_Loop)
TopOpeBRepBuild_Loop.GetHandle = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_GetHandle, None, TopOpeBRepBuild_Loop)
TopOpeBRepBuild_Loop_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Loop_swigregister
TopOpeBRepBuild_Loop_swigregister(TopOpeBRepBuild_Loop)

class Handle_TopOpeBRepBuild_Loop(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_swiginit(self, _TopOpeBRepBuild.new_Handle_TopOpeBRepBuild_Loop(*args))
    DownCast = staticmethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepBuild_Loop.Nullify = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_Nullify, None, Handle_TopOpeBRepBuild_Loop)
Handle_TopOpeBRepBuild_Loop.IsNull = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_IsNull, None, Handle_TopOpeBRepBuild_Loop)
Handle_TopOpeBRepBuild_Loop.GetObject = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_GetObject, None, Handle_TopOpeBRepBuild_Loop)
Handle_TopOpeBRepBuild_Loop._kill_pointed = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop__kill_pointed, None, Handle_TopOpeBRepBuild_Loop)
Handle_TopOpeBRepBuild_Loop_swigregister = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_swigregister
Handle_TopOpeBRepBuild_Loop_swigregister(Handle_TopOpeBRepBuild_Loop)

def Handle_TopOpeBRepBuild_Loop_DownCast(AnObject):
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_DownCast(AnObject)
Handle_TopOpeBRepBuild_Loop_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_DownCast

class TopOpeBRepBuild_LoopClassifier(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def Delete(self, *args):
        """
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopClassifier_Delete(self, *args)


    def Compare(self, *args):
        """
        * Returns the state of loop <L1> compared with loop <L2>.

        :param L1:
        :type L1: Handle_TopOpeBRepBuild_Loop &
        :param L2:
        :type L2: Handle_TopOpeBRepBuild_Loop &
        :rtype: TopAbs_State

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopClassifier_Compare(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_LoopClassifier.Delete = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopClassifier_Delete, None, TopOpeBRepBuild_LoopClassifier)
TopOpeBRepBuild_LoopClassifier.Compare = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopClassifier_Compare, None, TopOpeBRepBuild_LoopClassifier)
TopOpeBRepBuild_LoopClassifier._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopClassifier__kill_pointed, None, TopOpeBRepBuild_LoopClassifier)
TopOpeBRepBuild_LoopClassifier_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_LoopClassifier_swigregister
TopOpeBRepBuild_LoopClassifier_swigregister(TopOpeBRepBuild_LoopClassifier)

class TopOpeBRepBuild_LoopSet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_LoopSet(*args))

    def Delete(self, *args):
        """
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_Delete(self, *args)


    def ChangeListOfLoop(self, *args):
        """
        :rtype: TopOpeBRepBuild_ListOfLoop

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_ChangeListOfLoop(self, *args)


    def InitLoop(self, *args):
        """
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_InitLoop(self, *args)


    def MoreLoop(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_MoreLoop(self, *args)


    def NextLoop(self, *args):
        """
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_NextLoop(self, *args)


    def Loop(self, *args):
        """
        :rtype: Handle_TopOpeBRepBuild_Loop

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_Loop(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_LoopSet.Delete = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_Delete, None, TopOpeBRepBuild_LoopSet)
TopOpeBRepBuild_LoopSet.ChangeListOfLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_ChangeListOfLoop, None, TopOpeBRepBuild_LoopSet)
TopOpeBRepBuild_LoopSet.InitLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_InitLoop, None, TopOpeBRepBuild_LoopSet)
TopOpeBRepBuild_LoopSet.MoreLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_MoreLoop, None, TopOpeBRepBuild_LoopSet)
TopOpeBRepBuild_LoopSet.NextLoop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_NextLoop, None, TopOpeBRepBuild_LoopSet)
TopOpeBRepBuild_LoopSet.Loop = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_Loop, None, TopOpeBRepBuild_LoopSet)
TopOpeBRepBuild_LoopSet._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet__kill_pointed, None, TopOpeBRepBuild_LoopSet)
TopOpeBRepBuild_LoopSet_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_swigregister
TopOpeBRepBuild_LoopSet_swigregister(TopOpeBRepBuild_LoopSet)

class TopOpeBRepBuild_ShapeListOfShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param S:
        :type S: TopoDS_Shape &
        :rtype: None

        :param S:
        :type S: TopoDS_Shape &
        :param L:
        :type L: TopTools_ListOfShape &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShapeListOfShape(*args))

    def List(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_List(self, *args)


    def ChangeList(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_ChangeList(self, *args)


    def Shape(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_Shape(self, *args)


    def ChangeShape(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_ChangeShape(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ShapeListOfShape.List = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_List, None, TopOpeBRepBuild_ShapeListOfShape)
TopOpeBRepBuild_ShapeListOfShape.ChangeList = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_ChangeList, None, TopOpeBRepBuild_ShapeListOfShape)
TopOpeBRepBuild_ShapeListOfShape.Shape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_Shape, None, TopOpeBRepBuild_ShapeListOfShape)
TopOpeBRepBuild_ShapeListOfShape.ChangeShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_ChangeShape, None, TopOpeBRepBuild_ShapeListOfShape)
TopOpeBRepBuild_ShapeListOfShape._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape__kill_pointed, None, TopOpeBRepBuild_ShapeListOfShape)
TopOpeBRepBuild_ShapeListOfShape_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_swigregister
TopOpeBRepBuild_ShapeListOfShape_swigregister(TopOpeBRepBuild_ShapeListOfShape)

class TopOpeBRepBuild_ShapeSet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Creates a ShapeSet in order to build shapes connected by <SubShapeType> shapes. <checkshape>:check (or not) the shapes, startelements, elements added.

        :param SubShapeType:
        :type SubShapeType: TopAbs_ShapeEnum
        :param checkshape: default value is Standard_True
        :type checkshape: bool
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShapeSet(*args))

    def Delete(self, *args):
        """
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_Delete(self, *args)


    def AddShape(self, *args):
        """
        * Adds <S> to the list of shapes. (wires or shells).

        :param S:
        :type S: TopoDS_Shape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddShape(self, *args)


    def AddStartElement(self, *args):
        """
        * (S is a face or edge) Add S to the list of starting shapes used for reconstructions. apply AddElement(S).

        :param S:
        :type S: TopoDS_Shape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddStartElement(self, *args)


    def AddElement(self, *args):
        """
        * for each subshape SE of S of type mySubShapeType - Add subshapes of S to the map of subshapes (mySubShapeMap) - Add S to the list of shape incident to subshapes of S.

        :param S:
        :type S: TopoDS_Shape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddElement(self, *args)


    def StartElements(self, *args):
        """
        * return a reference on myStartShapes

        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_StartElements(self, *args)


    def InitShapes(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitShapes(self, *args)


    def MoreShapes(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreShapes(self, *args)


    def NextShape(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextShape(self, *args)


    def Shape(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_Shape(self, *args)


    def InitStartElements(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitStartElements(self, *args)


    def MoreStartElements(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreStartElements(self, *args)


    def NextStartElement(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextStartElement(self, *args)


    def StartElement(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_StartElement(self, *args)


    def InitNeighbours(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitNeighbours(self, *args)


    def MoreNeighbours(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreNeighbours(self, *args)


    def NextNeighbour(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextNeighbour(self, *args)


    def Neighbour(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_Neighbour(self, *args)


    def ChangeStartShapes(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_ChangeStartShapes(self, *args)


    def FindNeighbours(self, *args):
        """
        * Build the list of neighbour shapes of myCurrentShape (neighbour shapes and myCurrentShapes are of type t) Initialize myIncidentShapesIter on neighbour shapes.

        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_FindNeighbours(self, *args)


    def MakeNeighboursList(self, *args):
        """
        :param E:
        :type E: TopoDS_Shape &
        :param V:
        :type V: TopoDS_Shape &
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MakeNeighboursList(self, *args)


    def MaxNumberSubShape(self, *args):
        """
        :param Shape:
        :type Shape: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MaxNumberSubShape(self, *args)


    def CheckShape(self, *args):
        """
        :param checkshape:
        :type checkshape: bool
        :rtype: None

        :rtype: bool

        :param S:
        :type S: TopoDS_Shape &
        :param checkgeom: default value is Standard_False
        :type checkgeom: bool
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_CheckShape(self, *args)


    def DumpName(self, *args):
        """
        :param OS:
        :type OS: Standard_OStream &
        :param str:
        :type str: TCollection_AsciiString &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpName(self, *args)


    def DumpCheck(self, *args):
        """
        :param OS:
        :type OS: Standard_OStream &
        :param str:
        :type str: TCollection_AsciiString &
        :param S:
        :type S: TopoDS_Shape &
        :param chk:
        :type chk: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpCheck(self, *args)


    def DumpSS(self, *args):
        """
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpSS(self, *args)


    def DumpBB(self, *args):
        """
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpBB(self, *args)


    def DEBName(self, *args):
        """
        :param N:
        :type N: TCollection_AsciiString &
        :rtype: None

        :rtype: TCollection_AsciiString

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DEBName(self, *args)


    def DEBNumber(self, *args):
        """
        :param I:
        :type I: int
        :rtype: None

        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DEBNumber(self, *args)


    def SName(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param sb: default value is 
        :type sb: TCollection_AsciiString &
        :param sa: default value is 
        :type sa: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        :param S:
        :type S: TopTools_ListOfShape &
        :param sb: default value is 
        :type sb: TCollection_AsciiString &
        :param sa: default value is 
        :type sa: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_SName(self, *args)


    def SNameori(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param sb: default value is 
        :type sb: TCollection_AsciiString &
        :param sa: default value is 
        :type sa: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        :param S:
        :type S: TopTools_ListOfShape &
        :param sb: default value is 
        :type sb: TCollection_AsciiString &
        :param sa: default value is 
        :type sa: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_SNameori(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ShapeSet.Delete = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_Delete, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.AddShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddShape, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.AddStartElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddStartElement, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.AddElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddElement, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.StartElements = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_StartElements, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.InitShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitShapes, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.MoreShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreShapes, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.NextShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextShape, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.Shape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_Shape, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.InitStartElements = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitStartElements, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.MoreStartElements = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreStartElements, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.NextStartElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextStartElement, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.StartElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_StartElement, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.InitNeighbours = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitNeighbours, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.MoreNeighbours = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreNeighbours, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.NextNeighbour = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextNeighbour, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.Neighbour = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_Neighbour, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.ChangeStartShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_ChangeStartShapes, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.FindNeighbours = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_FindNeighbours, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.MakeNeighboursList = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MakeNeighboursList, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.MaxNumberSubShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MaxNumberSubShape, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.CheckShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_CheckShape, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.DumpName = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpName, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.DumpCheck = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpCheck, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.DumpSS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpSS, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.DumpBB = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpBB, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.DEBName = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DEBName, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.DEBNumber = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DEBNumber, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.SName = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_SName, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet.SNameori = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_SNameori, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet__kill_pointed, None, TopOpeBRepBuild_ShapeSet)
TopOpeBRepBuild_ShapeSet_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_swigregister
TopOpeBRepBuild_ShapeSet_swigregister(TopOpeBRepBuild_ShapeSet)

class TopOpeBRepBuild_ShellToSolid(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShellToSolid(*args))

    def Init(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_Init(self, *args)


    def AddShell(self, *args):
        """
        :param Sh:
        :type Sh: TopoDS_Shell &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_AddShell(self, *args)


    def MakeSolids(self, *args):
        """
        :param So:
        :type So: TopoDS_Solid &
        :param LSo:
        :type LSo: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_MakeSolids(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ShellToSolid.Init = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_Init, None, TopOpeBRepBuild_ShellToSolid)
TopOpeBRepBuild_ShellToSolid.AddShell = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_AddShell, None, TopOpeBRepBuild_ShellToSolid)
TopOpeBRepBuild_ShellToSolid.MakeSolids = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_MakeSolids, None, TopOpeBRepBuild_ShellToSolid)
TopOpeBRepBuild_ShellToSolid._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid__kill_pointed, None, TopOpeBRepBuild_ShellToSolid)
TopOpeBRepBuild_ShellToSolid_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_swigregister
TopOpeBRepBuild_ShellToSolid_swigregister(TopOpeBRepBuild_ShellToSolid)

class TopOpeBRepBuild_SolidBuilder(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Create a SolidBuilder to build the areas on the shapes (shells, blocks of faces) described by <LS>.

        :param FS:
        :type FS: TopOpeBRepBuild_ShellFaceSet &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_SolidBuilder(*args))

    def InitSolidBuilder(self, *args):
        """
        :param FS:
        :type FS: TopOpeBRepBuild_ShellFaceSet &
        :param ForceClass:
        :type ForceClass: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitSolidBuilder(self, *args)


    def InitSolid(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitSolid(self, *args)


    def MoreSolid(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreSolid(self, *args)


    def NextSolid(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextSolid(self, *args)


    def InitShell(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitShell(self, *args)


    def MoreShell(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreShell(self, *args)


    def NextShell(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextShell(self, *args)


    def IsOldShell(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_IsOldShell(self, *args)


    def OldShell(self, *args):
        """
        * Returns current shell This shell may be : * an old shell OldShell(), which has not been reconstructed; * a new shell made of faces described by ...NewFace() methods.

        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_OldShell(self, *args)


    def InitFace(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitFace(self, *args)


    def MoreFace(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreFace(self, *args)


    def NextFace(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextFace(self, *args)


    def Face(self, *args):
        """
        * Returns current new face of current new shell.

        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_Face(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_SolidBuilder.InitSolidBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitSolidBuilder, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.InitSolid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitSolid, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.MoreSolid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreSolid, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.NextSolid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextSolid, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.InitShell = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitShell, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.MoreShell = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreShell, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.NextShell = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextShell, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.IsOldShell = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_IsOldShell, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.OldShell = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_OldShell, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.InitFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitFace, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.MoreFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreFace, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.NextFace = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextFace, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder.Face = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_Face, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder__kill_pointed, None, TopOpeBRepBuild_SolidBuilder)
TopOpeBRepBuild_SolidBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_swigregister
TopOpeBRepBuild_SolidBuilder_swigregister(TopOpeBRepBuild_SolidBuilder)

class TopOpeBRepBuild_Tools(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def DumpMapOfShapeWithState(*args):
        """
        :param iP:
        :type iP: int
        :param aMapOfShapeWithState:
        :type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_DumpMapOfShapeWithState(*args)

    DumpMapOfShapeWithState = staticmethod(DumpMapOfShapeWithState)

    def FindState(*args):
        """
        :param aVertex:
        :type aVertex: TopoDS_Shape &
        :param aState:
        :type aState: TopAbs_State
        :param aShapeEnum:
        :type aShapeEnum: TopAbs_ShapeEnum
        :param aMapVertexEdges:
        :type aMapVertexEdges: TopTools_IndexedDataMapOfShapeListOfShape &
        :param aMapProcessedVertices:
        :type aMapProcessedVertices: TopTools_MapOfShape &
        :param aMapVs:
        :type aMapVs: TopOpeBRepDS_DataMapOfShapeState &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState(*args)

    FindState = staticmethod(FindState)

    def PropagateState(*args):
        """
        :param aSplEdgesState:
        :type aSplEdgesState: TopOpeBRepDS_DataMapOfShapeState &
        :param anEdgesToRestMap:
        :type anEdgesToRestMap: TopTools_IndexedMapOfShape &
        :param aShapeEnum1:
        :type aShapeEnum1: TopAbs_ShapeEnum
        :param aShapeEnum2:
        :type aShapeEnum2: TopAbs_ShapeEnum
        :param aShapeClassifier:
        :type aShapeClassifier: TopOpeBRepTool_ShapeClassifier &
        :param aMapOfShapeWithState:
        :type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState &
        :param anUnkStateShapes:
        :type anUnkStateShapes: TopTools_MapOfShape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_PropagateState(*args)

    PropagateState = staticmethod(PropagateState)

    def FindStateThroughVertex(*args):
        """
        :param aShape:
        :type aShape: TopoDS_Shape &
        :param aShapeClassifier:
        :type aShapeClassifier: TopOpeBRepTool_ShapeClassifier &
        :param aMapOfShapeWithState:
        :type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState &
        :param anAvoidSubshMap:
        :type anAvoidSubshMap: TopTools_MapOfShape &
        :rtype: TopAbs_State

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindStateThroughVertex(*args)

    FindStateThroughVertex = staticmethod(FindStateThroughVertex)

    def PropagateStateForWires(*args):
        """
        :param aFacesToRestMap:
        :type aFacesToRestMap: TopTools_IndexedMapOfShape &
        :param aMapOfShapeWithState:
        :type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_PropagateStateForWires(*args)

    PropagateStateForWires = staticmethod(PropagateStateForWires)

    def SpreadStateToChild(*args):
        """
        :param aShape:
        :type aShape: TopoDS_Shape &
        :param aState:
        :type aState: TopAbs_State
        :param aMapOfShapeWithState:
        :type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_SpreadStateToChild(*args)

    SpreadStateToChild = staticmethod(SpreadStateToChild)

    def FindState1(*args):
        """
        :param anEdge:
        :type anEdge: TopoDS_Shape &
        :param aState:
        :type aState: TopAbs_State
        :param aMapEdgesFaces:
        :type aMapEdgesFaces: TopTools_IndexedDataMapOfShapeListOfShape &
        :param aMapProcessedVertices:
        :type aMapProcessedVertices: TopTools_MapOfShape &
        :param aMapVs:
        :type aMapVs: TopOpeBRepDS_DataMapOfShapeState &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState1(*args)

    FindState1 = staticmethod(FindState1)

    def FindState2(*args):
        """
        :param anEdge:
        :type anEdge: TopoDS_Shape &
        :param aState:
        :type aState: TopAbs_State
        :param aMapEdgesFaces:
        :type aMapEdgesFaces: TopTools_IndexedDataMapOfShapeListOfShape &
        :param aMapProcessedEdges:
        :type aMapProcessedEdges: TopTools_MapOfShape &
        :param aMapVs:
        :type aMapVs: TopOpeBRepDS_DataMapOfShapeState &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState2(*args)

    FindState2 = staticmethod(FindState2)

    def GetAdjacentFace(*args):
        """
        :param aFaceObj:
        :type aFaceObj: TopoDS_Shape &
        :param anEObj:
        :type anEObj: TopoDS_Shape &
        :param anEdgeFaceMap:
        :type anEdgeFaceMap: TopTools_IndexedDataMapOfShapeListOfShape &
        :param anAdjFaceObj:
        :type anAdjFaceObj: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetAdjacentFace(*args)

    GetAdjacentFace = staticmethod(GetAdjacentFace)

    def GetNormalToFaceOnEdge(*args):
        """
        :param aFObj:
        :type aFObj: TopoDS_Face &
        :param anEdgeObj:
        :type anEdgeObj: TopoDS_Edge &
        :param aDirNormal:
        :type aDirNormal: gp_Vec
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetNormalToFaceOnEdge(*args)

    GetNormalToFaceOnEdge = staticmethod(GetNormalToFaceOnEdge)

    def GetNormalInNearestPoint(*args):
        """
        * This function used to compute normal in point which is located near the point with param UV (used for computation of normals where the normal in the point UV equal to zero).

        :param aFace:
        :type aFace: TopoDS_Face &
        :param anEdge:
        :type anEdge: TopoDS_Edge &
        :param aNormal:
        :type aNormal: gp_Vec
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetNormalInNearestPoint(*args)

    GetNormalInNearestPoint = staticmethod(GetNormalInNearestPoint)

    def GetTangentToEdgeEdge(*args):
        """
        :param aFObj:
        :type aFObj: TopoDS_Face &
        :param anEdgeObj:
        :type anEdgeObj: TopoDS_Edge &
        :param aOriEObj:
        :type aOriEObj: TopoDS_Edge &
        :param aTangent:
        :type aTangent: gp_Vec
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetTangentToEdgeEdge(*args)

    GetTangentToEdgeEdge = staticmethod(GetTangentToEdgeEdge)

    def GetTangentToEdge(*args):
        """
        :param anEdgeObj:
        :type anEdgeObj: TopoDS_Edge &
        :param aTangent:
        :type aTangent: gp_Vec
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetTangentToEdge(*args)

    GetTangentToEdge = staticmethod(GetTangentToEdge)

    def UpdatePCurves(*args):
        """
        * Recompute PCurves of the all edges from the wire on the <toFace>

        :param aWire:
        :type aWire: TopoDS_Wire &
        :param fromFace:
        :type fromFace: TopoDS_Face &
        :param toFace:
        :type toFace: TopoDS_Face &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdatePCurves(*args)

    UpdatePCurves = staticmethod(UpdatePCurves)

    def UpdateEdgeOnPeriodicalFace(*args):
        """
        * recompute PCurves of the closing (SIM , with 2 PCurves) edge on the NewFace

        :param aEdgeToUpdate:
        :type aEdgeToUpdate: TopoDS_Edge &
        :param OldFace:
        :type OldFace: TopoDS_Face &
        :param NewFace:
        :type NewFace: TopoDS_Face &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdateEdgeOnPeriodicalFace(*args)

    UpdateEdgeOnPeriodicalFace = staticmethod(UpdateEdgeOnPeriodicalFace)

    def UpdateEdgeOnFace(*args):
        """
        * recompute PCurve of the edge on the NewFace

        :param aEdgeToUpdate:
        :type aEdgeToUpdate: TopoDS_Edge &
        :param OldFace:
        :type OldFace: TopoDS_Face &
        :param NewFace:
        :type NewFace: TopoDS_Face &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdateEdgeOnFace(*args)

    UpdateEdgeOnFace = staticmethod(UpdateEdgeOnFace)

    def IsDegEdgesTheSame(*args):
        """
        :param anE1:
        :type anE1: TopoDS_Shape &
        :param anE2:
        :type anE2: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_IsDegEdgesTheSame(*args)

    IsDegEdgesTheSame = staticmethod(IsDegEdgesTheSame)

    def NormalizeFace(*args):
        """
        * test if <oldFace> does not contain INTERNAL or EXTERNAL edges  and remove such edges in case of its presence. The result is stored in <corrFace>

        :param oldFace:
        :type oldFace: TopoDS_Shape &
        :param corrFace:
        :type corrFace: TopoDS_Shape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_NormalizeFace(*args)

    NormalizeFace = staticmethod(NormalizeFace)

    def CorrectFace2d(*args):
        """
        * test if UV representation of <oldFace> is good (i.e. face is closed in 2d). if face is not closed , this method will try to close such face and will return corrected edges in the <aMapOfCorrect2dEdges>. Parameter <aSourceShapes> used to fix the edge (or wires) which should be correct (Corrector used it as a start shapes). NOTE : Parameter corrFace doesn't mean anything. If you want to use this method , rebuild resulting face after by yourself using corrected edges.

        :param oldFace:
        :type oldFace: TopoDS_Shape &
        :param corrFace:
        :type corrFace: TopoDS_Shape &
        :param aSourceShapes:
        :type aSourceShapes: TopTools_IndexedMapOfOrientedShape &
        :param aMapOfCorrect2dEdges:
        :type aMapOfCorrect2dEdges: TopTools_IndexedDataMapOfShapeShape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectFace2d(*args)

    CorrectFace2d = staticmethod(CorrectFace2d)

    def CorrectTolerances(*args):
        """
        :param aS:
        :type aS: TopoDS_Shape &
        :param aTolMax: default value is 0.0001
        :type aTolMax: float
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectTolerances(*args)

    CorrectTolerances = staticmethod(CorrectTolerances)

    def CorrectCurveOnSurface(*args):
        """
        :param aS:
        :type aS: TopoDS_Shape &
        :param aTolMax: default value is 0.0001
        :type aTolMax: float
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectCurveOnSurface(*args)

    CorrectCurveOnSurface = staticmethod(CorrectCurveOnSurface)

    def CorrectPointOnCurve(*args):
        """
        :param aS:
        :type aS: TopoDS_Shape &
        :param aTolMax: default value is 0.0001
        :type aTolMax: float
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectPointOnCurve(*args)

    CorrectPointOnCurve = staticmethod(CorrectPointOnCurve)

    def CheckFaceClosed2d(*args):
        """
        * Checks if <theFace> has the properly closed in 2D boundary(ies)

        :param theFace:
        :type theFace: TopoDS_Face &
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CheckFaceClosed2d(*args)

    CheckFaceClosed2d = staticmethod(CheckFaceClosed2d)

    def __init__(self):
        _TopOpeBRepBuild.TopOpeBRepBuild_Tools_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Tools())

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_Tools._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Tools__kill_pointed, None, TopOpeBRepBuild_Tools)
TopOpeBRepBuild_Tools_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_swigregister
TopOpeBRepBuild_Tools_swigregister(TopOpeBRepBuild_Tools)

def TopOpeBRepBuild_Tools_DumpMapOfShapeWithState(*args):
    """
    :param iP:
    :type iP: int
    :param aMapOfShapeWithState:
    :type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_DumpMapOfShapeWithState(*args)

def TopOpeBRepBuild_Tools_FindState(*args):
    """
    :param aVertex:
    :type aVertex: TopoDS_Shape &
    :param aState:
    :type aState: TopAbs_State
    :param aShapeEnum:
    :type aShapeEnum: TopAbs_ShapeEnum
    :param aMapVertexEdges:
    :type aMapVertexEdges: TopTools_IndexedDataMapOfShapeListOfShape &
    :param aMapProcessedVertices:
    :type aMapProcessedVertices: TopTools_MapOfShape &
    :param aMapVs:
    :type aMapVs: TopOpeBRepDS_DataMapOfShapeState &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState(*args)

def TopOpeBRepBuild_Tools_PropagateState(*args):
    """
    :param aSplEdgesState:
    :type aSplEdgesState: TopOpeBRepDS_DataMapOfShapeState &
    :param anEdgesToRestMap:
    :type anEdgesToRestMap: TopTools_IndexedMapOfShape &
    :param aShapeEnum1:
    :type aShapeEnum1: TopAbs_ShapeEnum
    :param aShapeEnum2:
    :type aShapeEnum2: TopAbs_ShapeEnum
    :param aShapeClassifier:
    :type aShapeClassifier: TopOpeBRepTool_ShapeClassifier &
    :param aMapOfShapeWithState:
    :type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState &
    :param anUnkStateShapes:
    :type anUnkStateShapes: TopTools_MapOfShape &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_PropagateState(*args)

def TopOpeBRepBuild_Tools_FindStateThroughVertex(*args):
    """
    :param aShape:
    :type aShape: TopoDS_Shape &
    :param aShapeClassifier:
    :type aShapeClassifier: TopOpeBRepTool_ShapeClassifier &
    :param aMapOfShapeWithState:
    :type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState &
    :param anAvoidSubshMap:
    :type anAvoidSubshMap: TopTools_MapOfShape &
    :rtype: TopAbs_State

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindStateThroughVertex(*args)

def TopOpeBRepBuild_Tools_PropagateStateForWires(*args):
    """
    :param aFacesToRestMap:
    :type aFacesToRestMap: TopTools_IndexedMapOfShape &
    :param aMapOfShapeWithState:
    :type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_PropagateStateForWires(*args)

def TopOpeBRepBuild_Tools_SpreadStateToChild(*args):
    """
    :param aShape:
    :type aShape: TopoDS_Shape &
    :param aState:
    :type aState: TopAbs_State
    :param aMapOfShapeWithState:
    :type aMapOfShapeWithState: TopOpeBRepDS_IndexedDataMapOfShapeWithState &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_SpreadStateToChild(*args)

def TopOpeBRepBuild_Tools_FindState1(*args):
    """
    :param anEdge:
    :type anEdge: TopoDS_Shape &
    :param aState:
    :type aState: TopAbs_State
    :param aMapEdgesFaces:
    :type aMapEdgesFaces: TopTools_IndexedDataMapOfShapeListOfShape &
    :param aMapProcessedVertices:
    :type aMapProcessedVertices: TopTools_MapOfShape &
    :param aMapVs:
    :type aMapVs: TopOpeBRepDS_DataMapOfShapeState &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState1(*args)

def TopOpeBRepBuild_Tools_FindState2(*args):
    """
    :param anEdge:
    :type anEdge: TopoDS_Shape &
    :param aState:
    :type aState: TopAbs_State
    :param aMapEdgesFaces:
    :type aMapEdgesFaces: TopTools_IndexedDataMapOfShapeListOfShape &
    :param aMapProcessedEdges:
    :type aMapProcessedEdges: TopTools_MapOfShape &
    :param aMapVs:
    :type aMapVs: TopOpeBRepDS_DataMapOfShapeState &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState2(*args)

def TopOpeBRepBuild_Tools_GetAdjacentFace(*args):
    """
    :param aFaceObj:
    :type aFaceObj: TopoDS_Shape &
    :param anEObj:
    :type anEObj: TopoDS_Shape &
    :param anEdgeFaceMap:
    :type anEdgeFaceMap: TopTools_IndexedDataMapOfShapeListOfShape &
    :param anAdjFaceObj:
    :type anAdjFaceObj: TopoDS_Shape &
    :rtype: bool

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetAdjacentFace(*args)

def TopOpeBRepBuild_Tools_GetNormalToFaceOnEdge(*args):
    """
    :param aFObj:
    :type aFObj: TopoDS_Face &
    :param anEdgeObj:
    :type anEdgeObj: TopoDS_Edge &
    :param aDirNormal:
    :type aDirNormal: gp_Vec
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetNormalToFaceOnEdge(*args)

def TopOpeBRepBuild_Tools_GetNormalInNearestPoint(*args):
    """
    * This function used to compute normal in point which is located near the point with param UV (used for computation of normals where the normal in the point UV equal to zero).

    :param aFace:
    :type aFace: TopoDS_Face &
    :param anEdge:
    :type anEdge: TopoDS_Edge &
    :param aNormal:
    :type aNormal: gp_Vec
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetNormalInNearestPoint(*args)

def TopOpeBRepBuild_Tools_GetTangentToEdgeEdge(*args):
    """
    :param aFObj:
    :type aFObj: TopoDS_Face &
    :param anEdgeObj:
    :type anEdgeObj: TopoDS_Edge &
    :param aOriEObj:
    :type aOriEObj: TopoDS_Edge &
    :param aTangent:
    :type aTangent: gp_Vec
    :rtype: bool

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetTangentToEdgeEdge(*args)

def TopOpeBRepBuild_Tools_GetTangentToEdge(*args):
    """
    :param anEdgeObj:
    :type anEdgeObj: TopoDS_Edge &
    :param aTangent:
    :type aTangent: gp_Vec
    :rtype: bool

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetTangentToEdge(*args)

def TopOpeBRepBuild_Tools_UpdatePCurves(*args):
    """
    * Recompute PCurves of the all edges from the wire on the <toFace>

    :param aWire:
    :type aWire: TopoDS_Wire &
    :param fromFace:
    :type fromFace: TopoDS_Face &
    :param toFace:
    :type toFace: TopoDS_Face &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdatePCurves(*args)

def TopOpeBRepBuild_Tools_UpdateEdgeOnPeriodicalFace(*args):
    """
    * recompute PCurves of the closing (SIM , with 2 PCurves) edge on the NewFace

    :param aEdgeToUpdate:
    :type aEdgeToUpdate: TopoDS_Edge &
    :param OldFace:
    :type OldFace: TopoDS_Face &
    :param NewFace:
    :type NewFace: TopoDS_Face &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdateEdgeOnPeriodicalFace(*args)

def TopOpeBRepBuild_Tools_UpdateEdgeOnFace(*args):
    """
    * recompute PCurve of the edge on the NewFace

    :param aEdgeToUpdate:
    :type aEdgeToUpdate: TopoDS_Edge &
    :param OldFace:
    :type OldFace: TopoDS_Face &
    :param NewFace:
    :type NewFace: TopoDS_Face &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdateEdgeOnFace(*args)

def TopOpeBRepBuild_Tools_IsDegEdgesTheSame(*args):
    """
    :param anE1:
    :type anE1: TopoDS_Shape &
    :param anE2:
    :type anE2: TopoDS_Shape &
    :rtype: bool

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_IsDegEdgesTheSame(*args)

def TopOpeBRepBuild_Tools_NormalizeFace(*args):
    """
    * test if <oldFace> does not contain INTERNAL or EXTERNAL edges  and remove such edges in case of its presence. The result is stored in <corrFace>

    :param oldFace:
    :type oldFace: TopoDS_Shape &
    :param corrFace:
    :type corrFace: TopoDS_Shape &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_NormalizeFace(*args)

def TopOpeBRepBuild_Tools_CorrectFace2d(*args):
    """
    * test if UV representation of <oldFace> is good (i.e. face is closed in 2d). if face is not closed , this method will try to close such face and will return corrected edges in the <aMapOfCorrect2dEdges>. Parameter <aSourceShapes> used to fix the edge (or wires) which should be correct (Corrector used it as a start shapes). NOTE : Parameter corrFace doesn't mean anything. If you want to use this method , rebuild resulting face after by yourself using corrected edges.

    :param oldFace:
    :type oldFace: TopoDS_Shape &
    :param corrFace:
    :type corrFace: TopoDS_Shape &
    :param aSourceShapes:
    :type aSourceShapes: TopTools_IndexedMapOfOrientedShape &
    :param aMapOfCorrect2dEdges:
    :type aMapOfCorrect2dEdges: TopTools_IndexedDataMapOfShapeShape &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectFace2d(*args)

def TopOpeBRepBuild_Tools_CorrectTolerances(*args):
    """
    :param aS:
    :type aS: TopoDS_Shape &
    :param aTolMax: default value is 0.0001
    :type aTolMax: float
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectTolerances(*args)

def TopOpeBRepBuild_Tools_CorrectCurveOnSurface(*args):
    """
    :param aS:
    :type aS: TopoDS_Shape &
    :param aTolMax: default value is 0.0001
    :type aTolMax: float
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectCurveOnSurface(*args)

def TopOpeBRepBuild_Tools_CorrectPointOnCurve(*args):
    """
    :param aS:
    :type aS: TopoDS_Shape &
    :param aTolMax: default value is 0.0001
    :type aTolMax: float
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectPointOnCurve(*args)

def TopOpeBRepBuild_Tools_CheckFaceClosed2d(*args):
    """
    * Checks if <theFace> has the properly closed in 2D boundary(ies)

    :param theFace:
    :type theFace: TopoDS_Face &
    :rtype: bool

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CheckFaceClosed2d(*args)

class TopOpeBRepBuild_Tools2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def MakeMapOfShapeVertexInfo(*args):
        """
        :param aWire:
        :type aWire: TopoDS_Wire &
        :param aMap:
        :type aMap: TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_MakeMapOfShapeVertexInfo(*args)

    MakeMapOfShapeVertexInfo = staticmethod(MakeMapOfShapeVertexInfo)

    def DumpMapOfShapeVertexInfo(*args):
        """
        :param aMap:
        :type aMap: TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_DumpMapOfShapeVertexInfo(*args)

    DumpMapOfShapeVertexInfo = staticmethod(DumpMapOfShapeVertexInfo)

    def Path(*args):
        """
        :param aWire:
        :type aWire: TopoDS_Wire &
        :param aResList:
        :type aResList: TopTools_ListOfShape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_Path(*args)

    Path = staticmethod(Path)

    def __init__(self):
        _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Tools2d())

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_Tools2d._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Tools2d__kill_pointed, None, TopOpeBRepBuild_Tools2d)
TopOpeBRepBuild_Tools2d_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_swigregister
TopOpeBRepBuild_Tools2d_swigregister(TopOpeBRepBuild_Tools2d)

def TopOpeBRepBuild_Tools2d_MakeMapOfShapeVertexInfo(*args):
    """
    :param aWire:
    :type aWire: TopoDS_Wire &
    :param aMap:
    :type aMap: TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_MakeMapOfShapeVertexInfo(*args)

def TopOpeBRepBuild_Tools2d_DumpMapOfShapeVertexInfo(*args):
    """
    :param aMap:
    :type aMap: TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_DumpMapOfShapeVertexInfo(*args)

def TopOpeBRepBuild_Tools2d_Path(*args):
    """
    :param aWire:
    :type aWire: TopoDS_Wire &
    :param aResList:
    :type aResList: TopTools_ListOfShape &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_Path(*args)

class TopOpeBRepBuild_VertexInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_VertexInfo(*args))

    def SetVertex(self, *args):
        """
        :param aV:
        :type aV: TopoDS_Vertex &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetVertex(self, *args)


    def Vertex(self, *args):
        """
        :rtype: TopoDS_Vertex

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Vertex(self, *args)


    def SetSmart(self, *args):
        """
        :param aFlag:
        :type aFlag: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetSmart(self, *args)


    def Smart(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Smart(self, *args)


    def NbCases(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_NbCases(self, *args)


    def FoundOut(self, *args):
        """
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_FoundOut(self, *args)


    def AddIn(self, *args):
        """
        :param anE:
        :type anE: TopoDS_Edge &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AddIn(self, *args)


    def AddOut(self, *args):
        """
        :param anE:
        :type anE: TopoDS_Edge &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AddOut(self, *args)


    def SetCurrentIn(self, *args):
        """
        :param anE:
        :type anE: TopoDS_Edge &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetCurrentIn(self, *args)


    def EdgesIn(self, *args):
        """
        :rtype: TopTools_IndexedMapOfOrientedShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_EdgesIn(self, *args)


    def EdgesOut(self, *args):
        """
        :rtype: TopTools_IndexedMapOfOrientedShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_EdgesOut(self, *args)


    def ChangeEdgesOut(self, *args):
        """
        :rtype: TopTools_IndexedMapOfOrientedShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_ChangeEdgesOut(self, *args)


    def Dump(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Dump(self, *args)


    def CurrentOut(self, *args):
        """
        :rtype: TopoDS_Edge

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_CurrentOut(self, *args)


    def AppendPassed(self, *args):
        """
        :param anE:
        :type anE: TopoDS_Edge &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AppendPassed(self, *args)


    def RemovePassed(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_RemovePassed(self, *args)


    def ListPassed(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_ListPassed(self, *args)


    def Prepare(self, *args):
        """
        :param aL:
        :type aL: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Prepare(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_VertexInfo.SetVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetVertex, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.Vertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Vertex, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.SetSmart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetSmart, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.Smart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Smart, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.NbCases = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_NbCases, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.FoundOut = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_FoundOut, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.AddIn = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AddIn, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.AddOut = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AddOut, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.SetCurrentIn = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetCurrentIn, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.EdgesIn = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_EdgesIn, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.EdgesOut = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_EdgesOut, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.ChangeEdgesOut = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_ChangeEdgesOut, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.Dump = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Dump, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.CurrentOut = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_CurrentOut, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.AppendPassed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AppendPassed, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.RemovePassed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_RemovePassed, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.ListPassed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_ListPassed, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo.Prepare = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Prepare, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo__kill_pointed, None, TopOpeBRepBuild_VertexInfo)
TopOpeBRepBuild_VertexInfo_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_swigregister
TopOpeBRepBuild_VertexInfo_swigregister(TopOpeBRepBuild_VertexInfo)

class TopOpeBRepBuild_WireToFace(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_WireToFace(*args))

    def Init(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_Init(self, *args)


    def AddWire(self, *args):
        """
        :param W:
        :type W: TopoDS_Wire &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_AddWire(self, *args)


    def MakeFaces(self, *args):
        """
        :param F:
        :type F: TopoDS_Face &
        :param LF:
        :type LF: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_MakeFaces(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_WireToFace.Init = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_Init, None, TopOpeBRepBuild_WireToFace)
TopOpeBRepBuild_WireToFace.AddWire = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_AddWire, None, TopOpeBRepBuild_WireToFace)
TopOpeBRepBuild_WireToFace.MakeFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_MakeFaces, None, TopOpeBRepBuild_WireToFace)
TopOpeBRepBuild_WireToFace._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireToFace__kill_pointed, None, TopOpeBRepBuild_WireToFace)
TopOpeBRepBuild_WireToFace_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_swigregister
TopOpeBRepBuild_WireToFace_swigregister(TopOpeBRepBuild_WireToFace)

class TopOpeBRepBuild_Area1dBuilder(TopOpeBRepBuild_AreaBuilder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Creates a Area1dBuilder to find the areas of the shapes described by <LS> using the classifier <LC>.

        :param LS:
        :type LS: TopOpeBRepBuild_PaveSet &
        :param LC:
        :type LC: TopOpeBRepBuild_PaveClassifier &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Area1dBuilder(*args))

    def DumpList(*args):
        """
        :param L:
        :type L: TopOpeBRepBuild_ListOfLoop &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder_DumpList(*args)

    DumpList = staticmethod(DumpList)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_Area1dBuilder._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder__kill_pointed, None, TopOpeBRepBuild_Area1dBuilder)
TopOpeBRepBuild_Area1dBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder_swigregister
TopOpeBRepBuild_Area1dBuilder_swigregister(TopOpeBRepBuild_Area1dBuilder)

def TopOpeBRepBuild_Area1dBuilder_DumpList(*args):
    """
    :param L:
    :type L: TopOpeBRepBuild_ListOfLoop &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder_DumpList(*args)

class TopOpeBRepBuild_Area2dBuilder(TopOpeBRepBuild_AreaBuilder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Creates a Area2dBuilder to build faces on the (wires,blocks of edge) of <LS>, using the classifier <LC>.

        :param LS:
        :type LS: TopOpeBRepBuild_LoopSet &
        :param LC:
        :type LC: TopOpeBRepBuild_LoopClassifier &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Area2dBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Area2dBuilder(*args))

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_Area2dBuilder._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Area2dBuilder__kill_pointed, None, TopOpeBRepBuild_Area2dBuilder)
TopOpeBRepBuild_Area2dBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Area2dBuilder_swigregister
TopOpeBRepBuild_Area2dBuilder_swigregister(TopOpeBRepBuild_Area2dBuilder)

class TopOpeBRepBuild_Area3dBuilder(TopOpeBRepBuild_AreaBuilder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Creates a Area3dBuilder to build Solids on the (shells,blocks of face) of <LS>, using the classifier <LC>.

        :param LS:
        :type LS: TopOpeBRepBuild_LoopSet &
        :param LC:
        :type LC: TopOpeBRepBuild_LoopClassifier &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Area3dBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Area3dBuilder(*args))

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_Area3dBuilder._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Area3dBuilder__kill_pointed, None, TopOpeBRepBuild_Area3dBuilder)
TopOpeBRepBuild_Area3dBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Area3dBuilder_swigregister
TopOpeBRepBuild_Area3dBuilder_swigregister(TopOpeBRepBuild_Area3dBuilder)

class TopOpeBRepBuild_Builder1(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param BT:
        :type BT: TopOpeBRepDS_BuildTool &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Builder1(*args))

    def Destroy(self, *args):
        """
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_Destroy(self, *args)


    def Clear(self, *args):
        """
        * Removes all splits and merges already performed. Does NOT clear the handled DS (except ShapeWithStatesMaps).

        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_Clear(self, *args)


    def Perform(self, *args):
        """
        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :rtype: void

        :param HDS:
        :type HDS: Handle_TopOpeBRepDS_HDataStructure &
        :param S1:
        :type S1: TopoDS_Shape &
        :param S2:
        :type S2: TopoDS_Shape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_Perform(self, *args)


    def MergeKPart(self, *args):
        """
        :rtype: void

        :param TB1:
        :type TB1: TopAbs_State
        :param TB2:
        :type TB2: TopAbs_State
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_MergeKPart(self, *args)


    def GFillSolidSFS(self, *args):
        """
        :param SO1:
        :type SO1: TopoDS_Shape &
        :param LSO2:
        :type LSO2: TopTools_ListOfShape &
        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :param SFS:
        :type SFS: TopOpeBRepBuild_ShellFaceSet &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillSolidSFS(self, *args)


    def GFillShellSFS(self, *args):
        """
        :param SH1:
        :type SH1: TopoDS_Shape &
        :param LSO2:
        :type LSO2: TopTools_ListOfShape &
        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :param SFS:
        :type SFS: TopOpeBRepBuild_ShellFaceSet &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillShellSFS(self, *args)


    def GWESMakeFaces(self, *args):
        """
        :param FF:
        :type FF: TopoDS_Shape &
        :param WES:
        :type WES: TopOpeBRepBuild_WireEdgeSet &
        :param LOF:
        :type LOF: TopTools_ListOfShape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GWESMakeFaces(self, *args)


    def GFillFaceNotSameDomSFS(self, *args):
        """
        :param F1:
        :type F1: TopoDS_Shape &
        :param LSO2:
        :type LSO2: TopTools_ListOfShape &
        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :param SFS:
        :type SFS: TopOpeBRepBuild_ShellFaceSet &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceNotSameDomSFS(self, *args)


    def GFillFaceNotSameDomWES(self, *args):
        """
        :param F1:
        :type F1: TopoDS_Shape &
        :param LSO2:
        :type LSO2: TopTools_ListOfShape &
        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :param WES:
        :type WES: TopOpeBRepBuild_WireEdgeSet &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceNotSameDomWES(self, *args)


    def GFillWireNotSameDomWES(self, *args):
        """
        :param W1:
        :type W1: TopoDS_Shape &
        :param LSO2:
        :type LSO2: TopTools_ListOfShape &
        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :param WES:
        :type WES: TopOpeBRepBuild_WireEdgeSet &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillWireNotSameDomWES(self, *args)


    def GFillEdgeNotSameDomWES(self, *args):
        """
        :param E1:
        :type E1: TopoDS_Shape &
        :param LSO2:
        :type LSO2: TopTools_ListOfShape &
        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :param WES:
        :type WES: TopOpeBRepBuild_WireEdgeSet &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillEdgeNotSameDomWES(self, *args)


    def GFillFaceSameDomSFS(self, *args):
        """
        :param F1:
        :type F1: TopoDS_Shape &
        :param LSO2:
        :type LSO2: TopTools_ListOfShape &
        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :param SFS:
        :type SFS: TopOpeBRepBuild_ShellFaceSet &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceSameDomSFS(self, *args)


    def GFillFaceSameDomWES(self, *args):
        """
        :param F1:
        :type F1: TopoDS_Shape &
        :param LSO2:
        :type LSO2: TopTools_ListOfShape &
        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :param WES:
        :type WES: TopOpeBRepBuild_WireEdgeSet &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceSameDomWES(self, *args)


    def GFillWireSameDomWES(self, *args):
        """
        :param W1:
        :type W1: TopoDS_Shape &
        :param LSO2:
        :type LSO2: TopTools_ListOfShape &
        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :param WES:
        :type WES: TopOpeBRepBuild_WireEdgeSet &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillWireSameDomWES(self, *args)


    def GFillEdgeSameDomWES(self, *args):
        """
        :param E1:
        :type E1: TopoDS_Shape &
        :param LSO2:
        :type LSO2: TopTools_ListOfShape &
        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :param WES:
        :type WES: TopOpeBRepBuild_WireEdgeSet &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillEdgeSameDomWES(self, *args)


    def PerformONParts(self, *args):
        """
        :param F:
        :type F: TopoDS_Shape &
        :param SDfaces:
        :type SDfaces: TopTools_IndexedMapOfShape &
        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :param WES:
        :type WES: TopOpeBRepBuild_WireEdgeSet &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformONParts(self, *args)


    def PerformPieceIn2D(self, *args):
        """
        :param aPieceToPerform:
        :type aPieceToPerform: TopoDS_Edge &
        :param aOriginalEdge:
        :type aOriginalEdge: TopoDS_Edge &
        :param edgeFace:
        :type edgeFace: TopoDS_Face &
        :param toFace:
        :type toFace: TopoDS_Face &
        :param G:
        :type G: TopOpeBRepBuild_GTopo &
        :param keep:
        :type keep: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformPieceIn2D(self, *args)


    def PerformPieceOn2D(self, *args):
        """
        :param aPieceObj:
        :type aPieceObj: TopoDS_Shape &
        :param aFaceObj:
        :type aFaceObj: TopoDS_Shape &
        :param aEdgeObj:
        :type aEdgeObj: TopoDS_Shape &
        :param aListOfPieces:
        :type aListOfPieces: TopTools_ListOfShape &
        :param aListOfFaces:
        :type aListOfFaces: TopTools_ListOfShape &
        :param aListOfPiecesOut2d:
        :type aListOfPiecesOut2d: TopTools_ListOfShape &
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformPieceOn2D(self, *args)


    def TwoPiecesON(self, *args):
        """
        :param aSeq:
        :type aSeq: TopTools_SequenceOfShape &
        :param aListOfPieces:
        :type aListOfPieces: TopTools_ListOfShape &
        :param aListOfFaces:
        :type aListOfFaces: TopTools_ListOfShape &
        :param aListOfPiecesOut2d:
        :type aListOfPiecesOut2d: TopTools_ListOfShape &
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_TwoPiecesON(self, *args)


    def CorrectResult2d(self, *args):
        """
        :param aResult:
        :type aResult: TopoDS_Shape &
        :rtype: int

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_CorrectResult2d(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_Builder1.Destroy = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_Destroy, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_Clear, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.Perform = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_Perform, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.MergeKPart = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_MergeKPart, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillSolidSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillSolidSFS, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillShellSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillShellSFS, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GWESMakeFaces = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GWESMakeFaces, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillFaceNotSameDomSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceNotSameDomSFS, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillFaceNotSameDomWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceNotSameDomWES, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillWireNotSameDomWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillWireNotSameDomWES, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillEdgeNotSameDomWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillEdgeNotSameDomWES, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillFaceSameDomSFS = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceSameDomSFS, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillFaceSameDomWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceSameDomWES, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillWireSameDomWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillWireSameDomWES, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.GFillEdgeSameDomWES = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillEdgeSameDomWES, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.PerformONParts = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformONParts, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.PerformPieceIn2D = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformPieceIn2D, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.PerformPieceOn2D = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformPieceOn2D, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.TwoPiecesON = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_TwoPiecesON, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1.CorrectResult2d = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_CorrectResult2d, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1__kill_pointed, None, TopOpeBRepBuild_Builder1)
TopOpeBRepBuild_Builder1_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_swigregister
TopOpeBRepBuild_Builder1_swigregister(TopOpeBRepBuild_Builder1)

class TopOpeBRepBuild_CompositeClassifier(TopOpeBRepBuild_LoopClassifier):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def CompareShapes(self, *args):
        """
        * classify shape <B1> with shape <B2>

        :param B1:
        :type B1: TopoDS_Shape &
        :param B2:
        :type B2: TopoDS_Shape &
        :rtype: TopAbs_State

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareShapes(self, *args)


    def CompareElementToShape(self, *args):
        """
        * classify element <E> with shape <B>

        :param E:
        :type E: TopoDS_Shape &
        :param B:
        :type B: TopoDS_Shape &
        :rtype: TopAbs_State

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareElementToShape(self, *args)


    def ResetShape(self, *args):
        """
        * prepare classification involving shape <B> calls ResetElement on first element of <B>

        :param B:
        :type B: TopoDS_Shape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_ResetShape(self, *args)


    def ResetElement(self, *args):
        """
        * prepare classification involving element <E>.

        :param E:
        :type E: TopoDS_Shape &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_ResetElement(self, *args)


    def CompareElement(self, *args):
        """
        * Add element <E> in the set of elements used in classification. Returns False if the element <E> has been already added to the set of elements, otherwise returns True.

        :param E:
        :type E: TopoDS_Shape &
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareElement(self, *args)


    def State(self, *args):
        """
        * Returns state of classification of 2D point, defined by ResetElement, with the current set of elements, defined by Compare.

        :rtype: TopAbs_State

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_State(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_CompositeClassifier.CompareShapes = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareShapes, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier.CompareElementToShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareElementToShape, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier.ResetShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_ResetShape, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier.ResetElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_ResetElement, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier.CompareElement = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareElement, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier.State = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_State, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier__kill_pointed, None, TopOpeBRepBuild_CompositeClassifier)
TopOpeBRepBuild_CompositeClassifier_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_swigregister
TopOpeBRepBuild_CompositeClassifier_swigregister(TopOpeBRepBuild_CompositeClassifier)

class TopOpeBRepBuild_Pave(TopOpeBRepBuild_Loop):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * V = vertex, P = parameter of vertex <V> bound = True if <V> is an old vertex bound = False if <V> is a new vertex

        :param V:
        :type V: TopoDS_Shape &
        :param P:
        :type P: float
        :param bound:
        :type bound: bool
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Pave_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Pave(*args))

    def HasSameDomain(self, *args):
        """
        :param b:
        :type b: bool
        :rtype: None

        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_HasSameDomain(self, *args)


    def SameDomain(self, *args):
        """
        :param VSD:
        :type VSD: TopoDS_Shape &
        :rtype: None

        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_SameDomain(self, *args)


    def Vertex(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_Vertex(self, *args)


    def ChangeVertex(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_ChangeVertex(self, *args)


    def Parameter(self, *args):
        """
        :rtype: float

        :param Par:
        :type Par: float
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_Parameter(self, *args)


    def InterferenceType(self, *args):
        """
        :rtype: TopOpeBRepDS_Kind

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_InterferenceType(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TopOpeBRepBuild_Pave self)"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TopOpeBRepBuild_Pave self) -> Handle_TopOpeBRepBuild_Pave"""
        return _TopOpeBRepBuild.TopOpeBRepBuild_Pave_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_Pave.HasSameDomain = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_HasSameDomain, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave.SameDomain = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_SameDomain, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave.Vertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_Vertex, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave.ChangeVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_ChangeVertex, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave.Parameter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_Parameter, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave.InterferenceType = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_InterferenceType, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave__kill_pointed, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave.GetHandle = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_GetHandle, None, TopOpeBRepBuild_Pave)
TopOpeBRepBuild_Pave_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_Pave_swigregister
TopOpeBRepBuild_Pave_swigregister(TopOpeBRepBuild_Pave)

class Handle_TopOpeBRepBuild_Pave(Handle_TopOpeBRepBuild_Loop):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_swiginit(self, _TopOpeBRepBuild.new_Handle_TopOpeBRepBuild_Pave(*args))
    DownCast = staticmethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopOpeBRepBuild_Pave.Nullify = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_Nullify, None, Handle_TopOpeBRepBuild_Pave)
Handle_TopOpeBRepBuild_Pave.IsNull = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_IsNull, None, Handle_TopOpeBRepBuild_Pave)
Handle_TopOpeBRepBuild_Pave.GetObject = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_GetObject, None, Handle_TopOpeBRepBuild_Pave)
Handle_TopOpeBRepBuild_Pave._kill_pointed = new_instancemethod(_TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave__kill_pointed, None, Handle_TopOpeBRepBuild_Pave)
Handle_TopOpeBRepBuild_Pave_swigregister = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_swigregister
Handle_TopOpeBRepBuild_Pave_swigregister(Handle_TopOpeBRepBuild_Pave)

def Handle_TopOpeBRepBuild_Pave_DownCast(AnObject):
    return _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_DownCast(AnObject)
Handle_TopOpeBRepBuild_Pave_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_DownCast

class TopOpeBRepBuild_PaveClassifier(TopOpeBRepBuild_LoopClassifier):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Create a Pave classifier to compare vertices on edge <E>.

        :param E:
        :type E: TopoDS_Shape &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_PaveClassifier(*args))

    def SetFirstParameter(self, *args):
        """
        :param P:
        :type P: float
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_SetFirstParameter(self, *args)


    def ClosedVertices(self, *args):
        """
        :param B:
        :type B: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_ClosedVertices(self, *args)


    def AdjustCase(*args):
        """
        :param p1:
        :type p1: float
        :param o:
        :type o: TopAbs_Orientation
        :param first:
        :type first: float
        :param period:
        :type period: float
        :param tol:
        :type tol: float
        :param cas:
        :type cas: int &
        :rtype: float

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_AdjustCase(*args)

    AdjustCase = staticmethod(AdjustCase)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_PaveClassifier.SetFirstParameter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_SetFirstParameter, None, TopOpeBRepBuild_PaveClassifier)
TopOpeBRepBuild_PaveClassifier.ClosedVertices = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_ClosedVertices, None, TopOpeBRepBuild_PaveClassifier)
TopOpeBRepBuild_PaveClassifier._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier__kill_pointed, None, TopOpeBRepBuild_PaveClassifier)
TopOpeBRepBuild_PaveClassifier_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_swigregister
TopOpeBRepBuild_PaveClassifier_swigregister(TopOpeBRepBuild_PaveClassifier)

def TopOpeBRepBuild_PaveClassifier_AdjustCase(*args):
    """
    :param p1:
    :type p1: float
    :param o:
    :type o: TopAbs_Orientation
    :param first:
    :type first: float
    :param period:
    :type period: float
    :param tol:
    :type tol: float
    :param cas:
    :type cas: int &
    :rtype: float

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_AdjustCase(*args)

class TopOpeBRepBuild_PaveSet(TopOpeBRepBuild_LoopSet):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Create a Pave set on edge <E>. It contains <E> vertices.

        :param E:
        :type E: TopoDS_Shape &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_PaveSet(*args))

    def RemovePV(self, *args):
        """
        :param B:
        :type B: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_RemovePV(self, *args)


    def Append(self, *args):
        """
        * Add <PV> in the Pave set.

        :param PV:
        :type PV: Handle_TopOpeBRepBuild_Pave &
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_Append(self, *args)


    def Edge(self, *args):
        """
        :rtype: TopoDS_Edge

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_Edge(self, *args)


    def HasEqualParameters(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_HasEqualParameters(self, *args)


    def EqualParameters(self, *args):
        """
        :rtype: float

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_EqualParameters(self, *args)


    def ClosedVertices(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_ClosedVertices(self, *args)


    def SortPave(*args):
        """
        :param Lin:
        :type Lin: TopOpeBRepBuild_ListOfPave &
        :param Lout:
        :type Lout: TopOpeBRepBuild_ListOfPave &
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_SortPave(*args)

    SortPave = staticmethod(SortPave)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_PaveSet.RemovePV = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_RemovePV, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet.Append = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_Append, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet.Edge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_Edge, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet.HasEqualParameters = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_HasEqualParameters, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet.EqualParameters = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_EqualParameters, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet.ClosedVertices = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_ClosedVertices, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet__kill_pointed, None, TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_swigregister
TopOpeBRepBuild_PaveSet_swigregister(TopOpeBRepBuild_PaveSet)

def TopOpeBRepBuild_PaveSet_SortPave(*args):
    """
    :param Lin:
    :type Lin: TopOpeBRepBuild_ListOfPave &
    :param Lout:
    :type Lout: TopOpeBRepBuild_ListOfPave &
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_SortPave(*args)

class TopOpeBRepBuild_ShellFaceSet(TopOpeBRepBuild_ShapeSet):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Creates a ShellFaceSet to build blocks of faces connected by edges.

        :rtype: None

        * Creates a ShellFaceSet to build blocks of faces connected by edges.

        :param S:
        :type S: TopoDS_Shape &
        :param Addr: default value is NULL
        :type Addr: Standard_Address
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShellFaceSet(*args))

    def Solid(self, *args):
        """
        :rtype: TopoDS_Solid

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_Solid(self, *args)


    def SName(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param sb: default value is 
        :type sb: TCollection_AsciiString &
        :param sa: default value is 
        :type sa: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        :param S:
        :type S: TopTools_ListOfShape &
        :param sb: default value is 
        :type sb: TCollection_AsciiString &
        :param sa: default value is 
        :type sa: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_SName(self, *args)


    def SNameori(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param sb: default value is 
        :type sb: TCollection_AsciiString &
        :param sa: default value is 
        :type sa: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        :param S:
        :type S: TopTools_ListOfShape &
        :param sb: default value is 
        :type sb: TCollection_AsciiString &
        :param sa: default value is 
        :type sa: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_SNameori(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ShellFaceSet.Solid = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_Solid, None, TopOpeBRepBuild_ShellFaceSet)
TopOpeBRepBuild_ShellFaceSet.SName = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_SName, None, TopOpeBRepBuild_ShellFaceSet)
TopOpeBRepBuild_ShellFaceSet.SNameori = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_SNameori, None, TopOpeBRepBuild_ShellFaceSet)
TopOpeBRepBuild_ShellFaceSet._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet__kill_pointed, None, TopOpeBRepBuild_ShellFaceSet)
TopOpeBRepBuild_ShellFaceSet_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_swigregister
TopOpeBRepBuild_ShellFaceSet_swigregister(TopOpeBRepBuild_ShellFaceSet)

class TopOpeBRepBuild_WireEdgeSet(TopOpeBRepBuild_ShapeSet):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Creates a WireEdgeSet to build edges connected by vertices on face F. Edges of the WireEdgeSet must have a representation on surface of face F.

        :param F:
        :type F: TopoDS_Shape &
        :param Addr: default value is NULL
        :type Addr: Standard_Address
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_WireEdgeSet(*args))

    def Face(self, *args):
        """
        * value of field myFace

        :rtype: TopoDS_Face

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_Face(self, *args)


    def IsUVISO(*args):
        """
        :param E:
        :type E: TopoDS_Edge &
        :param F:
        :type F: TopoDS_Face &
        :param uiso:
        :type uiso: bool
        :param viso:
        :type viso: bool
        :rtype: void

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_IsUVISO(*args)

    IsUVISO = staticmethod(IsUVISO)

    def SName(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param sb: default value is 
        :type sb: TCollection_AsciiString &
        :param sa: default value is 
        :type sa: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        :param S:
        :type S: TopTools_ListOfShape &
        :param sb: default value is 
        :type sb: TCollection_AsciiString &
        :param sa: default value is 
        :type sa: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_SName(self, *args)


    def SNameori(self, *args):
        """
        :param S:
        :type S: TopoDS_Shape &
        :param sb: default value is 
        :type sb: TCollection_AsciiString &
        :param sa: default value is 
        :type sa: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        :param S:
        :type S: TopTools_ListOfShape &
        :param sb: default value is 
        :type sb: TCollection_AsciiString &
        :param sa: default value is 
        :type sa: TCollection_AsciiString &
        :rtype: TCollection_AsciiString

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_SNameori(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_WireEdgeSet.Face = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_Face, None, TopOpeBRepBuild_WireEdgeSet)
TopOpeBRepBuild_WireEdgeSet.SName = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_SName, None, TopOpeBRepBuild_WireEdgeSet)
TopOpeBRepBuild_WireEdgeSet.SNameori = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_SNameori, None, TopOpeBRepBuild_WireEdgeSet)
TopOpeBRepBuild_WireEdgeSet._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet__kill_pointed, None, TopOpeBRepBuild_WireEdgeSet)
TopOpeBRepBuild_WireEdgeSet_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_swigregister
TopOpeBRepBuild_WireEdgeSet_swigregister(TopOpeBRepBuild_WireEdgeSet)

def TopOpeBRepBuild_WireEdgeSet_IsUVISO(*args):
    """
    :param E:
    :type E: TopoDS_Edge &
    :param F:
    :type F: TopoDS_Face &
    :param uiso:
    :type uiso: bool
    :param viso:
    :type viso: bool
    :rtype: void

    """
    return _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_IsUVISO(*args)

class TopOpeBRepBuild_EdgeBuilder(TopOpeBRepBuild_Area1dBuilder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Creates a EdgeBuilder to find the areas of the shapes described by <LS> using the classifier <LC>.

        :param LS:
        :type LS: TopOpeBRepBuild_PaveSet &
        :param LC:
        :type LC: TopOpeBRepBuild_PaveClassifier &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_EdgeBuilder(*args))

    def InitEdgeBuilder(self, *args):
        """
        :param LS:
        :type LS: TopOpeBRepBuild_LoopSet &
        :param LC:
        :type LC: TopOpeBRepBuild_LoopClassifier &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitEdgeBuilder(self, *args)


    def InitEdge(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitEdge(self, *args)


    def MoreEdge(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_MoreEdge(self, *args)


    def NextEdge(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_NextEdge(self, *args)


    def InitVertex(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitVertex(self, *args)


    def MoreVertex(self, *args):
        """
        :rtype: bool

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_MoreVertex(self, *args)


    def NextVertex(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_NextVertex(self, *args)


    def Vertex(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_Vertex(self, *args)


    def Parameter(self, *args):
        """
        :rtype: float

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_Parameter(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_EdgeBuilder.InitEdgeBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitEdgeBuilder, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.InitEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitEdge, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.MoreEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_MoreEdge, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.NextEdge = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_NextEdge, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.InitVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitVertex, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.MoreVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_MoreVertex, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.NextVertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_NextVertex, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.Vertex = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_Vertex, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder.Parameter = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_Parameter, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder__kill_pointed, None, TopOpeBRepBuild_EdgeBuilder)
TopOpeBRepBuild_EdgeBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_swigregister
TopOpeBRepBuild_EdgeBuilder_swigregister(TopOpeBRepBuild_EdgeBuilder)

class TopOpeBRepBuild_FaceAreaBuilder(TopOpeBRepBuild_Area2dBuilder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Creates a FaceAreaBuilder to build faces on the (wires,blocks of edge) of <LS>, using the classifier <LC>.

        :param LS:
        :type LS: TopOpeBRepBuild_LoopSet &
        :param LC:
        :type LC: TopOpeBRepBuild_LoopClassifier &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_FaceAreaBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_FaceAreaBuilder(*args))

    def InitFaceAreaBuilder(self, *args):
        """
        :param LS:
        :type LS: TopOpeBRepBuild_LoopSet &
        :param LC:
        :type LC: TopOpeBRepBuild_LoopClassifier &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_FaceAreaBuilder_InitFaceAreaBuilder(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_FaceAreaBuilder.InitFaceAreaBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceAreaBuilder_InitFaceAreaBuilder, None, TopOpeBRepBuild_FaceAreaBuilder)
TopOpeBRepBuild_FaceAreaBuilder._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_FaceAreaBuilder__kill_pointed, None, TopOpeBRepBuild_FaceAreaBuilder)
TopOpeBRepBuild_FaceAreaBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_FaceAreaBuilder_swigregister
TopOpeBRepBuild_FaceAreaBuilder_swigregister(TopOpeBRepBuild_FaceAreaBuilder)

class TopOpeBRepBuild_ShellFaceClassifier(TopOpeBRepBuild_CompositeClassifier):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Creates a classifier in 3D space, to compare : a face with a set of faces a shell with a set of faces a shell with a shell

        :param BB:
        :type BB: TopOpeBRepBuild_BlockBuilder &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceClassifier_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShellFaceClassifier(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceClassifier_Clear(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_ShellFaceClassifier.Clear = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceClassifier_Clear, None, TopOpeBRepBuild_ShellFaceClassifier)
TopOpeBRepBuild_ShellFaceClassifier._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceClassifier__kill_pointed, None, TopOpeBRepBuild_ShellFaceClassifier)
TopOpeBRepBuild_ShellFaceClassifier_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceClassifier_swigregister
TopOpeBRepBuild_ShellFaceClassifier_swigregister(TopOpeBRepBuild_ShellFaceClassifier)

class TopOpeBRepBuild_SolidAreaBuilder(TopOpeBRepBuild_Area3dBuilder):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Creates a SolidAreaBuilder to build Solids on the (shells,blocks of face) of <LS>, using the classifier <LC>.

        :param LS:
        :type LS: TopOpeBRepBuild_LoopSet &
        :param LC:
        :type LC: TopOpeBRepBuild_LoopClassifier &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_SolidAreaBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_SolidAreaBuilder(*args))

    def InitSolidAreaBuilder(self, *args):
        """
        :param LS:
        :type LS: TopOpeBRepBuild_LoopSet &
        :param LC:
        :type LC: TopOpeBRepBuild_LoopClassifier &
        :param ForceClass: default value is Standard_False
        :type ForceClass: bool
        :rtype: None

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_SolidAreaBuilder_InitSolidAreaBuilder(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_SolidAreaBuilder.InitSolidAreaBuilder = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidAreaBuilder_InitSolidAreaBuilder, None, TopOpeBRepBuild_SolidAreaBuilder)
TopOpeBRepBuild_SolidAreaBuilder._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_SolidAreaBuilder__kill_pointed, None, TopOpeBRepBuild_SolidAreaBuilder)
TopOpeBRepBuild_SolidAreaBuilder_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_SolidAreaBuilder_swigregister
TopOpeBRepBuild_SolidAreaBuilder_swigregister(TopOpeBRepBuild_SolidAreaBuilder)

class TopOpeBRepBuild_WireEdgeClassifier(TopOpeBRepBuild_CompositeClassifier):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Creates a classifier on edge <F>. Used to compare edges and wires on the edge <F>.

        :param F:
        :type F: TopoDS_Shape &
        :param BB:
        :type BB: TopOpeBRepBuild_BlockBuilder &
        :rtype: None

        """
        _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeClassifier_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_WireEdgeClassifier(*args))

    def LoopToShape(self, *args):
        """
        :param L:
        :type L: Handle_TopOpeBRepBuild_Loop &
        :rtype: TopoDS_Shape

        """
        return _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeClassifier_LoopToShape(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopOpeBRepBuild_WireEdgeClassifier.LoopToShape = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeClassifier_LoopToShape, None, TopOpeBRepBuild_WireEdgeClassifier)
TopOpeBRepBuild_WireEdgeClassifier._kill_pointed = new_instancemethod(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeClassifier__kill_pointed, None, TopOpeBRepBuild_WireEdgeClassifier)
TopOpeBRepBuild_WireEdgeClassifier_swigregister = _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeClassifier_swigregister
TopOpeBRepBuild_WireEdgeClassifier_swigregister(TopOpeBRepBuild_WireEdgeClassifier)



