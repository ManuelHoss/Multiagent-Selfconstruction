# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _Extrema.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_Extrema', [dirname(__file__)])
        except ImportError:
            import _Extrema
            return _Extrema
        if fp is not None:
            try:
                _mod = imp.load_module('_Extrema', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _Extrema = swig_import_helper()
    del swig_import_helper
else:
    import _Extrema
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _Extrema.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_Extrema.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_Extrema.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_Extrema.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_Extrema.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_Extrema.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_Extrema.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_Extrema.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_Extrema.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_Extrema.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_Extrema.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_Extrema.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_Extrema.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_Extrema.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_Extrema.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_Extrema.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_Extrema.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _Extrema.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

import OCC.Standard
import OCC.math
import OCC.Adaptor2d
import OCC.GeomAbs
import OCC.TColStd
import OCC.TCollection
import OCC.MMgt
import OCC.gp
import OCC.Geom2d
import OCC.TColgp
import OCC.Adaptor3d
import OCC.Geom
import OCC.TopAbs

_Extrema.Extrema_Node_swigconstant(_Extrema)
Extrema_Node = _Extrema.Extrema_Node

_Extrema.Extrema_UIsoEdge_swigconstant(_Extrema)
Extrema_UIsoEdge = _Extrema.Extrema_UIsoEdge

_Extrema.Extrema_VIsoEdge_swigconstant(_Extrema)
Extrema_VIsoEdge = _Extrema.Extrema_VIsoEdge

_Extrema.Extrema_Face_swigconstant(_Extrema)
Extrema_Face = _Extrema.Extrema_Face

_Extrema.Extrema_ExtAlgo_Grad_swigconstant(_Extrema)
Extrema_ExtAlgo_Grad = _Extrema.Extrema_ExtAlgo_Grad

_Extrema.Extrema_ExtAlgo_Tree_swigconstant(_Extrema)
Extrema_ExtAlgo_Tree = _Extrema.Extrema_ExtAlgo_Tree

_Extrema.Extrema_ExtFlag_MIN_swigconstant(_Extrema)
Extrema_ExtFlag_MIN = _Extrema.Extrema_ExtFlag_MIN

_Extrema.Extrema_ExtFlag_MAX_swigconstant(_Extrema)
Extrema_ExtFlag_MAX = _Extrema.Extrema_ExtFlag_MAX

_Extrema.Extrema_ExtFlag_MINMAX_swigconstant(_Extrema)
Extrema_ExtFlag_MINMAX = _Extrema.Extrema_ExtFlag_MINMAX
class Extrema_Array1OfPOnCurv(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Extrema_POnCurv &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _Extrema.Extrema_Array1OfPOnCurv_swiginit(self, _Extrema.new_Extrema_Array1OfPOnCurv(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_Array1OfPOnCurv_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_Array1OfPOnCurv_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_Array1OfPOnCurv_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array1OfPOnCurv &
        :rtype: Extrema_Array1OfPOnCurv

        """
        return _Extrema.Extrema_Array1OfPOnCurv_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array1OfPOnCurv &
        :rtype: Extrema_Array1OfPOnCurv

        """
        return _Extrema.Extrema_Array1OfPOnCurv_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array1OfPOnCurv_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array1OfPOnCurv_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array1OfPOnCurv_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_Array1OfPOnCurv_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_Array1OfPOnCurv_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_Array1OfPOnCurv_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_Array1OfPOnCurv.Init = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv_Init, None, Extrema_Array1OfPOnCurv)
Extrema_Array1OfPOnCurv.Destroy = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv_Destroy, None, Extrema_Array1OfPOnCurv)
Extrema_Array1OfPOnCurv.IsAllocated = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv_IsAllocated, None, Extrema_Array1OfPOnCurv)
Extrema_Array1OfPOnCurv.Assign = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv_Assign, None, Extrema_Array1OfPOnCurv)
Extrema_Array1OfPOnCurv.Set = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv_Set, None, Extrema_Array1OfPOnCurv)
Extrema_Array1OfPOnCurv.Length = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv_Length, None, Extrema_Array1OfPOnCurv)
Extrema_Array1OfPOnCurv.Lower = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv_Lower, None, Extrema_Array1OfPOnCurv)
Extrema_Array1OfPOnCurv.Upper = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv_Upper, None, Extrema_Array1OfPOnCurv)
Extrema_Array1OfPOnCurv.SetValue = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv_SetValue, None, Extrema_Array1OfPOnCurv)
Extrema_Array1OfPOnCurv.Value = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv_Value, None, Extrema_Array1OfPOnCurv)
Extrema_Array1OfPOnCurv.ChangeValue = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv_ChangeValue, None, Extrema_Array1OfPOnCurv)
Extrema_Array1OfPOnCurv._kill_pointed = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv__kill_pointed, None, Extrema_Array1OfPOnCurv)
Extrema_Array1OfPOnCurv_swigregister = _Extrema.Extrema_Array1OfPOnCurv_swigregister
Extrema_Array1OfPOnCurv_swigregister(Extrema_Array1OfPOnCurv)

class Extrema_Array1OfPOnCurv2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Extrema_POnCurv2d &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _Extrema.Extrema_Array1OfPOnCurv2d_swiginit(self, _Extrema.new_Extrema_Array1OfPOnCurv2d(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_Array1OfPOnCurv2d_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_Array1OfPOnCurv2d_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_Array1OfPOnCurv2d_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array1OfPOnCurv2d &
        :rtype: Extrema_Array1OfPOnCurv2d

        """
        return _Extrema.Extrema_Array1OfPOnCurv2d_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array1OfPOnCurv2d &
        :rtype: Extrema_Array1OfPOnCurv2d

        """
        return _Extrema.Extrema_Array1OfPOnCurv2d_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array1OfPOnCurv2d_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array1OfPOnCurv2d_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array1OfPOnCurv2d_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_Array1OfPOnCurv2d_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_Array1OfPOnCurv2d_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_Array1OfPOnCurv2d_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_Array1OfPOnCurv2d.Init = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv2d_Init, None, Extrema_Array1OfPOnCurv2d)
Extrema_Array1OfPOnCurv2d.Destroy = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv2d_Destroy, None, Extrema_Array1OfPOnCurv2d)
Extrema_Array1OfPOnCurv2d.IsAllocated = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv2d_IsAllocated, None, Extrema_Array1OfPOnCurv2d)
Extrema_Array1OfPOnCurv2d.Assign = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv2d_Assign, None, Extrema_Array1OfPOnCurv2d)
Extrema_Array1OfPOnCurv2d.Set = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv2d_Set, None, Extrema_Array1OfPOnCurv2d)
Extrema_Array1OfPOnCurv2d.Length = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv2d_Length, None, Extrema_Array1OfPOnCurv2d)
Extrema_Array1OfPOnCurv2d.Lower = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv2d_Lower, None, Extrema_Array1OfPOnCurv2d)
Extrema_Array1OfPOnCurv2d.Upper = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv2d_Upper, None, Extrema_Array1OfPOnCurv2d)
Extrema_Array1OfPOnCurv2d.SetValue = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv2d_SetValue, None, Extrema_Array1OfPOnCurv2d)
Extrema_Array1OfPOnCurv2d.Value = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv2d_Value, None, Extrema_Array1OfPOnCurv2d)
Extrema_Array1OfPOnCurv2d.ChangeValue = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv2d_ChangeValue, None, Extrema_Array1OfPOnCurv2d)
Extrema_Array1OfPOnCurv2d._kill_pointed = new_instancemethod(_Extrema.Extrema_Array1OfPOnCurv2d__kill_pointed, None, Extrema_Array1OfPOnCurv2d)
Extrema_Array1OfPOnCurv2d_swigregister = _Extrema.Extrema_Array1OfPOnCurv2d_swigregister
Extrema_Array1OfPOnCurv2d_swigregister(Extrema_Array1OfPOnCurv2d)

class Extrema_Array1OfPOnSurf(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Extrema_POnSurf &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _Extrema.Extrema_Array1OfPOnSurf_swiginit(self, _Extrema.new_Extrema_Array1OfPOnSurf(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_Array1OfPOnSurf_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_Array1OfPOnSurf_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_Array1OfPOnSurf_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array1OfPOnSurf &
        :rtype: Extrema_Array1OfPOnSurf

        """
        return _Extrema.Extrema_Array1OfPOnSurf_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array1OfPOnSurf &
        :rtype: Extrema_Array1OfPOnSurf

        """
        return _Extrema.Extrema_Array1OfPOnSurf_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array1OfPOnSurf_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array1OfPOnSurf_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array1OfPOnSurf_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_Array1OfPOnSurf_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_Array1OfPOnSurf_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_Array1OfPOnSurf_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_Array1OfPOnSurf.Init = new_instancemethod(_Extrema.Extrema_Array1OfPOnSurf_Init, None, Extrema_Array1OfPOnSurf)
Extrema_Array1OfPOnSurf.Destroy = new_instancemethod(_Extrema.Extrema_Array1OfPOnSurf_Destroy, None, Extrema_Array1OfPOnSurf)
Extrema_Array1OfPOnSurf.IsAllocated = new_instancemethod(_Extrema.Extrema_Array1OfPOnSurf_IsAllocated, None, Extrema_Array1OfPOnSurf)
Extrema_Array1OfPOnSurf.Assign = new_instancemethod(_Extrema.Extrema_Array1OfPOnSurf_Assign, None, Extrema_Array1OfPOnSurf)
Extrema_Array1OfPOnSurf.Set = new_instancemethod(_Extrema.Extrema_Array1OfPOnSurf_Set, None, Extrema_Array1OfPOnSurf)
Extrema_Array1OfPOnSurf.Length = new_instancemethod(_Extrema.Extrema_Array1OfPOnSurf_Length, None, Extrema_Array1OfPOnSurf)
Extrema_Array1OfPOnSurf.Lower = new_instancemethod(_Extrema.Extrema_Array1OfPOnSurf_Lower, None, Extrema_Array1OfPOnSurf)
Extrema_Array1OfPOnSurf.Upper = new_instancemethod(_Extrema.Extrema_Array1OfPOnSurf_Upper, None, Extrema_Array1OfPOnSurf)
Extrema_Array1OfPOnSurf.SetValue = new_instancemethod(_Extrema.Extrema_Array1OfPOnSurf_SetValue, None, Extrema_Array1OfPOnSurf)
Extrema_Array1OfPOnSurf.Value = new_instancemethod(_Extrema.Extrema_Array1OfPOnSurf_Value, None, Extrema_Array1OfPOnSurf)
Extrema_Array1OfPOnSurf.ChangeValue = new_instancemethod(_Extrema.Extrema_Array1OfPOnSurf_ChangeValue, None, Extrema_Array1OfPOnSurf)
Extrema_Array1OfPOnSurf._kill_pointed = new_instancemethod(_Extrema.Extrema_Array1OfPOnSurf__kill_pointed, None, Extrema_Array1OfPOnSurf)
Extrema_Array1OfPOnSurf_swigregister = _Extrema.Extrema_Array1OfPOnSurf_swigregister
Extrema_Array1OfPOnSurf_swigregister(Extrema_Array1OfPOnSurf)

class Extrema_Array2OfPOnCurv(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: Extrema_POnCurv &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _Extrema.Extrema_Array2OfPOnCurv_swiginit(self, _Extrema.new_Extrema_Array2OfPOnCurv(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_Array2OfPOnCurv_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_Array2OfPOnCurv_Destroy(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array2OfPOnCurv &
        :rtype: Extrema_Array2OfPOnCurv

        """
        return _Extrema.Extrema_Array2OfPOnCurv_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array2OfPOnCurv &
        :rtype: Extrema_Array2OfPOnCurv

        """
        return _Extrema.Extrema_Array2OfPOnCurv_Set(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnCurv_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnCurv_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnCurv_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnCurv_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnCurv_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnCurv_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_Array2OfPOnCurv_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_Array2OfPOnCurv_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_Array2OfPOnCurv_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_Array2OfPOnCurv.Init = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_Init, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv.Destroy = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_Destroy, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv.Assign = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_Assign, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv.Set = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_Set, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv.ColLength = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_ColLength, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv.RowLength = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_RowLength, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv.LowerCol = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_LowerCol, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv.LowerRow = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_LowerRow, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv.UpperCol = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_UpperCol, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv.UpperRow = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_UpperRow, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv.SetValue = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_SetValue, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv.Value = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_Value, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv.ChangeValue = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv_ChangeValue, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv._kill_pointed = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv__kill_pointed, None, Extrema_Array2OfPOnCurv)
Extrema_Array2OfPOnCurv_swigregister = _Extrema.Extrema_Array2OfPOnCurv_swigregister
Extrema_Array2OfPOnCurv_swigregister(Extrema_Array2OfPOnCurv)

class Extrema_Array2OfPOnCurv2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: Extrema_POnCurv2d &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _Extrema.Extrema_Array2OfPOnCurv2d_swiginit(self, _Extrema.new_Extrema_Array2OfPOnCurv2d(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_Destroy(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array2OfPOnCurv2d &
        :rtype: Extrema_Array2OfPOnCurv2d

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array2OfPOnCurv2d &
        :rtype: Extrema_Array2OfPOnCurv2d

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_Set(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_Array2OfPOnCurv2d_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_Array2OfPOnCurv2d.Init = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_Init, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d.Destroy = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_Destroy, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d.Assign = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_Assign, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d.Set = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_Set, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d.ColLength = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_ColLength, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d.RowLength = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_RowLength, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d.LowerCol = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_LowerCol, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d.LowerRow = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_LowerRow, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d.UpperCol = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_UpperCol, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d.UpperRow = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_UpperRow, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d.SetValue = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_SetValue, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d.Value = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_Value, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d.ChangeValue = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d_ChangeValue, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d._kill_pointed = new_instancemethod(_Extrema.Extrema_Array2OfPOnCurv2d__kill_pointed, None, Extrema_Array2OfPOnCurv2d)
Extrema_Array2OfPOnCurv2d_swigregister = _Extrema.Extrema_Array2OfPOnCurv2d_swigregister
Extrema_Array2OfPOnCurv2d_swigregister(Extrema_Array2OfPOnCurv2d)

class Extrema_Array2OfPOnSurf(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: Extrema_POnSurf &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _Extrema.Extrema_Array2OfPOnSurf_swiginit(self, _Extrema.new_Extrema_Array2OfPOnSurf(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_Array2OfPOnSurf_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_Array2OfPOnSurf_Destroy(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array2OfPOnSurf &
        :rtype: Extrema_Array2OfPOnSurf

        """
        return _Extrema.Extrema_Array2OfPOnSurf_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array2OfPOnSurf &
        :rtype: Extrema_Array2OfPOnSurf

        """
        return _Extrema.Extrema_Array2OfPOnSurf_Set(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnSurf_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnSurf_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnSurf_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnSurf_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnSurf_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnSurf_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_Array2OfPOnSurf_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_Array2OfPOnSurf_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_Array2OfPOnSurf_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_Array2OfPOnSurf.Init = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_Init, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf.Destroy = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_Destroy, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf.Assign = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_Assign, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf.Set = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_Set, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf.ColLength = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_ColLength, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf.RowLength = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_RowLength, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf.LowerCol = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_LowerCol, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf.LowerRow = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_LowerRow, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf.UpperCol = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_UpperCol, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf.UpperRow = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_UpperRow, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf.SetValue = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_SetValue, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf.Value = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_Value, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf.ChangeValue = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf_ChangeValue, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf._kill_pointed = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurf__kill_pointed, None, Extrema_Array2OfPOnSurf)
Extrema_Array2OfPOnSurf_swigregister = _Extrema.Extrema_Array2OfPOnSurf_swigregister
Extrema_Array2OfPOnSurf_swigregister(Extrema_Array2OfPOnSurf)

class Extrema_Array2OfPOnSurfParams(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: Extrema_POnSurfParams &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _Extrema.Extrema_Array2OfPOnSurfParams_swiginit(self, _Extrema.new_Extrema_Array2OfPOnSurfParams(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnSurfParams &
        :rtype: None

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_Destroy(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array2OfPOnSurfParams &
        :rtype: Extrema_Array2OfPOnSurfParams

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_Array2OfPOnSurfParams &
        :rtype: Extrema_Array2OfPOnSurfParams

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_Set(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Extrema_POnSurfParams &
        :rtype: None

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnSurfParams

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnSurfParams

        """
        return _Extrema.Extrema_Array2OfPOnSurfParams_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_Array2OfPOnSurfParams.Init = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_Init, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams.Destroy = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_Destroy, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams.Assign = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_Assign, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams.Set = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_Set, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams.ColLength = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_ColLength, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams.RowLength = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_RowLength, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams.LowerCol = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_LowerCol, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams.LowerRow = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_LowerRow, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams.UpperCol = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_UpperCol, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams.UpperRow = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_UpperRow, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams.SetValue = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_SetValue, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams.Value = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_Value, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams.ChangeValue = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams_ChangeValue, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams._kill_pointed = new_instancemethod(_Extrema.Extrema_Array2OfPOnSurfParams__kill_pointed, None, Extrema_Array2OfPOnSurfParams)
Extrema_Array2OfPOnSurfParams_swigregister = _Extrema.Extrema_Array2OfPOnSurfParams_swigregister
Extrema_Array2OfPOnSurfParams_swigregister(Extrema_Array2OfPOnSurfParams)

class Extrema_CCFOfECC2dOfExtCC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param thetol: default value is 1.0e-10
        :type thetol: float
        :rtype: None

        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :param C2:
        :type C2: Adaptor2d_Curve2d &
        :param thetol: default value is 1.0e-10
        :type thetol: float
        :rtype: None

        """
        _Extrema.Extrema_CCFOfECC2dOfExtCC2d_swiginit(self, _Extrema.new_Extrema_CCFOfECC2dOfExtCC2d(*args))

    def SetCurve(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_SetCurve(self, *args)


    def SetTolerance(self, *args):
        """
        :param theTol:
        :type theTol: float
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_SetTolerance(self, *args)


    def NbVariables(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_NbVariables(self, *args)


    def NbEquations(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_NbEquations(self, *args)


    def Value(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :rtype: bool

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_Value(self, *args)


    def Derivatives(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_Derivatives(self, *args)


    def Values(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_SquareDistance(self, *args)


    def Points(self, *args):
        """
        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv2d &
        :param P2:
        :type P2: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_Points(self, *args)


    def CurvePtr(self, *args):
        """
        :param theRank:
        :type theRank: int
        :rtype: Standard_Address

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_CurvePtr(self, *args)


    def Tolerance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_Tolerance(self, *args)


    def SubIntervalInitialize(self, *args):
        """
        :param theUfirst:
        :type theUfirst: math_Vector &
        :param theUlast:
        :type theUlast: math_Vector &
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_SubIntervalInitialize(self, *args)


    def SearchOfTolerance(self, *args):
        """
        :param C:
        :type C: Standard_Address
        :rtype: float

        """
        return _Extrema.Extrema_CCFOfECC2dOfExtCC2d_SearchOfTolerance(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_CCFOfECC2dOfExtCC2d.SetCurve = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_SetCurve, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.SetTolerance = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_SetTolerance, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.NbVariables = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_NbVariables, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.NbEquations = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_NbEquations, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.Value = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_Value, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.Derivatives = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_Derivatives, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.Values = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_Values, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.GetStateNumber = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_GetStateNumber, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.NbExt = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_NbExt, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_SquareDistance, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.Points = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_Points, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.CurvePtr = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_CurvePtr, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.Tolerance = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_Tolerance, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.SubIntervalInitialize = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_SubIntervalInitialize, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d.SearchOfTolerance = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d_SearchOfTolerance, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_CCFOfECC2dOfExtCC2d__kill_pointed, None, Extrema_CCFOfECC2dOfExtCC2d)
Extrema_CCFOfECC2dOfExtCC2d_swigregister = _Extrema.Extrema_CCFOfECC2dOfExtCC2d_swigregister
Extrema_CCFOfECC2dOfExtCC2d_swigregister(Extrema_CCFOfECC2dOfExtCC2d)

class Extrema_CCFOfECCOfExtCC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param thetol: default value is 1.0e-10
        :type thetol: float
        :rtype: None

        :param C1:
        :type C1: Adaptor3d_Curve &
        :param C2:
        :type C2: Adaptor3d_Curve &
        :param thetol: default value is 1.0e-10
        :type thetol: float
        :rtype: None

        """
        _Extrema.Extrema_CCFOfECCOfExtCC_swiginit(self, _Extrema.new_Extrema_CCFOfECCOfExtCC(*args))

    def SetCurve(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param C1:
        :type C1: Adaptor3d_Curve &
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_SetCurve(self, *args)


    def SetTolerance(self, *args):
        """
        :param theTol:
        :type theTol: float
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_SetTolerance(self, *args)


    def NbVariables(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_NbVariables(self, *args)


    def NbEquations(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_NbEquations(self, *args)


    def Value(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :rtype: bool

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_Value(self, *args)


    def Derivatives(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_Derivatives(self, *args)


    def Values(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_SquareDistance(self, *args)


    def Points(self, *args):
        """
        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv &
        :param P2:
        :type P2: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_Points(self, *args)


    def CurvePtr(self, *args):
        """
        :param theRank:
        :type theRank: int
        :rtype: Standard_Address

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_CurvePtr(self, *args)


    def Tolerance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_Tolerance(self, *args)


    def SubIntervalInitialize(self, *args):
        """
        :param theUfirst:
        :type theUfirst: math_Vector &
        :param theUlast:
        :type theUlast: math_Vector &
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_SubIntervalInitialize(self, *args)


    def SearchOfTolerance(self, *args):
        """
        :param C:
        :type C: Standard_Address
        :rtype: float

        """
        return _Extrema.Extrema_CCFOfECCOfExtCC_SearchOfTolerance(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_CCFOfECCOfExtCC.SetCurve = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_SetCurve, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.SetTolerance = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_SetTolerance, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.NbVariables = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_NbVariables, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.NbEquations = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_NbEquations, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.Value = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_Value, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.Derivatives = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_Derivatives, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.Values = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_Values, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.GetStateNumber = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_GetStateNumber, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.NbExt = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_NbExt, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.SquareDistance = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_SquareDistance, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.Points = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_Points, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.CurvePtr = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_CurvePtr, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.Tolerance = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_Tolerance, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.SubIntervalInitialize = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_SubIntervalInitialize, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC.SearchOfTolerance = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC_SearchOfTolerance, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_CCFOfECCOfExtCC__kill_pointed, None, Extrema_CCFOfECCOfExtCC)
Extrema_CCFOfECCOfExtCC_swigregister = _Extrema.Extrema_CCFOfECCOfExtCC_swigregister
Extrema_CCFOfECCOfExtCC_swigregister(Extrema_CCFOfECCOfExtCC)

class Extrema_CCFOfELCC2dOfLocateExtCC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param thetol: default value is 1.0e-10
        :type thetol: float
        :rtype: None

        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :param C2:
        :type C2: Adaptor2d_Curve2d &
        :param thetol: default value is 1.0e-10
        :type thetol: float
        :rtype: None

        """
        _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_swiginit(self, _Extrema.new_Extrema_CCFOfELCC2dOfLocateExtCC2d(*args))

    def SetCurve(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_SetCurve(self, *args)


    def SetTolerance(self, *args):
        """
        :param theTol:
        :type theTol: float
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_SetTolerance(self, *args)


    def NbVariables(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_NbVariables(self, *args)


    def NbEquations(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_NbEquations(self, *args)


    def Value(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :rtype: bool

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_Value(self, *args)


    def Derivatives(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_Derivatives(self, *args)


    def Values(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_SquareDistance(self, *args)


    def Points(self, *args):
        """
        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv2d &
        :param P2:
        :type P2: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_Points(self, *args)


    def CurvePtr(self, *args):
        """
        :param theRank:
        :type theRank: int
        :rtype: Standard_Address

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_CurvePtr(self, *args)


    def Tolerance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_Tolerance(self, *args)


    def SubIntervalInitialize(self, *args):
        """
        :param theUfirst:
        :type theUfirst: math_Vector &
        :param theUlast:
        :type theUlast: math_Vector &
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_SubIntervalInitialize(self, *args)


    def SearchOfTolerance(self, *args):
        """
        :param C:
        :type C: Standard_Address
        :rtype: float

        """
        return _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_SearchOfTolerance(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_CCFOfELCC2dOfLocateExtCC2d.SetCurve = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_SetCurve, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.SetTolerance = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_SetTolerance, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.NbVariables = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_NbVariables, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.NbEquations = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_NbEquations, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.Value = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_Value, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.Derivatives = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_Derivatives, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.Values = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_Values, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.GetStateNumber = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_GetStateNumber, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.NbExt = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_NbExt, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_SquareDistance, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.Points = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_Points, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.CurvePtr = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_CurvePtr, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.Tolerance = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_Tolerance, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.SubIntervalInitialize = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_SubIntervalInitialize, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d.SearchOfTolerance = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_SearchOfTolerance, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d__kill_pointed, None, Extrema_CCFOfELCC2dOfLocateExtCC2d)
Extrema_CCFOfELCC2dOfLocateExtCC2d_swigregister = _Extrema.Extrema_CCFOfELCC2dOfLocateExtCC2d_swigregister
Extrema_CCFOfELCC2dOfLocateExtCC2d_swigregister(Extrema_CCFOfELCC2dOfLocateExtCC2d)

class Extrema_CCFOfELCCOfLocateExtCC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param thetol: default value is 1.0e-10
        :type thetol: float
        :rtype: None

        :param C1:
        :type C1: Adaptor3d_Curve &
        :param C2:
        :type C2: Adaptor3d_Curve &
        :param thetol: default value is 1.0e-10
        :type thetol: float
        :rtype: None

        """
        _Extrema.Extrema_CCFOfELCCOfLocateExtCC_swiginit(self, _Extrema.new_Extrema_CCFOfELCCOfLocateExtCC(*args))

    def SetCurve(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param C1:
        :type C1: Adaptor3d_Curve &
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_SetCurve(self, *args)


    def SetTolerance(self, *args):
        """
        :param theTol:
        :type theTol: float
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_SetTolerance(self, *args)


    def NbVariables(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_NbVariables(self, *args)


    def NbEquations(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_NbEquations(self, *args)


    def Value(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :rtype: bool

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_Value(self, *args)


    def Derivatives(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_Derivatives(self, *args)


    def Values(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_SquareDistance(self, *args)


    def Points(self, *args):
        """
        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv &
        :param P2:
        :type P2: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_Points(self, *args)


    def CurvePtr(self, *args):
        """
        :param theRank:
        :type theRank: int
        :rtype: Standard_Address

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_CurvePtr(self, *args)


    def Tolerance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_Tolerance(self, *args)


    def SubIntervalInitialize(self, *args):
        """
        :param theUfirst:
        :type theUfirst: math_Vector &
        :param theUlast:
        :type theUlast: math_Vector &
        :rtype: None

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_SubIntervalInitialize(self, *args)


    def SearchOfTolerance(self, *args):
        """
        :param C:
        :type C: Standard_Address
        :rtype: float

        """
        return _Extrema.Extrema_CCFOfELCCOfLocateExtCC_SearchOfTolerance(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_CCFOfELCCOfLocateExtCC.SetCurve = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_SetCurve, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.SetTolerance = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_SetTolerance, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.NbVariables = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_NbVariables, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.NbEquations = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_NbEquations, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.Value = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_Value, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.Derivatives = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_Derivatives, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.Values = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_Values, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.GetStateNumber = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_GetStateNumber, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.NbExt = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_NbExt, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.SquareDistance = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_SquareDistance, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.Points = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_Points, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.CurvePtr = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_CurvePtr, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.Tolerance = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_Tolerance, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.SubIntervalInitialize = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_SubIntervalInitialize, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC.SearchOfTolerance = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC_SearchOfTolerance, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_CCFOfELCCOfLocateExtCC__kill_pointed, None, Extrema_CCFOfELCCOfLocateExtCC)
Extrema_CCFOfELCCOfLocateExtCC_swigregister = _Extrema.Extrema_CCFOfELCCOfLocateExtCC_swigregister
Extrema_CCFOfELCCOfLocateExtCC_swigregister(Extrema_CCFOfELCCOfLocateExtCC)

class Extrema_CCLocFOfLocECC2dOfLocateExtCC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param thetol: default value is 1.0e-10
        :type thetol: float
        :rtype: None

        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :param C2:
        :type C2: Adaptor2d_Curve2d &
        :param thetol: default value is 1.0e-10
        :type thetol: float
        :rtype: None

        """
        _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_swiginit(self, _Extrema.new_Extrema_CCLocFOfLocECC2dOfLocateExtCC2d(*args))

    def SetCurve(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :rtype: None

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_SetCurve(self, *args)


    def SetTolerance(self, *args):
        """
        :param theTol:
        :type theTol: float
        :rtype: None

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_SetTolerance(self, *args)


    def NbVariables(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_NbVariables(self, *args)


    def NbEquations(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_NbEquations(self, *args)


    def Value(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :rtype: bool

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_Value(self, *args)


    def Derivatives(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_Derivatives(self, *args)


    def Values(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_SquareDistance(self, *args)


    def Points(self, *args):
        """
        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv2d &
        :param P2:
        :type P2: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_Points(self, *args)


    def CurvePtr(self, *args):
        """
        :param theRank:
        :type theRank: int
        :rtype: Standard_Address

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_CurvePtr(self, *args)


    def Tolerance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_Tolerance(self, *args)


    def SubIntervalInitialize(self, *args):
        """
        :param theUfirst:
        :type theUfirst: math_Vector &
        :param theUlast:
        :type theUlast: math_Vector &
        :rtype: None

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_SubIntervalInitialize(self, *args)


    def SearchOfTolerance(self, *args):
        """
        :param C:
        :type C: Standard_Address
        :rtype: float

        """
        return _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_SearchOfTolerance(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.SetCurve = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_SetCurve, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.SetTolerance = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_SetTolerance, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.NbVariables = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_NbVariables, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.NbEquations = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_NbEquations, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.Value = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_Value, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.Derivatives = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_Derivatives, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.Values = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_Values, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.GetStateNumber = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_GetStateNumber, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.NbExt = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_NbExt, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_SquareDistance, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.Points = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_Points, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.CurvePtr = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_CurvePtr, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.Tolerance = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_Tolerance, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.SubIntervalInitialize = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_SubIntervalInitialize, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d.SearchOfTolerance = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_SearchOfTolerance, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d__kill_pointed, None, Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_swigregister = _Extrema.Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_swigregister
Extrema_CCLocFOfLocECC2dOfLocateExtCC2d_swigregister(Extrema_CCLocFOfLocECC2dOfLocateExtCC2d)

class Extrema_CCLocFOfLocECCOfLocateExtCC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param thetol: default value is 1.0e-10
        :type thetol: float
        :rtype: None

        :param C1:
        :type C1: Adaptor3d_Curve &
        :param C2:
        :type C2: Adaptor3d_Curve &
        :param thetol: default value is 1.0e-10
        :type thetol: float
        :rtype: None

        """
        _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_swiginit(self, _Extrema.new_Extrema_CCLocFOfLocECCOfLocateExtCC(*args))

    def SetCurve(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param C1:
        :type C1: Adaptor3d_Curve &
        :rtype: None

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_SetCurve(self, *args)


    def SetTolerance(self, *args):
        """
        :param theTol:
        :type theTol: float
        :rtype: None

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_SetTolerance(self, *args)


    def NbVariables(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_NbVariables(self, *args)


    def NbEquations(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_NbEquations(self, *args)


    def Value(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :rtype: bool

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_Value(self, *args)


    def Derivatives(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_Derivatives(self, *args)


    def Values(self, *args):
        """
        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_SquareDistance(self, *args)


    def Points(self, *args):
        """
        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv &
        :param P2:
        :type P2: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_Points(self, *args)


    def CurvePtr(self, *args):
        """
        :param theRank:
        :type theRank: int
        :rtype: Standard_Address

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_CurvePtr(self, *args)


    def Tolerance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_Tolerance(self, *args)


    def SubIntervalInitialize(self, *args):
        """
        :param theUfirst:
        :type theUfirst: math_Vector &
        :param theUlast:
        :type theUlast: math_Vector &
        :rtype: None

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_SubIntervalInitialize(self, *args)


    def SearchOfTolerance(self, *args):
        """
        :param C:
        :type C: Standard_Address
        :rtype: float

        """
        return _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_SearchOfTolerance(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_CCLocFOfLocECCOfLocateExtCC.SetCurve = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_SetCurve, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.SetTolerance = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_SetTolerance, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.NbVariables = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_NbVariables, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.NbEquations = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_NbEquations, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.Value = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_Value, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.Derivatives = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_Derivatives, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.Values = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_Values, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.GetStateNumber = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_GetStateNumber, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.NbExt = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_NbExt, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.SquareDistance = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_SquareDistance, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.Points = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_Points, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.CurvePtr = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_CurvePtr, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.Tolerance = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_Tolerance, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.SubIntervalInitialize = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_SubIntervalInitialize, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC.SearchOfTolerance = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_SearchOfTolerance, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC__kill_pointed, None, Extrema_CCLocFOfLocECCOfLocateExtCC)
Extrema_CCLocFOfLocECCOfLocateExtCC_swigregister = _Extrema.Extrema_CCLocFOfLocECCOfLocateExtCC_swigregister
Extrema_CCLocFOfLocECCOfLocateExtCC_swigregister(Extrema_CCLocFOfLocECCOfLocateExtCC)

class Extrema_CCache2dOfExtCC2d(OCC.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param theC:
        :type theC: Adaptor2d_Curve2d &
        :param theUFirst:
        :type theUFirst: float
        :param theULast:
        :type theULast: float
        :param theNbSamples:
        :type theNbSamples: int
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        :param theC:
        :type theC: Adaptor2d_Curve2d &
        :param theUFirst:
        :type theUFirst: float
        :param theULast:
        :type theULast: float
        :param IntervalsCN:
        :type IntervalsCN: TColStd_Array1OfReal &
        :param StartIndex:
        :type StartIndex: int
        :param EndIndex:
        :type EndIndex: int
        :param Coeff:
        :type Coeff: float
        :rtype: None

        """
        _Extrema.Extrema_CCache2dOfExtCC2d_swiginit(self, _Extrema.new_Extrema_CCache2dOfExtCC2d(*args))

    def SetCurve(self, *args):
        """
        :param theC:
        :type theC: Adaptor2d_Curve2d &
        :param theNbSamples:
        :type theNbSamples: int
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        :param theC:
        :type theC: Adaptor2d_Curve2d &
        :param theUFirst:
        :type theUFirst: float
        :param theULast:
        :type theULast: float
        :param theNbSamples:
        :type theNbSamples: int
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        """
        return _Extrema.Extrema_CCache2dOfExtCC2d_SetCurve(self, *args)


    def SetRange(self, *args):
        """
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        """
        return _Extrema.Extrema_CCache2dOfExtCC2d_SetRange(self, *args)


    def CalculatePoints(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_CCache2dOfExtCC2d_CalculatePoints(self, *args)


    def IsValid(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_CCache2dOfExtCC2d_IsValid(self, *args)


    def Parameters(self, *args):
        """
        :rtype: Handle_TColStd_HArray1OfReal

        """
        return _Extrema.Extrema_CCache2dOfExtCC2d_Parameters(self, *args)


    def Points(self, *args):
        """
        :rtype: Handle_TColgp_HArray1OfPnt2d

        """
        return _Extrema.Extrema_CCache2dOfExtCC2d_Points(self, *args)


    def CurvePtr(self, *args):
        """
        :rtype: Standard_Address

        """
        return _Extrema.Extrema_CCache2dOfExtCC2d_CurvePtr(self, *args)


    def NbSamples(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCache2dOfExtCC2d_NbSamples(self, *args)


    def FirstParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCache2dOfExtCC2d_FirstParameter(self, *args)


    def LastParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCache2dOfExtCC2d_LastParameter(self, *args)


    def TrimFirstParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCache2dOfExtCC2d_TrimFirstParameter(self, *args)


    def TrimLastParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCache2dOfExtCC2d_TrimLastParameter(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_CCache2dOfExtCC2d self)"""
        return _Extrema.Extrema_CCache2dOfExtCC2d__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_CCache2dOfExtCC2d self) -> Handle_Extrema_CCache2dOfExtCC2d"""
        return _Extrema.Extrema_CCache2dOfExtCC2d_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_CCache2dOfExtCC2d.SetCurve = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_SetCurve, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d.SetRange = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_SetRange, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d.CalculatePoints = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_CalculatePoints, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d.IsValid = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_IsValid, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d.Parameters = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_Parameters, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d.Points = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_Points, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d.CurvePtr = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_CurvePtr, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d.NbSamples = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_NbSamples, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d.FirstParameter = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_FirstParameter, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d.LastParameter = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_LastParameter, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d.TrimFirstParameter = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_TrimFirstParameter, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d.TrimLastParameter = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_TrimLastParameter, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d__kill_pointed, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d.GetHandle = new_instancemethod(_Extrema.Extrema_CCache2dOfExtCC2d_GetHandle, None, Extrema_CCache2dOfExtCC2d)
Extrema_CCache2dOfExtCC2d_swigregister = _Extrema.Extrema_CCache2dOfExtCC2d_swigregister
Extrema_CCache2dOfExtCC2d_swigregister(Extrema_CCache2dOfExtCC2d)

class Handle_Extrema_CCache2dOfExtCC2d(OCC.Standard.Handle_Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_CCache2dOfExtCC2d_swiginit(self, _Extrema.new_Handle_Extrema_CCache2dOfExtCC2d(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_CCache2dOfExtCC2d_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_CCache2dOfExtCC2d.Nullify = new_instancemethod(_Extrema.Handle_Extrema_CCache2dOfExtCC2d_Nullify, None, Handle_Extrema_CCache2dOfExtCC2d)
Handle_Extrema_CCache2dOfExtCC2d.IsNull = new_instancemethod(_Extrema.Handle_Extrema_CCache2dOfExtCC2d_IsNull, None, Handle_Extrema_CCache2dOfExtCC2d)
Handle_Extrema_CCache2dOfExtCC2d.GetObject = new_instancemethod(_Extrema.Handle_Extrema_CCache2dOfExtCC2d_GetObject, None, Handle_Extrema_CCache2dOfExtCC2d)
Handle_Extrema_CCache2dOfExtCC2d._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_CCache2dOfExtCC2d__kill_pointed, None, Handle_Extrema_CCache2dOfExtCC2d)
Handle_Extrema_CCache2dOfExtCC2d_swigregister = _Extrema.Handle_Extrema_CCache2dOfExtCC2d_swigregister
Handle_Extrema_CCache2dOfExtCC2d_swigregister(Handle_Extrema_CCache2dOfExtCC2d)

def Handle_Extrema_CCache2dOfExtCC2d_DownCast(AnObject):
    return _Extrema.Handle_Extrema_CCache2dOfExtCC2d_DownCast(AnObject)
Handle_Extrema_CCache2dOfExtCC2d_DownCast = _Extrema.Handle_Extrema_CCache2dOfExtCC2d_DownCast

class Extrema_CCacheOfExtCC(OCC.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param theC:
        :type theC: Adaptor3d_Curve &
        :param theUFirst:
        :type theUFirst: float
        :param theULast:
        :type theULast: float
        :param theNbSamples:
        :type theNbSamples: int
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        :param theC:
        :type theC: Adaptor3d_Curve &
        :param theUFirst:
        :type theUFirst: float
        :param theULast:
        :type theULast: float
        :param IntervalsCN:
        :type IntervalsCN: TColStd_Array1OfReal &
        :param StartIndex:
        :type StartIndex: int
        :param EndIndex:
        :type EndIndex: int
        :param Coeff:
        :type Coeff: float
        :rtype: None

        """
        _Extrema.Extrema_CCacheOfExtCC_swiginit(self, _Extrema.new_Extrema_CCacheOfExtCC(*args))

    def SetCurve(self, *args):
        """
        :param theC:
        :type theC: Adaptor3d_Curve &
        :param theNbSamples:
        :type theNbSamples: int
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        :param theC:
        :type theC: Adaptor3d_Curve &
        :param theUFirst:
        :type theUFirst: float
        :param theULast:
        :type theULast: float
        :param theNbSamples:
        :type theNbSamples: int
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        """
        return _Extrema.Extrema_CCacheOfExtCC_SetCurve(self, *args)


    def SetRange(self, *args):
        """
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        """
        return _Extrema.Extrema_CCacheOfExtCC_SetRange(self, *args)


    def CalculatePoints(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_CCacheOfExtCC_CalculatePoints(self, *args)


    def IsValid(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_CCacheOfExtCC_IsValid(self, *args)


    def Parameters(self, *args):
        """
        :rtype: Handle_TColStd_HArray1OfReal

        """
        return _Extrema.Extrema_CCacheOfExtCC_Parameters(self, *args)


    def Points(self, *args):
        """
        :rtype: Handle_TColgp_HArray1OfPnt

        """
        return _Extrema.Extrema_CCacheOfExtCC_Points(self, *args)


    def CurvePtr(self, *args):
        """
        :rtype: Standard_Address

        """
        return _Extrema.Extrema_CCacheOfExtCC_CurvePtr(self, *args)


    def NbSamples(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_CCacheOfExtCC_NbSamples(self, *args)


    def FirstParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCacheOfExtCC_FirstParameter(self, *args)


    def LastParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCacheOfExtCC_LastParameter(self, *args)


    def TrimFirstParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCacheOfExtCC_TrimFirstParameter(self, *args)


    def TrimLastParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_CCacheOfExtCC_TrimLastParameter(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_CCacheOfExtCC self)"""
        return _Extrema.Extrema_CCacheOfExtCC__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_CCacheOfExtCC self) -> Handle_Extrema_CCacheOfExtCC"""
        return _Extrema.Extrema_CCacheOfExtCC_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_CCacheOfExtCC.SetCurve = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_SetCurve, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC.SetRange = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_SetRange, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC.CalculatePoints = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_CalculatePoints, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC.IsValid = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_IsValid, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC.Parameters = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_Parameters, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC.Points = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_Points, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC.CurvePtr = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_CurvePtr, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC.NbSamples = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_NbSamples, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC.FirstParameter = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_FirstParameter, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC.LastParameter = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_LastParameter, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC.TrimFirstParameter = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_TrimFirstParameter, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC.TrimLastParameter = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_TrimLastParameter, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC__kill_pointed, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC.GetHandle = new_instancemethod(_Extrema.Extrema_CCacheOfExtCC_GetHandle, None, Extrema_CCacheOfExtCC)
Extrema_CCacheOfExtCC_swigregister = _Extrema.Extrema_CCacheOfExtCC_swigregister
Extrema_CCacheOfExtCC_swigregister(Extrema_CCacheOfExtCC)

class Handle_Extrema_CCacheOfExtCC(OCC.Standard.Handle_Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_CCacheOfExtCC_swiginit(self, _Extrema.new_Handle_Extrema_CCacheOfExtCC(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_CCacheOfExtCC_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_CCacheOfExtCC.Nullify = new_instancemethod(_Extrema.Handle_Extrema_CCacheOfExtCC_Nullify, None, Handle_Extrema_CCacheOfExtCC)
Handle_Extrema_CCacheOfExtCC.IsNull = new_instancemethod(_Extrema.Handle_Extrema_CCacheOfExtCC_IsNull, None, Handle_Extrema_CCacheOfExtCC)
Handle_Extrema_CCacheOfExtCC.GetObject = new_instancemethod(_Extrema.Handle_Extrema_CCacheOfExtCC_GetObject, None, Handle_Extrema_CCacheOfExtCC)
Handle_Extrema_CCacheOfExtCC._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_CCacheOfExtCC__kill_pointed, None, Handle_Extrema_CCacheOfExtCC)
Handle_Extrema_CCacheOfExtCC_swigregister = _Extrema.Handle_Extrema_CCacheOfExtCC_swigregister
Handle_Extrema_CCacheOfExtCC_swigregister(Handle_Extrema_CCacheOfExtCC)

def Handle_Extrema_CCacheOfExtCC_DownCast(AnObject):
    return _Extrema.Handle_Extrema_CCacheOfExtCC_DownCast(AnObject)
Handle_Extrema_CCacheOfExtCC_DownCast = _Extrema.Handle_Extrema_CCacheOfExtCC_DownCast

class Extrema_Curve2dTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FirstParameter(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: float

        """
        return _Extrema.Extrema_Curve2dTool_FirstParameter(*args)

    FirstParameter = staticmethod(FirstParameter)

    def LastParameter(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: float

        """
        return _Extrema.Extrema_Curve2dTool_LastParameter(*args)

    LastParameter = staticmethod(LastParameter)

    def Continuity(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: GeomAbs_Shape

        """
        return _Extrema.Extrema_Curve2dTool_Continuity(*args)

    Continuity = staticmethod(Continuity)

    def NbIntervals(*args):
        """
        * If necessary, breaks the curve in intervals of continuity <S>. And returns the number of intervals.

        :param C:
        :type C: Adaptor2d_Curve2d &
        :param S:
        :type S: GeomAbs_Shape
        :rtype: int

        """
        return _Extrema.Extrema_Curve2dTool_NbIntervals(*args)

    NbIntervals = staticmethod(NbIntervals)

    def Intervals(*args):
        """
        * Stores in <T> the parameters bounding the intervals of continuity <S>.

        :param C:
        :type C: Adaptor2d_Curve2d &
        :param T:
        :type T: TColStd_Array1OfReal &
        :param S:
        :type S: GeomAbs_Shape
        :rtype: void

        """
        return _Extrema.Extrema_Curve2dTool_Intervals(*args)

    Intervals = staticmethod(Intervals)

    def IsClosed(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: bool

        """
        return _Extrema.Extrema_Curve2dTool_IsClosed(*args)

    IsClosed = staticmethod(IsClosed)

    def IsPeriodic(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: bool

        """
        return _Extrema.Extrema_Curve2dTool_IsPeriodic(*args)

    IsPeriodic = staticmethod(IsPeriodic)

    def Period(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: float

        """
        return _Extrema.Extrema_Curve2dTool_Period(*args)

    Period = staticmethod(Period)

    def Value(*args):
        """
        * Computes the point of parameter U on the curve.

        :param C:
        :type C: Adaptor2d_Curve2d &
        :param U:
        :type U: float
        :rtype: gp_Pnt2d

        """
        return _Extrema.Extrema_Curve2dTool_Value(*args)

    Value = staticmethod(Value)

    def D0(*args):
        """
        * Computes the point of parameter U on the curve.

        :param C:
        :type C: Adaptor2d_Curve2d &
        :param U:
        :type U: float
        :param P:
        :type P: gp_Pnt2d
        :rtype: void

        """
        return _Extrema.Extrema_Curve2dTool_D0(*args)

    D0 = staticmethod(D0)

    def D1(*args):
        """
        * Computes the point of parameter U on the curve with its first derivative.

        :param C:
        :type C: Adaptor2d_Curve2d &
        :param U:
        :type U: float
        :param P:
        :type P: gp_Pnt2d
        :param V:
        :type V: gp_Vec2d
        :rtype: void

        """
        return _Extrema.Extrema_Curve2dTool_D1(*args)

    D1 = staticmethod(D1)

    def D2(*args):
        """
        * Returns the point P of parameter U, the first and second derivatives V1 and V2.

        :param C:
        :type C: Adaptor2d_Curve2d &
        :param U:
        :type U: float
        :param P:
        :type P: gp_Pnt2d
        :param V1:
        :type V1: gp_Vec2d
        :param V2:
        :type V2: gp_Vec2d
        :rtype: void

        """
        return _Extrema.Extrema_Curve2dTool_D2(*args)

    D2 = staticmethod(D2)

    def D3(*args):
        """
        * Returns the point P of parameter U, the first, the second and the third derivative.

        :param C:
        :type C: Adaptor2d_Curve2d &
        :param U:
        :type U: float
        :param P:
        :type P: gp_Pnt2d
        :param V1:
        :type V1: gp_Vec2d
        :param V2:
        :type V2: gp_Vec2d
        :param V3:
        :type V3: gp_Vec2d
        :rtype: void

        """
        return _Extrema.Extrema_Curve2dTool_D3(*args)

    D3 = staticmethod(D3)

    def DN(*args):
        """
        * The returned vector gives the value of the derivative for the order of derivation N.

        :param C:
        :type C: Adaptor2d_Curve2d &
        :param U:
        :type U: float
        :param N:
        :type N: int
        :rtype: gp_Vec2d

        """
        return _Extrema.Extrema_Curve2dTool_DN(*args)

    DN = staticmethod(DN)

    def Resolution(*args):
        """
        * Returns the parametric resolution corresponding  to the real space resolution <R3d>.

        :param C:
        :type C: Adaptor2d_Curve2d &
        :param R3d:
        :type R3d: float
        :rtype: float

        """
        return _Extrema.Extrema_Curve2dTool_Resolution(*args)

    Resolution = staticmethod(Resolution)

    def GetType(*args):
        """
        * Returns the type of the curve in the current interval : Line, Circle, Ellipse, Hyperbola, Parabola, BezierCurve, BSplineCurve, OtherCurve.

        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: GeomAbs_CurveType

        """
        return _Extrema.Extrema_Curve2dTool_GetType(*args)

    GetType = staticmethod(GetType)

    def Line(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: gp_Lin2d

        """
        return _Extrema.Extrema_Curve2dTool_Line(*args)

    Line = staticmethod(Line)

    def Circle(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: gp_Circ2d

        """
        return _Extrema.Extrema_Curve2dTool_Circle(*args)

    Circle = staticmethod(Circle)

    def Ellipse(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: gp_Elips2d

        """
        return _Extrema.Extrema_Curve2dTool_Ellipse(*args)

    Ellipse = staticmethod(Ellipse)

    def Hyperbola(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: gp_Hypr2d

        """
        return _Extrema.Extrema_Curve2dTool_Hyperbola(*args)

    Hyperbola = staticmethod(Hyperbola)

    def Parabola(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: gp_Parab2d

        """
        return _Extrema.Extrema_Curve2dTool_Parabola(*args)

    Parabola = staticmethod(Parabola)

    def Degree(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: int

        """
        return _Extrema.Extrema_Curve2dTool_Degree(*args)

    Degree = staticmethod(Degree)

    def IsRational(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: bool

        """
        return _Extrema.Extrema_Curve2dTool_IsRational(*args)

    IsRational = staticmethod(IsRational)

    def NbPoles(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: int

        """
        return _Extrema.Extrema_Curve2dTool_NbPoles(*args)

    NbPoles = staticmethod(NbPoles)

    def NbKnots(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: int

        """
        return _Extrema.Extrema_Curve2dTool_NbKnots(*args)

    NbKnots = staticmethod(NbKnots)

    def Bezier(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: Handle_Geom2d_BezierCurve

        """
        return _Extrema.Extrema_Curve2dTool_Bezier(*args)

    Bezier = staticmethod(Bezier)

    def BSpline(*args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: Handle_Geom2d_BSplineCurve

        """
        return _Extrema.Extrema_Curve2dTool_BSpline(*args)

    BSpline = staticmethod(BSpline)

    def __init__(self):
        _Extrema.Extrema_Curve2dTool_swiginit(self, _Extrema.new_Extrema_Curve2dTool())

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_Curve2dTool._kill_pointed = new_instancemethod(_Extrema.Extrema_Curve2dTool__kill_pointed, None, Extrema_Curve2dTool)
Extrema_Curve2dTool_swigregister = _Extrema.Extrema_Curve2dTool_swigregister
Extrema_Curve2dTool_swigregister(Extrema_Curve2dTool)

def Extrema_Curve2dTool_FirstParameter(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: float

    """
    return _Extrema.Extrema_Curve2dTool_FirstParameter(*args)

def Extrema_Curve2dTool_LastParameter(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: float

    """
    return _Extrema.Extrema_Curve2dTool_LastParameter(*args)

def Extrema_Curve2dTool_Continuity(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: GeomAbs_Shape

    """
    return _Extrema.Extrema_Curve2dTool_Continuity(*args)

def Extrema_Curve2dTool_NbIntervals(*args):
    """
    * If necessary, breaks the curve in intervals of continuity <S>. And returns the number of intervals.

    :param C:
    :type C: Adaptor2d_Curve2d &
    :param S:
    :type S: GeomAbs_Shape
    :rtype: int

    """
    return _Extrema.Extrema_Curve2dTool_NbIntervals(*args)

def Extrema_Curve2dTool_Intervals(*args):
    """
    * Stores in <T> the parameters bounding the intervals of continuity <S>.

    :param C:
    :type C: Adaptor2d_Curve2d &
    :param T:
    :type T: TColStd_Array1OfReal &
    :param S:
    :type S: GeomAbs_Shape
    :rtype: void

    """
    return _Extrema.Extrema_Curve2dTool_Intervals(*args)

def Extrema_Curve2dTool_IsClosed(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: bool

    """
    return _Extrema.Extrema_Curve2dTool_IsClosed(*args)

def Extrema_Curve2dTool_IsPeriodic(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: bool

    """
    return _Extrema.Extrema_Curve2dTool_IsPeriodic(*args)

def Extrema_Curve2dTool_Period(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: float

    """
    return _Extrema.Extrema_Curve2dTool_Period(*args)

def Extrema_Curve2dTool_Value(*args):
    """
    * Computes the point of parameter U on the curve.

    :param C:
    :type C: Adaptor2d_Curve2d &
    :param U:
    :type U: float
    :rtype: gp_Pnt2d

    """
    return _Extrema.Extrema_Curve2dTool_Value(*args)

def Extrema_Curve2dTool_D0(*args):
    """
    * Computes the point of parameter U on the curve.

    :param C:
    :type C: Adaptor2d_Curve2d &
    :param U:
    :type U: float
    :param P:
    :type P: gp_Pnt2d
    :rtype: void

    """
    return _Extrema.Extrema_Curve2dTool_D0(*args)

def Extrema_Curve2dTool_D1(*args):
    """
    * Computes the point of parameter U on the curve with its first derivative.

    :param C:
    :type C: Adaptor2d_Curve2d &
    :param U:
    :type U: float
    :param P:
    :type P: gp_Pnt2d
    :param V:
    :type V: gp_Vec2d
    :rtype: void

    """
    return _Extrema.Extrema_Curve2dTool_D1(*args)

def Extrema_Curve2dTool_D2(*args):
    """
    * Returns the point P of parameter U, the first and second derivatives V1 and V2.

    :param C:
    :type C: Adaptor2d_Curve2d &
    :param U:
    :type U: float
    :param P:
    :type P: gp_Pnt2d
    :param V1:
    :type V1: gp_Vec2d
    :param V2:
    :type V2: gp_Vec2d
    :rtype: void

    """
    return _Extrema.Extrema_Curve2dTool_D2(*args)

def Extrema_Curve2dTool_D3(*args):
    """
    * Returns the point P of parameter U, the first, the second and the third derivative.

    :param C:
    :type C: Adaptor2d_Curve2d &
    :param U:
    :type U: float
    :param P:
    :type P: gp_Pnt2d
    :param V1:
    :type V1: gp_Vec2d
    :param V2:
    :type V2: gp_Vec2d
    :param V3:
    :type V3: gp_Vec2d
    :rtype: void

    """
    return _Extrema.Extrema_Curve2dTool_D3(*args)

def Extrema_Curve2dTool_DN(*args):
    """
    * The returned vector gives the value of the derivative for the order of derivation N.

    :param C:
    :type C: Adaptor2d_Curve2d &
    :param U:
    :type U: float
    :param N:
    :type N: int
    :rtype: gp_Vec2d

    """
    return _Extrema.Extrema_Curve2dTool_DN(*args)

def Extrema_Curve2dTool_Resolution(*args):
    """
    * Returns the parametric resolution corresponding  to the real space resolution <R3d>.

    :param C:
    :type C: Adaptor2d_Curve2d &
    :param R3d:
    :type R3d: float
    :rtype: float

    """
    return _Extrema.Extrema_Curve2dTool_Resolution(*args)

def Extrema_Curve2dTool_GetType(*args):
    """
    * Returns the type of the curve in the current interval : Line, Circle, Ellipse, Hyperbola, Parabola, BezierCurve, BSplineCurve, OtherCurve.

    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: GeomAbs_CurveType

    """
    return _Extrema.Extrema_Curve2dTool_GetType(*args)

def Extrema_Curve2dTool_Line(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: gp_Lin2d

    """
    return _Extrema.Extrema_Curve2dTool_Line(*args)

def Extrema_Curve2dTool_Circle(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: gp_Circ2d

    """
    return _Extrema.Extrema_Curve2dTool_Circle(*args)

def Extrema_Curve2dTool_Ellipse(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: gp_Elips2d

    """
    return _Extrema.Extrema_Curve2dTool_Ellipse(*args)

def Extrema_Curve2dTool_Hyperbola(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: gp_Hypr2d

    """
    return _Extrema.Extrema_Curve2dTool_Hyperbola(*args)

def Extrema_Curve2dTool_Parabola(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: gp_Parab2d

    """
    return _Extrema.Extrema_Curve2dTool_Parabola(*args)

def Extrema_Curve2dTool_Degree(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: int

    """
    return _Extrema.Extrema_Curve2dTool_Degree(*args)

def Extrema_Curve2dTool_IsRational(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: bool

    """
    return _Extrema.Extrema_Curve2dTool_IsRational(*args)

def Extrema_Curve2dTool_NbPoles(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: int

    """
    return _Extrema.Extrema_Curve2dTool_NbPoles(*args)

def Extrema_Curve2dTool_NbKnots(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: int

    """
    return _Extrema.Extrema_Curve2dTool_NbKnots(*args)

def Extrema_Curve2dTool_Bezier(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: Handle_Geom2d_BezierCurve

    """
    return _Extrema.Extrema_Curve2dTool_Bezier(*args)

def Extrema_Curve2dTool_BSpline(*args):
    """
    :param C:
    :type C: Adaptor2d_Curve2d &
    :rtype: Handle_Geom2d_BSplineCurve

    """
    return _Extrema.Extrema_Curve2dTool_BSpline(*args)

class Extrema_CurveTool(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def FirstParameter(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: float

        """
        return _Extrema.Extrema_CurveTool_FirstParameter(*args)

    FirstParameter = staticmethod(FirstParameter)

    def LastParameter(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: float

        """
        return _Extrema.Extrema_CurveTool_LastParameter(*args)

    LastParameter = staticmethod(LastParameter)

    def Continuity(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: GeomAbs_Shape

        """
        return _Extrema.Extrema_CurveTool_Continuity(*args)

    Continuity = staticmethod(Continuity)

    def NbIntervals(*args):
        """
        * Returns the number of intervals for continuity <S>. May be one if Continuity(me) >= <S>

        :param C:
        :type C: Adaptor3d_Curve &
        :param S:
        :type S: GeomAbs_Shape
        :rtype: int

        """
        return _Extrema.Extrema_CurveTool_NbIntervals(*args)

    NbIntervals = staticmethod(NbIntervals)

    def Intervals(*args):
        """
        * Stores in <T> the parameters bounding the intervals of continuity <S>.  The array must provide enough room to accomodate for the parameters. i.e. T.Length() > NbIntervals()

        :param C:
        :type C: Adaptor3d_Curve &
        :param T:
        :type T: TColStd_Array1OfReal &
        :param S:
        :type S: GeomAbs_Shape
        :rtype: void

        """
        return _Extrema.Extrema_CurveTool_Intervals(*args)

    Intervals = staticmethod(Intervals)

    def IsPeriodic(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: bool

        """
        return _Extrema.Extrema_CurveTool_IsPeriodic(*args)

    IsPeriodic = staticmethod(IsPeriodic)

    def Period(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: float

        """
        return _Extrema.Extrema_CurveTool_Period(*args)

    Period = staticmethod(Period)

    def Resolution(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param R3d:
        :type R3d: float
        :rtype: float

        """
        return _Extrema.Extrema_CurveTool_Resolution(*args)

    Resolution = staticmethod(Resolution)

    def GetType(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: GeomAbs_CurveType

        """
        return _Extrema.Extrema_CurveTool_GetType(*args)

    GetType = staticmethod(GetType)

    def Value(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param U:
        :type U: float
        :rtype: gp_Pnt

        """
        return _Extrema.Extrema_CurveTool_Value(*args)

    Value = staticmethod(Value)

    def D0(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param U:
        :type U: float
        :param P:
        :type P: gp_Pnt
        :rtype: void

        """
        return _Extrema.Extrema_CurveTool_D0(*args)

    D0 = staticmethod(D0)

    def D1(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param U:
        :type U: float
        :param P:
        :type P: gp_Pnt
        :param V:
        :type V: gp_Vec
        :rtype: void

        """
        return _Extrema.Extrema_CurveTool_D1(*args)

    D1 = staticmethod(D1)

    def D2(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param U:
        :type U: float
        :param P:
        :type P: gp_Pnt
        :param V1:
        :type V1: gp_Vec
        :param V2:
        :type V2: gp_Vec
        :rtype: void

        """
        return _Extrema.Extrema_CurveTool_D2(*args)

    D2 = staticmethod(D2)

    def D3(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param U:
        :type U: float
        :param P:
        :type P: gp_Pnt
        :param V1:
        :type V1: gp_Vec
        :param V2:
        :type V2: gp_Vec
        :param V3:
        :type V3: gp_Vec
        :rtype: void

        """
        return _Extrema.Extrema_CurveTool_D3(*args)

    D3 = staticmethod(D3)

    def DN(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param U:
        :type U: float
        :param N:
        :type N: int
        :rtype: gp_Vec

        """
        return _Extrema.Extrema_CurveTool_DN(*args)

    DN = staticmethod(DN)

    def Line(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: gp_Lin

        """
        return _Extrema.Extrema_CurveTool_Line(*args)

    Line = staticmethod(Line)

    def Circle(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: gp_Circ

        """
        return _Extrema.Extrema_CurveTool_Circle(*args)

    Circle = staticmethod(Circle)

    def Ellipse(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: gp_Elips

        """
        return _Extrema.Extrema_CurveTool_Ellipse(*args)

    Ellipse = staticmethod(Ellipse)

    def Hyperbola(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: gp_Hypr

        """
        return _Extrema.Extrema_CurveTool_Hyperbola(*args)

    Hyperbola = staticmethod(Hyperbola)

    def Parabola(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: gp_Parab

        """
        return _Extrema.Extrema_CurveTool_Parabola(*args)

    Parabola = staticmethod(Parabola)

    def Degree(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: int

        """
        return _Extrema.Extrema_CurveTool_Degree(*args)

    Degree = staticmethod(Degree)

    def IsRational(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: bool

        """
        return _Extrema.Extrema_CurveTool_IsRational(*args)

    IsRational = staticmethod(IsRational)

    def NbPoles(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: int

        """
        return _Extrema.Extrema_CurveTool_NbPoles(*args)

    NbPoles = staticmethod(NbPoles)

    def NbKnots(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: int

        """
        return _Extrema.Extrema_CurveTool_NbKnots(*args)

    NbKnots = staticmethod(NbKnots)

    def Bezier(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: Handle_Geom_BezierCurve

        """
        return _Extrema.Extrema_CurveTool_Bezier(*args)

    Bezier = staticmethod(Bezier)

    def BSpline(*args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: Handle_Geom_BSplineCurve

        """
        return _Extrema.Extrema_CurveTool_BSpline(*args)

    BSpline = staticmethod(BSpline)

    def __init__(self):
        _Extrema.Extrema_CurveTool_swiginit(self, _Extrema.new_Extrema_CurveTool())

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_CurveTool._kill_pointed = new_instancemethod(_Extrema.Extrema_CurveTool__kill_pointed, None, Extrema_CurveTool)
Extrema_CurveTool_swigregister = _Extrema.Extrema_CurveTool_swigregister
Extrema_CurveTool_swigregister(Extrema_CurveTool)

def Extrema_CurveTool_FirstParameter(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: float

    """
    return _Extrema.Extrema_CurveTool_FirstParameter(*args)

def Extrema_CurveTool_LastParameter(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: float

    """
    return _Extrema.Extrema_CurveTool_LastParameter(*args)

def Extrema_CurveTool_Continuity(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: GeomAbs_Shape

    """
    return _Extrema.Extrema_CurveTool_Continuity(*args)

def Extrema_CurveTool_NbIntervals(*args):
    """
    * Returns the number of intervals for continuity <S>. May be one if Continuity(me) >= <S>

    :param C:
    :type C: Adaptor3d_Curve &
    :param S:
    :type S: GeomAbs_Shape
    :rtype: int

    """
    return _Extrema.Extrema_CurveTool_NbIntervals(*args)

def Extrema_CurveTool_Intervals(*args):
    """
    * Stores in <T> the parameters bounding the intervals of continuity <S>.  The array must provide enough room to accomodate for the parameters. i.e. T.Length() > NbIntervals()

    :param C:
    :type C: Adaptor3d_Curve &
    :param T:
    :type T: TColStd_Array1OfReal &
    :param S:
    :type S: GeomAbs_Shape
    :rtype: void

    """
    return _Extrema.Extrema_CurveTool_Intervals(*args)

def Extrema_CurveTool_IsPeriodic(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: bool

    """
    return _Extrema.Extrema_CurveTool_IsPeriodic(*args)

def Extrema_CurveTool_Period(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: float

    """
    return _Extrema.Extrema_CurveTool_Period(*args)

def Extrema_CurveTool_Resolution(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :param R3d:
    :type R3d: float
    :rtype: float

    """
    return _Extrema.Extrema_CurveTool_Resolution(*args)

def Extrema_CurveTool_GetType(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: GeomAbs_CurveType

    """
    return _Extrema.Extrema_CurveTool_GetType(*args)

def Extrema_CurveTool_Value(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :param U:
    :type U: float
    :rtype: gp_Pnt

    """
    return _Extrema.Extrema_CurveTool_Value(*args)

def Extrema_CurveTool_D0(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :param U:
    :type U: float
    :param P:
    :type P: gp_Pnt
    :rtype: void

    """
    return _Extrema.Extrema_CurveTool_D0(*args)

def Extrema_CurveTool_D1(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :param U:
    :type U: float
    :param P:
    :type P: gp_Pnt
    :param V:
    :type V: gp_Vec
    :rtype: void

    """
    return _Extrema.Extrema_CurveTool_D1(*args)

def Extrema_CurveTool_D2(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :param U:
    :type U: float
    :param P:
    :type P: gp_Pnt
    :param V1:
    :type V1: gp_Vec
    :param V2:
    :type V2: gp_Vec
    :rtype: void

    """
    return _Extrema.Extrema_CurveTool_D2(*args)

def Extrema_CurveTool_D3(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :param U:
    :type U: float
    :param P:
    :type P: gp_Pnt
    :param V1:
    :type V1: gp_Vec
    :param V2:
    :type V2: gp_Vec
    :param V3:
    :type V3: gp_Vec
    :rtype: void

    """
    return _Extrema.Extrema_CurveTool_D3(*args)

def Extrema_CurveTool_DN(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :param U:
    :type U: float
    :param N:
    :type N: int
    :rtype: gp_Vec

    """
    return _Extrema.Extrema_CurveTool_DN(*args)

def Extrema_CurveTool_Line(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: gp_Lin

    """
    return _Extrema.Extrema_CurveTool_Line(*args)

def Extrema_CurveTool_Circle(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: gp_Circ

    """
    return _Extrema.Extrema_CurveTool_Circle(*args)

def Extrema_CurveTool_Ellipse(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: gp_Elips

    """
    return _Extrema.Extrema_CurveTool_Ellipse(*args)

def Extrema_CurveTool_Hyperbola(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: gp_Hypr

    """
    return _Extrema.Extrema_CurveTool_Hyperbola(*args)

def Extrema_CurveTool_Parabola(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: gp_Parab

    """
    return _Extrema.Extrema_CurveTool_Parabola(*args)

def Extrema_CurveTool_Degree(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: int

    """
    return _Extrema.Extrema_CurveTool_Degree(*args)

def Extrema_CurveTool_IsRational(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: bool

    """
    return _Extrema.Extrema_CurveTool_IsRational(*args)

def Extrema_CurveTool_NbPoles(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: int

    """
    return _Extrema.Extrema_CurveTool_NbPoles(*args)

def Extrema_CurveTool_NbKnots(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: int

    """
    return _Extrema.Extrema_CurveTool_NbKnots(*args)

def Extrema_CurveTool_Bezier(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: Handle_Geom_BezierCurve

    """
    return _Extrema.Extrema_CurveTool_Bezier(*args)

def Extrema_CurveTool_BSpline(*args):
    """
    :param C:
    :type C: Adaptor3d_Curve &
    :rtype: Handle_Geom_BSplineCurve

    """
    return _Extrema.Extrema_CurveTool_BSpline(*args)

class Extrema_ECC2dOfExtCC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :param C2:
        :type C2: Adaptor2d_Curve2d &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :param C2:
        :type C2: Adaptor2d_Curve2d &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param Vinf:
        :type Vinf: float
        :param Vsup:
        :type Vsup: float
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        _Extrema.Extrema_ECC2dOfExtCC2d_swiginit(self, _Extrema.new_Extrema_ECC2dOfExtCC2d(*args))

    def SetCurveCache(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param theCache:
        :type theCache: Handle_Extrema_CCache2dOfExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_ECC2dOfExtCC2d_SetCurveCache(self, *args)


    def SetTolerance(self, *args):
        """
        :param Tol:
        :type Tol: float
        :rtype: None

        """
        return _Extrema.Extrema_ECC2dOfExtCC2d_SetTolerance(self, *args)


    def Perform(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_ECC2dOfExtCC2d_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_ECC2dOfExtCC2d_IsDone(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_ECC2dOfExtCC2d_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N: default value is 1
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ECC2dOfExtCC2d_SquareDistance(self, *args)


    def Points(self, *args):
        """
        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv2d &
        :param P2:
        :type P2: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_ECC2dOfExtCC2d_Points(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ECC2dOfExtCC2d.SetCurveCache = new_instancemethod(_Extrema.Extrema_ECC2dOfExtCC2d_SetCurveCache, None, Extrema_ECC2dOfExtCC2d)
Extrema_ECC2dOfExtCC2d.SetTolerance = new_instancemethod(_Extrema.Extrema_ECC2dOfExtCC2d_SetTolerance, None, Extrema_ECC2dOfExtCC2d)
Extrema_ECC2dOfExtCC2d.Perform = new_instancemethod(_Extrema.Extrema_ECC2dOfExtCC2d_Perform, None, Extrema_ECC2dOfExtCC2d)
Extrema_ECC2dOfExtCC2d.IsDone = new_instancemethod(_Extrema.Extrema_ECC2dOfExtCC2d_IsDone, None, Extrema_ECC2dOfExtCC2d)
Extrema_ECC2dOfExtCC2d.NbExt = new_instancemethod(_Extrema.Extrema_ECC2dOfExtCC2d_NbExt, None, Extrema_ECC2dOfExtCC2d)
Extrema_ECC2dOfExtCC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_ECC2dOfExtCC2d_SquareDistance, None, Extrema_ECC2dOfExtCC2d)
Extrema_ECC2dOfExtCC2d.Points = new_instancemethod(_Extrema.Extrema_ECC2dOfExtCC2d_Points, None, Extrema_ECC2dOfExtCC2d)
Extrema_ECC2dOfExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_ECC2dOfExtCC2d__kill_pointed, None, Extrema_ECC2dOfExtCC2d)
Extrema_ECC2dOfExtCC2d_swigregister = _Extrema.Extrema_ECC2dOfExtCC2d_swigregister
Extrema_ECC2dOfExtCC2d_swigregister(Extrema_ECC2dOfExtCC2d)

class Extrema_ECCOfExtCC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param C1:
        :type C1: Adaptor3d_Curve &
        :param C2:
        :type C2: Adaptor3d_Curve &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        :param C1:
        :type C1: Adaptor3d_Curve &
        :param C2:
        :type C2: Adaptor3d_Curve &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param Vinf:
        :type Vinf: float
        :param Vsup:
        :type Vsup: float
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        _Extrema.Extrema_ECCOfExtCC_swiginit(self, _Extrema.new_Extrema_ECCOfExtCC(*args))

    def SetCurveCache(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param theCache:
        :type theCache: Handle_Extrema_CCacheOfExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_ECCOfExtCC_SetCurveCache(self, *args)


    def SetTolerance(self, *args):
        """
        :param Tol:
        :type Tol: float
        :rtype: None

        """
        return _Extrema.Extrema_ECCOfExtCC_SetTolerance(self, *args)


    def Perform(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_ECCOfExtCC_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_ECCOfExtCC_IsDone(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_ECCOfExtCC_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N: default value is 1
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ECCOfExtCC_SquareDistance(self, *args)


    def Points(self, *args):
        """
        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv &
        :param P2:
        :type P2: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_ECCOfExtCC_Points(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ECCOfExtCC.SetCurveCache = new_instancemethod(_Extrema.Extrema_ECCOfExtCC_SetCurveCache, None, Extrema_ECCOfExtCC)
Extrema_ECCOfExtCC.SetTolerance = new_instancemethod(_Extrema.Extrema_ECCOfExtCC_SetTolerance, None, Extrema_ECCOfExtCC)
Extrema_ECCOfExtCC.Perform = new_instancemethod(_Extrema.Extrema_ECCOfExtCC_Perform, None, Extrema_ECCOfExtCC)
Extrema_ECCOfExtCC.IsDone = new_instancemethod(_Extrema.Extrema_ECCOfExtCC_IsDone, None, Extrema_ECCOfExtCC)
Extrema_ECCOfExtCC.NbExt = new_instancemethod(_Extrema.Extrema_ECCOfExtCC_NbExt, None, Extrema_ECCOfExtCC)
Extrema_ECCOfExtCC.SquareDistance = new_instancemethod(_Extrema.Extrema_ECCOfExtCC_SquareDistance, None, Extrema_ECCOfExtCC)
Extrema_ECCOfExtCC.Points = new_instancemethod(_Extrema.Extrema_ECCOfExtCC_Points, None, Extrema_ECCOfExtCC)
Extrema_ECCOfExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_ECCOfExtCC__kill_pointed, None, Extrema_ECCOfExtCC)
Extrema_ECCOfExtCC_swigregister = _Extrema.Extrema_ECCOfExtCC_swigregister
Extrema_ECCOfExtCC_swigregister(Extrema_ECCOfExtCC)

class Extrema_ELCC2dOfLocateExtCC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :param C2:
        :type C2: Adaptor2d_Curve2d &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :param C2:
        :type C2: Adaptor2d_Curve2d &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param Vinf:
        :type Vinf: float
        :param Vsup:
        :type Vsup: float
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        _Extrema.Extrema_ELCC2dOfLocateExtCC2d_swiginit(self, _Extrema.new_Extrema_ELCC2dOfLocateExtCC2d(*args))

    def SetCurveCache(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param theCache:
        :type theCache: Handle_Extrema_LCCache2dOfLocateExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_ELCC2dOfLocateExtCC2d_SetCurveCache(self, *args)


    def SetTolerance(self, *args):
        """
        :param Tol:
        :type Tol: float
        :rtype: None

        """
        return _Extrema.Extrema_ELCC2dOfLocateExtCC2d_SetTolerance(self, *args)


    def Perform(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_ELCC2dOfLocateExtCC2d_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_ELCC2dOfLocateExtCC2d_IsDone(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_ELCC2dOfLocateExtCC2d_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N: default value is 1
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ELCC2dOfLocateExtCC2d_SquareDistance(self, *args)


    def Points(self, *args):
        """
        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv2d &
        :param P2:
        :type P2: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_ELCC2dOfLocateExtCC2d_Points(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ELCC2dOfLocateExtCC2d.SetCurveCache = new_instancemethod(_Extrema.Extrema_ELCC2dOfLocateExtCC2d_SetCurveCache, None, Extrema_ELCC2dOfLocateExtCC2d)
Extrema_ELCC2dOfLocateExtCC2d.SetTolerance = new_instancemethod(_Extrema.Extrema_ELCC2dOfLocateExtCC2d_SetTolerance, None, Extrema_ELCC2dOfLocateExtCC2d)
Extrema_ELCC2dOfLocateExtCC2d.Perform = new_instancemethod(_Extrema.Extrema_ELCC2dOfLocateExtCC2d_Perform, None, Extrema_ELCC2dOfLocateExtCC2d)
Extrema_ELCC2dOfLocateExtCC2d.IsDone = new_instancemethod(_Extrema.Extrema_ELCC2dOfLocateExtCC2d_IsDone, None, Extrema_ELCC2dOfLocateExtCC2d)
Extrema_ELCC2dOfLocateExtCC2d.NbExt = new_instancemethod(_Extrema.Extrema_ELCC2dOfLocateExtCC2d_NbExt, None, Extrema_ELCC2dOfLocateExtCC2d)
Extrema_ELCC2dOfLocateExtCC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_ELCC2dOfLocateExtCC2d_SquareDistance, None, Extrema_ELCC2dOfLocateExtCC2d)
Extrema_ELCC2dOfLocateExtCC2d.Points = new_instancemethod(_Extrema.Extrema_ELCC2dOfLocateExtCC2d_Points, None, Extrema_ELCC2dOfLocateExtCC2d)
Extrema_ELCC2dOfLocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_ELCC2dOfLocateExtCC2d__kill_pointed, None, Extrema_ELCC2dOfLocateExtCC2d)
Extrema_ELCC2dOfLocateExtCC2d_swigregister = _Extrema.Extrema_ELCC2dOfLocateExtCC2d_swigregister
Extrema_ELCC2dOfLocateExtCC2d_swigregister(Extrema_ELCC2dOfLocateExtCC2d)

class Extrema_ELCCOfLocateExtCC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param C1:
        :type C1: Adaptor3d_Curve &
        :param C2:
        :type C2: Adaptor3d_Curve &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        :param C1:
        :type C1: Adaptor3d_Curve &
        :param C2:
        :type C2: Adaptor3d_Curve &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param Vinf:
        :type Vinf: float
        :param Vsup:
        :type Vsup: float
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        _Extrema.Extrema_ELCCOfLocateExtCC_swiginit(self, _Extrema.new_Extrema_ELCCOfLocateExtCC(*args))

    def SetCurveCache(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param theCache:
        :type theCache: Handle_Extrema_LCCacheOfLocateExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_ELCCOfLocateExtCC_SetCurveCache(self, *args)


    def SetTolerance(self, *args):
        """
        :param Tol:
        :type Tol: float
        :rtype: None

        """
        return _Extrema.Extrema_ELCCOfLocateExtCC_SetTolerance(self, *args)


    def Perform(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_ELCCOfLocateExtCC_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_ELCCOfLocateExtCC_IsDone(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_ELCCOfLocateExtCC_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N: default value is 1
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ELCCOfLocateExtCC_SquareDistance(self, *args)


    def Points(self, *args):
        """
        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv &
        :param P2:
        :type P2: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_ELCCOfLocateExtCC_Points(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ELCCOfLocateExtCC.SetCurveCache = new_instancemethod(_Extrema.Extrema_ELCCOfLocateExtCC_SetCurveCache, None, Extrema_ELCCOfLocateExtCC)
Extrema_ELCCOfLocateExtCC.SetTolerance = new_instancemethod(_Extrema.Extrema_ELCCOfLocateExtCC_SetTolerance, None, Extrema_ELCCOfLocateExtCC)
Extrema_ELCCOfLocateExtCC.Perform = new_instancemethod(_Extrema.Extrema_ELCCOfLocateExtCC_Perform, None, Extrema_ELCCOfLocateExtCC)
Extrema_ELCCOfLocateExtCC.IsDone = new_instancemethod(_Extrema.Extrema_ELCCOfLocateExtCC_IsDone, None, Extrema_ELCCOfLocateExtCC)
Extrema_ELCCOfLocateExtCC.NbExt = new_instancemethod(_Extrema.Extrema_ELCCOfLocateExtCC_NbExt, None, Extrema_ELCCOfLocateExtCC)
Extrema_ELCCOfLocateExtCC.SquareDistance = new_instancemethod(_Extrema.Extrema_ELCCOfLocateExtCC_SquareDistance, None, Extrema_ELCCOfLocateExtCC)
Extrema_ELCCOfLocateExtCC.Points = new_instancemethod(_Extrema.Extrema_ELCCOfLocateExtCC_Points, None, Extrema_ELCCOfLocateExtCC)
Extrema_ELCCOfLocateExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_ELCCOfLocateExtCC__kill_pointed, None, Extrema_ELCCOfLocateExtCC)
Extrema_ELCCOfLocateExtCC_swigregister = _Extrema.Extrema_ELCCOfLocateExtCC_swigregister
Extrema_ELCCOfLocateExtCC_swigregister(Extrema_ELCCOfLocateExtCC)

class Extrema_ELPCOfLocateExtPC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param TolF: default value is 1.0e-10
        :type TolF: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :param TolF: default value is 1.0e-10
        :type TolF: float
        :rtype: None

        """
        _Extrema.Extrema_ELPCOfLocateExtPC_swiginit(self, _Extrema.new_Extrema_ELPCOfLocateExtPC(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param TolF: default value is 1.0e-10
        :type TolF: float
        :rtype: None

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC_SquareDistance(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC_NbExt(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC_Point(self, *args)


    def TrimmedSquareDistances(self, *args):
        """
        :param dist1:
        :type dist1: float &
        :param dist2:
        :type dist2: float &
        :param P1:
        :type P1: gp_Pnt
        :param P2:
        :type P2: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC_TrimmedSquareDistances(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ELPCOfLocateExtPC.Initialize = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC_Initialize, None, Extrema_ELPCOfLocateExtPC)
Extrema_ELPCOfLocateExtPC.Perform = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC_Perform, None, Extrema_ELPCOfLocateExtPC)
Extrema_ELPCOfLocateExtPC.IsDone = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC_IsDone, None, Extrema_ELPCOfLocateExtPC)
Extrema_ELPCOfLocateExtPC.SquareDistance = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC_SquareDistance, None, Extrema_ELPCOfLocateExtPC)
Extrema_ELPCOfLocateExtPC.NbExt = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC_NbExt, None, Extrema_ELPCOfLocateExtPC)
Extrema_ELPCOfLocateExtPC.IsMin = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC_IsMin, None, Extrema_ELPCOfLocateExtPC)
Extrema_ELPCOfLocateExtPC.Point = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC_Point, None, Extrema_ELPCOfLocateExtPC)
Extrema_ELPCOfLocateExtPC.TrimmedSquareDistances = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC_TrimmedSquareDistances, None, Extrema_ELPCOfLocateExtPC)
Extrema_ELPCOfLocateExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC__kill_pointed, None, Extrema_ELPCOfLocateExtPC)
Extrema_ELPCOfLocateExtPC_swigregister = _Extrema.Extrema_ELPCOfLocateExtPC_swigregister
Extrema_ELPCOfLocateExtPC_swigregister(Extrema_ELPCOfLocateExtPC)

class Extrema_ELPCOfLocateExtPC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param TolF: default value is 1.0e-10
        :type TolF: float
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param TolF: default value is 1.0e-10
        :type TolF: float
        :rtype: None

        """
        _Extrema.Extrema_ELPCOfLocateExtPC2d_swiginit(self, _Extrema.new_Extrema_ELPCOfLocateExtPC2d(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param TolF: default value is 1.0e-10
        :type TolF: float
        :rtype: None

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC2d_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt2d
        :rtype: None

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC2d_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC2d_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC2d_SquareDistance(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC2d_NbExt(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC2d_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC2d_Point(self, *args)


    def TrimmedSquareDistances(self, *args):
        """
        :param dist1:
        :type dist1: float &
        :param dist2:
        :type dist2: float &
        :param P1:
        :type P1: gp_Pnt2d
        :param P2:
        :type P2: gp_Pnt2d
        :rtype: None

        """
        return _Extrema.Extrema_ELPCOfLocateExtPC2d_TrimmedSquareDistances(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ELPCOfLocateExtPC2d.Initialize = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC2d_Initialize, None, Extrema_ELPCOfLocateExtPC2d)
Extrema_ELPCOfLocateExtPC2d.Perform = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC2d_Perform, None, Extrema_ELPCOfLocateExtPC2d)
Extrema_ELPCOfLocateExtPC2d.IsDone = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC2d_IsDone, None, Extrema_ELPCOfLocateExtPC2d)
Extrema_ELPCOfLocateExtPC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC2d_SquareDistance, None, Extrema_ELPCOfLocateExtPC2d)
Extrema_ELPCOfLocateExtPC2d.NbExt = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC2d_NbExt, None, Extrema_ELPCOfLocateExtPC2d)
Extrema_ELPCOfLocateExtPC2d.IsMin = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC2d_IsMin, None, Extrema_ELPCOfLocateExtPC2d)
Extrema_ELPCOfLocateExtPC2d.Point = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC2d_Point, None, Extrema_ELPCOfLocateExtPC2d)
Extrema_ELPCOfLocateExtPC2d.TrimmedSquareDistances = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC2d_TrimmedSquareDistances, None, Extrema_ELPCOfLocateExtPC2d)
Extrema_ELPCOfLocateExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_ELPCOfLocateExtPC2d__kill_pointed, None, Extrema_ELPCOfLocateExtPC2d)
Extrema_ELPCOfLocateExtPC2d_swigregister = _Extrema.Extrema_ELPCOfLocateExtPC2d_swigregister
Extrema_ELPCOfLocateExtPC2d_swigregister(Extrema_ELPCOfLocateExtPC2d)

class Extrema_EPCOfELPCOfLocateExtPC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :param NbU:
        :type NbU: int
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :param NbU:
        :type NbU: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        """
        _Extrema.Extrema_EPCOfELPCOfLocateExtPC_swiginit(self, _Extrema.new_Extrema_EPCOfELPCOfLocateExtPC(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param NbU:
        :type NbU: int
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param C:
        :type C: Adaptor3d_Curve &
        :param NbU:
        :type NbU: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: None

        :param NbU:
        :type NbU: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC_IsDone(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_EPCOfELPCOfLocateExtPC.Initialize = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC_Initialize, None, Extrema_EPCOfELPCOfLocateExtPC)
Extrema_EPCOfELPCOfLocateExtPC.Perform = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC_Perform, None, Extrema_EPCOfELPCOfLocateExtPC)
Extrema_EPCOfELPCOfLocateExtPC.IsDone = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC_IsDone, None, Extrema_EPCOfELPCOfLocateExtPC)
Extrema_EPCOfELPCOfLocateExtPC.NbExt = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC_NbExt, None, Extrema_EPCOfELPCOfLocateExtPC)
Extrema_EPCOfELPCOfLocateExtPC.SquareDistance = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC_SquareDistance, None, Extrema_EPCOfELPCOfLocateExtPC)
Extrema_EPCOfELPCOfLocateExtPC.IsMin = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC_IsMin, None, Extrema_EPCOfELPCOfLocateExtPC)
Extrema_EPCOfELPCOfLocateExtPC.Point = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC_Point, None, Extrema_EPCOfELPCOfLocateExtPC)
Extrema_EPCOfELPCOfLocateExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC__kill_pointed, None, Extrema_EPCOfELPCOfLocateExtPC)
Extrema_EPCOfELPCOfLocateExtPC_swigregister = _Extrema.Extrema_EPCOfELPCOfLocateExtPC_swigregister
Extrema_EPCOfELPCOfLocateExtPC_swigregister(Extrema_EPCOfELPCOfLocateExtPC)

class Extrema_EPCOfELPCOfLocateExtPC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param NbU:
        :type NbU: int
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param NbU:
        :type NbU: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        """
        _Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_swiginit(self, _Extrema.new_Extrema_EPCOfELPCOfLocateExtPC2d(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param NbU:
        :type NbU: int
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param C:
        :type C: Adaptor2d_Curve2d &
        :param NbU:
        :type NbU: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: None

        :param NbU:
        :type NbU: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt2d
        :rtype: None

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_IsDone(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_EPCOfELPCOfLocateExtPC2d.Initialize = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_Initialize, None, Extrema_EPCOfELPCOfLocateExtPC2d)
Extrema_EPCOfELPCOfLocateExtPC2d.Perform = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_Perform, None, Extrema_EPCOfELPCOfLocateExtPC2d)
Extrema_EPCOfELPCOfLocateExtPC2d.IsDone = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_IsDone, None, Extrema_EPCOfELPCOfLocateExtPC2d)
Extrema_EPCOfELPCOfLocateExtPC2d.NbExt = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_NbExt, None, Extrema_EPCOfELPCOfLocateExtPC2d)
Extrema_EPCOfELPCOfLocateExtPC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_SquareDistance, None, Extrema_EPCOfELPCOfLocateExtPC2d)
Extrema_EPCOfELPCOfLocateExtPC2d.IsMin = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_IsMin, None, Extrema_EPCOfELPCOfLocateExtPC2d)
Extrema_EPCOfELPCOfLocateExtPC2d.Point = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_Point, None, Extrema_EPCOfELPCOfLocateExtPC2d)
Extrema_EPCOfELPCOfLocateExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_EPCOfELPCOfLocateExtPC2d__kill_pointed, None, Extrema_EPCOfELPCOfLocateExtPC2d)
Extrema_EPCOfELPCOfLocateExtPC2d_swigregister = _Extrema.Extrema_EPCOfELPCOfLocateExtPC2d_swigregister
Extrema_EPCOfELPCOfLocateExtPC2d_swigregister(Extrema_EPCOfELPCOfLocateExtPC2d)

class Extrema_EPCOfExtPC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :param NbU:
        :type NbU: int
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :param NbU:
        :type NbU: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        """
        _Extrema.Extrema_EPCOfExtPC_swiginit(self, _Extrema.new_Extrema_EPCOfExtPC(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param NbU:
        :type NbU: int
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param C:
        :type C: Adaptor3d_Curve &
        :param NbU:
        :type NbU: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: None

        :param NbU:
        :type NbU: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        """
        return _Extrema.Extrema_EPCOfExtPC_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_EPCOfExtPC_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_EPCOfExtPC_IsDone(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_EPCOfExtPC_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_EPCOfExtPC_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_EPCOfExtPC_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_EPCOfExtPC_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_EPCOfExtPC.Initialize = new_instancemethod(_Extrema.Extrema_EPCOfExtPC_Initialize, None, Extrema_EPCOfExtPC)
Extrema_EPCOfExtPC.Perform = new_instancemethod(_Extrema.Extrema_EPCOfExtPC_Perform, None, Extrema_EPCOfExtPC)
Extrema_EPCOfExtPC.IsDone = new_instancemethod(_Extrema.Extrema_EPCOfExtPC_IsDone, None, Extrema_EPCOfExtPC)
Extrema_EPCOfExtPC.NbExt = new_instancemethod(_Extrema.Extrema_EPCOfExtPC_NbExt, None, Extrema_EPCOfExtPC)
Extrema_EPCOfExtPC.SquareDistance = new_instancemethod(_Extrema.Extrema_EPCOfExtPC_SquareDistance, None, Extrema_EPCOfExtPC)
Extrema_EPCOfExtPC.IsMin = new_instancemethod(_Extrema.Extrema_EPCOfExtPC_IsMin, None, Extrema_EPCOfExtPC)
Extrema_EPCOfExtPC.Point = new_instancemethod(_Extrema.Extrema_EPCOfExtPC_Point, None, Extrema_EPCOfExtPC)
Extrema_EPCOfExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_EPCOfExtPC__kill_pointed, None, Extrema_EPCOfExtPC)
Extrema_EPCOfExtPC_swigregister = _Extrema.Extrema_EPCOfExtPC_swigregister
Extrema_EPCOfExtPC_swigregister(Extrema_EPCOfExtPC)

class Extrema_EPCOfExtPC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param NbU:
        :type NbU: int
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param NbU:
        :type NbU: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        """
        _Extrema.Extrema_EPCOfExtPC2d_swiginit(self, _Extrema.new_Extrema_EPCOfExtPC2d(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param NbU:
        :type NbU: int
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param C:
        :type C: Adaptor2d_Curve2d &
        :param NbU:
        :type NbU: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: None

        :param NbU:
        :type NbU: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :param TolF:
        :type TolF: float
        :rtype: None

        """
        return _Extrema.Extrema_EPCOfExtPC2d_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt2d
        :rtype: None

        """
        return _Extrema.Extrema_EPCOfExtPC2d_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_EPCOfExtPC2d_IsDone(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_EPCOfExtPC2d_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_EPCOfExtPC2d_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_EPCOfExtPC2d_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_EPCOfExtPC2d_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_EPCOfExtPC2d.Initialize = new_instancemethod(_Extrema.Extrema_EPCOfExtPC2d_Initialize, None, Extrema_EPCOfExtPC2d)
Extrema_EPCOfExtPC2d.Perform = new_instancemethod(_Extrema.Extrema_EPCOfExtPC2d_Perform, None, Extrema_EPCOfExtPC2d)
Extrema_EPCOfExtPC2d.IsDone = new_instancemethod(_Extrema.Extrema_EPCOfExtPC2d_IsDone, None, Extrema_EPCOfExtPC2d)
Extrema_EPCOfExtPC2d.NbExt = new_instancemethod(_Extrema.Extrema_EPCOfExtPC2d_NbExt, None, Extrema_EPCOfExtPC2d)
Extrema_EPCOfExtPC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_EPCOfExtPC2d_SquareDistance, None, Extrema_EPCOfExtPC2d)
Extrema_EPCOfExtPC2d.IsMin = new_instancemethod(_Extrema.Extrema_EPCOfExtPC2d_IsMin, None, Extrema_EPCOfExtPC2d)
Extrema_EPCOfExtPC2d.Point = new_instancemethod(_Extrema.Extrema_EPCOfExtPC2d_Point, None, Extrema_EPCOfExtPC2d)
Extrema_EPCOfExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_EPCOfExtPC2d__kill_pointed, None, Extrema_EPCOfExtPC2d)
Extrema_EPCOfExtPC2d_swigregister = _Extrema.Extrema_EPCOfExtPC2d_swigregister
Extrema_EPCOfExtPC2d_swigregister(Extrema_EPCOfExtPC2d)

class Extrema_ExtCC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param TolC1: default value is 1.0e-10
        :type TolC1: float
        :param TolC2: default value is 1.0e-10
        :type TolC2: float
        :rtype: None

        :param C1:
        :type C1: Adaptor3d_Curve &
        :param C2:
        :type C2: Adaptor3d_Curve &
        :param TolC1: default value is 1.0e-10
        :type TolC1: float
        :param TolC2: default value is 1.0e-10
        :type TolC2: float
        :rtype: None

        :param C1:
        :type C1: Adaptor3d_Curve &
        :param C2:
        :type C2: Adaptor3d_Curve &
        :param U1:
        :type U1: float
        :param U2:
        :type U2: float
        :param V1:
        :type V1: float
        :param V2:
        :type V2: float
        :param TolC1: default value is 1.0e-10
        :type TolC1: float
        :param TolC2: default value is 1.0e-10
        :type TolC2: float
        :rtype: None

        """
        _Extrema.Extrema_ExtCC_swiginit(self, _Extrema.new_Extrema_ExtCC(*args))

    def SetCurve(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: None

        :param theRank:
        :type theRank: int
        :param C:
        :type C: Adaptor3d_Curve &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtCC_SetCurve(self, *args)


    def SetRange(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtCC_SetRange(self, *args)


    def SetTolerance(self, *args):
        """
        :param theRank:
        :type theRank: int
        :param Tol:
        :type Tol: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtCC_SetTolerance(self, *args)


    def Perform(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_ExtCC_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_ExtCC_IsDone(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_ExtCC_NbExt(self, *args)


    def IsParallel(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_ExtCC_IsParallel(self, *args)


    def SquareDistance(self, *args):
        """
        :param N: default value is 1
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtCC_SquareDistance(self, *args)


    def Points(self, *args):
        """
        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv &
        :param P2:
        :type P2: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_ExtCC_Points(self, *args)


    def TrimmedSquareDistances(self, *args):
        """
        :param dist11:
        :type dist11: float &
        :param distP12:
        :type distP12: float &
        :param distP21:
        :type distP21: float &
        :param distP22:
        :type distP22: float &
        :param P11:
        :type P11: gp_Pnt
        :param P12:
        :type P12: gp_Pnt
        :param P21:
        :type P21: gp_Pnt
        :param P22:
        :type P22: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_ExtCC_TrimmedSquareDistances(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtCC.SetCurve = new_instancemethod(_Extrema.Extrema_ExtCC_SetCurve, None, Extrema_ExtCC)
Extrema_ExtCC.SetRange = new_instancemethod(_Extrema.Extrema_ExtCC_SetRange, None, Extrema_ExtCC)
Extrema_ExtCC.SetTolerance = new_instancemethod(_Extrema.Extrema_ExtCC_SetTolerance, None, Extrema_ExtCC)
Extrema_ExtCC.Perform = new_instancemethod(_Extrema.Extrema_ExtCC_Perform, None, Extrema_ExtCC)
Extrema_ExtCC.IsDone = new_instancemethod(_Extrema.Extrema_ExtCC_IsDone, None, Extrema_ExtCC)
Extrema_ExtCC.NbExt = new_instancemethod(_Extrema.Extrema_ExtCC_NbExt, None, Extrema_ExtCC)
Extrema_ExtCC.IsParallel = new_instancemethod(_Extrema.Extrema_ExtCC_IsParallel, None, Extrema_ExtCC)
Extrema_ExtCC.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtCC_SquareDistance, None, Extrema_ExtCC)
Extrema_ExtCC.Points = new_instancemethod(_Extrema.Extrema_ExtCC_Points, None, Extrema_ExtCC)
Extrema_ExtCC.TrimmedSquareDistances = new_instancemethod(_Extrema.Extrema_ExtCC_TrimmedSquareDistances, None, Extrema_ExtCC)
Extrema_ExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtCC__kill_pointed, None, Extrema_ExtCC)
Extrema_ExtCC_swigregister = _Extrema.Extrema_ExtCC_swigregister
Extrema_ExtCC_swigregister(Extrema_ExtCC)

class Extrema_ExtCC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :param C2:
        :type C2: Adaptor2d_Curve2d &
        :param TolC1: default value is 1.0e-10
        :type TolC1: float
        :param TolC2: default value is 1.0e-10
        :type TolC2: float
        :rtype: None

        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :param C2:
        :type C2: Adaptor2d_Curve2d &
        :param U1:
        :type U1: float
        :param U2:
        :type U2: float
        :param V1:
        :type V1: float
        :param V2:
        :type V2: float
        :param TolC1: default value is 1.0e-10
        :type TolC1: float
        :param TolC2: default value is 1.0e-10
        :type TolC2: float
        :rtype: None

        """
        _Extrema.Extrema_ExtCC2d_swiginit(self, _Extrema.new_Extrema_ExtCC2d(*args))

    def Initialize(self, *args):
        """
        :param C2:
        :type C2: Adaptor2d_Curve2d &
        :param V1:
        :type V1: float
        :param V2:
        :type V2: float
        :param TolC1: default value is 1.0e-10
        :type TolC1: float
        :param TolC2: default value is 1.0e-10
        :type TolC2: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtCC2d_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :param U1:
        :type U1: float
        :param U2:
        :type U2: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtCC2d_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_ExtCC2d_IsDone(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_ExtCC2d_NbExt(self, *args)


    def IsParallel(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_ExtCC2d_IsParallel(self, *args)


    def SquareDistance(self, *args):
        """
        :param N: default value is 1
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtCC2d_SquareDistance(self, *args)


    def Points(self, *args):
        """
        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv2d &
        :param P2:
        :type P2: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_ExtCC2d_Points(self, *args)


    def TrimmedSquareDistances(self, *args):
        """
        :param dist11:
        :type dist11: float &
        :param distP12:
        :type distP12: float &
        :param distP21:
        :type distP21: float &
        :param distP22:
        :type distP22: float &
        :param P11:
        :type P11: gp_Pnt2d
        :param P12:
        :type P12: gp_Pnt2d
        :param P21:
        :type P21: gp_Pnt2d
        :param P22:
        :type P22: gp_Pnt2d
        :rtype: None

        """
        return _Extrema.Extrema_ExtCC2d_TrimmedSquareDistances(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtCC2d.Initialize = new_instancemethod(_Extrema.Extrema_ExtCC2d_Initialize, None, Extrema_ExtCC2d)
Extrema_ExtCC2d.Perform = new_instancemethod(_Extrema.Extrema_ExtCC2d_Perform, None, Extrema_ExtCC2d)
Extrema_ExtCC2d.IsDone = new_instancemethod(_Extrema.Extrema_ExtCC2d_IsDone, None, Extrema_ExtCC2d)
Extrema_ExtCC2d.NbExt = new_instancemethod(_Extrema.Extrema_ExtCC2d_NbExt, None, Extrema_ExtCC2d)
Extrema_ExtCC2d.IsParallel = new_instancemethod(_Extrema.Extrema_ExtCC2d_IsParallel, None, Extrema_ExtCC2d)
Extrema_ExtCC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtCC2d_SquareDistance, None, Extrema_ExtCC2d)
Extrema_ExtCC2d.Points = new_instancemethod(_Extrema.Extrema_ExtCC2d_Points, None, Extrema_ExtCC2d)
Extrema_ExtCC2d.TrimmedSquareDistances = new_instancemethod(_Extrema.Extrema_ExtCC2d_TrimmedSquareDistances, None, Extrema_ExtCC2d)
Extrema_ExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtCC2d__kill_pointed, None, Extrema_ExtCC2d)
Extrema_ExtCC2d_swigregister = _Extrema.Extrema_ExtCC2d_swigregister
Extrema_ExtCC2d_swigregister(Extrema_ExtCC2d)

class Extrema_ExtCS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * It calculates all the distances between C and S.

        :param C:
        :type C: Adaptor3d_Curve &
        :param S:
        :type S: Adaptor3d_Surface &
        :param TolC:
        :type TolC: float
        :param TolS:
        :type TolS: float
        :rtype: None

        * It calculates all the distances between C and S. UCinf and UCmax are the start and end parameters of the curve.

        :param C:
        :type C: Adaptor3d_Curve &
        :param S:
        :type S: Adaptor3d_Surface &
        :param UCinf:
        :type UCinf: float
        :param UCsup:
        :type UCsup: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param Vinf:
        :type Vinf: float
        :param Vsup:
        :type Vsup: float
        :param TolC:
        :type TolC: float
        :param TolS:
        :type TolS: float
        :rtype: None

        """
        _Extrema.Extrema_ExtCS_swiginit(self, _Extrema.new_Extrema_ExtCS(*args))

    def Initialize(self, *args):
        """
        * Initializes the fields of the algorithm.

        :param S:
        :type S: Adaptor3d_Surface &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param Vinf:
        :type Vinf: float
        :param Vsup:
        :type Vsup: float
        :param TolC:
        :type TolC: float
        :param TolS:
        :type TolS: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtCS_Initialize(self, *args)


    def Perform(self, *args):
        """
        * Computes the distances. An exception is raised if the fieds have not been initialized.

        :param C:
        :type C: Adaptor3d_Curve &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtCS_Perform(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtCS_IsDone(self, *args)


    def IsParallel(self, *args):
        """
        * Returns True if the curve is on a parallel surface.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtCS_IsParallel(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_ExtCS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth resulting square distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtCS_SquareDistance(self, *args)


    def Points(self, *args):
        """
        * Returns the point of the Nth resulting distance.

        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv &
        :param P2:
        :type P2: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_ExtCS_Points(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtCS.Initialize = new_instancemethod(_Extrema.Extrema_ExtCS_Initialize, None, Extrema_ExtCS)
Extrema_ExtCS.Perform = new_instancemethod(_Extrema.Extrema_ExtCS_Perform, None, Extrema_ExtCS)
Extrema_ExtCS.IsDone = new_instancemethod(_Extrema.Extrema_ExtCS_IsDone, None, Extrema_ExtCS)
Extrema_ExtCS.IsParallel = new_instancemethod(_Extrema.Extrema_ExtCS_IsParallel, None, Extrema_ExtCS)
Extrema_ExtCS.NbExt = new_instancemethod(_Extrema.Extrema_ExtCS_NbExt, None, Extrema_ExtCS)
Extrema_ExtCS.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtCS_SquareDistance, None, Extrema_ExtCS)
Extrema_ExtCS.Points = new_instancemethod(_Extrema.Extrema_ExtCS_Points, None, Extrema_ExtCS)
Extrema_ExtCS._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtCS__kill_pointed, None, Extrema_ExtCS)
Extrema_ExtCS_swigregister = _Extrema.Extrema_ExtCS_swigregister
Extrema_ExtCS_swigregister(Extrema_ExtCS)

class Extrema_ExtElC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Calculates the distance between two lines. AngTol is used to test if the lines are parallel: Angle(C1,C2) < AngTol.

        :param C1:
        :type C1: gp_Lin
        :param C2:
        :type C2: gp_Lin
        :param AngTol:
        :type AngTol: float
        :rtype: None

        * Calculates the distance between a line and a circle.

        :param C1:
        :type C1: gp_Lin
        :param C2:
        :type C2: gp_Circ
        :param Tol:
        :type Tol: float
        :rtype: None

        * Calculates the distance between a line and an elipse.

        :param C1:
        :type C1: gp_Lin
        :param C2:
        :type C2: gp_Elips
        :rtype: None

        * Calculates the distance between a line and a hyperbola.

        :param C1:
        :type C1: gp_Lin
        :param C2:
        :type C2: gp_Hypr
        :rtype: None

        * Calculates the distance between a line and a parabola.

        :param C1:
        :type C1: gp_Lin
        :param C2:
        :type C2: gp_Parab
        :rtype: None

        * Calculates the distance between two circles. The circles can be parallel or identical.

        :param C1:
        :type C1: gp_Circ
        :param C2:
        :type C2: gp_Circ
        :rtype: None

        * Calculates the distance between a circle and an elipse.

        :param C1:
        :type C1: gp_Circ
        :param C2:
        :type C2: gp_Elips
        :rtype: None

        * Calculates the distance between a circle and a hyperbola.

        :param C1:
        :type C1: gp_Circ
        :param C2:
        :type C2: gp_Hypr
        :rtype: None

        * Calculates the distance between a circle and a parabola.

        :param C1:
        :type C1: gp_Circ
        :param C2:
        :type C2: gp_Parab
        :rtype: None

        * Calculates the distance between two elipses. The elipses can be parallel or identical.

        :param C1:
        :type C1: gp_Elips
        :param C2:
        :type C2: gp_Elips
        :rtype: None

        * Calculates the distance between an elipse and a hyperbola.

        :param C1:
        :type C1: gp_Elips
        :param C2:
        :type C2: gp_Hypr
        :rtype: None

        * Calculates the distance between an elipse and a parabola.

        :param C1:
        :type C1: gp_Elips
        :param C2:
        :type C2: gp_Parab
        :rtype: None

        * Calculates the distance between two hyperbolas. The hyperbolas can be parallel or identical.

        :param C1:
        :type C1: gp_Hypr
        :param C2:
        :type C2: gp_Hypr
        :rtype: None

        * Calculates the distance between a hyperbola and a parabola.

        :param C1:
        :type C1: gp_Hypr
        :param C2:
        :type C2: gp_Parab
        :rtype: None

        * Calculates the distance between two parabolas The parabolas can be parallel or identical.

        :param C1:
        :type C1: gp_Parab
        :param C2:
        :type C2: gp_Parab
        :rtype: None

        """
        _Extrema.Extrema_ExtElC_swiginit(self, _Extrema.new_Extrema_ExtElC(*args))

    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtElC_IsDone(self, *args)


    def IsParallel(self, *args):
        """
        * Returns True if the two curves are parallel.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtElC_IsParallel(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_ExtElC_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth extremum square distance.

        :param N: default value is 1
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtElC_SquareDistance(self, *args)


    def Points(self, *args):
        """
        * Returns the points of the Nth extremum distance. P1 is on the first curve, P2 on the second one.

        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv &
        :param P2:
        :type P2: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_ExtElC_Points(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtElC.IsDone = new_instancemethod(_Extrema.Extrema_ExtElC_IsDone, None, Extrema_ExtElC)
Extrema_ExtElC.IsParallel = new_instancemethod(_Extrema.Extrema_ExtElC_IsParallel, None, Extrema_ExtElC)
Extrema_ExtElC.NbExt = new_instancemethod(_Extrema.Extrema_ExtElC_NbExt, None, Extrema_ExtElC)
Extrema_ExtElC.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtElC_SquareDistance, None, Extrema_ExtElC)
Extrema_ExtElC.Points = new_instancemethod(_Extrema.Extrema_ExtElC_Points, None, Extrema_ExtElC)
Extrema_ExtElC._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtElC__kill_pointed, None, Extrema_ExtElC)
Extrema_ExtElC_swigregister = _Extrema.Extrema_ExtElC_swigregister
Extrema_ExtElC_swigregister(Extrema_ExtElC)

class Extrema_ExtElC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Calculates the distance between two lines. AngTol is used to test if the lines are parallel: Angle(C1,C2) < AngTol.

        :param C1:
        :type C1: gp_Lin2d
        :param C2:
        :type C2: gp_Lin2d
        :param AngTol:
        :type AngTol: float
        :rtype: None

        * Calculates the distance between a line and a circle.

        :param C1:
        :type C1: gp_Lin2d
        :param C2:
        :type C2: gp_Circ2d
        :param Tol:
        :type Tol: float
        :rtype: None

        * Calculates the distance between a line and an elipse.

        :param C1:
        :type C1: gp_Lin2d
        :param C2:
        :type C2: gp_Elips2d
        :rtype: None

        * Calculates the distance between a line and a hyperbola.

        :param C1:
        :type C1: gp_Lin2d
        :param C2:
        :type C2: gp_Hypr2d
        :rtype: None

        * Calculates the distance between a line and a parabola.

        :param C1:
        :type C1: gp_Lin2d
        :param C2:
        :type C2: gp_Parab2d
        :rtype: None

        * Calculates the distance between two circles. The circles can be parallel or identical.

        :param C1:
        :type C1: gp_Circ2d
        :param C2:
        :type C2: gp_Circ2d
        :rtype: None

        * Calculates the distance between a circle and an elipse.

        :param C1:
        :type C1: gp_Circ2d
        :param C2:
        :type C2: gp_Elips2d
        :rtype: None

        * Calculates the distance between a circle and a hyperbola.

        :param C1:
        :type C1: gp_Circ2d
        :param C2:
        :type C2: gp_Hypr2d
        :rtype: None

        * Calculates the distance between a circle and a parabola.

        :param C1:
        :type C1: gp_Circ2d
        :param C2:
        :type C2: gp_Parab2d
        :rtype: None

        * Calculates the distance between two elipses. The elipses can be parallel or identical.

        :param C1:
        :type C1: gp_Elips2d
        :param C2:
        :type C2: gp_Elips2d
        :rtype: None

        * Calculates the distance between an elipse and a hyperbola.

        :param C1:
        :type C1: gp_Elips2d
        :param C2:
        :type C2: gp_Hypr2d
        :rtype: None

        * Calculates the distance between an elipse and a parabola.

        :param C1:
        :type C1: gp_Elips2d
        :param C2:
        :type C2: gp_Parab2d
        :rtype: None

        * Calculates the distance between two hyperbolas. The hyperbolas can be parallel or identical.

        :param C1:
        :type C1: gp_Hypr2d
        :param C2:
        :type C2: gp_Hypr2d
        :rtype: None

        * Calculates the distance between a hyperbola and a parabola.

        :param C1:
        :type C1: gp_Hypr2d
        :param C2:
        :type C2: gp_Parab2d
        :rtype: None

        * Calculates the distance between two parabolas The parabolas can be parallel or identical.

        :param C1:
        :type C1: gp_Parab2d
        :param C2:
        :type C2: gp_Parab2d
        :rtype: None

        """
        _Extrema.Extrema_ExtElC2d_swiginit(self, _Extrema.new_Extrema_ExtElC2d(*args))

    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtElC2d_IsDone(self, *args)


    def IsParallel(self, *args):
        """
        * Returns True if the two curves are parallel.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtElC2d_IsParallel(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_ExtElC2d_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth extremum square distance.

        :param N: default value is 1
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtElC2d_SquareDistance(self, *args)


    def Points(self, *args):
        """
        * Returns the points of the Nth extremum distance. P1 is on the first curve, P2 on the second one.

        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv2d &
        :param P2:
        :type P2: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_ExtElC2d_Points(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtElC2d.IsDone = new_instancemethod(_Extrema.Extrema_ExtElC2d_IsDone, None, Extrema_ExtElC2d)
Extrema_ExtElC2d.IsParallel = new_instancemethod(_Extrema.Extrema_ExtElC2d_IsParallel, None, Extrema_ExtElC2d)
Extrema_ExtElC2d.NbExt = new_instancemethod(_Extrema.Extrema_ExtElC2d_NbExt, None, Extrema_ExtElC2d)
Extrema_ExtElC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtElC2d_SquareDistance, None, Extrema_ExtElC2d)
Extrema_ExtElC2d.Points = new_instancemethod(_Extrema.Extrema_ExtElC2d_Points, None, Extrema_ExtElC2d)
Extrema_ExtElC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtElC2d__kill_pointed, None, Extrema_ExtElC2d)
Extrema_ExtElC2d_swigregister = _Extrema.Extrema_ExtElC2d_swigregister
Extrema_ExtElC2d_swigregister(Extrema_ExtElC2d)

class Extrema_ExtElCS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Calculates the distances between a line and a plane. The line can be on the plane or on a parallel plane.

        :param C:
        :type C: gp_Lin
        :param S:
        :type S: gp_Pln
        :rtype: None

        * Calculates the distances between a line and a cylinder.

        :param C:
        :type C: gp_Lin
        :param S:
        :type S: gp_Cylinder
        :rtype: None

        * Calculates the distances between a line and a cone.

        :param C:
        :type C: gp_Lin
        :param S:
        :type S: gp_Cone
        :rtype: None

        * Calculates the distances between a line and a sphere.

        :param C:
        :type C: gp_Lin
        :param S:
        :type S: gp_Sphere
        :rtype: None

        * Calculates the distances between a line and a torus.

        :param C:
        :type C: gp_Lin
        :param S:
        :type S: gp_Torus
        :rtype: None

        * Calculates the distances between a circle and a plane.

        :param C:
        :type C: gp_Circ
        :param S:
        :type S: gp_Pln
        :rtype: None

        * Calculates the distances between a circle and a cylinder.

        :param C:
        :type C: gp_Circ
        :param S:
        :type S: gp_Cylinder
        :rtype: None

        * Calculates the distances between a circle and a cone.

        :param C:
        :type C: gp_Circ
        :param S:
        :type S: gp_Cone
        :rtype: None

        * Calculates the distances between a circle and a sphere.

        :param C:
        :type C: gp_Circ
        :param S:
        :type S: gp_Sphere
        :rtype: None

        * Calculates the distances between a circle and a torus.

        :param C:
        :type C: gp_Circ
        :param S:
        :type S: gp_Torus
        :rtype: None

        * Calculates the distances between a hyperbola and a plane.

        :param C:
        :type C: gp_Hypr
        :param S:
        :type S: gp_Pln
        :rtype: None

        """
        _Extrema.Extrema_ExtElCS_swiginit(self, _Extrema.new_Extrema_ExtElCS(*args))

    def Perform(self, *args):
        """
        :param C:
        :type C: gp_Lin
        :param S:
        :type S: gp_Pln
        :rtype: None

        :param C:
        :type C: gp_Lin
        :param S:
        :type S: gp_Cylinder
        :rtype: None

        :param C:
        :type C: gp_Lin
        :param S:
        :type S: gp_Cone
        :rtype: None

        :param C:
        :type C: gp_Lin
        :param S:
        :type S: gp_Sphere
        :rtype: None

        :param C:
        :type C: gp_Lin
        :param S:
        :type S: gp_Torus
        :rtype: None

        :param C:
        :type C: gp_Circ
        :param S:
        :type S: gp_Pln
        :rtype: None

        :param C:
        :type C: gp_Circ
        :param S:
        :type S: gp_Cylinder
        :rtype: None

        :param C:
        :type C: gp_Circ
        :param S:
        :type S: gp_Cone
        :rtype: None

        :param C:
        :type C: gp_Circ
        :param S:
        :type S: gp_Sphere
        :rtype: None

        :param C:
        :type C: gp_Circ
        :param S:
        :type S: gp_Torus
        :rtype: None

        :param C:
        :type C: gp_Hypr
        :param S:
        :type S: gp_Pln
        :rtype: None

        """
        return _Extrema.Extrema_ExtElCS_Perform(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtElCS_IsDone(self, *args)


    def IsParallel(self, *args):
        """
        * Returns True if the curve is on a parallel surface.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtElCS_IsParallel(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_ExtElCS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth extremum square distance.

        :param N: default value is 1
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtElCS_SquareDistance(self, *args)


    def Points(self, *args):
        """
        * Returns the points of the Nth extremum distance. P1 is on the curve, P2 on the surface.

        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnCurv &
        :param P2:
        :type P2: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_ExtElCS_Points(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtElCS.Perform = new_instancemethod(_Extrema.Extrema_ExtElCS_Perform, None, Extrema_ExtElCS)
Extrema_ExtElCS.IsDone = new_instancemethod(_Extrema.Extrema_ExtElCS_IsDone, None, Extrema_ExtElCS)
Extrema_ExtElCS.IsParallel = new_instancemethod(_Extrema.Extrema_ExtElCS_IsParallel, None, Extrema_ExtElCS)
Extrema_ExtElCS.NbExt = new_instancemethod(_Extrema.Extrema_ExtElCS_NbExt, None, Extrema_ExtElCS)
Extrema_ExtElCS.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtElCS_SquareDistance, None, Extrema_ExtElCS)
Extrema_ExtElCS.Points = new_instancemethod(_Extrema.Extrema_ExtElCS_Points, None, Extrema_ExtElCS)
Extrema_ExtElCS._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtElCS__kill_pointed, None, Extrema_ExtElCS)
Extrema_ExtElCS_swigregister = _Extrema.Extrema_ExtElCS_swigregister
Extrema_ExtElCS_swigregister(Extrema_ExtElCS)

class Extrema_ExtElSS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Calculates the distances between 2 planes. These planes can be parallel.

        :param S1:
        :type S1: gp_Pln
        :param S2:
        :type S2: gp_Pln
        :rtype: None

        * Calculates the distances between a plane and a sphere.

        :param S1:
        :type S1: gp_Pln
        :param S2:
        :type S2: gp_Sphere
        :rtype: None

        * Calculates the distances between 2 spheres. These spheres can be parallel.

        :param S1:
        :type S1: gp_Sphere
        :param S2:
        :type S2: gp_Sphere
        :rtype: None

        * Calculates the distances between a sphere and a cylinder.

        :param S1:
        :type S1: gp_Sphere
        :param S2:
        :type S2: gp_Cylinder
        :rtype: None

        * Calculates the distances between a sphere and a cone.

        :param S1:
        :type S1: gp_Sphere
        :param S2:
        :type S2: gp_Cone
        :rtype: None

        * Calculates the distances between a sphere and a torus.

        :param S1:
        :type S1: gp_Sphere
        :param S2:
        :type S2: gp_Torus
        :rtype: None

        """
        _Extrema.Extrema_ExtElSS_swiginit(self, _Extrema.new_Extrema_ExtElSS(*args))

    def Perform(self, *args):
        """
        :param S1:
        :type S1: gp_Pln
        :param S2:
        :type S2: gp_Pln
        :rtype: None

        :param S1:
        :type S1: gp_Pln
        :param S2:
        :type S2: gp_Sphere
        :rtype: None

        :param S1:
        :type S1: gp_Sphere
        :param S2:
        :type S2: gp_Sphere
        :rtype: None

        :param S1:
        :type S1: gp_Sphere
        :param S2:
        :type S2: gp_Cylinder
        :rtype: None

        :param S1:
        :type S1: gp_Sphere
        :param S2:
        :type S2: gp_Cone
        :rtype: None

        :param S1:
        :type S1: gp_Sphere
        :param S2:
        :type S2: gp_Torus
        :rtype: None

        """
        return _Extrema.Extrema_ExtElSS_Perform(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtElSS_IsDone(self, *args)


    def IsParallel(self, *args):
        """
        * Returns True if the two surfaces are parallel.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtElSS_IsParallel(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_ExtElSS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth extremum square distance.

        :param N: default value is 1
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtElSS_SquareDistance(self, *args)


    def Points(self, *args):
        """
        * Returns the points for the Nth resulting distance. P1 is on the first surface, P2 on the second one.

        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnSurf &
        :param P2:
        :type P2: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_ExtElSS_Points(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtElSS.Perform = new_instancemethod(_Extrema.Extrema_ExtElSS_Perform, None, Extrema_ExtElSS)
Extrema_ExtElSS.IsDone = new_instancemethod(_Extrema.Extrema_ExtElSS_IsDone, None, Extrema_ExtElSS)
Extrema_ExtElSS.IsParallel = new_instancemethod(_Extrema.Extrema_ExtElSS_IsParallel, None, Extrema_ExtElSS)
Extrema_ExtElSS.NbExt = new_instancemethod(_Extrema.Extrema_ExtElSS_NbExt, None, Extrema_ExtElSS)
Extrema_ExtElSS.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtElSS_SquareDistance, None, Extrema_ExtElSS)
Extrema_ExtElSS.Points = new_instancemethod(_Extrema.Extrema_ExtElSS_Points, None, Extrema_ExtElSS)
Extrema_ExtElSS._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtElSS__kill_pointed, None, Extrema_ExtElSS)
Extrema_ExtElSS_swigregister = _Extrema.Extrema_ExtElSS_swigregister
Extrema_ExtElSS_swigregister(Extrema_ExtElSS)

class Extrema_ExtPC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param TolF: default value is 1.0e-10
        :type TolF: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :param TolF: default value is 1.0e-10
        :type TolF: float
        :rtype: None

        """
        _Extrema.Extrema_ExtPC_swiginit(self, _Extrema.new_Extrema_ExtPC(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param TolF: default value is 1.0e-10
        :type TolF: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtPC_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_ExtPC_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_ExtPC_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtPC_SquareDistance(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_ExtPC_NbExt(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_ExtPC_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_ExtPC_Point(self, *args)


    def TrimmedSquareDistances(self, *args):
        """
        :param dist1:
        :type dist1: float &
        :param dist2:
        :type dist2: float &
        :param P1:
        :type P1: gp_Pnt
        :param P2:
        :type P2: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_ExtPC_TrimmedSquareDistances(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtPC.Initialize = new_instancemethod(_Extrema.Extrema_ExtPC_Initialize, None, Extrema_ExtPC)
Extrema_ExtPC.Perform = new_instancemethod(_Extrema.Extrema_ExtPC_Perform, None, Extrema_ExtPC)
Extrema_ExtPC.IsDone = new_instancemethod(_Extrema.Extrema_ExtPC_IsDone, None, Extrema_ExtPC)
Extrema_ExtPC.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtPC_SquareDistance, None, Extrema_ExtPC)
Extrema_ExtPC.NbExt = new_instancemethod(_Extrema.Extrema_ExtPC_NbExt, None, Extrema_ExtPC)
Extrema_ExtPC.IsMin = new_instancemethod(_Extrema.Extrema_ExtPC_IsMin, None, Extrema_ExtPC)
Extrema_ExtPC.Point = new_instancemethod(_Extrema.Extrema_ExtPC_Point, None, Extrema_ExtPC)
Extrema_ExtPC.TrimmedSquareDistances = new_instancemethod(_Extrema.Extrema_ExtPC_TrimmedSquareDistances, None, Extrema_ExtPC)
Extrema_ExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtPC__kill_pointed, None, Extrema_ExtPC)
Extrema_ExtPC_swigregister = _Extrema.Extrema_ExtPC_swigregister
Extrema_ExtPC_swigregister(Extrema_ExtPC)

class Extrema_ExtPC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param TolF: default value is 1.0e-10
        :type TolF: float
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param TolF: default value is 1.0e-10
        :type TolF: float
        :rtype: None

        """
        _Extrema.Extrema_ExtPC2d_swiginit(self, _Extrema.new_Extrema_ExtPC2d(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param TolF: default value is 1.0e-10
        :type TolF: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtPC2d_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt2d
        :rtype: None

        """
        return _Extrema.Extrema_ExtPC2d_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_ExtPC2d_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtPC2d_SquareDistance(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_ExtPC2d_NbExt(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_ExtPC2d_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_ExtPC2d_Point(self, *args)


    def TrimmedSquareDistances(self, *args):
        """
        :param dist1:
        :type dist1: float &
        :param dist2:
        :type dist2: float &
        :param P1:
        :type P1: gp_Pnt2d
        :param P2:
        :type P2: gp_Pnt2d
        :rtype: None

        """
        return _Extrema.Extrema_ExtPC2d_TrimmedSquareDistances(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtPC2d.Initialize = new_instancemethod(_Extrema.Extrema_ExtPC2d_Initialize, None, Extrema_ExtPC2d)
Extrema_ExtPC2d.Perform = new_instancemethod(_Extrema.Extrema_ExtPC2d_Perform, None, Extrema_ExtPC2d)
Extrema_ExtPC2d.IsDone = new_instancemethod(_Extrema.Extrema_ExtPC2d_IsDone, None, Extrema_ExtPC2d)
Extrema_ExtPC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtPC2d_SquareDistance, None, Extrema_ExtPC2d)
Extrema_ExtPC2d.NbExt = new_instancemethod(_Extrema.Extrema_ExtPC2d_NbExt, None, Extrema_ExtPC2d)
Extrema_ExtPC2d.IsMin = new_instancemethod(_Extrema.Extrema_ExtPC2d_IsMin, None, Extrema_ExtPC2d)
Extrema_ExtPC2d.Point = new_instancemethod(_Extrema.Extrema_ExtPC2d_Point, None, Extrema_ExtPC2d)
Extrema_ExtPC2d.TrimmedSquareDistances = new_instancemethod(_Extrema.Extrema_ExtPC2d_TrimmedSquareDistances, None, Extrema_ExtPC2d)
Extrema_ExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtPC2d__kill_pointed, None, Extrema_ExtPC2d)
Extrema_ExtPC2d_swigregister = _Extrema.Extrema_ExtPC2d_swigregister
Extrema_ExtPC2d_swigregister(Extrema_ExtPC2d)

class Extrema_ExtPElC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Calculates the extremum distance between the point P and the segment [Uinf,Usup] of the line C.

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: gp_Lin
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        * Calculates the 2 extremum distances between the point P and the segment [Uinf,Usup] of the circle C. Tol is used to determine if P is on the axis of the circle or if an extremum is on an endpoint of the segment. If P is on the axis of the circle, there are infinite solution then IsDone(me)=False. The conditions on the Uinf and Usup are:  0. <= Uinf <= 2.*PI and Usup > Uinf. If Usup > Uinf + 2.*PI, then only the solutions in the range [Uinf,Uinf+2.*PI[ are computed.

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: gp_Circ
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        * Calculates the 4 extremum distances between the point P and the segment [Uinf,Usup] of the elipse C. Tol is used to determine if the point is on the axis of the elipse and if the major radius is equal to the minor radius or if an extremum is on an endpoint of the segment. If P is on the axis of the elipse, there are infinite solution then IsDone(me)=False. The conditions on the Uinf and Usup are:  0. <= Uinf <= 2.*PI and Usup > Uinf. If Usup > Uinf + 2.*PI, then only the solutions in the range [Uinf,Uinf+2.*PI[ are computed.

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: gp_Elips
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        * Calculates the extremum distances between the point P and the segment [Uinf,Usup] of the hyperbola C. Tol is used to determine if two solutions u and v are identical; the condition is: dist(C(u),C(v)) < Tol.

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: gp_Hypr
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        * Calculates the 4 extremum distances between the point P and the segment [Uinf,Usup] of the parabola C. Tol is used to determine if two solutions u and v are identical; the condition is: dist(C(u),C(v)) < Tol.

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: gp_Parab
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        """
        _Extrema.Extrema_ExtPElC_swiginit(self, _Extrema.new_Extrema_ExtPElC(*args))

    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: gp_Lin
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: gp_Circ
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: gp_Elips
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: gp_Hypr
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: gp_Parab
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtPElC_Perform(self, *args)


    def IsDone(self, *args):
        """
        * True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtPElC_IsDone(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_ExtPElC_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth extremum square distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtPElC_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        * Returns True if the Nth extremum distance is a minimum.

        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_ExtPElC_IsMin(self, *args)


    def Point(self, *args):
        """
        * Returns the point of the Nth extremum distance.

        :param N:
        :type N: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_ExtPElC_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtPElC.Perform = new_instancemethod(_Extrema.Extrema_ExtPElC_Perform, None, Extrema_ExtPElC)
Extrema_ExtPElC.IsDone = new_instancemethod(_Extrema.Extrema_ExtPElC_IsDone, None, Extrema_ExtPElC)
Extrema_ExtPElC.NbExt = new_instancemethod(_Extrema.Extrema_ExtPElC_NbExt, None, Extrema_ExtPElC)
Extrema_ExtPElC.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtPElC_SquareDistance, None, Extrema_ExtPElC)
Extrema_ExtPElC.IsMin = new_instancemethod(_Extrema.Extrema_ExtPElC_IsMin, None, Extrema_ExtPElC)
Extrema_ExtPElC.Point = new_instancemethod(_Extrema.Extrema_ExtPElC_Point, None, Extrema_ExtPElC)
Extrema_ExtPElC._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtPElC__kill_pointed, None, Extrema_ExtPElC)
Extrema_ExtPElC_swigregister = _Extrema.Extrema_ExtPElC_swigregister
Extrema_ExtPElC_swigregister(Extrema_ExtPElC)

class Extrema_ExtPElC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Calculates the extremum distance between the point P and the segment [Uinf,Usup] of the line L.

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: gp_Lin2d
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        * Calculates the 2 extremum distances between the point P and the segment [Uinf,Usup] of the circle C. Tol is used to determine if P is on the axis of the circle or if an extremum is on an endpoint of the segment. If P is on the axis of the circle, there are infinite solution then IsDone(me)=False. The conditions on the Uinf and Usup are:  0. <= Uinf <= 2.*PI and Usup > Uinf. If Usup > Uinf + 2.*PI, then only the solutions in the range [Uinf,Uinf+2.*PI[ are computed.

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: gp_Circ2d
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        * Calculates the 4 extremum distances between the point P and the segment [Uinf,Usup] of the elipse C. Tol is used to determine if the point is on the axis of the elipse and if the major radius is equal to the minor radius or if an extremum is on an endpoint of the segment. If P is on the axis of the elipse, there are infinite solution then IsDone(me)=False. The conditions on the Uinf and Usup are:  0. <= Uinf <= 2.*PI and Usup > Uinf. If Usup > Uinf + 2.*PI, then only the solutions in the range [Uinf,Uinf+2.*PI[ are computed.

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: gp_Elips2d
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        * Calculates the extremum distances between the point P and the segment [Uinf,Usup] of the hyperbola C. Tol is used to determine if two solutions u and v are identical; the condition is: dist(C(u),C(v)) < Tol.

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: gp_Hypr2d
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        * Calculates the 4 extremum distances between the point P and the segment [Uinf,Usup] of the parabola C. Tol is used to determine if two solutions u and v are identical; the condition is: dist(C(u),C(v)) < Tol.

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: gp_Parab2d
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        """
        _Extrema.Extrema_ExtPElC2d_swiginit(self, _Extrema.new_Extrema_ExtPElC2d(*args))

    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt2d
        :param L:
        :type L: gp_Lin2d
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: gp_Circ2d
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: gp_Elips2d
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: gp_Hypr2d
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: gp_Parab2d
        :param Tol:
        :type Tol: float
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtPElC2d_Perform(self, *args)


    def IsDone(self, *args):
        """
        * True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtPElC2d_IsDone(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_ExtPElC2d_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth extremum square distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtPElC2d_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        * Returns True if the Nth extremum distance is a minimum.

        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_ExtPElC2d_IsMin(self, *args)


    def Point(self, *args):
        """
        * Returns the point of the Nth extremum distance.

        :param N:
        :type N: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_ExtPElC2d_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtPElC2d.Perform = new_instancemethod(_Extrema.Extrema_ExtPElC2d_Perform, None, Extrema_ExtPElC2d)
Extrema_ExtPElC2d.IsDone = new_instancemethod(_Extrema.Extrema_ExtPElC2d_IsDone, None, Extrema_ExtPElC2d)
Extrema_ExtPElC2d.NbExt = new_instancemethod(_Extrema.Extrema_ExtPElC2d_NbExt, None, Extrema_ExtPElC2d)
Extrema_ExtPElC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtPElC2d_SquareDistance, None, Extrema_ExtPElC2d)
Extrema_ExtPElC2d.IsMin = new_instancemethod(_Extrema.Extrema_ExtPElC2d_IsMin, None, Extrema_ExtPElC2d)
Extrema_ExtPElC2d.Point = new_instancemethod(_Extrema.Extrema_ExtPElC2d_Point, None, Extrema_ExtPElC2d)
Extrema_ExtPElC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtPElC2d__kill_pointed, None, Extrema_ExtPElC2d)
Extrema_ExtPElC2d_swigregister = _Extrema.Extrema_ExtPElC2d_swigregister
Extrema_ExtPElC2d_swigregister(Extrema_ExtPElC2d)

class Extrema_ExtPElS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * It calculates all the distances between a point and a cylinder from gp. Tol is used to test if the point is on the axis.

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: gp_Cylinder
        :param Tol:
        :type Tol: float
        :rtype: None

        * It calculates all the distances between a point and a plane from gp. Tol is used to test if the point is on the plane.

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: gp_Pln
        :param Tol:
        :type Tol: float
        :rtype: None

        * It calculates all the distances between a point and a cone from gp. Tol is used to test if the point is at the apex or on the axis.

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: gp_Cone
        :param Tol:
        :type Tol: float
        :rtype: None

        * It calculates all the distances between a point and a torus from gp. Tol is used to test if the point is on the axis.

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: gp_Torus
        :param Tol:
        :type Tol: float
        :rtype: None

        * It calculates all the distances between a point and a sphere from gp. Tol is used to test if the point is at the center.

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: gp_Sphere
        :param Tol:
        :type Tol: float
        :rtype: None

        """
        _Extrema.Extrema_ExtPElS_swiginit(self, _Extrema.new_Extrema_ExtPElS(*args))

    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: gp_Cylinder
        :param Tol:
        :type Tol: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: gp_Pln
        :param Tol:
        :type Tol: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: gp_Cone
        :param Tol:
        :type Tol: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: gp_Torus
        :param Tol:
        :type Tol: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: gp_Sphere
        :param Tol:
        :type Tol: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtPElS_Perform(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtPElS_IsDone(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_ExtPElS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth resulting square distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtPElS_SquareDistance(self, *args)


    def Point(self, *args):
        """
        * Returns the point of the Nth resulting distance.

        :param N:
        :type N: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_ExtPElS_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtPElS.Perform = new_instancemethod(_Extrema.Extrema_ExtPElS_Perform, None, Extrema_ExtPElS)
Extrema_ExtPElS.IsDone = new_instancemethod(_Extrema.Extrema_ExtPElS_IsDone, None, Extrema_ExtPElS)
Extrema_ExtPElS.NbExt = new_instancemethod(_Extrema.Extrema_ExtPElS_NbExt, None, Extrema_ExtPElS)
Extrema_ExtPElS.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtPElS_SquareDistance, None, Extrema_ExtPElS)
Extrema_ExtPElS.Point = new_instancemethod(_Extrema.Extrema_ExtPElS_Point, None, Extrema_ExtPElS)
Extrema_ExtPElS._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtPElS__kill_pointed, None, Extrema_ExtPElS)
Extrema_ExtPElS_swigregister = _Extrema.Extrema_ExtPElS_swigregister
Extrema_ExtPElS_swigregister(Extrema_ExtPElS)

class Extrema_ExtPExtS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * It calculates all the distances between a point from gp and a Surface.

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: Adaptor3d_SurfaceOfLinearExtrusion &
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param Vmin:
        :type Vmin: float
        :param Vsup:
        :type Vsup: float
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        * It calculates all the distances between a point from gp and a Surface.

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: Adaptor3d_SurfaceOfLinearExtrusion &
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        _Extrema.Extrema_ExtPExtS_swiginit(self, _Extrema.new_Extrema_ExtPExtS(*args))

    def Initialize(self, *args):
        """
        * Initializes the fields of the algorithm.

        :param S:
        :type S: Adaptor3d_SurfaceOfLinearExtrusion &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param Vinf:
        :type Vinf: float
        :param Vsup:
        :type Vsup: float
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtPExtS_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_ExtPExtS_Perform(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtPExtS_IsDone(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_ExtPExtS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth resulting square distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtPExtS_SquareDistance(self, *args)


    def Point(self, *args):
        """
        * Returns the point of the Nth resulting distance.

        :param N:
        :type N: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_ExtPExtS_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtPExtS.Initialize = new_instancemethod(_Extrema.Extrema_ExtPExtS_Initialize, None, Extrema_ExtPExtS)
Extrema_ExtPExtS.Perform = new_instancemethod(_Extrema.Extrema_ExtPExtS_Perform, None, Extrema_ExtPExtS)
Extrema_ExtPExtS.IsDone = new_instancemethod(_Extrema.Extrema_ExtPExtS_IsDone, None, Extrema_ExtPExtS)
Extrema_ExtPExtS.NbExt = new_instancemethod(_Extrema.Extrema_ExtPExtS_NbExt, None, Extrema_ExtPExtS)
Extrema_ExtPExtS.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtPExtS_SquareDistance, None, Extrema_ExtPExtS)
Extrema_ExtPExtS.Point = new_instancemethod(_Extrema.Extrema_ExtPExtS_Point, None, Extrema_ExtPExtS)
Extrema_ExtPExtS._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtPExtS__kill_pointed, None, Extrema_ExtPExtS)
Extrema_ExtPExtS_swigregister = _Extrema.Extrema_ExtPExtS_swigregister
Extrema_ExtPExtS_swigregister(Extrema_ExtPExtS)

class Extrema_ExtPRevS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * It calculates all the distances between a point from gp and a SurfacePtr from Adaptor3d.

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: Adaptor3d_SurfaceOfRevolution &
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param Vmin:
        :type Vmin: float
        :param Vsup:
        :type Vsup: float
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        * It calculates all the distances between a point from gp and a SurfacePtr from Adaptor3d.

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: Adaptor3d_SurfaceOfRevolution &
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        _Extrema.Extrema_ExtPRevS_swiginit(self, _Extrema.new_Extrema_ExtPRevS(*args))

    def Initialize(self, *args):
        """
        :param S:
        :type S: Adaptor3d_SurfaceOfRevolution &
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param Vmin:
        :type Vmin: float
        :param Vsup:
        :type Vsup: float
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtPRevS_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_ExtPRevS_Perform(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtPRevS_IsDone(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_ExtPRevS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth resulting square distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtPRevS_SquareDistance(self, *args)


    def Point(self, *args):
        """
        * Returns the point of the Nth resulting distance.

        :param N:
        :type N: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_ExtPRevS_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtPRevS.Initialize = new_instancemethod(_Extrema.Extrema_ExtPRevS_Initialize, None, Extrema_ExtPRevS)
Extrema_ExtPRevS.Perform = new_instancemethod(_Extrema.Extrema_ExtPRevS_Perform, None, Extrema_ExtPRevS)
Extrema_ExtPRevS.IsDone = new_instancemethod(_Extrema.Extrema_ExtPRevS_IsDone, None, Extrema_ExtPRevS)
Extrema_ExtPRevS.NbExt = new_instancemethod(_Extrema.Extrema_ExtPRevS_NbExt, None, Extrema_ExtPRevS)
Extrema_ExtPRevS.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtPRevS_SquareDistance, None, Extrema_ExtPRevS)
Extrema_ExtPRevS.Point = new_instancemethod(_Extrema.Extrema_ExtPRevS_Point, None, Extrema_ExtPRevS)
Extrema_ExtPRevS._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtPRevS__kill_pointed, None, Extrema_ExtPRevS)
Extrema_ExtPRevS_swigregister = _Extrema.Extrema_ExtPRevS_swigregister
Extrema_ExtPRevS_swigregister(Extrema_ExtPRevS)

class Extrema_ExtPS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * It calculates all the distances. NbU and NbV are used to locate the close points to find the zeros. They must be great enough such that if there is N extrema, there will be N extrema between P and the grid. TolU et TolV are used to determine the conditions to stop the iterations; at the iteration number n: (Un - Un-1) < TolU and (Vn - Vn-1) < TolV .

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: Adaptor3d_Surface &
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :param F: default value is Extrema_ExtFlag_MINMAX
        :type F: Extrema_ExtFlag
        :param A: default value is Extrema_ExtAlgo_Grad
        :type A: Extrema_ExtAlgo
        :rtype: None

        * It calculates all the distances. NbU and NbV are used to locate the close points to find the zeros. They must be great enough such that if there is N extrema, there will be N extrema between P and the grid. TolU et TolV are used to determine the conditions to stop the iterations; at the iteration number n: (Un - Un-1) < TolU and (Vn - Vn-1) < TolV .

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: Adaptor3d_Surface &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param Vinf:
        :type Vinf: float
        :param Vsup:
        :type Vsup: float
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :param F: default value is Extrema_ExtFlag_MINMAX
        :type F: Extrema_ExtFlag
        :param A: default value is Extrema_ExtAlgo_Grad
        :type A: Extrema_ExtAlgo
        :rtype: None

        """
        _Extrema.Extrema_ExtPS_swiginit(self, _Extrema.new_Extrema_ExtPS(*args))

    def Initialize(self, *args):
        """
        * Initializes the fields of the algorithm.

        :param S:
        :type S: Adaptor3d_Surface &
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param Vinf:
        :type Vinf: float
        :param Vsup:
        :type Vsup: float
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtPS_Initialize(self, *args)


    def Perform(self, *args):
        """
        * Computes the distances. An exception is raised if the fieds have not been initialized.

        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_ExtPS_Perform(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtPS_IsDone(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_ExtPS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth resulting square distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtPS_SquareDistance(self, *args)


    def Point(self, *args):
        """
        * Returns the point of the Nth resulting distance.

        :param N:
        :type N: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_ExtPS_Point(self, *args)


    def TrimmedSquareDistances(self, *args):
        """
        * if the surface is a trimmed surface, dUfVf is a square distance between <P> and the point of parameter FirstUParameter and FirstVParameter <PUfVf>. dUfVl is a square distance between <P> and the point of parameter FirstUParameter and LastVParameter <PUfVl>. dUlVf is a square distance between <P> and the point of parameter LastUParameter and FirstVParameter <PUlVf>. dUlVl is a square distance between <P> and the point of parameter LastUParameter and LastVParameter <PUlVl>.

        :param dUfVf:
        :type dUfVf: float &
        :param dUfVl:
        :type dUfVl: float &
        :param dUlVf:
        :type dUlVf: float &
        :param dUlVl:
        :type dUlVl: float &
        :param PUfVf:
        :type PUfVf: gp_Pnt
        :param PUfVl:
        :type PUfVl: gp_Pnt
        :param PUlVf:
        :type PUlVf: gp_Pnt
        :param PUlVl:
        :type PUlVl: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_ExtPS_TrimmedSquareDistances(self, *args)


    def SetFlag(self, *args):
        """
        :param F:
        :type F: Extrema_ExtFlag
        :rtype: None

        """
        return _Extrema.Extrema_ExtPS_SetFlag(self, *args)


    def SetAlgo(self, *args):
        """
        :param A:
        :type A: Extrema_ExtAlgo
        :rtype: None

        """
        return _Extrema.Extrema_ExtPS_SetAlgo(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtPS.Initialize = new_instancemethod(_Extrema.Extrema_ExtPS_Initialize, None, Extrema_ExtPS)
Extrema_ExtPS.Perform = new_instancemethod(_Extrema.Extrema_ExtPS_Perform, None, Extrema_ExtPS)
Extrema_ExtPS.IsDone = new_instancemethod(_Extrema.Extrema_ExtPS_IsDone, None, Extrema_ExtPS)
Extrema_ExtPS.NbExt = new_instancemethod(_Extrema.Extrema_ExtPS_NbExt, None, Extrema_ExtPS)
Extrema_ExtPS.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtPS_SquareDistance, None, Extrema_ExtPS)
Extrema_ExtPS.Point = new_instancemethod(_Extrema.Extrema_ExtPS_Point, None, Extrema_ExtPS)
Extrema_ExtPS.TrimmedSquareDistances = new_instancemethod(_Extrema.Extrema_ExtPS_TrimmedSquareDistances, None, Extrema_ExtPS)
Extrema_ExtPS.SetFlag = new_instancemethod(_Extrema.Extrema_ExtPS_SetFlag, None, Extrema_ExtPS)
Extrema_ExtPS.SetAlgo = new_instancemethod(_Extrema.Extrema_ExtPS_SetAlgo, None, Extrema_ExtPS)
Extrema_ExtPS._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtPS__kill_pointed, None, Extrema_ExtPS)
Extrema_ExtPS_swigregister = _Extrema.Extrema_ExtPS_swigregister
Extrema_ExtPS_swigregister(Extrema_ExtPS)

class Extrema_ExtSS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * It calculates all the distances between S1 and S2.

        :param S1:
        :type S1: Adaptor3d_Surface &
        :param S2:
        :type S2: Adaptor3d_Surface &
        :param TolS1:
        :type TolS1: float
        :param TolS2:
        :type TolS2: float
        :rtype: None

        * It calculates all the distances between S1 and S2.

        :param S1:
        :type S1: Adaptor3d_Surface &
        :param S2:
        :type S2: Adaptor3d_Surface &
        :param Uinf1:
        :type Uinf1: float
        :param Usup1:
        :type Usup1: float
        :param Vinf1:
        :type Vinf1: float
        :param Vsup1:
        :type Vsup1: float
        :param Uinf2:
        :type Uinf2: float
        :param Usup2:
        :type Usup2: float
        :param Vinf2:
        :type Vinf2: float
        :param Vsup2:
        :type Vsup2: float
        :param TolS1:
        :type TolS1: float
        :param TolS2:
        :type TolS2: float
        :rtype: None

        """
        _Extrema.Extrema_ExtSS_swiginit(self, _Extrema.new_Extrema_ExtSS(*args))

    def Initialize(self, *args):
        """
        * Initializes the fields of the algorithm.

        :param S2:
        :type S2: Adaptor3d_Surface &
        :param Uinf2:
        :type Uinf2: float
        :param Usup2:
        :type Usup2: float
        :param Vinf2:
        :type Vinf2: float
        :param Vsup2:
        :type Vsup2: float
        :param TolS1:
        :type TolS1: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtSS_Initialize(self, *args)


    def Perform(self, *args):
        """
        * Computes the distances. An exception is raised if the fieds have not been initialized.

        :param S1:
        :type S1: Adaptor3d_Surface &
        :param Uinf1:
        :type Uinf1: float
        :param Usup1:
        :type Usup1: float
        :param Vinf1:
        :type Vinf1: float
        :param Vsup1:
        :type Vsup1: float
        :param TolS1:
        :type TolS1: float
        :rtype: None

        """
        return _Extrema.Extrema_ExtSS_Perform(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtSS_IsDone(self, *args)


    def IsParallel(self, *args):
        """
        * Returns True if the curve is on a parallel surface.

        :rtype: bool

        """
        return _Extrema.Extrema_ExtSS_IsParallel(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_ExtSS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth resulting square distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_ExtSS_SquareDistance(self, *args)


    def Points(self, *args):
        """
        * Returns the point of the Nth resulting distance.

        :param N:
        :type N: int
        :param P1:
        :type P1: Extrema_POnSurf &
        :param P2:
        :type P2: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_ExtSS_Points(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_ExtSS.Initialize = new_instancemethod(_Extrema.Extrema_ExtSS_Initialize, None, Extrema_ExtSS)
Extrema_ExtSS.Perform = new_instancemethod(_Extrema.Extrema_ExtSS_Perform, None, Extrema_ExtSS)
Extrema_ExtSS.IsDone = new_instancemethod(_Extrema.Extrema_ExtSS_IsDone, None, Extrema_ExtSS)
Extrema_ExtSS.IsParallel = new_instancemethod(_Extrema.Extrema_ExtSS_IsParallel, None, Extrema_ExtSS)
Extrema_ExtSS.NbExt = new_instancemethod(_Extrema.Extrema_ExtSS_NbExt, None, Extrema_ExtSS)
Extrema_ExtSS.SquareDistance = new_instancemethod(_Extrema.Extrema_ExtSS_SquareDistance, None, Extrema_ExtSS)
Extrema_ExtSS.Points = new_instancemethod(_Extrema.Extrema_ExtSS_Points, None, Extrema_ExtSS)
Extrema_ExtSS._kill_pointed = new_instancemethod(_Extrema.Extrema_ExtSS__kill_pointed, None, Extrema_ExtSS)
Extrema_ExtSS_swigregister = _Extrema.Extrema_ExtSS_swigregister
Extrema_ExtSS_swigregister(Extrema_ExtSS)

class Extrema_FuncExtCS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param C:
        :type C: Adaptor3d_Curve &
        :param S:
        :type S: Adaptor3d_Surface &
        :rtype: None

        """
        _Extrema.Extrema_FuncExtCS_swiginit(self, _Extrema.new_Extrema_FuncExtCS(*args))

    def Initialize(self, *args):
        """
        * sets the field mysurf of the function.

        :param C:
        :type C: Adaptor3d_Curve &
        :param S:
        :type S: Adaptor3d_Surface &
        :rtype: None

        """
        return _Extrema.Extrema_FuncExtCS_Initialize(self, *args)


    def NbVariables(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_FuncExtCS_NbVariables(self, *args)


    def NbEquations(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_FuncExtCS_NbEquations(self, *args)


    def Value(self, *args):
        """
        * Calculation of Fi(U,V).

        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :rtype: bool

        """
        return _Extrema.Extrema_FuncExtCS_Value(self, *args)


    def Derivatives(self, *args):
        """
        * Calculation of Fi'(U,V).

        :param UV:
        :type UV: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_FuncExtCS_Derivatives(self, *args)


    def Values(self, *args):
        """
        * Calculation of Fi(U,V) and Fi'(U,V).

        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_FuncExtCS_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        * Save the found extremum.

        :rtype: int

        """
        return _Extrema.Extrema_FuncExtCS_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        * Return the number of found extrema.

        :rtype: int

        """
        return _Extrema.Extrema_FuncExtCS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Return the value of the Nth distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_FuncExtCS_SquareDistance(self, *args)


    def PointOnCurve(self, *args):
        """
        * Returns the Nth extremum on C.

        :param N:
        :type N: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_FuncExtCS_PointOnCurve(self, *args)


    def PointOnSurface(self, *args):
        """
        * Return the Nth extremum on S.

        :param N:
        :type N: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_FuncExtCS_PointOnSurface(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_FuncExtCS.Initialize = new_instancemethod(_Extrema.Extrema_FuncExtCS_Initialize, None, Extrema_FuncExtCS)
Extrema_FuncExtCS.NbVariables = new_instancemethod(_Extrema.Extrema_FuncExtCS_NbVariables, None, Extrema_FuncExtCS)
Extrema_FuncExtCS.NbEquations = new_instancemethod(_Extrema.Extrema_FuncExtCS_NbEquations, None, Extrema_FuncExtCS)
Extrema_FuncExtCS.Value = new_instancemethod(_Extrema.Extrema_FuncExtCS_Value, None, Extrema_FuncExtCS)
Extrema_FuncExtCS.Derivatives = new_instancemethod(_Extrema.Extrema_FuncExtCS_Derivatives, None, Extrema_FuncExtCS)
Extrema_FuncExtCS.Values = new_instancemethod(_Extrema.Extrema_FuncExtCS_Values, None, Extrema_FuncExtCS)
Extrema_FuncExtCS.GetStateNumber = new_instancemethod(_Extrema.Extrema_FuncExtCS_GetStateNumber, None, Extrema_FuncExtCS)
Extrema_FuncExtCS.NbExt = new_instancemethod(_Extrema.Extrema_FuncExtCS_NbExt, None, Extrema_FuncExtCS)
Extrema_FuncExtCS.SquareDistance = new_instancemethod(_Extrema.Extrema_FuncExtCS_SquareDistance, None, Extrema_FuncExtCS)
Extrema_FuncExtCS.PointOnCurve = new_instancemethod(_Extrema.Extrema_FuncExtCS_PointOnCurve, None, Extrema_FuncExtCS)
Extrema_FuncExtCS.PointOnSurface = new_instancemethod(_Extrema.Extrema_FuncExtCS_PointOnSurface, None, Extrema_FuncExtCS)
Extrema_FuncExtCS._kill_pointed = new_instancemethod(_Extrema.Extrema_FuncExtCS__kill_pointed, None, Extrema_FuncExtCS)
Extrema_FuncExtCS_swigregister = _Extrema.Extrema_FuncExtCS_swigregister
Extrema_FuncExtCS_swigregister(Extrema_FuncExtCS)

class Extrema_FuncExtPS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: Adaptor3d_Surface &
        :rtype: None

        """
        _Extrema.Extrema_FuncExtPS_swiginit(self, _Extrema.new_Extrema_FuncExtPS(*args))

    def Initialize(self, *args):
        """
        * sets the field mysurf of the function.

        :param S:
        :type S: Adaptor3d_Surface &
        :rtype: None

        """
        return _Extrema.Extrema_FuncExtPS_Initialize(self, *args)


    def SetPoint(self, *args):
        """
        * sets the field mysurf of the function.

        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_FuncExtPS_SetPoint(self, *args)


    def NbVariables(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_FuncExtPS_NbVariables(self, *args)


    def NbEquations(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_FuncExtPS_NbEquations(self, *args)


    def Value(self, *args):
        """
        * Calculate Fi(U,V).

        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :rtype: bool

        """
        return _Extrema.Extrema_FuncExtPS_Value(self, *args)


    def Derivatives(self, *args):
        """
        * Calculate Fi'(U,V).

        :param UV:
        :type UV: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_FuncExtPS_Derivatives(self, *args)


    def Values(self, *args):
        """
        * Calculate Fi(U,V) and Fi'(U,V).

        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_FuncExtPS_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        * Save the found extremum.

        :rtype: int

        """
        return _Extrema.Extrema_FuncExtPS_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        * Return the number of found extrema.

        :rtype: int

        """
        return _Extrema.Extrema_FuncExtPS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Return the value of the Nth distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_FuncExtPS_SquareDistance(self, *args)


    def Point(self, *args):
        """
        * Returns the Nth extremum.

        :param N:
        :type N: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_FuncExtPS_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_FuncExtPS.Initialize = new_instancemethod(_Extrema.Extrema_FuncExtPS_Initialize, None, Extrema_FuncExtPS)
Extrema_FuncExtPS.SetPoint = new_instancemethod(_Extrema.Extrema_FuncExtPS_SetPoint, None, Extrema_FuncExtPS)
Extrema_FuncExtPS.NbVariables = new_instancemethod(_Extrema.Extrema_FuncExtPS_NbVariables, None, Extrema_FuncExtPS)
Extrema_FuncExtPS.NbEquations = new_instancemethod(_Extrema.Extrema_FuncExtPS_NbEquations, None, Extrema_FuncExtPS)
Extrema_FuncExtPS.Value = new_instancemethod(_Extrema.Extrema_FuncExtPS_Value, None, Extrema_FuncExtPS)
Extrema_FuncExtPS.Derivatives = new_instancemethod(_Extrema.Extrema_FuncExtPS_Derivatives, None, Extrema_FuncExtPS)
Extrema_FuncExtPS.Values = new_instancemethod(_Extrema.Extrema_FuncExtPS_Values, None, Extrema_FuncExtPS)
Extrema_FuncExtPS.GetStateNumber = new_instancemethod(_Extrema.Extrema_FuncExtPS_GetStateNumber, None, Extrema_FuncExtPS)
Extrema_FuncExtPS.NbExt = new_instancemethod(_Extrema.Extrema_FuncExtPS_NbExt, None, Extrema_FuncExtPS)
Extrema_FuncExtPS.SquareDistance = new_instancemethod(_Extrema.Extrema_FuncExtPS_SquareDistance, None, Extrema_FuncExtPS)
Extrema_FuncExtPS.Point = new_instancemethod(_Extrema.Extrema_FuncExtPS_Point, None, Extrema_FuncExtPS)
Extrema_FuncExtPS._kill_pointed = new_instancemethod(_Extrema.Extrema_FuncExtPS__kill_pointed, None, Extrema_FuncExtPS)
Extrema_FuncExtPS_swigregister = _Extrema.Extrema_FuncExtPS_swigregister
Extrema_FuncExtPS_swigregister(Extrema_FuncExtPS)

class Extrema_FuncExtSS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param S1:
        :type S1: Adaptor3d_Surface &
        :param S2:
        :type S2: Adaptor3d_Surface &
        :rtype: None

        """
        _Extrema.Extrema_FuncExtSS_swiginit(self, _Extrema.new_Extrema_FuncExtSS(*args))

    def Initialize(self, *args):
        """
        * sets the field mysurf of the function.

        :param S1:
        :type S1: Adaptor3d_Surface &
        :param S2:
        :type S2: Adaptor3d_Surface &
        :rtype: None

        """
        return _Extrema.Extrema_FuncExtSS_Initialize(self, *args)


    def NbVariables(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_FuncExtSS_NbVariables(self, *args)


    def NbEquations(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_FuncExtSS_NbEquations(self, *args)


    def Value(self, *args):
        """
        * Calculate Fi(U,V).

        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :rtype: bool

        """
        return _Extrema.Extrema_FuncExtSS_Value(self, *args)


    def Derivatives(self, *args):
        """
        * Calculate Fi'(U,V).

        :param UV:
        :type UV: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_FuncExtSS_Derivatives(self, *args)


    def Values(self, *args):
        """
        * Calculate Fi(U,V) and Fi'(U,V).

        :param UV:
        :type UV: math_Vector &
        :param F:
        :type F: math_Vector &
        :param DF:
        :type DF: math_Matrix &
        :rtype: bool

        """
        return _Extrema.Extrema_FuncExtSS_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        * Save the found extremum.

        :rtype: int

        """
        return _Extrema.Extrema_FuncExtSS_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        * Return the number of found extrema.

        :rtype: int

        """
        return _Extrema.Extrema_FuncExtSS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Return the value of the Nth distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_FuncExtSS_SquareDistance(self, *args)


    def PointOnS1(self, *args):
        """
        * Return the Nth extremum on S1.

        :param N:
        :type N: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_FuncExtSS_PointOnS1(self, *args)


    def PointOnS2(self, *args):
        """
        * Renvoie le Nieme extremum sur S2.

        :param N:
        :type N: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_FuncExtSS_PointOnS2(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_FuncExtSS.Initialize = new_instancemethod(_Extrema.Extrema_FuncExtSS_Initialize, None, Extrema_FuncExtSS)
Extrema_FuncExtSS.NbVariables = new_instancemethod(_Extrema.Extrema_FuncExtSS_NbVariables, None, Extrema_FuncExtSS)
Extrema_FuncExtSS.NbEquations = new_instancemethod(_Extrema.Extrema_FuncExtSS_NbEquations, None, Extrema_FuncExtSS)
Extrema_FuncExtSS.Value = new_instancemethod(_Extrema.Extrema_FuncExtSS_Value, None, Extrema_FuncExtSS)
Extrema_FuncExtSS.Derivatives = new_instancemethod(_Extrema.Extrema_FuncExtSS_Derivatives, None, Extrema_FuncExtSS)
Extrema_FuncExtSS.Values = new_instancemethod(_Extrema.Extrema_FuncExtSS_Values, None, Extrema_FuncExtSS)
Extrema_FuncExtSS.GetStateNumber = new_instancemethod(_Extrema.Extrema_FuncExtSS_GetStateNumber, None, Extrema_FuncExtSS)
Extrema_FuncExtSS.NbExt = new_instancemethod(_Extrema.Extrema_FuncExtSS_NbExt, None, Extrema_FuncExtSS)
Extrema_FuncExtSS.SquareDistance = new_instancemethod(_Extrema.Extrema_FuncExtSS_SquareDistance, None, Extrema_FuncExtSS)
Extrema_FuncExtSS.PointOnS1 = new_instancemethod(_Extrema.Extrema_FuncExtSS_PointOnS1, None, Extrema_FuncExtSS)
Extrema_FuncExtSS.PointOnS2 = new_instancemethod(_Extrema.Extrema_FuncExtSS_PointOnS2, None, Extrema_FuncExtSS)
Extrema_FuncExtSS._kill_pointed = new_instancemethod(_Extrema.Extrema_FuncExtSS__kill_pointed, None, Extrema_FuncExtSS)
Extrema_FuncExtSS_swigregister = _Extrema.Extrema_FuncExtSS_swigregister
Extrema_FuncExtSS_swigregister(Extrema_FuncExtSS)

class Extrema_GenExtCS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * It calculates all the distances. The function F(u,v)=distance(S1(u1,v1),S2(u2,v2)) has an extremum when gradient(F)=0. The algorithm searchs all the zeros inside the definition ranges of the surfaces. NbU and NbV are used to locate the close points on the surface and NbT on the curve to find the zeros.

        :param C:
        :type C: Adaptor3d_Curve &
        :param S:
        :type S: Adaptor3d_Surface &
        :param NbT:
        :type NbT: int
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param Tol1:
        :type Tol1: float
        :param Tol2:
        :type Tol2: float
        :rtype: None

        * It calculates all the distances. The function F(u,v)=distance(P,S(u,v)) has an extremum when gradient(F)=0. The algorithm searchs all the zeros inside the definition ranges of the surface. NbT,NbU and NbV are used to locate the close points to find the zeros.

        :param C:
        :type C: Adaptor3d_Curve &
        :param S:
        :type S: Adaptor3d_Surface &
        :param NbT:
        :type NbT: int
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param tmin:
        :type tmin: float
        :param tsup:
        :type tsup: float
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param Vmin:
        :type Vmin: float
        :param Vsup:
        :type Vsup: float
        :param Tol1:
        :type Tol1: float
        :param Tol2:
        :type Tol2: float
        :rtype: None

        """
        _Extrema.Extrema_GenExtCS_swiginit(self, _Extrema.new_Extrema_GenExtCS(*args))

    def Initialize(self, *args):
        """
        :param S:
        :type S: Adaptor3d_Surface &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param Tol2:
        :type Tol2: float
        :rtype: None

        :param S:
        :type S: Adaptor3d_Surface &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param Vmin:
        :type Vmin: float
        :param Vsup:
        :type Vsup: float
        :param Tol2:
        :type Tol2: float
        :rtype: None

        """
        return _Extrema.Extrema_GenExtCS_Initialize(self, *args)


    def Perform(self, *args):
        """
        * the algorithm is done with S An exception is raised if the fields have not been initialized.

        :param C:
        :type C: Adaptor3d_Curve &
        :param NbT:
        :type NbT: int
        :param Tol1:
        :type Tol1: float
        :rtype: None

        * the algorithm is done with C An exception is raised if the fields have not been initialized.

        :param C:
        :type C: Adaptor3d_Curve &
        :param NbT:
        :type NbT: int
        :param tmin:
        :type tmin: float
        :param tsup:
        :type tsup: float
        :param Tol1:
        :type Tol1: float
        :rtype: None

        """
        return _Extrema.Extrema_GenExtCS_Perform(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_GenExtCS_IsDone(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_GenExtCS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth resulting square distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_GenExtCS_SquareDistance(self, *args)


    def PointOnCurve(self, *args):
        """
        * Returns the point of the Nth resulting distance.

        :param N:
        :type N: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_GenExtCS_PointOnCurve(self, *args)


    def PointOnSurface(self, *args):
        """
        * Returns the point of the Nth resulting distance.

        :param N:
        :type N: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_GenExtCS_PointOnSurface(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_GenExtCS.Initialize = new_instancemethod(_Extrema.Extrema_GenExtCS_Initialize, None, Extrema_GenExtCS)
Extrema_GenExtCS.Perform = new_instancemethod(_Extrema.Extrema_GenExtCS_Perform, None, Extrema_GenExtCS)
Extrema_GenExtCS.IsDone = new_instancemethod(_Extrema.Extrema_GenExtCS_IsDone, None, Extrema_GenExtCS)
Extrema_GenExtCS.NbExt = new_instancemethod(_Extrema.Extrema_GenExtCS_NbExt, None, Extrema_GenExtCS)
Extrema_GenExtCS.SquareDistance = new_instancemethod(_Extrema.Extrema_GenExtCS_SquareDistance, None, Extrema_GenExtCS)
Extrema_GenExtCS.PointOnCurve = new_instancemethod(_Extrema.Extrema_GenExtCS_PointOnCurve, None, Extrema_GenExtCS)
Extrema_GenExtCS.PointOnSurface = new_instancemethod(_Extrema.Extrema_GenExtCS_PointOnSurface, None, Extrema_GenExtCS)
Extrema_GenExtCS._kill_pointed = new_instancemethod(_Extrema.Extrema_GenExtCS__kill_pointed, None, Extrema_GenExtCS)
Extrema_GenExtCS_swigregister = _Extrema.Extrema_GenExtCS_swigregister
Extrema_GenExtCS_swigregister(Extrema_GenExtCS)

class Extrema_GenExtPS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * It calculates all the distances. The function F(u,v)=distance(P,S(u,v)) has an extremum when gradient(F)=0. The algorithm searchs all the zeros inside the definition ranges of the surface. NbU and NbV are used to locate the close points to find the zeros. They must be great enough such that if there is N extrema, there will be N extrema between P and the grid. TolU et TolV are used to determine the conditions to stop the iterations; at the iteration number n: (Un - Un-1) < TolU and (Vn - Vn-1) < TolV .

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: Adaptor3d_Surface &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :param F: default value is Extrema_ExtFlag_MINMAX
        :type F: Extrema_ExtFlag
        :param A: default value is Extrema_ExtAlgo_Grad
        :type A: Extrema_ExtAlgo
        :rtype: None

        * It calculates all the distances. The function F(u,v)=distance(P,S(u,v)) has an extremum when gradient(F)=0. The algorithm searchs all the zeros inside the definition ranges of the surface. NbU and NbV are used to locate the close points to find the zeros. They must be great enough such that if there is N extrema, there will be N extrema between P and the grid. TolU et TolV are used to determine the conditions to stop the iterations; at the iteration number n: (Un - Un-1) < TolU and (Vn - Vn-1) < TolV .

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: Adaptor3d_Surface &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param Vmin:
        :type Vmin: float
        :param Vsup:
        :type Vsup: float
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :param F: default value is Extrema_ExtFlag_MINMAX
        :type F: Extrema_ExtFlag
        :param A: default value is Extrema_ExtAlgo_Grad
        :type A: Extrema_ExtAlgo
        :rtype: None

        """
        _Extrema.Extrema_GenExtPS_swiginit(self, _Extrema.new_Extrema_GenExtPS(*args))

    def Initialize(self, *args):
        """
        :param S:
        :type S: Adaptor3d_Surface &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        :param S:
        :type S: Adaptor3d_Surface &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param Vmin:
        :type Vmin: float
        :param Vsup:
        :type Vsup: float
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        return _Extrema.Extrema_GenExtPS_Initialize(self, *args)


    def Perform(self, *args):
        """
        * the algorithm is done with the point P. An exception is raised if the fields have not been initialized.

        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_GenExtPS_Perform(self, *args)


    def SetFlag(self, *args):
        """
        :param F:
        :type F: Extrema_ExtFlag
        :rtype: None

        """
        return _Extrema.Extrema_GenExtPS_SetFlag(self, *args)


    def SetAlgo(self, *args):
        """
        :param A:
        :type A: Extrema_ExtAlgo
        :rtype: None

        """
        return _Extrema.Extrema_GenExtPS_SetAlgo(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_GenExtPS_IsDone(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_GenExtPS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth resulting square distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_GenExtPS_SquareDistance(self, *args)


    def Point(self, *args):
        """
        * Returns the point of the Nth resulting distance.

        :param N:
        :type N: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_GenExtPS_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_GenExtPS.Initialize = new_instancemethod(_Extrema.Extrema_GenExtPS_Initialize, None, Extrema_GenExtPS)
Extrema_GenExtPS.Perform = new_instancemethod(_Extrema.Extrema_GenExtPS_Perform, None, Extrema_GenExtPS)
Extrema_GenExtPS.SetFlag = new_instancemethod(_Extrema.Extrema_GenExtPS_SetFlag, None, Extrema_GenExtPS)
Extrema_GenExtPS.SetAlgo = new_instancemethod(_Extrema.Extrema_GenExtPS_SetAlgo, None, Extrema_GenExtPS)
Extrema_GenExtPS.IsDone = new_instancemethod(_Extrema.Extrema_GenExtPS_IsDone, None, Extrema_GenExtPS)
Extrema_GenExtPS.NbExt = new_instancemethod(_Extrema.Extrema_GenExtPS_NbExt, None, Extrema_GenExtPS)
Extrema_GenExtPS.SquareDistance = new_instancemethod(_Extrema.Extrema_GenExtPS_SquareDistance, None, Extrema_GenExtPS)
Extrema_GenExtPS.Point = new_instancemethod(_Extrema.Extrema_GenExtPS_Point, None, Extrema_GenExtPS)
Extrema_GenExtPS._kill_pointed = new_instancemethod(_Extrema.Extrema_GenExtPS__kill_pointed, None, Extrema_GenExtPS)
Extrema_GenExtPS_swigregister = _Extrema.Extrema_GenExtPS_swigregister
Extrema_GenExtPS_swigregister(Extrema_GenExtPS)

class Extrema_GenExtSS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * It calculates all the distances. The function F(u,v)=distance(S1(u1,v1),S2(u2,v2)) has an extremum when gradient(F)=0. The algorithm searchs all the zeros inside the definition ranges of the surfaces. NbU and NbV are used to locate the close points to find the zeros.

        :param S1:
        :type S1: Adaptor3d_Surface &
        :param S2:
        :type S2: Adaptor3d_Surface &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param Tol1:
        :type Tol1: float
        :param Tol2:
        :type Tol2: float
        :rtype: None

        * It calculates all the distances. The function F(u,v)=distance(P,S(u,v)) has an extremum when gradient(F)=0. The algorithm searchs all the zeros inside the definition ranges of the surface. NbU and NbV are used to locate the close points to find the zeros.

        :param S1:
        :type S1: Adaptor3d_Surface &
        :param S2:
        :type S2: Adaptor3d_Surface &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param U1min:
        :type U1min: float
        :param U1sup:
        :type U1sup: float
        :param V1min:
        :type V1min: float
        :param V1sup:
        :type V1sup: float
        :param U2min:
        :type U2min: float
        :param U2sup:
        :type U2sup: float
        :param V2min:
        :type V2min: float
        :param V2sup:
        :type V2sup: float
        :param Tol1:
        :type Tol1: float
        :param Tol2:
        :type Tol2: float
        :rtype: None

        """
        _Extrema.Extrema_GenExtSS_swiginit(self, _Extrema.new_Extrema_GenExtSS(*args))

    def Initialize(self, *args):
        """
        :param S2:
        :type S2: Adaptor3d_Surface &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param Tol2:
        :type Tol2: float
        :rtype: None

        :param S2:
        :type S2: Adaptor3d_Surface &
        :param NbU:
        :type NbU: int
        :param NbV:
        :type NbV: int
        :param U2min:
        :type U2min: float
        :param U2sup:
        :type U2sup: float
        :param V2min:
        :type V2min: float
        :param V2sup:
        :type V2sup: float
        :param Tol2:
        :type Tol2: float
        :rtype: None

        """
        return _Extrema.Extrema_GenExtSS_Initialize(self, *args)


    def Perform(self, *args):
        """
        * the algorithm is done with S1 An exception is raised if the fields have not been initialized.

        :param S1:
        :type S1: Adaptor3d_Surface &
        :param Tol1:
        :type Tol1: float
        :rtype: None

        * the algorithm is done withS1 An exception is raised if the fields have not been initialized.

        :param S1:
        :type S1: Adaptor3d_Surface &
        :param U1min:
        :type U1min: float
        :param U1sup:
        :type U1sup: float
        :param V1min:
        :type V1min: float
        :param V1sup:
        :type V1sup: float
        :param Tol1:
        :type Tol1: float
        :rtype: None

        """
        return _Extrema.Extrema_GenExtSS_Perform(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distances are found.

        :rtype: bool

        """
        return _Extrema.Extrema_GenExtSS_IsDone(self, *args)


    def NbExt(self, *args):
        """
        * Returns the number of extremum distances.

        :rtype: int

        """
        return _Extrema.Extrema_GenExtSS_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the Nth resulting square distance.

        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_GenExtSS_SquareDistance(self, *args)


    def PointOnS1(self, *args):
        """
        * Returns the point of the Nth resulting distance.

        :param N:
        :type N: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_GenExtSS_PointOnS1(self, *args)


    def PointOnS2(self, *args):
        """
        * Returns the point of the Nth resulting distance.

        :param N:
        :type N: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_GenExtSS_PointOnS2(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_GenExtSS.Initialize = new_instancemethod(_Extrema.Extrema_GenExtSS_Initialize, None, Extrema_GenExtSS)
Extrema_GenExtSS.Perform = new_instancemethod(_Extrema.Extrema_GenExtSS_Perform, None, Extrema_GenExtSS)
Extrema_GenExtSS.IsDone = new_instancemethod(_Extrema.Extrema_GenExtSS_IsDone, None, Extrema_GenExtSS)
Extrema_GenExtSS.NbExt = new_instancemethod(_Extrema.Extrema_GenExtSS_NbExt, None, Extrema_GenExtSS)
Extrema_GenExtSS.SquareDistance = new_instancemethod(_Extrema.Extrema_GenExtSS_SquareDistance, None, Extrema_GenExtSS)
Extrema_GenExtSS.PointOnS1 = new_instancemethod(_Extrema.Extrema_GenExtSS_PointOnS1, None, Extrema_GenExtSS)
Extrema_GenExtSS.PointOnS2 = new_instancemethod(_Extrema.Extrema_GenExtSS_PointOnS2, None, Extrema_GenExtSS)
Extrema_GenExtSS._kill_pointed = new_instancemethod(_Extrema.Extrema_GenExtSS__kill_pointed, None, Extrema_GenExtSS)
Extrema_GenExtSS_swigregister = _Extrema.Extrema_GenExtSS_swigregister
Extrema_GenExtSS_swigregister(Extrema_GenExtSS)

class Extrema_GenLocateExtCS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Calculates the distance with two close points. The close points are defined by the parameter values T for C and (U,V) for S. The function F(t,u,v)=distance(C(t),S(u,v)) has an extremun when gradient(F)=0. The algorithm searchs a zero near the close points.

        :param C:
        :type C: Adaptor3d_Curve &
        :param S:
        :type S: Adaptor3d_Surface &
        :param T:
        :type T: float
        :param U:
        :type U: float
        :param V:
        :type V: float
        :param Tol1:
        :type Tol1: float
        :param Tol2:
        :type Tol2: float
        :rtype: None

        """
        _Extrema.Extrema_GenLocateExtCS_swiginit(self, _Extrema.new_Extrema_GenLocateExtCS(*args))

    def Perform(self, *args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param S:
        :type S: Adaptor3d_Surface &
        :param T:
        :type T: float
        :param U:
        :type U: float
        :param V:
        :type V: float
        :param Tol1:
        :type Tol1: float
        :param Tol2:
        :type Tol2: float
        :rtype: None

        """
        return _Extrema.Extrema_GenLocateExtCS_Perform(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distance is found.

        :rtype: bool

        """
        return _Extrema.Extrema_GenLocateExtCS_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the extremum square distance.

        :rtype: float

        """
        return _Extrema.Extrema_GenLocateExtCS_SquareDistance(self, *args)


    def PointOnCurve(self, *args):
        """
        * Returns the point of the extremum distance on C.

        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_GenLocateExtCS_PointOnCurve(self, *args)


    def PointOnSurface(self, *args):
        """
        * Returns the point of the extremum distance on S.

        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_GenLocateExtCS_PointOnSurface(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_GenLocateExtCS.Perform = new_instancemethod(_Extrema.Extrema_GenLocateExtCS_Perform, None, Extrema_GenLocateExtCS)
Extrema_GenLocateExtCS.IsDone = new_instancemethod(_Extrema.Extrema_GenLocateExtCS_IsDone, None, Extrema_GenLocateExtCS)
Extrema_GenLocateExtCS.SquareDistance = new_instancemethod(_Extrema.Extrema_GenLocateExtCS_SquareDistance, None, Extrema_GenLocateExtCS)
Extrema_GenLocateExtCS.PointOnCurve = new_instancemethod(_Extrema.Extrema_GenLocateExtCS_PointOnCurve, None, Extrema_GenLocateExtCS)
Extrema_GenLocateExtCS.PointOnSurface = new_instancemethod(_Extrema.Extrema_GenLocateExtCS_PointOnSurface, None, Extrema_GenLocateExtCS)
Extrema_GenLocateExtCS._kill_pointed = new_instancemethod(_Extrema.Extrema_GenLocateExtCS__kill_pointed, None, Extrema_GenLocateExtCS)
Extrema_GenLocateExtCS_swigregister = _Extrema.Extrema_GenLocateExtCS_swigregister
Extrema_GenLocateExtCS_swigregister(Extrema_GenLocateExtCS)

class Extrema_GenLocateExtPS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Calculates the distance with a close point. The close point is defined by the parameter values U0 and V0. The function F(u,v)=distance(S(u,v),p) has an extremun when gradient(F)=0. The algorithm searchs a zero near the close point.

        :param P:
        :type P: gp_Pnt
        :param S:
        :type S: Adaptor3d_Surface &
        :param U0:
        :type U0: float
        :param V0:
        :type V0: float
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        _Extrema.Extrema_GenLocateExtPS_swiginit(self, _Extrema.new_Extrema_GenLocateExtPS(*args))

    def IsDone(self, *args):
        """
        * Returns True if the distance is found.

        :rtype: bool

        """
        return _Extrema.Extrema_GenLocateExtPS_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the extremum square distance.

        :rtype: float

        """
        return _Extrema.Extrema_GenLocateExtPS_SquareDistance(self, *args)


    def Point(self, *args):
        """
        * Returns the point of the extremum distance.

        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_GenLocateExtPS_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_GenLocateExtPS.IsDone = new_instancemethod(_Extrema.Extrema_GenLocateExtPS_IsDone, None, Extrema_GenLocateExtPS)
Extrema_GenLocateExtPS.SquareDistance = new_instancemethod(_Extrema.Extrema_GenLocateExtPS_SquareDistance, None, Extrema_GenLocateExtPS)
Extrema_GenLocateExtPS.Point = new_instancemethod(_Extrema.Extrema_GenLocateExtPS_Point, None, Extrema_GenLocateExtPS)
Extrema_GenLocateExtPS._kill_pointed = new_instancemethod(_Extrema.Extrema_GenLocateExtPS__kill_pointed, None, Extrema_GenLocateExtPS)
Extrema_GenLocateExtPS_swigregister = _Extrema.Extrema_GenLocateExtPS_swigregister
Extrema_GenLocateExtPS_swigregister(Extrema_GenLocateExtPS)

class Extrema_GenLocateExtSS(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        * Calculates the distance with two close points. The close points are defined by the parameter values (U1,V1) for S1 and (U2,V2) for S2. The function F(u1,v1,u2,v2)=distance(S1(u1,v1),S2(u2,v2)) has an extremun when gradient(F)=0. The algorithm searchs a zero near the close points.

        :param S1:
        :type S1: Adaptor3d_Surface &
        :param S2:
        :type S2: Adaptor3d_Surface &
        :param U1:
        :type U1: float
        :param V1:
        :type V1: float
        :param U2:
        :type U2: float
        :param V2:
        :type V2: float
        :param Tol1:
        :type Tol1: float
        :param Tol2:
        :type Tol2: float
        :rtype: None

        """
        _Extrema.Extrema_GenLocateExtSS_swiginit(self, _Extrema.new_Extrema_GenLocateExtSS(*args))

    def Perform(self, *args):
        """
        :param S1:
        :type S1: Adaptor3d_Surface &
        :param S2:
        :type S2: Adaptor3d_Surface &
        :param U1:
        :type U1: float
        :param V1:
        :type V1: float
        :param U2:
        :type U2: float
        :param V2:
        :type V2: float
        :param Tol1:
        :type Tol1: float
        :param Tol2:
        :type Tol2: float
        :rtype: None

        """
        return _Extrema.Extrema_GenLocateExtSS_Perform(self, *args)


    def IsDone(self, *args):
        """
        * Returns True if the distance is found.

        :rtype: bool

        """
        return _Extrema.Extrema_GenLocateExtSS_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        * Returns the value of the extremum square distance.

        :rtype: float

        """
        return _Extrema.Extrema_GenLocateExtSS_SquareDistance(self, *args)


    def PointOnS1(self, *args):
        """
        * Returns the point of the extremum distance on S1.

        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_GenLocateExtSS_PointOnS1(self, *args)


    def PointOnS2(self, *args):
        """
        * Returns the point of the extremum distance on S2.

        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_GenLocateExtSS_PointOnS2(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_GenLocateExtSS.Perform = new_instancemethod(_Extrema.Extrema_GenLocateExtSS_Perform, None, Extrema_GenLocateExtSS)
Extrema_GenLocateExtSS.IsDone = new_instancemethod(_Extrema.Extrema_GenLocateExtSS_IsDone, None, Extrema_GenLocateExtSS)
Extrema_GenLocateExtSS.SquareDistance = new_instancemethod(_Extrema.Extrema_GenLocateExtSS_SquareDistance, None, Extrema_GenLocateExtSS)
Extrema_GenLocateExtSS.PointOnS1 = new_instancemethod(_Extrema.Extrema_GenLocateExtSS_PointOnS1, None, Extrema_GenLocateExtSS)
Extrema_GenLocateExtSS.PointOnS2 = new_instancemethod(_Extrema.Extrema_GenLocateExtSS_PointOnS2, None, Extrema_GenLocateExtSS)
Extrema_GenLocateExtSS._kill_pointed = new_instancemethod(_Extrema.Extrema_GenLocateExtSS__kill_pointed, None, Extrema_GenLocateExtSS)
Extrema_GenLocateExtSS_swigregister = _Extrema.Extrema_GenLocateExtSS_swigregister
Extrema_GenLocateExtSS_swigregister(Extrema_GenLocateExtSS)

class Extrema_HArray1OfPOnCurv(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Extrema_POnCurv &
        :rtype: None

        """
        _Extrema.Extrema_HArray1OfPOnCurv_swiginit(self, _Extrema.new_Extrema_HArray1OfPOnCurv(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_HArray1OfPOnCurv_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray1OfPOnCurv_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray1OfPOnCurv_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray1OfPOnCurv_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_HArray1OfPOnCurv_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_HArray1OfPOnCurv_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_HArray1OfPOnCurv_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: Extrema_Array1OfPOnCurv

        """
        return _Extrema.Extrema_HArray1OfPOnCurv_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: Extrema_Array1OfPOnCurv

        """
        return _Extrema.Extrema_HArray1OfPOnCurv_ChangeArray1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_HArray1OfPOnCurv self)"""
        return _Extrema.Extrema_HArray1OfPOnCurv__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_HArray1OfPOnCurv self) -> Handle_Extrema_HArray1OfPOnCurv"""
        return _Extrema.Extrema_HArray1OfPOnCurv_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_HArray1OfPOnCurv.Init = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv_Init, None, Extrema_HArray1OfPOnCurv)
Extrema_HArray1OfPOnCurv.Length = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv_Length, None, Extrema_HArray1OfPOnCurv)
Extrema_HArray1OfPOnCurv.Lower = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv_Lower, None, Extrema_HArray1OfPOnCurv)
Extrema_HArray1OfPOnCurv.Upper = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv_Upper, None, Extrema_HArray1OfPOnCurv)
Extrema_HArray1OfPOnCurv.SetValue = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv_SetValue, None, Extrema_HArray1OfPOnCurv)
Extrema_HArray1OfPOnCurv.Value = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv_Value, None, Extrema_HArray1OfPOnCurv)
Extrema_HArray1OfPOnCurv.ChangeValue = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv_ChangeValue, None, Extrema_HArray1OfPOnCurv)
Extrema_HArray1OfPOnCurv.Array1 = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv_Array1, None, Extrema_HArray1OfPOnCurv)
Extrema_HArray1OfPOnCurv.ChangeArray1 = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv_ChangeArray1, None, Extrema_HArray1OfPOnCurv)
Extrema_HArray1OfPOnCurv._kill_pointed = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv__kill_pointed, None, Extrema_HArray1OfPOnCurv)
Extrema_HArray1OfPOnCurv.GetHandle = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv_GetHandle, None, Extrema_HArray1OfPOnCurv)
Extrema_HArray1OfPOnCurv_swigregister = _Extrema.Extrema_HArray1OfPOnCurv_swigregister
Extrema_HArray1OfPOnCurv_swigregister(Extrema_HArray1OfPOnCurv)

class Handle_Extrema_HArray1OfPOnCurv(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_HArray1OfPOnCurv_swiginit(self, _Extrema.new_Handle_Extrema_HArray1OfPOnCurv(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_HArray1OfPOnCurv_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_HArray1OfPOnCurv.Nullify = new_instancemethod(_Extrema.Handle_Extrema_HArray1OfPOnCurv_Nullify, None, Handle_Extrema_HArray1OfPOnCurv)
Handle_Extrema_HArray1OfPOnCurv.IsNull = new_instancemethod(_Extrema.Handle_Extrema_HArray1OfPOnCurv_IsNull, None, Handle_Extrema_HArray1OfPOnCurv)
Handle_Extrema_HArray1OfPOnCurv.GetObject = new_instancemethod(_Extrema.Handle_Extrema_HArray1OfPOnCurv_GetObject, None, Handle_Extrema_HArray1OfPOnCurv)
Handle_Extrema_HArray1OfPOnCurv._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_HArray1OfPOnCurv__kill_pointed, None, Handle_Extrema_HArray1OfPOnCurv)
Handle_Extrema_HArray1OfPOnCurv_swigregister = _Extrema.Handle_Extrema_HArray1OfPOnCurv_swigregister
Handle_Extrema_HArray1OfPOnCurv_swigregister(Handle_Extrema_HArray1OfPOnCurv)

def Handle_Extrema_HArray1OfPOnCurv_DownCast(AnObject):
    return _Extrema.Handle_Extrema_HArray1OfPOnCurv_DownCast(AnObject)
Handle_Extrema_HArray1OfPOnCurv_DownCast = _Extrema.Handle_Extrema_HArray1OfPOnCurv_DownCast

class Extrema_HArray1OfPOnCurv2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Extrema_POnCurv2d &
        :rtype: None

        """
        _Extrema.Extrema_HArray1OfPOnCurv2d_swiginit(self, _Extrema.new_Extrema_HArray1OfPOnCurv2d(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_HArray1OfPOnCurv2d_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray1OfPOnCurv2d_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray1OfPOnCurv2d_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray1OfPOnCurv2d_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_HArray1OfPOnCurv2d_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_HArray1OfPOnCurv2d_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_HArray1OfPOnCurv2d_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: Extrema_Array1OfPOnCurv2d

        """
        return _Extrema.Extrema_HArray1OfPOnCurv2d_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: Extrema_Array1OfPOnCurv2d

        """
        return _Extrema.Extrema_HArray1OfPOnCurv2d_ChangeArray1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_HArray1OfPOnCurv2d self)"""
        return _Extrema.Extrema_HArray1OfPOnCurv2d__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_HArray1OfPOnCurv2d self) -> Handle_Extrema_HArray1OfPOnCurv2d"""
        return _Extrema.Extrema_HArray1OfPOnCurv2d_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_HArray1OfPOnCurv2d.Init = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv2d_Init, None, Extrema_HArray1OfPOnCurv2d)
Extrema_HArray1OfPOnCurv2d.Length = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv2d_Length, None, Extrema_HArray1OfPOnCurv2d)
Extrema_HArray1OfPOnCurv2d.Lower = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv2d_Lower, None, Extrema_HArray1OfPOnCurv2d)
Extrema_HArray1OfPOnCurv2d.Upper = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv2d_Upper, None, Extrema_HArray1OfPOnCurv2d)
Extrema_HArray1OfPOnCurv2d.SetValue = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv2d_SetValue, None, Extrema_HArray1OfPOnCurv2d)
Extrema_HArray1OfPOnCurv2d.Value = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv2d_Value, None, Extrema_HArray1OfPOnCurv2d)
Extrema_HArray1OfPOnCurv2d.ChangeValue = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv2d_ChangeValue, None, Extrema_HArray1OfPOnCurv2d)
Extrema_HArray1OfPOnCurv2d.Array1 = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv2d_Array1, None, Extrema_HArray1OfPOnCurv2d)
Extrema_HArray1OfPOnCurv2d.ChangeArray1 = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv2d_ChangeArray1, None, Extrema_HArray1OfPOnCurv2d)
Extrema_HArray1OfPOnCurv2d._kill_pointed = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv2d__kill_pointed, None, Extrema_HArray1OfPOnCurv2d)
Extrema_HArray1OfPOnCurv2d.GetHandle = new_instancemethod(_Extrema.Extrema_HArray1OfPOnCurv2d_GetHandle, None, Extrema_HArray1OfPOnCurv2d)
Extrema_HArray1OfPOnCurv2d_swigregister = _Extrema.Extrema_HArray1OfPOnCurv2d_swigregister
Extrema_HArray1OfPOnCurv2d_swigregister(Extrema_HArray1OfPOnCurv2d)

class Handle_Extrema_HArray1OfPOnCurv2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_HArray1OfPOnCurv2d_swiginit(self, _Extrema.new_Handle_Extrema_HArray1OfPOnCurv2d(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_HArray1OfPOnCurv2d_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_HArray1OfPOnCurv2d.Nullify = new_instancemethod(_Extrema.Handle_Extrema_HArray1OfPOnCurv2d_Nullify, None, Handle_Extrema_HArray1OfPOnCurv2d)
Handle_Extrema_HArray1OfPOnCurv2d.IsNull = new_instancemethod(_Extrema.Handle_Extrema_HArray1OfPOnCurv2d_IsNull, None, Handle_Extrema_HArray1OfPOnCurv2d)
Handle_Extrema_HArray1OfPOnCurv2d.GetObject = new_instancemethod(_Extrema.Handle_Extrema_HArray1OfPOnCurv2d_GetObject, None, Handle_Extrema_HArray1OfPOnCurv2d)
Handle_Extrema_HArray1OfPOnCurv2d._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_HArray1OfPOnCurv2d__kill_pointed, None, Handle_Extrema_HArray1OfPOnCurv2d)
Handle_Extrema_HArray1OfPOnCurv2d_swigregister = _Extrema.Handle_Extrema_HArray1OfPOnCurv2d_swigregister
Handle_Extrema_HArray1OfPOnCurv2d_swigregister(Handle_Extrema_HArray1OfPOnCurv2d)

def Handle_Extrema_HArray1OfPOnCurv2d_DownCast(AnObject):
    return _Extrema.Handle_Extrema_HArray1OfPOnCurv2d_DownCast(AnObject)
Handle_Extrema_HArray1OfPOnCurv2d_DownCast = _Extrema.Handle_Extrema_HArray1OfPOnCurv2d_DownCast

class Extrema_HArray1OfPOnSurf(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Extrema_POnSurf &
        :rtype: None

        """
        _Extrema.Extrema_HArray1OfPOnSurf_swiginit(self, _Extrema.new_Extrema_HArray1OfPOnSurf(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_HArray1OfPOnSurf_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray1OfPOnSurf_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray1OfPOnSurf_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray1OfPOnSurf_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_HArray1OfPOnSurf_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_HArray1OfPOnSurf_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_HArray1OfPOnSurf_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: Extrema_Array1OfPOnSurf

        """
        return _Extrema.Extrema_HArray1OfPOnSurf_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: Extrema_Array1OfPOnSurf

        """
        return _Extrema.Extrema_HArray1OfPOnSurf_ChangeArray1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_HArray1OfPOnSurf self)"""
        return _Extrema.Extrema_HArray1OfPOnSurf__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_HArray1OfPOnSurf self) -> Handle_Extrema_HArray1OfPOnSurf"""
        return _Extrema.Extrema_HArray1OfPOnSurf_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_HArray1OfPOnSurf.Init = new_instancemethod(_Extrema.Extrema_HArray1OfPOnSurf_Init, None, Extrema_HArray1OfPOnSurf)
Extrema_HArray1OfPOnSurf.Length = new_instancemethod(_Extrema.Extrema_HArray1OfPOnSurf_Length, None, Extrema_HArray1OfPOnSurf)
Extrema_HArray1OfPOnSurf.Lower = new_instancemethod(_Extrema.Extrema_HArray1OfPOnSurf_Lower, None, Extrema_HArray1OfPOnSurf)
Extrema_HArray1OfPOnSurf.Upper = new_instancemethod(_Extrema.Extrema_HArray1OfPOnSurf_Upper, None, Extrema_HArray1OfPOnSurf)
Extrema_HArray1OfPOnSurf.SetValue = new_instancemethod(_Extrema.Extrema_HArray1OfPOnSurf_SetValue, None, Extrema_HArray1OfPOnSurf)
Extrema_HArray1OfPOnSurf.Value = new_instancemethod(_Extrema.Extrema_HArray1OfPOnSurf_Value, None, Extrema_HArray1OfPOnSurf)
Extrema_HArray1OfPOnSurf.ChangeValue = new_instancemethod(_Extrema.Extrema_HArray1OfPOnSurf_ChangeValue, None, Extrema_HArray1OfPOnSurf)
Extrema_HArray1OfPOnSurf.Array1 = new_instancemethod(_Extrema.Extrema_HArray1OfPOnSurf_Array1, None, Extrema_HArray1OfPOnSurf)
Extrema_HArray1OfPOnSurf.ChangeArray1 = new_instancemethod(_Extrema.Extrema_HArray1OfPOnSurf_ChangeArray1, None, Extrema_HArray1OfPOnSurf)
Extrema_HArray1OfPOnSurf._kill_pointed = new_instancemethod(_Extrema.Extrema_HArray1OfPOnSurf__kill_pointed, None, Extrema_HArray1OfPOnSurf)
Extrema_HArray1OfPOnSurf.GetHandle = new_instancemethod(_Extrema.Extrema_HArray1OfPOnSurf_GetHandle, None, Extrema_HArray1OfPOnSurf)
Extrema_HArray1OfPOnSurf_swigregister = _Extrema.Extrema_HArray1OfPOnSurf_swigregister
Extrema_HArray1OfPOnSurf_swigregister(Extrema_HArray1OfPOnSurf)

class Handle_Extrema_HArray1OfPOnSurf(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_HArray1OfPOnSurf_swiginit(self, _Extrema.new_Handle_Extrema_HArray1OfPOnSurf(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_HArray1OfPOnSurf_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_HArray1OfPOnSurf.Nullify = new_instancemethod(_Extrema.Handle_Extrema_HArray1OfPOnSurf_Nullify, None, Handle_Extrema_HArray1OfPOnSurf)
Handle_Extrema_HArray1OfPOnSurf.IsNull = new_instancemethod(_Extrema.Handle_Extrema_HArray1OfPOnSurf_IsNull, None, Handle_Extrema_HArray1OfPOnSurf)
Handle_Extrema_HArray1OfPOnSurf.GetObject = new_instancemethod(_Extrema.Handle_Extrema_HArray1OfPOnSurf_GetObject, None, Handle_Extrema_HArray1OfPOnSurf)
Handle_Extrema_HArray1OfPOnSurf._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_HArray1OfPOnSurf__kill_pointed, None, Handle_Extrema_HArray1OfPOnSurf)
Handle_Extrema_HArray1OfPOnSurf_swigregister = _Extrema.Handle_Extrema_HArray1OfPOnSurf_swigregister
Handle_Extrema_HArray1OfPOnSurf_swigregister(Handle_Extrema_HArray1OfPOnSurf)

def Handle_Extrema_HArray1OfPOnSurf_DownCast(AnObject):
    return _Extrema.Handle_Extrema_HArray1OfPOnSurf_DownCast(AnObject)
Handle_Extrema_HArray1OfPOnSurf_DownCast = _Extrema.Handle_Extrema_HArray1OfPOnSurf_DownCast

class Extrema_HArray2OfPOnCurv(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: Extrema_POnCurv &
        :rtype: None

        """
        _Extrema.Extrema_HArray2OfPOnCurv_swiginit(self, _Extrema.new_Extrema_HArray2OfPOnCurv(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_HArray2OfPOnCurv_Init(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnCurv_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnCurv_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnCurv_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnCurv_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnCurv_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnCurv_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_HArray2OfPOnCurv_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_HArray2OfPOnCurv_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_HArray2OfPOnCurv_ChangeValue(self, *args)


    def Array2(self, *args):
        """
        :rtype: Extrema_Array2OfPOnCurv

        """
        return _Extrema.Extrema_HArray2OfPOnCurv_Array2(self, *args)


    def ChangeArray2(self, *args):
        """
        :rtype: Extrema_Array2OfPOnCurv

        """
        return _Extrema.Extrema_HArray2OfPOnCurv_ChangeArray2(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_HArray2OfPOnCurv self)"""
        return _Extrema.Extrema_HArray2OfPOnCurv__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_HArray2OfPOnCurv self) -> Handle_Extrema_HArray2OfPOnCurv"""
        return _Extrema.Extrema_HArray2OfPOnCurv_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_HArray2OfPOnCurv.Init = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_Init, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv.ColLength = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_ColLength, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv.RowLength = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_RowLength, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv.LowerCol = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_LowerCol, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv.LowerRow = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_LowerRow, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv.UpperCol = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_UpperCol, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv.UpperRow = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_UpperRow, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv.SetValue = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_SetValue, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv.Value = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_Value, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv.ChangeValue = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_ChangeValue, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv.Array2 = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_Array2, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv.ChangeArray2 = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_ChangeArray2, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv._kill_pointed = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv__kill_pointed, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv.GetHandle = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv_GetHandle, None, Extrema_HArray2OfPOnCurv)
Extrema_HArray2OfPOnCurv_swigregister = _Extrema.Extrema_HArray2OfPOnCurv_swigregister
Extrema_HArray2OfPOnCurv_swigregister(Extrema_HArray2OfPOnCurv)

class Handle_Extrema_HArray2OfPOnCurv(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_HArray2OfPOnCurv_swiginit(self, _Extrema.new_Handle_Extrema_HArray2OfPOnCurv(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_HArray2OfPOnCurv_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_HArray2OfPOnCurv.Nullify = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnCurv_Nullify, None, Handle_Extrema_HArray2OfPOnCurv)
Handle_Extrema_HArray2OfPOnCurv.IsNull = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnCurv_IsNull, None, Handle_Extrema_HArray2OfPOnCurv)
Handle_Extrema_HArray2OfPOnCurv.GetObject = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnCurv_GetObject, None, Handle_Extrema_HArray2OfPOnCurv)
Handle_Extrema_HArray2OfPOnCurv._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnCurv__kill_pointed, None, Handle_Extrema_HArray2OfPOnCurv)
Handle_Extrema_HArray2OfPOnCurv_swigregister = _Extrema.Handle_Extrema_HArray2OfPOnCurv_swigregister
Handle_Extrema_HArray2OfPOnCurv_swigregister(Handle_Extrema_HArray2OfPOnCurv)

def Handle_Extrema_HArray2OfPOnCurv_DownCast(AnObject):
    return _Extrema.Handle_Extrema_HArray2OfPOnCurv_DownCast(AnObject)
Handle_Extrema_HArray2OfPOnCurv_DownCast = _Extrema.Handle_Extrema_HArray2OfPOnCurv_DownCast

class Extrema_HArray2OfPOnCurv2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: Extrema_POnCurv2d &
        :rtype: None

        """
        _Extrema.Extrema_HArray2OfPOnCurv2d_swiginit(self, _Extrema.new_Extrema_HArray2OfPOnCurv2d(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_HArray2OfPOnCurv2d_Init(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnCurv2d_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnCurv2d_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnCurv2d_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnCurv2d_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnCurv2d_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnCurv2d_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_HArray2OfPOnCurv2d_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_HArray2OfPOnCurv2d_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_HArray2OfPOnCurv2d_ChangeValue(self, *args)


    def Array2(self, *args):
        """
        :rtype: Extrema_Array2OfPOnCurv2d

        """
        return _Extrema.Extrema_HArray2OfPOnCurv2d_Array2(self, *args)


    def ChangeArray2(self, *args):
        """
        :rtype: Extrema_Array2OfPOnCurv2d

        """
        return _Extrema.Extrema_HArray2OfPOnCurv2d_ChangeArray2(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_HArray2OfPOnCurv2d self)"""
        return _Extrema.Extrema_HArray2OfPOnCurv2d__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_HArray2OfPOnCurv2d self) -> Handle_Extrema_HArray2OfPOnCurv2d"""
        return _Extrema.Extrema_HArray2OfPOnCurv2d_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_HArray2OfPOnCurv2d.Init = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_Init, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d.ColLength = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_ColLength, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d.RowLength = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_RowLength, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d.LowerCol = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_LowerCol, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d.LowerRow = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_LowerRow, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d.UpperCol = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_UpperCol, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d.UpperRow = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_UpperRow, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d.SetValue = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_SetValue, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d.Value = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_Value, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d.ChangeValue = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_ChangeValue, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d.Array2 = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_Array2, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d.ChangeArray2 = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_ChangeArray2, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d._kill_pointed = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d__kill_pointed, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d.GetHandle = new_instancemethod(_Extrema.Extrema_HArray2OfPOnCurv2d_GetHandle, None, Extrema_HArray2OfPOnCurv2d)
Extrema_HArray2OfPOnCurv2d_swigregister = _Extrema.Extrema_HArray2OfPOnCurv2d_swigregister
Extrema_HArray2OfPOnCurv2d_swigregister(Extrema_HArray2OfPOnCurv2d)

class Handle_Extrema_HArray2OfPOnCurv2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_HArray2OfPOnCurv2d_swiginit(self, _Extrema.new_Handle_Extrema_HArray2OfPOnCurv2d(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_HArray2OfPOnCurv2d_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_HArray2OfPOnCurv2d.Nullify = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnCurv2d_Nullify, None, Handle_Extrema_HArray2OfPOnCurv2d)
Handle_Extrema_HArray2OfPOnCurv2d.IsNull = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnCurv2d_IsNull, None, Handle_Extrema_HArray2OfPOnCurv2d)
Handle_Extrema_HArray2OfPOnCurv2d.GetObject = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnCurv2d_GetObject, None, Handle_Extrema_HArray2OfPOnCurv2d)
Handle_Extrema_HArray2OfPOnCurv2d._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnCurv2d__kill_pointed, None, Handle_Extrema_HArray2OfPOnCurv2d)
Handle_Extrema_HArray2OfPOnCurv2d_swigregister = _Extrema.Handle_Extrema_HArray2OfPOnCurv2d_swigregister
Handle_Extrema_HArray2OfPOnCurv2d_swigregister(Handle_Extrema_HArray2OfPOnCurv2d)

def Handle_Extrema_HArray2OfPOnCurv2d_DownCast(AnObject):
    return _Extrema.Handle_Extrema_HArray2OfPOnCurv2d_DownCast(AnObject)
Handle_Extrema_HArray2OfPOnCurv2d_DownCast = _Extrema.Handle_Extrema_HArray2OfPOnCurv2d_DownCast

class Extrema_HArray2OfPOnSurf(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: Extrema_POnSurf &
        :rtype: None

        """
        _Extrema.Extrema_HArray2OfPOnSurf_swiginit(self, _Extrema.new_Extrema_HArray2OfPOnSurf(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_HArray2OfPOnSurf_Init(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnSurf_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnSurf_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnSurf_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnSurf_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnSurf_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnSurf_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_HArray2OfPOnSurf_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_HArray2OfPOnSurf_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_HArray2OfPOnSurf_ChangeValue(self, *args)


    def Array2(self, *args):
        """
        :rtype: Extrema_Array2OfPOnSurf

        """
        return _Extrema.Extrema_HArray2OfPOnSurf_Array2(self, *args)


    def ChangeArray2(self, *args):
        """
        :rtype: Extrema_Array2OfPOnSurf

        """
        return _Extrema.Extrema_HArray2OfPOnSurf_ChangeArray2(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_HArray2OfPOnSurf self)"""
        return _Extrema.Extrema_HArray2OfPOnSurf__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_HArray2OfPOnSurf self) -> Handle_Extrema_HArray2OfPOnSurf"""
        return _Extrema.Extrema_HArray2OfPOnSurf_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_HArray2OfPOnSurf.Init = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_Init, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf.ColLength = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_ColLength, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf.RowLength = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_RowLength, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf.LowerCol = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_LowerCol, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf.LowerRow = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_LowerRow, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf.UpperCol = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_UpperCol, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf.UpperRow = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_UpperRow, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf.SetValue = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_SetValue, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf.Value = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_Value, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf.ChangeValue = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_ChangeValue, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf.Array2 = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_Array2, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf.ChangeArray2 = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_ChangeArray2, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf._kill_pointed = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf__kill_pointed, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf.GetHandle = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurf_GetHandle, None, Extrema_HArray2OfPOnSurf)
Extrema_HArray2OfPOnSurf_swigregister = _Extrema.Extrema_HArray2OfPOnSurf_swigregister
Extrema_HArray2OfPOnSurf_swigregister(Extrema_HArray2OfPOnSurf)

class Handle_Extrema_HArray2OfPOnSurf(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_HArray2OfPOnSurf_swiginit(self, _Extrema.new_Handle_Extrema_HArray2OfPOnSurf(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_HArray2OfPOnSurf_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_HArray2OfPOnSurf.Nullify = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnSurf_Nullify, None, Handle_Extrema_HArray2OfPOnSurf)
Handle_Extrema_HArray2OfPOnSurf.IsNull = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnSurf_IsNull, None, Handle_Extrema_HArray2OfPOnSurf)
Handle_Extrema_HArray2OfPOnSurf.GetObject = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnSurf_GetObject, None, Handle_Extrema_HArray2OfPOnSurf)
Handle_Extrema_HArray2OfPOnSurf._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnSurf__kill_pointed, None, Handle_Extrema_HArray2OfPOnSurf)
Handle_Extrema_HArray2OfPOnSurf_swigregister = _Extrema.Handle_Extrema_HArray2OfPOnSurf_swigregister
Handle_Extrema_HArray2OfPOnSurf_swigregister(Handle_Extrema_HArray2OfPOnSurf)

def Handle_Extrema_HArray2OfPOnSurf_DownCast(AnObject):
    return _Extrema.Handle_Extrema_HArray2OfPOnSurf_DownCast(AnObject)
Handle_Extrema_HArray2OfPOnSurf_DownCast = _Extrema.Handle_Extrema_HArray2OfPOnSurf_DownCast

class Extrema_HArray2OfPOnSurfParams(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: Extrema_POnSurfParams &
        :rtype: None

        """
        _Extrema.Extrema_HArray2OfPOnSurfParams_swiginit(self, _Extrema.new_Extrema_HArray2OfPOnSurfParams(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Extrema_POnSurfParams &
        :rtype: None

        """
        return _Extrema.Extrema_HArray2OfPOnSurfParams_Init(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnSurfParams_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnSurfParams_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnSurfParams_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnSurfParams_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnSurfParams_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_HArray2OfPOnSurfParams_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Extrema_POnSurfParams &
        :rtype: None

        """
        return _Extrema.Extrema_HArray2OfPOnSurfParams_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnSurfParams

        """
        return _Extrema.Extrema_HArray2OfPOnSurfParams_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Extrema_POnSurfParams

        """
        return _Extrema.Extrema_HArray2OfPOnSurfParams_ChangeValue(self, *args)


    def Array2(self, *args):
        """
        :rtype: Extrema_Array2OfPOnSurfParams

        """
        return _Extrema.Extrema_HArray2OfPOnSurfParams_Array2(self, *args)


    def ChangeArray2(self, *args):
        """
        :rtype: Extrema_Array2OfPOnSurfParams

        """
        return _Extrema.Extrema_HArray2OfPOnSurfParams_ChangeArray2(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_HArray2OfPOnSurfParams self)"""
        return _Extrema.Extrema_HArray2OfPOnSurfParams__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_HArray2OfPOnSurfParams self) -> Handle_Extrema_HArray2OfPOnSurfParams"""
        return _Extrema.Extrema_HArray2OfPOnSurfParams_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_HArray2OfPOnSurfParams.Init = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_Init, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams.ColLength = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_ColLength, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams.RowLength = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_RowLength, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams.LowerCol = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_LowerCol, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams.LowerRow = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_LowerRow, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams.UpperCol = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_UpperCol, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams.UpperRow = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_UpperRow, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams.SetValue = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_SetValue, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams.Value = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_Value, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams.ChangeValue = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_ChangeValue, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams.Array2 = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_Array2, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams.ChangeArray2 = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_ChangeArray2, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams._kill_pointed = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams__kill_pointed, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams.GetHandle = new_instancemethod(_Extrema.Extrema_HArray2OfPOnSurfParams_GetHandle, None, Extrema_HArray2OfPOnSurfParams)
Extrema_HArray2OfPOnSurfParams_swigregister = _Extrema.Extrema_HArray2OfPOnSurfParams_swigregister
Extrema_HArray2OfPOnSurfParams_swigregister(Extrema_HArray2OfPOnSurfParams)

class Handle_Extrema_HArray2OfPOnSurfParams(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_HArray2OfPOnSurfParams_swiginit(self, _Extrema.new_Handle_Extrema_HArray2OfPOnSurfParams(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_HArray2OfPOnSurfParams_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_HArray2OfPOnSurfParams.Nullify = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnSurfParams_Nullify, None, Handle_Extrema_HArray2OfPOnSurfParams)
Handle_Extrema_HArray2OfPOnSurfParams.IsNull = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnSurfParams_IsNull, None, Handle_Extrema_HArray2OfPOnSurfParams)
Handle_Extrema_HArray2OfPOnSurfParams.GetObject = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnSurfParams_GetObject, None, Handle_Extrema_HArray2OfPOnSurfParams)
Handle_Extrema_HArray2OfPOnSurfParams._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_HArray2OfPOnSurfParams__kill_pointed, None, Handle_Extrema_HArray2OfPOnSurfParams)
Handle_Extrema_HArray2OfPOnSurfParams_swigregister = _Extrema.Handle_Extrema_HArray2OfPOnSurfParams_swigregister
Handle_Extrema_HArray2OfPOnSurfParams_swigregister(Handle_Extrema_HArray2OfPOnSurfParams)

def Handle_Extrema_HArray2OfPOnSurfParams_DownCast(AnObject):
    return _Extrema.Handle_Extrema_HArray2OfPOnSurfParams_DownCast(AnObject)
Handle_Extrema_HArray2OfPOnSurfParams_DownCast = _Extrema.Handle_Extrema_HArray2OfPOnSurfParams_DownCast

class Extrema_LCCache2dOfLocateExtCC2d(OCC.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param theC:
        :type theC: Adaptor2d_Curve2d &
        :param theUFirst:
        :type theUFirst: float
        :param theULast:
        :type theULast: float
        :param theNbSamples:
        :type theNbSamples: int
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        :param theC:
        :type theC: Adaptor2d_Curve2d &
        :param theUFirst:
        :type theUFirst: float
        :param theULast:
        :type theULast: float
        :param IntervalsCN:
        :type IntervalsCN: TColStd_Array1OfReal &
        :param StartIndex:
        :type StartIndex: int
        :param EndIndex:
        :type EndIndex: int
        :param Coeff:
        :type Coeff: float
        :rtype: None

        """
        _Extrema.Extrema_LCCache2dOfLocateExtCC2d_swiginit(self, _Extrema.new_Extrema_LCCache2dOfLocateExtCC2d(*args))

    def SetCurve(self, *args):
        """
        :param theC:
        :type theC: Adaptor2d_Curve2d &
        :param theNbSamples:
        :type theNbSamples: int
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        :param theC:
        :type theC: Adaptor2d_Curve2d &
        :param theUFirst:
        :type theUFirst: float
        :param theULast:
        :type theULast: float
        :param theNbSamples:
        :type theNbSamples: int
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        """
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_SetCurve(self, *args)


    def SetRange(self, *args):
        """
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        """
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_SetRange(self, *args)


    def CalculatePoints(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_CalculatePoints(self, *args)


    def IsValid(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_IsValid(self, *args)


    def Parameters(self, *args):
        """
        :rtype: Handle_TColStd_HArray1OfReal

        """
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_Parameters(self, *args)


    def Points(self, *args):
        """
        :rtype: Handle_TColgp_HArray1OfPnt2d

        """
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_Points(self, *args)


    def CurvePtr(self, *args):
        """
        :rtype: Standard_Address

        """
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_CurvePtr(self, *args)


    def NbSamples(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_NbSamples(self, *args)


    def FirstParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_FirstParameter(self, *args)


    def LastParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_LastParameter(self, *args)


    def TrimFirstParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_TrimFirstParameter(self, *args)


    def TrimLastParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_TrimLastParameter(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_LCCache2dOfLocateExtCC2d self)"""
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_LCCache2dOfLocateExtCC2d self) -> Handle_Extrema_LCCache2dOfLocateExtCC2d"""
        return _Extrema.Extrema_LCCache2dOfLocateExtCC2d_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_LCCache2dOfLocateExtCC2d.SetCurve = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_SetCurve, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d.SetRange = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_SetRange, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d.CalculatePoints = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_CalculatePoints, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d.IsValid = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_IsValid, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d.Parameters = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_Parameters, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d.Points = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_Points, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d.CurvePtr = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_CurvePtr, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d.NbSamples = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_NbSamples, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d.FirstParameter = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_FirstParameter, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d.LastParameter = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_LastParameter, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d.TrimFirstParameter = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_TrimFirstParameter, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d.TrimLastParameter = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_TrimLastParameter, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d__kill_pointed, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d.GetHandle = new_instancemethod(_Extrema.Extrema_LCCache2dOfLocateExtCC2d_GetHandle, None, Extrema_LCCache2dOfLocateExtCC2d)
Extrema_LCCache2dOfLocateExtCC2d_swigregister = _Extrema.Extrema_LCCache2dOfLocateExtCC2d_swigregister
Extrema_LCCache2dOfLocateExtCC2d_swigregister(Extrema_LCCache2dOfLocateExtCC2d)

class Handle_Extrema_LCCache2dOfLocateExtCC2d(OCC.Standard.Handle_Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_LCCache2dOfLocateExtCC2d_swiginit(self, _Extrema.new_Handle_Extrema_LCCache2dOfLocateExtCC2d(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_LCCache2dOfLocateExtCC2d_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_LCCache2dOfLocateExtCC2d.Nullify = new_instancemethod(_Extrema.Handle_Extrema_LCCache2dOfLocateExtCC2d_Nullify, None, Handle_Extrema_LCCache2dOfLocateExtCC2d)
Handle_Extrema_LCCache2dOfLocateExtCC2d.IsNull = new_instancemethod(_Extrema.Handle_Extrema_LCCache2dOfLocateExtCC2d_IsNull, None, Handle_Extrema_LCCache2dOfLocateExtCC2d)
Handle_Extrema_LCCache2dOfLocateExtCC2d.GetObject = new_instancemethod(_Extrema.Handle_Extrema_LCCache2dOfLocateExtCC2d_GetObject, None, Handle_Extrema_LCCache2dOfLocateExtCC2d)
Handle_Extrema_LCCache2dOfLocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_LCCache2dOfLocateExtCC2d__kill_pointed, None, Handle_Extrema_LCCache2dOfLocateExtCC2d)
Handle_Extrema_LCCache2dOfLocateExtCC2d_swigregister = _Extrema.Handle_Extrema_LCCache2dOfLocateExtCC2d_swigregister
Handle_Extrema_LCCache2dOfLocateExtCC2d_swigregister(Handle_Extrema_LCCache2dOfLocateExtCC2d)

def Handle_Extrema_LCCache2dOfLocateExtCC2d_DownCast(AnObject):
    return _Extrema.Handle_Extrema_LCCache2dOfLocateExtCC2d_DownCast(AnObject)
Handle_Extrema_LCCache2dOfLocateExtCC2d_DownCast = _Extrema.Handle_Extrema_LCCache2dOfLocateExtCC2d_DownCast

class Extrema_LCCacheOfLocateExtCC(OCC.Standard.Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param theC:
        :type theC: Adaptor3d_Curve &
        :param theUFirst:
        :type theUFirst: float
        :param theULast:
        :type theULast: float
        :param theNbSamples:
        :type theNbSamples: int
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        :param theC:
        :type theC: Adaptor3d_Curve &
        :param theUFirst:
        :type theUFirst: float
        :param theULast:
        :type theULast: float
        :param IntervalsCN:
        :type IntervalsCN: TColStd_Array1OfReal &
        :param StartIndex:
        :type StartIndex: int
        :param EndIndex:
        :type EndIndex: int
        :param Coeff:
        :type Coeff: float
        :rtype: None

        """
        _Extrema.Extrema_LCCacheOfLocateExtCC_swiginit(self, _Extrema.new_Extrema_LCCacheOfLocateExtCC(*args))

    def SetCurve(self, *args):
        """
        :param theC:
        :type theC: Adaptor3d_Curve &
        :param theNbSamples:
        :type theNbSamples: int
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        :param theC:
        :type theC: Adaptor3d_Curve &
        :param theUFirst:
        :type theUFirst: float
        :param theULast:
        :type theULast: float
        :param theNbSamples:
        :type theNbSamples: int
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        """
        return _Extrema.Extrema_LCCacheOfLocateExtCC_SetCurve(self, *args)


    def SetRange(self, *args):
        """
        :param Uinf:
        :type Uinf: float
        :param Usup:
        :type Usup: float
        :param theToCalculate:
        :type theToCalculate: bool
        :rtype: None

        """
        return _Extrema.Extrema_LCCacheOfLocateExtCC_SetRange(self, *args)


    def CalculatePoints(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_LCCacheOfLocateExtCC_CalculatePoints(self, *args)


    def IsValid(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LCCacheOfLocateExtCC_IsValid(self, *args)


    def Parameters(self, *args):
        """
        :rtype: Handle_TColStd_HArray1OfReal

        """
        return _Extrema.Extrema_LCCacheOfLocateExtCC_Parameters(self, *args)


    def Points(self, *args):
        """
        :rtype: Handle_TColgp_HArray1OfPnt

        """
        return _Extrema.Extrema_LCCacheOfLocateExtCC_Points(self, *args)


    def CurvePtr(self, *args):
        """
        :rtype: Standard_Address

        """
        return _Extrema.Extrema_LCCacheOfLocateExtCC_CurvePtr(self, *args)


    def NbSamples(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_LCCacheOfLocateExtCC_NbSamples(self, *args)


    def FirstParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LCCacheOfLocateExtCC_FirstParameter(self, *args)


    def LastParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LCCacheOfLocateExtCC_LastParameter(self, *args)


    def TrimFirstParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LCCacheOfLocateExtCC_TrimFirstParameter(self, *args)


    def TrimLastParameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LCCacheOfLocateExtCC_TrimLastParameter(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_LCCacheOfLocateExtCC self)"""
        return _Extrema.Extrema_LCCacheOfLocateExtCC__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_LCCacheOfLocateExtCC self) -> Handle_Extrema_LCCacheOfLocateExtCC"""
        return _Extrema.Extrema_LCCacheOfLocateExtCC_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_LCCacheOfLocateExtCC.SetCurve = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_SetCurve, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC.SetRange = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_SetRange, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC.CalculatePoints = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_CalculatePoints, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC.IsValid = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_IsValid, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC.Parameters = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_Parameters, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC.Points = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_Points, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC.CurvePtr = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_CurvePtr, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC.NbSamples = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_NbSamples, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC.FirstParameter = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_FirstParameter, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC.LastParameter = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_LastParameter, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC.TrimFirstParameter = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_TrimFirstParameter, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC.TrimLastParameter = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_TrimLastParameter, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC__kill_pointed, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC.GetHandle = new_instancemethod(_Extrema.Extrema_LCCacheOfLocateExtCC_GetHandle, None, Extrema_LCCacheOfLocateExtCC)
Extrema_LCCacheOfLocateExtCC_swigregister = _Extrema.Extrema_LCCacheOfLocateExtCC_swigregister
Extrema_LCCacheOfLocateExtCC_swigregister(Extrema_LCCacheOfLocateExtCC)

class Handle_Extrema_LCCacheOfLocateExtCC(OCC.Standard.Handle_Standard_Transient):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_LCCacheOfLocateExtCC_swiginit(self, _Extrema.new_Handle_Extrema_LCCacheOfLocateExtCC(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_LCCacheOfLocateExtCC_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_LCCacheOfLocateExtCC.Nullify = new_instancemethod(_Extrema.Handle_Extrema_LCCacheOfLocateExtCC_Nullify, None, Handle_Extrema_LCCacheOfLocateExtCC)
Handle_Extrema_LCCacheOfLocateExtCC.IsNull = new_instancemethod(_Extrema.Handle_Extrema_LCCacheOfLocateExtCC_IsNull, None, Handle_Extrema_LCCacheOfLocateExtCC)
Handle_Extrema_LCCacheOfLocateExtCC.GetObject = new_instancemethod(_Extrema.Handle_Extrema_LCCacheOfLocateExtCC_GetObject, None, Handle_Extrema_LCCacheOfLocateExtCC)
Handle_Extrema_LCCacheOfLocateExtCC._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_LCCacheOfLocateExtCC__kill_pointed, None, Handle_Extrema_LCCacheOfLocateExtCC)
Handle_Extrema_LCCacheOfLocateExtCC_swigregister = _Extrema.Handle_Extrema_LCCacheOfLocateExtCC_swigregister
Handle_Extrema_LCCacheOfLocateExtCC_swigregister(Handle_Extrema_LCCacheOfLocateExtCC)

def Handle_Extrema_LCCacheOfLocateExtCC_DownCast(AnObject):
    return _Extrema.Handle_Extrema_LCCacheOfLocateExtCC_DownCast(AnObject)
Handle_Extrema_LCCacheOfLocateExtCC_DownCast = _Extrema.Handle_Extrema_LCCacheOfLocateExtCC_DownCast

class Extrema_LocECC2dOfLocateExtCC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :param C2:
        :type C2: Adaptor2d_Curve2d &
        :param U0:
        :type U0: float
        :param V0:
        :type V0: float
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        _Extrema.Extrema_LocECC2dOfLocateExtCC2d_swiginit(self, _Extrema.new_Extrema_LocECC2dOfLocateExtCC2d(*args))

    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LocECC2dOfLocateExtCC2d_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LocECC2dOfLocateExtCC2d_SquareDistance(self, *args)


    def Point(self, *args):
        """
        :param P1:
        :type P1: Extrema_POnCurv2d &
        :param P2:
        :type P2: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_LocECC2dOfLocateExtCC2d_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_LocECC2dOfLocateExtCC2d.IsDone = new_instancemethod(_Extrema.Extrema_LocECC2dOfLocateExtCC2d_IsDone, None, Extrema_LocECC2dOfLocateExtCC2d)
Extrema_LocECC2dOfLocateExtCC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_LocECC2dOfLocateExtCC2d_SquareDistance, None, Extrema_LocECC2dOfLocateExtCC2d)
Extrema_LocECC2dOfLocateExtCC2d.Point = new_instancemethod(_Extrema.Extrema_LocECC2dOfLocateExtCC2d_Point, None, Extrema_LocECC2dOfLocateExtCC2d)
Extrema_LocECC2dOfLocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_LocECC2dOfLocateExtCC2d__kill_pointed, None, Extrema_LocECC2dOfLocateExtCC2d)
Extrema_LocECC2dOfLocateExtCC2d_swigregister = _Extrema.Extrema_LocECC2dOfLocateExtCC2d_swigregister
Extrema_LocECC2dOfLocateExtCC2d_swigregister(Extrema_LocECC2dOfLocateExtCC2d)

class Extrema_LocECCOfLocateExtCC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param C1:
        :type C1: Adaptor3d_Curve &
        :param C2:
        :type C2: Adaptor3d_Curve &
        :param U0:
        :type U0: float
        :param V0:
        :type V0: float
        :param TolU:
        :type TolU: float
        :param TolV:
        :type TolV: float
        :rtype: None

        """
        _Extrema.Extrema_LocECCOfLocateExtCC_swiginit(self, _Extrema.new_Extrema_LocECCOfLocateExtCC(*args))

    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LocECCOfLocateExtCC_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LocECCOfLocateExtCC_SquareDistance(self, *args)


    def Point(self, *args):
        """
        :param P1:
        :type P1: Extrema_POnCurv &
        :param P2:
        :type P2: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_LocECCOfLocateExtCC_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_LocECCOfLocateExtCC.IsDone = new_instancemethod(_Extrema.Extrema_LocECCOfLocateExtCC_IsDone, None, Extrema_LocECCOfLocateExtCC)
Extrema_LocECCOfLocateExtCC.SquareDistance = new_instancemethod(_Extrema.Extrema_LocECCOfLocateExtCC_SquareDistance, None, Extrema_LocECCOfLocateExtCC)
Extrema_LocECCOfLocateExtCC.Point = new_instancemethod(_Extrema.Extrema_LocECCOfLocateExtCC_Point, None, Extrema_LocECCOfLocateExtCC)
Extrema_LocECCOfLocateExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_LocECCOfLocateExtCC__kill_pointed, None, Extrema_LocECCOfLocateExtCC)
Extrema_LocECCOfLocateExtCC_swigregister = _Extrema.Extrema_LocECCOfLocateExtCC_swigregister
Extrema_LocECCOfLocateExtCC_swigregister(Extrema_LocECCOfLocateExtCC)

class Extrema_LocEPCOfLocateExtPC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :param U0:
        :type U0: float
        :param TolU:
        :type TolU: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :param U0:
        :type U0: float
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :rtype: None

        """
        _Extrema.Extrema_LocEPCOfLocateExtPC_swiginit(self, _Extrema.new_Extrema_LocEPCOfLocateExtPC(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :rtype: None

        """
        return _Extrema.Extrema_LocEPCOfLocateExtPC_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :param U0:
        :type U0: float
        :rtype: None

        """
        return _Extrema.Extrema_LocEPCOfLocateExtPC_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LocEPCOfLocateExtPC_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LocEPCOfLocateExtPC_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LocEPCOfLocateExtPC_IsMin(self, *args)


    def Point(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_LocEPCOfLocateExtPC_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_LocEPCOfLocateExtPC.Initialize = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC_Initialize, None, Extrema_LocEPCOfLocateExtPC)
Extrema_LocEPCOfLocateExtPC.Perform = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC_Perform, None, Extrema_LocEPCOfLocateExtPC)
Extrema_LocEPCOfLocateExtPC.IsDone = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC_IsDone, None, Extrema_LocEPCOfLocateExtPC)
Extrema_LocEPCOfLocateExtPC.SquareDistance = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC_SquareDistance, None, Extrema_LocEPCOfLocateExtPC)
Extrema_LocEPCOfLocateExtPC.IsMin = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC_IsMin, None, Extrema_LocEPCOfLocateExtPC)
Extrema_LocEPCOfLocateExtPC.Point = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC_Point, None, Extrema_LocEPCOfLocateExtPC)
Extrema_LocEPCOfLocateExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC__kill_pointed, None, Extrema_LocEPCOfLocateExtPC)
Extrema_LocEPCOfLocateExtPC_swigregister = _Extrema.Extrema_LocEPCOfLocateExtPC_swigregister
Extrema_LocEPCOfLocateExtPC_swigregister(Extrema_LocEPCOfLocateExtPC)

class Extrema_LocEPCOfLocateExtPC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param U0:
        :type U0: float
        :param TolU:
        :type TolU: float
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param U0:
        :type U0: float
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :rtype: None

        """
        _Extrema.Extrema_LocEPCOfLocateExtPC2d_swiginit(self, _Extrema.new_Extrema_LocEPCOfLocateExtPC2d(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolU:
        :type TolU: float
        :rtype: None

        """
        return _Extrema.Extrema_LocEPCOfLocateExtPC2d_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt2d
        :param U0:
        :type U0: float
        :rtype: None

        """
        return _Extrema.Extrema_LocEPCOfLocateExtPC2d_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LocEPCOfLocateExtPC2d_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LocEPCOfLocateExtPC2d_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LocEPCOfLocateExtPC2d_IsMin(self, *args)


    def Point(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_LocEPCOfLocateExtPC2d_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_LocEPCOfLocateExtPC2d.Initialize = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC2d_Initialize, None, Extrema_LocEPCOfLocateExtPC2d)
Extrema_LocEPCOfLocateExtPC2d.Perform = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC2d_Perform, None, Extrema_LocEPCOfLocateExtPC2d)
Extrema_LocEPCOfLocateExtPC2d.IsDone = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC2d_IsDone, None, Extrema_LocEPCOfLocateExtPC2d)
Extrema_LocEPCOfLocateExtPC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC2d_SquareDistance, None, Extrema_LocEPCOfLocateExtPC2d)
Extrema_LocEPCOfLocateExtPC2d.IsMin = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC2d_IsMin, None, Extrema_LocEPCOfLocateExtPC2d)
Extrema_LocEPCOfLocateExtPC2d.Point = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC2d_Point, None, Extrema_LocEPCOfLocateExtPC2d)
Extrema_LocEPCOfLocateExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_LocEPCOfLocateExtPC2d__kill_pointed, None, Extrema_LocEPCOfLocateExtPC2d)
Extrema_LocEPCOfLocateExtPC2d_swigregister = _Extrema.Extrema_LocEPCOfLocateExtPC2d_swigregister
Extrema_LocEPCOfLocateExtPC2d_swigregister(Extrema_LocEPCOfLocateExtPC2d)

class Extrema_LocateExtCC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param C1:
        :type C1: Adaptor3d_Curve &
        :param C2:
        :type C2: Adaptor3d_Curve &
        :param U0:
        :type U0: float
        :param V0:
        :type V0: float
        :rtype: None

        """
        _Extrema.Extrema_LocateExtCC_swiginit(self, _Extrema.new_Extrema_LocateExtCC(*args))

    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LocateExtCC_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LocateExtCC_SquareDistance(self, *args)


    def Point(self, *args):
        """
        :param P1:
        :type P1: Extrema_POnCurv &
        :param P2:
        :type P2: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_LocateExtCC_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_LocateExtCC.IsDone = new_instancemethod(_Extrema.Extrema_LocateExtCC_IsDone, None, Extrema_LocateExtCC)
Extrema_LocateExtCC.SquareDistance = new_instancemethod(_Extrema.Extrema_LocateExtCC_SquareDistance, None, Extrema_LocateExtCC)
Extrema_LocateExtCC.Point = new_instancemethod(_Extrema.Extrema_LocateExtCC_Point, None, Extrema_LocateExtCC)
Extrema_LocateExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_LocateExtCC__kill_pointed, None, Extrema_LocateExtCC)
Extrema_LocateExtCC_swigregister = _Extrema.Extrema_LocateExtCC_swigregister
Extrema_LocateExtCC_swigregister(Extrema_LocateExtCC)

class Extrema_LocateExtCC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param C1:
        :type C1: Adaptor2d_Curve2d &
        :param C2:
        :type C2: Adaptor2d_Curve2d &
        :param U0:
        :type U0: float
        :param V0:
        :type V0: float
        :rtype: None

        """
        _Extrema.Extrema_LocateExtCC2d_swiginit(self, _Extrema.new_Extrema_LocateExtCC2d(*args))

    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LocateExtCC2d_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LocateExtCC2d_SquareDistance(self, *args)


    def Point(self, *args):
        """
        :param P1:
        :type P1: Extrema_POnCurv2d &
        :param P2:
        :type P2: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_LocateExtCC2d_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_LocateExtCC2d.IsDone = new_instancemethod(_Extrema.Extrema_LocateExtCC2d_IsDone, None, Extrema_LocateExtCC2d)
Extrema_LocateExtCC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_LocateExtCC2d_SquareDistance, None, Extrema_LocateExtCC2d)
Extrema_LocateExtCC2d.Point = new_instancemethod(_Extrema.Extrema_LocateExtCC2d_Point, None, Extrema_LocateExtCC2d)
Extrema_LocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_LocateExtCC2d__kill_pointed, None, Extrema_LocateExtCC2d)
Extrema_LocateExtCC2d_swigregister = _Extrema.Extrema_LocateExtCC2d_swigregister
Extrema_LocateExtCC2d_swigregister(Extrema_LocateExtCC2d)

class Extrema_LocateExtPC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :param U0:
        :type U0: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :param U0:
        :type U0: float
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolF:
        :type TolF: float
        :rtype: None

        """
        _Extrema.Extrema_LocateExtPC_swiginit(self, _Extrema.new_Extrema_LocateExtPC(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolF:
        :type TolF: float
        :rtype: None

        """
        return _Extrema.Extrema_LocateExtPC_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :param U0:
        :type U0: float
        :rtype: None

        """
        return _Extrema.Extrema_LocateExtPC_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LocateExtPC_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LocateExtPC_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LocateExtPC_IsMin(self, *args)


    def Point(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_LocateExtPC_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_LocateExtPC.Initialize = new_instancemethod(_Extrema.Extrema_LocateExtPC_Initialize, None, Extrema_LocateExtPC)
Extrema_LocateExtPC.Perform = new_instancemethod(_Extrema.Extrema_LocateExtPC_Perform, None, Extrema_LocateExtPC)
Extrema_LocateExtPC.IsDone = new_instancemethod(_Extrema.Extrema_LocateExtPC_IsDone, None, Extrema_LocateExtPC)
Extrema_LocateExtPC.SquareDistance = new_instancemethod(_Extrema.Extrema_LocateExtPC_SquareDistance, None, Extrema_LocateExtPC)
Extrema_LocateExtPC.IsMin = new_instancemethod(_Extrema.Extrema_LocateExtPC_IsMin, None, Extrema_LocateExtPC)
Extrema_LocateExtPC.Point = new_instancemethod(_Extrema.Extrema_LocateExtPC_Point, None, Extrema_LocateExtPC)
Extrema_LocateExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_LocateExtPC__kill_pointed, None, Extrema_LocateExtPC)
Extrema_LocateExtPC_swigregister = _Extrema.Extrema_LocateExtPC_swigregister
Extrema_LocateExtPC_swigregister(Extrema_LocateExtPC)

class Extrema_LocateExtPC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param U0:
        :type U0: float
        :param TolF:
        :type TolF: float
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param U0:
        :type U0: float
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolF:
        :type TolF: float
        :rtype: None

        """
        _Extrema.Extrema_LocateExtPC2d_swiginit(self, _Extrema.new_Extrema_LocateExtPC2d(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :param Umin:
        :type Umin: float
        :param Usup:
        :type Usup: float
        :param TolF:
        :type TolF: float
        :rtype: None

        """
        return _Extrema.Extrema_LocateExtPC2d_Initialize(self, *args)


    def Perform(self, *args):
        """
        :param P:
        :type P: gp_Pnt2d
        :param U0:
        :type U0: float
        :rtype: None

        """
        return _Extrema.Extrema_LocateExtPC2d_Perform(self, *args)


    def IsDone(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LocateExtPC2d_IsDone(self, *args)


    def SquareDistance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_LocateExtPC2d_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :rtype: bool

        """
        return _Extrema.Extrema_LocateExtPC2d_IsMin(self, *args)


    def Point(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_LocateExtPC2d_Point(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_LocateExtPC2d.Initialize = new_instancemethod(_Extrema.Extrema_LocateExtPC2d_Initialize, None, Extrema_LocateExtPC2d)
Extrema_LocateExtPC2d.Perform = new_instancemethod(_Extrema.Extrema_LocateExtPC2d_Perform, None, Extrema_LocateExtPC2d)
Extrema_LocateExtPC2d.IsDone = new_instancemethod(_Extrema.Extrema_LocateExtPC2d_IsDone, None, Extrema_LocateExtPC2d)
Extrema_LocateExtPC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_LocateExtPC2d_SquareDistance, None, Extrema_LocateExtPC2d)
Extrema_LocateExtPC2d.IsMin = new_instancemethod(_Extrema.Extrema_LocateExtPC2d_IsMin, None, Extrema_LocateExtPC2d)
Extrema_LocateExtPC2d.Point = new_instancemethod(_Extrema.Extrema_LocateExtPC2d_Point, None, Extrema_LocateExtPC2d)
Extrema_LocateExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_LocateExtPC2d__kill_pointed, None, Extrema_LocateExtPC2d)
Extrema_LocateExtPC2d_swigregister = _Extrema.Extrema_LocateExtPC2d_swigregister
Extrema_LocateExtPC2d_swigregister(Extrema_LocateExtPC2d)

class Extrema_PCFOfEPCOfELPCOfLocateExtPC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: None

        """
        _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_swiginit(self, _Extrema.new_Extrema_PCFOfEPCOfELPCOfLocateExtPC(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: None

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_Initialize(self, *args)


    def SetPoint(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_SetPoint(self, *args)


    def Value(self, *args):
        """
        :param U:
        :type U: float
        :param F:
        :type F: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_Value(self, *args)


    def Derivative(self, *args):
        """
        :param U:
        :type U: float
        :param DF:
        :type DF: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_Derivative(self, *args)


    def Values(self, *args):
        """
        :param U:
        :type U: float
        :param F:
        :type F: float &
        :param DF:
        :type DF: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_Point(self, *args)


    def SubIntervalInitialize(self, *args):
        """
        :param theUfirst:
        :type theUfirst: float
        :param theUlast:
        :type theUlast: float
        :rtype: None

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_SubIntervalInitialize(self, *args)


    def SearchOfTolerance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_SearchOfTolerance(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_PCFOfEPCOfELPCOfLocateExtPC.Initialize = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_Initialize, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC.SetPoint = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_SetPoint, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC.Value = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_Value, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC.Derivative = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_Derivative, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC.Values = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_Values, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC.GetStateNumber = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_GetStateNumber, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC.NbExt = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_NbExt, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC.SquareDistance = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_SquareDistance, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC.IsMin = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_IsMin, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC.Point = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_Point, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC.SubIntervalInitialize = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_SubIntervalInitialize, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC.SearchOfTolerance = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_SearchOfTolerance, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC__kill_pointed, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC)
Extrema_PCFOfEPCOfELPCOfLocateExtPC_swigregister = _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC_swigregister
Extrema_PCFOfEPCOfELPCOfLocateExtPC_swigregister(Extrema_PCFOfEPCOfELPCOfLocateExtPC)

class Extrema_PCFOfEPCOfELPCOfLocateExtPC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: None

        """
        _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_swiginit(self, _Extrema.new_Extrema_PCFOfEPCOfELPCOfLocateExtPC2d(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: None

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_Initialize(self, *args)


    def SetPoint(self, *args):
        """
        :param P:
        :type P: gp_Pnt2d
        :rtype: None

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_SetPoint(self, *args)


    def Value(self, *args):
        """
        :param U:
        :type U: float
        :param F:
        :type F: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_Value(self, *args)


    def Derivative(self, *args):
        """
        :param U:
        :type U: float
        :param DF:
        :type DF: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_Derivative(self, *args)


    def Values(self, *args):
        """
        :param U:
        :type U: float
        :param F:
        :type F: float &
        :param DF:
        :type DF: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_Point(self, *args)


    def SubIntervalInitialize(self, *args):
        """
        :param theUfirst:
        :type theUfirst: float
        :param theUlast:
        :type theUlast: float
        :rtype: None

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_SubIntervalInitialize(self, *args)


    def SearchOfTolerance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_SearchOfTolerance(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_PCFOfEPCOfELPCOfLocateExtPC2d.Initialize = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_Initialize, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d.SetPoint = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_SetPoint, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d.Value = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_Value, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d.Derivative = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_Derivative, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d.Values = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_Values, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d.GetStateNumber = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_GetStateNumber, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d.NbExt = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_NbExt, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_SquareDistance, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d.IsMin = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_IsMin, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d.Point = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_Point, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d.SubIntervalInitialize = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_SubIntervalInitialize, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d.SearchOfTolerance = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_SearchOfTolerance, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d__kill_pointed, None, Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_swigregister = _Extrema.Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_swigregister
Extrema_PCFOfEPCOfELPCOfLocateExtPC2d_swigregister(Extrema_PCFOfEPCOfELPCOfLocateExtPC2d)

class Extrema_PCFOfEPCOfExtPC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: None

        """
        _Extrema.Extrema_PCFOfEPCOfExtPC_swiginit(self, _Extrema.new_Extrema_PCFOfEPCOfExtPC(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: None

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC_Initialize(self, *args)


    def SetPoint(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC_SetPoint(self, *args)


    def Value(self, *args):
        """
        :param U:
        :type U: float
        :param F:
        :type F: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC_Value(self, *args)


    def Derivative(self, *args):
        """
        :param U:
        :type U: float
        :param DF:
        :type DF: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC_Derivative(self, *args)


    def Values(self, *args):
        """
        :param U:
        :type U: float
        :param F:
        :type F: float &
        :param DF:
        :type DF: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC_Point(self, *args)


    def SubIntervalInitialize(self, *args):
        """
        :param theUfirst:
        :type theUfirst: float
        :param theUlast:
        :type theUlast: float
        :rtype: None

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC_SubIntervalInitialize(self, *args)


    def SearchOfTolerance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC_SearchOfTolerance(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_PCFOfEPCOfExtPC.Initialize = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC_Initialize, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC.SetPoint = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC_SetPoint, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC.Value = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC_Value, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC.Derivative = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC_Derivative, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC.Values = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC_Values, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC.GetStateNumber = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC_GetStateNumber, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC.NbExt = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC_NbExt, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC.SquareDistance = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC_SquareDistance, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC.IsMin = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC_IsMin, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC.Point = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC_Point, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC.SubIntervalInitialize = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC_SubIntervalInitialize, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC.SearchOfTolerance = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC_SearchOfTolerance, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC__kill_pointed, None, Extrema_PCFOfEPCOfExtPC)
Extrema_PCFOfEPCOfExtPC_swigregister = _Extrema.Extrema_PCFOfEPCOfExtPC_swigregister
Extrema_PCFOfEPCOfExtPC_swigregister(Extrema_PCFOfEPCOfExtPC)

class Extrema_PCFOfEPCOfExtPC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: None

        """
        _Extrema.Extrema_PCFOfEPCOfExtPC2d_swiginit(self, _Extrema.new_Extrema_PCFOfEPCOfExtPC2d(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: None

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC2d_Initialize(self, *args)


    def SetPoint(self, *args):
        """
        :param P:
        :type P: gp_Pnt2d
        :rtype: None

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC2d_SetPoint(self, *args)


    def Value(self, *args):
        """
        :param U:
        :type U: float
        :param F:
        :type F: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC2d_Value(self, *args)


    def Derivative(self, *args):
        """
        :param U:
        :type U: float
        :param DF:
        :type DF: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC2d_Derivative(self, *args)


    def Values(self, *args):
        """
        :param U:
        :type U: float
        :param F:
        :type F: float &
        :param DF:
        :type DF: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC2d_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC2d_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC2d_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC2d_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC2d_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC2d_Point(self, *args)


    def SubIntervalInitialize(self, *args):
        """
        :param theUfirst:
        :type theUfirst: float
        :param theUlast:
        :type theUlast: float
        :rtype: None

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC2d_SubIntervalInitialize(self, *args)


    def SearchOfTolerance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_PCFOfEPCOfExtPC2d_SearchOfTolerance(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_PCFOfEPCOfExtPC2d.Initialize = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d_Initialize, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d.SetPoint = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d_SetPoint, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d.Value = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d_Value, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d.Derivative = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d_Derivative, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d.Values = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d_Values, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d.GetStateNumber = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d_GetStateNumber, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d.NbExt = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d_NbExt, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d_SquareDistance, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d.IsMin = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d_IsMin, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d.Point = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d_Point, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d.SubIntervalInitialize = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d_SubIntervalInitialize, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d.SearchOfTolerance = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d_SearchOfTolerance, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_PCFOfEPCOfExtPC2d__kill_pointed, None, Extrema_PCFOfEPCOfExtPC2d)
Extrema_PCFOfEPCOfExtPC2d_swigregister = _Extrema.Extrema_PCFOfEPCOfExtPC2d_swigregister
Extrema_PCFOfEPCOfExtPC2d_swigregister(Extrema_PCFOfEPCOfExtPC2d)

class Extrema_PCLocFOfLocEPCOfLocateExtPC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: None

        """
        _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_swiginit(self, _Extrema.new_Extrema_PCLocFOfLocEPCOfLocateExtPC(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor3d_Curve &
        :rtype: None

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_Initialize(self, *args)


    def SetPoint(self, *args):
        """
        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_SetPoint(self, *args)


    def Value(self, *args):
        """
        :param U:
        :type U: float
        :param F:
        :type F: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_Value(self, *args)


    def Derivative(self, *args):
        """
        :param U:
        :type U: float
        :param DF:
        :type DF: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_Derivative(self, *args)


    def Values(self, *args):
        """
        :param U:
        :type U: float
        :param F:
        :type F: float &
        :param DF:
        :type DF: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_Point(self, *args)


    def SubIntervalInitialize(self, *args):
        """
        :param theUfirst:
        :type theUfirst: float
        :param theUlast:
        :type theUlast: float
        :rtype: None

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_SubIntervalInitialize(self, *args)


    def SearchOfTolerance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_SearchOfTolerance(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_PCLocFOfLocEPCOfLocateExtPC.Initialize = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_Initialize, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC.SetPoint = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_SetPoint, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC.Value = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_Value, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC.Derivative = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_Derivative, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC.Values = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_Values, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC.GetStateNumber = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_GetStateNumber, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC.NbExt = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_NbExt, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC.SquareDistance = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_SquareDistance, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC.IsMin = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_IsMin, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC.Point = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_Point, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC.SubIntervalInitialize = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_SubIntervalInitialize, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC.SearchOfTolerance = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_SearchOfTolerance, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC__kill_pointed, None, Extrema_PCLocFOfLocEPCOfLocateExtPC)
Extrema_PCLocFOfLocEPCOfLocateExtPC_swigregister = _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC_swigregister
Extrema_PCLocFOfLocEPCOfLocateExtPC_swigregister(Extrema_PCLocFOfLocEPCOfLocateExtPC)

class Extrema_PCLocFOfLocEPCOfLocateExtPC2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param P:
        :type P: gp_Pnt2d
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: None

        """
        _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_swiginit(self, _Extrema.new_Extrema_PCLocFOfLocEPCOfLocateExtPC2d(*args))

    def Initialize(self, *args):
        """
        :param C:
        :type C: Adaptor2d_Curve2d &
        :rtype: None

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_Initialize(self, *args)


    def SetPoint(self, *args):
        """
        :param P:
        :type P: gp_Pnt2d
        :rtype: None

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_SetPoint(self, *args)


    def Value(self, *args):
        """
        :param U:
        :type U: float
        :param F:
        :type F: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_Value(self, *args)


    def Derivative(self, *args):
        """
        :param U:
        :type U: float
        :param DF:
        :type DF: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_Derivative(self, *args)


    def Values(self, *args):
        """
        :param U:
        :type U: float
        :param F:
        :type F: float &
        :param DF:
        :type DF: float &
        :rtype: bool

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_Values(self, *args)


    def GetStateNumber(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_GetStateNumber(self, *args)


    def NbExt(self, *args):
        """
        :rtype: int

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_NbExt(self, *args)


    def SquareDistance(self, *args):
        """
        :param N:
        :type N: int
        :rtype: float

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_SquareDistance(self, *args)


    def IsMin(self, *args):
        """
        :param N:
        :type N: int
        :rtype: bool

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_IsMin(self, *args)


    def Point(self, *args):
        """
        :param N:
        :type N: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_Point(self, *args)


    def SubIntervalInitialize(self, *args):
        """
        :param theUfirst:
        :type theUfirst: float
        :param theUlast:
        :type theUlast: float
        :rtype: None

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_SubIntervalInitialize(self, *args)


    def SearchOfTolerance(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_SearchOfTolerance(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_PCLocFOfLocEPCOfLocateExtPC2d.Initialize = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_Initialize, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d.SetPoint = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_SetPoint, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d.Value = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_Value, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d.Derivative = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_Derivative, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d.Values = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_Values, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d.GetStateNumber = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_GetStateNumber, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d.NbExt = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_NbExt, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d.SquareDistance = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_SquareDistance, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d.IsMin = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_IsMin, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d.Point = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_Point, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d.SubIntervalInitialize = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_SubIntervalInitialize, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d.SearchOfTolerance = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_SearchOfTolerance, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d__kill_pointed, None, Extrema_PCLocFOfLocEPCOfLocateExtPC2d)
Extrema_PCLocFOfLocEPCOfLocateExtPC2d_swigregister = _Extrema.Extrema_PCLocFOfLocEPCOfLocateExtPC2d_swigregister
Extrema_PCLocFOfLocEPCOfLocateExtPC2d_swigregister(Extrema_PCLocFOfLocEPCOfLocateExtPC2d)

class Extrema_POnCurv(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param U:
        :type U: float
        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        _Extrema.Extrema_POnCurv_swiginit(self, _Extrema.new_Extrema_POnCurv(*args))

    def SetValues(self, *args):
        """
        :param U:
        :type U: float
        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        return _Extrema.Extrema_POnCurv_SetValues(self, *args)


    def Value(self, *args):
        """
        :rtype: gp_Pnt

        """
        return _Extrema.Extrema_POnCurv_Value(self, *args)


    def Parameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_POnCurv_Parameter(self, *args)


    def _CSFDB_GetExtrema_POnCurvmyU(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_POnCurv__CSFDB_GetExtrema_POnCurvmyU(self, *args)


    def _CSFDB_SetExtrema_POnCurvmyU(self, *args):
        """
        :param p:
        :type p: float
        :rtype: None

        """
        return _Extrema.Extrema_POnCurv__CSFDB_SetExtrema_POnCurvmyU(self, *args)


    def _CSFDB_GetExtrema_POnCurvmyP(self, *args):
        """
        :rtype: gp_Pnt

        """
        return _Extrema.Extrema_POnCurv__CSFDB_GetExtrema_POnCurvmyP(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_POnCurv.SetValues = new_instancemethod(_Extrema.Extrema_POnCurv_SetValues, None, Extrema_POnCurv)
Extrema_POnCurv.Value = new_instancemethod(_Extrema.Extrema_POnCurv_Value, None, Extrema_POnCurv)
Extrema_POnCurv.Parameter = new_instancemethod(_Extrema.Extrema_POnCurv_Parameter, None, Extrema_POnCurv)
Extrema_POnCurv._CSFDB_GetExtrema_POnCurvmyU = new_instancemethod(_Extrema.Extrema_POnCurv__CSFDB_GetExtrema_POnCurvmyU, None, Extrema_POnCurv)
Extrema_POnCurv._CSFDB_SetExtrema_POnCurvmyU = new_instancemethod(_Extrema.Extrema_POnCurv__CSFDB_SetExtrema_POnCurvmyU, None, Extrema_POnCurv)
Extrema_POnCurv._CSFDB_GetExtrema_POnCurvmyP = new_instancemethod(_Extrema.Extrema_POnCurv__CSFDB_GetExtrema_POnCurvmyP, None, Extrema_POnCurv)
Extrema_POnCurv._kill_pointed = new_instancemethod(_Extrema.Extrema_POnCurv__kill_pointed, None, Extrema_POnCurv)
Extrema_POnCurv_swigregister = _Extrema.Extrema_POnCurv_swigregister
Extrema_POnCurv_swigregister(Extrema_POnCurv)

class Extrema_POnCurv2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param U:
        :type U: float
        :param P:
        :type P: gp_Pnt2d
        :rtype: None

        """
        _Extrema.Extrema_POnCurv2d_swiginit(self, _Extrema.new_Extrema_POnCurv2d(*args))

    def SetValues(self, *args):
        """
        :param U:
        :type U: float
        :param P:
        :type P: gp_Pnt2d
        :rtype: None

        """
        return _Extrema.Extrema_POnCurv2d_SetValues(self, *args)


    def Value(self, *args):
        """
        :rtype: gp_Pnt2d

        """
        return _Extrema.Extrema_POnCurv2d_Value(self, *args)


    def Parameter(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_POnCurv2d_Parameter(self, *args)


    def _CSFDB_GetExtrema_POnCurv2dmyU(self, *args):
        """
        :rtype: float

        """
        return _Extrema.Extrema_POnCurv2d__CSFDB_GetExtrema_POnCurv2dmyU(self, *args)


    def _CSFDB_SetExtrema_POnCurv2dmyU(self, *args):
        """
        :param p:
        :type p: float
        :rtype: None

        """
        return _Extrema.Extrema_POnCurv2d__CSFDB_SetExtrema_POnCurv2dmyU(self, *args)


    def _CSFDB_GetExtrema_POnCurv2dmyP(self, *args):
        """
        :rtype: gp_Pnt2d

        """
        return _Extrema.Extrema_POnCurv2d__CSFDB_GetExtrema_POnCurv2dmyP(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_POnCurv2d.SetValues = new_instancemethod(_Extrema.Extrema_POnCurv2d_SetValues, None, Extrema_POnCurv2d)
Extrema_POnCurv2d.Value = new_instancemethod(_Extrema.Extrema_POnCurv2d_Value, None, Extrema_POnCurv2d)
Extrema_POnCurv2d.Parameter = new_instancemethod(_Extrema.Extrema_POnCurv2d_Parameter, None, Extrema_POnCurv2d)
Extrema_POnCurv2d._CSFDB_GetExtrema_POnCurv2dmyU = new_instancemethod(_Extrema.Extrema_POnCurv2d__CSFDB_GetExtrema_POnCurv2dmyU, None, Extrema_POnCurv2d)
Extrema_POnCurv2d._CSFDB_SetExtrema_POnCurv2dmyU = new_instancemethod(_Extrema.Extrema_POnCurv2d__CSFDB_SetExtrema_POnCurv2dmyU, None, Extrema_POnCurv2d)
Extrema_POnCurv2d._CSFDB_GetExtrema_POnCurv2dmyP = new_instancemethod(_Extrema.Extrema_POnCurv2d__CSFDB_GetExtrema_POnCurv2dmyP, None, Extrema_POnCurv2d)
Extrema_POnCurv2d._kill_pointed = new_instancemethod(_Extrema.Extrema_POnCurv2d__kill_pointed, None, Extrema_POnCurv2d)
Extrema_POnCurv2d_swigregister = _Extrema.Extrema_POnCurv2d_swigregister
Extrema_POnCurv2d_swigregister(Extrema_POnCurv2d)

class Extrema_POnSurf(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * Creation of an indefinite point on surface.

        :rtype: None

        * Creation of a point on surface with parameter values on the surface and a Pnt from gp.

        :param U:
        :type U: float
        :param V:
        :type V: float
        :param P:
        :type P: gp_Pnt
        :rtype: None

        """
        _Extrema.Extrema_POnSurf_swiginit(self, _Extrema.new_Extrema_POnSurf(*args))

    def Value(self, *args):
        """
        * Returns the 3d point.

        :rtype: gp_Pnt

        """
        return _Extrema.Extrema_POnSurf_Value(self, *args)


    def Parameter(self, *args):
        """
        * Returns the parameter values on the surface.

        :param U:
        :type U: float &
        :param V:
        :type V: float &
        :rtype: None

        """
        return _Extrema.Extrema_POnSurf_Parameter(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_POnSurf.Value = new_instancemethod(_Extrema.Extrema_POnSurf_Value, None, Extrema_POnSurf)
Extrema_POnSurf.Parameter = new_instancemethod(_Extrema.Extrema_POnSurf_Parameter, None, Extrema_POnSurf)
Extrema_POnSurf._kill_pointed = new_instancemethod(_Extrema.Extrema_POnSurf__kill_pointed, None, Extrema_POnSurf)
Extrema_POnSurf_swigregister = _Extrema.Extrema_POnSurf_swigregister
Extrema_POnSurf_swigregister(Extrema_POnSurf)

class Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_swiginit(self, _Extrema.new_Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC &
        :rtype: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC &
        :rtype: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.Clear = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Clear, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.Assign = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Assign, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.Set = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Set, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.Append = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Append, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.Prepend = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Prepend, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.InsertBefore = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_InsertBefore, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.InsertAfter = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_InsertAfter, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.First = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_First, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.Last = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Last, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.Split = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Split, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.Value = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Value, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.SetValue = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_SetValue, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.ChangeValue = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_ChangeValue, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC.Remove = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Remove, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC__kill_pointed, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_swigregister = _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_swigregister
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC_swigregister(Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC)

class Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_swiginit(self, _Extrema.new_Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d &
        :rtype: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d &
        :rtype: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.Clear = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Clear, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.Assign = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Assign, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.Set = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Set, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.Append = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Append, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.Prepend = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Prepend, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.InsertBefore = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_InsertBefore, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.InsertAfter = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_InsertAfter, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.First = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_First, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.Last = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Last, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.Split = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Split, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.Value = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Value, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.SetValue = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_SetValue, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.ChangeValue = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_ChangeValue, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.Remove = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Remove, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d__kill_pointed, None, Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_swigregister = _Extrema.Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_swigregister
Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_swigregister(Extrema_SeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)

class Extrema_SeqPCOfPCFOfEPCOfExtPC(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_swiginit(self, _Extrema.new_Extrema_SeqPCOfPCFOfEPCOfExtPC(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPCOfPCFOfEPCOfExtPC &
        :rtype: Extrema_SeqPCOfPCFOfEPCOfExtPC

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPCOfPCFOfEPCOfExtPC &
        :rtype: Extrema_SeqPCOfPCFOfEPCOfExtPC

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SeqPCOfPCFOfEPCOfExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SeqPCOfPCFOfEPCOfExtPC.Clear = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Clear, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.Assign = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Assign, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.Set = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Set, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.Append = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Append, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.Prepend = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Prepend, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.InsertBefore = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_InsertBefore, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.InsertAfter = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_InsertAfter, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.First = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_First, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.Last = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Last, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.Split = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Split, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.Value = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Value, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.SetValue = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_SetValue, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.ChangeValue = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_ChangeValue, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC.Remove = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_Remove, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC__kill_pointed, None, Extrema_SeqPCOfPCFOfEPCOfExtPC)
Extrema_SeqPCOfPCFOfEPCOfExtPC_swigregister = _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC_swigregister
Extrema_SeqPCOfPCFOfEPCOfExtPC_swigregister(Extrema_SeqPCOfPCFOfEPCOfExtPC)

class Extrema_SeqPCOfPCFOfEPCOfExtPC2d(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_swiginit(self, _Extrema.new_Extrema_SeqPCOfPCFOfEPCOfExtPC2d(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPCOfPCFOfEPCOfExtPC2d &
        :rtype: Extrema_SeqPCOfPCFOfEPCOfExtPC2d

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPCOfPCFOfEPCOfExtPC2d &
        :rtype: Extrema_SeqPCOfPCFOfEPCOfExtPC2d

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPCOfPCFOfEPCOfExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SeqPCOfPCFOfEPCOfExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SeqPCOfPCFOfEPCOfExtPC2d.Clear = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Clear, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.Assign = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Assign, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.Set = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Set, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.Append = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Append, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.Prepend = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Prepend, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.InsertBefore = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_InsertBefore, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.InsertAfter = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_InsertAfter, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.First = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_First, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.Last = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Last, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.Split = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Split, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.Value = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Value, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.SetValue = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_SetValue, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.ChangeValue = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_ChangeValue, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d.Remove = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_Remove, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d__kill_pointed, None, Extrema_SeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SeqPCOfPCFOfEPCOfExtPC2d_swigregister = _Extrema.Extrema_SeqPCOfPCFOfEPCOfExtPC2d_swigregister
Extrema_SeqPCOfPCFOfEPCOfExtPC2d_swigregister(Extrema_SeqPCOfPCFOfEPCOfExtPC2d)

class Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_swiginit(self, _Extrema.new_Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC &
        :rtype: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC &
        :rtype: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.Clear = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Clear, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.Assign = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Assign, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.Set = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Set, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.Append = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Append, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.Prepend = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Prepend, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.InsertBefore = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_InsertBefore, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.InsertAfter = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_InsertAfter, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.First = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_First, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.Last = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Last, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.Split = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Split, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.Value = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Value, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.SetValue = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_SetValue, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.ChangeValue = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_ChangeValue, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.Remove = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_Remove, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC__kill_pointed, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_swigregister = _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_swigregister
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC_swigregister(Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC)

class Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_swiginit(self, _Extrema.new_Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d &
        :rtype: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d &
        :rtype: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.Clear = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Clear, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.Assign = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Assign, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.Set = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Set, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.Append = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Append, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.Prepend = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Prepend, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.InsertBefore = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_InsertBefore, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.InsertAfter = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_InsertAfter, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.First = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_First, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.Last = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Last, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.Split = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Split, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.Value = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Value, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.SetValue = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_SetValue, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.ChangeValue = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_ChangeValue, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.Remove = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Remove, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d__kill_pointed, None, Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_swigregister = _Extrema.Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_swigregister
Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_swigregister(Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)

class Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_swiginit(self, _Extrema.new_Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d &
        :rtype: Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d &
        :rtype: Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.Clear = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Clear, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.Assign = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Assign, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.Set = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Set, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.Append = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Append, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.Prepend = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Prepend, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.InsertBefore = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_InsertBefore, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.InsertAfter = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_InsertAfter, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.First = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_First, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.Last = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Last, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.Split = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Split, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.Value = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Value, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.SetValue = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_SetValue, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.ChangeValue = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_ChangeValue, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d.Remove = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_Remove, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d__kill_pointed, None, Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_swigregister = _Extrema.Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_swigregister
Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d_swigregister(Extrema_SeqPOnCOfCCFOfECC2dOfExtCC2d)

class Extrema_SeqPOnCOfCCFOfECCOfExtCC(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_swiginit(self, _Extrema.new_Extrema_SeqPOnCOfCCFOfECCOfExtCC(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPOnCOfCCFOfECCOfExtCC &
        :rtype: Extrema_SeqPOnCOfCCFOfECCOfExtCC

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPOnCOfCCFOfECCOfExtCC &
        :rtype: Extrema_SeqPOnCOfCCFOfECCOfExtCC

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfECCOfExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfECCOfExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfECCOfExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfECCOfExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SeqPOnCOfCCFOfECCOfExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SeqPOnCOfCCFOfECCOfExtCC.Clear = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Clear, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.Assign = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Assign, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.Set = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Set, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.Append = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Append, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.Prepend = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Prepend, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.InsertBefore = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_InsertBefore, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.InsertAfter = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_InsertAfter, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.First = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_First, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.Last = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Last, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.Split = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Split, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.Value = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Value, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.SetValue = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_SetValue, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.ChangeValue = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_ChangeValue, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC.Remove = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_Remove, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC__kill_pointed, None, Extrema_SeqPOnCOfCCFOfECCOfExtCC)
Extrema_SeqPOnCOfCCFOfECCOfExtCC_swigregister = _Extrema.Extrema_SeqPOnCOfCCFOfECCOfExtCC_swigregister
Extrema_SeqPOnCOfCCFOfECCOfExtCC_swigregister(Extrema_SeqPOnCOfCCFOfECCOfExtCC)

class Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_swiginit(self, _Extrema.new_Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d &
        :rtype: Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d &
        :rtype: Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.Clear = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Clear, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.Assign = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Assign, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.Set = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Set, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.Append = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Append, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.Prepend = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Prepend, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.InsertBefore = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_InsertBefore, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.InsertAfter = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_InsertAfter, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.First = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_First, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.Last = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Last, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.Split = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Split, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.Value = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Value, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.SetValue = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_SetValue, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.ChangeValue = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_ChangeValue, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.Remove = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Remove, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d__kill_pointed, None, Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_swigregister = _Extrema.Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_swigregister
Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_swigregister(Extrema_SeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)

class Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_swiginit(self, _Extrema.new_Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC &
        :rtype: Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC &
        :rtype: Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.Clear = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Clear, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.Assign = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Assign, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.Set = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Set, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.Append = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Append, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.Prepend = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Prepend, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.InsertBefore = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_InsertBefore, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.InsertAfter = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_InsertAfter, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.First = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_First, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.Last = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Last, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.Split = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Split, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.Value = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Value, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.SetValue = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_SetValue, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.ChangeValue = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_ChangeValue, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC.Remove = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_Remove, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC__kill_pointed, None, Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_swigregister = _Extrema.Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_swigregister
Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC_swigregister(Extrema_SeqPOnCOfCCFOfELCCOfLocateExtCC)

class Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_swiginit(self, _Extrema.new_Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d &
        :rtype: Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d &
        :rtype: Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.Clear = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Clear, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.Assign = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Assign, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.Set = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Set, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.Append = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Append, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.Prepend = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Prepend, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.InsertBefore = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_InsertBefore, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.InsertAfter = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_InsertAfter, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.First = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_First, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.Last = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Last, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.Split = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Split, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.Value = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Value, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.SetValue = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_SetValue, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.ChangeValue = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_ChangeValue, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.Remove = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Remove, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d__kill_pointed, None, Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_swigregister = _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_swigregister
Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_swigregister(Extrema_SeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)

class Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_swiginit(self, _Extrema.new_Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC &
        :rtype: Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC &
        :rtype: Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.Clear = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Clear, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.Assign = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Assign, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.Set = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Set, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.Append = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Append, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.Prepend = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Prepend, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.InsertBefore = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_InsertBefore, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.InsertAfter = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_InsertAfter, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.First = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_First, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.Last = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Last, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.Split = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Split, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.Value = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Value, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.SetValue = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_SetValue, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.ChangeValue = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_ChangeValue, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.Remove = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Remove, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC__kill_pointed, None, Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_swigregister = _Extrema.Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_swigregister
Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC_swigregister(Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC)

class Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC self)"""
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC self) -> Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC"""
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Value, None, Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC__kill_pointed, None, Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_GetHandle, None, Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_swigregister = _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_swigregister
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_swigregister(Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC)

class Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_Nullify, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_IsNull, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_GetObject, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC__kill_pointed, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_swigregister
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_swigregister(Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC)

def Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC_DownCast

class Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv2d &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d self)"""
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d self) -> Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d"""
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Value, None, Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d__kill_pointed, None, Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_GetHandle, None, Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_swigregister = _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_swigregister
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_swigregister(Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)

class Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_Nullify, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_IsNull, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_GetObject, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d__kill_pointed, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_swigregister
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_swigregister(Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d)

def Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfELPCOfLocateExtPC2d_DownCast

class Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC self)"""
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC self) -> Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC"""
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_Value, None, Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC)
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC__kill_pointed, None, Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC)
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_GetHandle, None, Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC)
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_swigregister = _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_swigregister
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_swigregister(Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC)

class Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_Nullify, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_IsNull, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_GetObject, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC__kill_pointed, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_swigregister
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_swigregister(Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC)

def Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC_DownCast

class Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv2d &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d self)"""
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d self) -> Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d"""
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_Value, None, Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d__kill_pointed, None, Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_GetHandle, None, Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d)
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_swigregister = _Extrema.Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_swigregister
Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_swigregister(Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d)

class Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_Nullify, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_IsNull, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_GetObject, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d__kill_pointed, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_swigregister
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_swigregister(Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d)

def Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCFOfEPCOfExtPC2d_DownCast

class Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC self)"""
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC self) -> Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC"""
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_Value, None, Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC__kill_pointed, None, Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_GetHandle, None, Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_swigregister = _Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_swigregister
Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_swigregister(Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC)

class Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_Nullify, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_IsNull, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_GetObject, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC__kill_pointed, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC)
Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_swigregister
Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_swigregister(Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC)

def Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC_DownCast

class Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv2d &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d self)"""
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d self) -> Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d"""
        return _Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Value, None, Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d__kill_pointed, None, Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_GetHandle, None, Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_swigregister = _Extrema.Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_swigregister
Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_swigregister(Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)

class Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_Nullify, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_IsNull, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_GetObject, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d__kill_pointed, None, Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)
Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_swigregister
Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_swigregister(Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d)

def Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSeqPCOfPCLocFOfLocEPCOfLocateExtPC2d_DownCast

class Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv2d &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d self)"""
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d self) -> Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d"""
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_Value, None, Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d__kill_pointed, None, Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_GetHandle, None, Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d)
Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_swigregister = _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_swigregister
Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_swigregister(Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d)

class Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_Nullify, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_IsNull, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_GetObject, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d__kill_pointed, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_swigregister
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_swigregister(Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d)

def Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECC2dOfExtCC2d_DownCast

class Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC self)"""
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC self) -> Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC"""
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_Value, None, Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC)
Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC__kill_pointed, None, Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC)
Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_GetHandle, None, Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC)
Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_swigregister = _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_swigregister
Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_swigregister(Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC)

class Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_Nullify, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_IsNull, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_GetObject, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC__kill_pointed, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_swigregister
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_swigregister(Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC)

def Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfECCOfExtCC_DownCast

class Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv2d &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d self)"""
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d self) -> Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d"""
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Value, None, Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d__kill_pointed, None, Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_GetHandle, None, Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_swigregister = _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_swigregister
Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_swigregister(Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)

class Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_Nullify, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_IsNull, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_GetObject, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d__kill_pointed, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_swigregister
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_swigregister(Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d)

def Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCC2dOfLocateExtCC2d_DownCast

class Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC self)"""
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC self) -> Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC"""
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_Value, None, Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC__kill_pointed, None, Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_GetHandle, None, Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC)
Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_swigregister = _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_swigregister
Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_swigregister(Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC)

class Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_Nullify, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_IsNull, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_GetObject, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC__kill_pointed, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_swigregister
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_swigregister(Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC)

def Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCFOfELCCOfLocateExtCC_DownCast

class Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv2d &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d self)"""
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d self) -> Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d"""
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Value, None, Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d__kill_pointed, None, Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_GetHandle, None, Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_swigregister = _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_swigregister
Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_swigregister(Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)

class Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_Nullify, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_IsNull, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_GetObject, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d__kill_pointed, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_swigregister
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_swigregister(Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d)

def Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECC2dOfLocateExtCC2d_DownCast

class Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC self)"""
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC self) -> Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC"""
        return _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Value, None, Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC__kill_pointed, None, Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_GetHandle, None, Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_swigregister = _Extrema.Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_swigregister
Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_swigregister(Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC)

class Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_Nullify, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_IsNull, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_GetObject, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC__kill_pointed, None, Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_swigregister
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_swigregister(Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC)

def Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSeqPOnCOfCCLocFOfLocECCOfLocateExtCC_DownCast

class Extrema_SequenceNodeOfSequenceOfPOnCurv(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSequenceOfPOnCurv(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSequenceOfPOnCurv self)"""
        return _Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSequenceOfPOnCurv self) -> Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv"""
        return _Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSequenceOfPOnCurv.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv_Value, None, Extrema_SequenceNodeOfSequenceOfPOnCurv)
Extrema_SequenceNodeOfSequenceOfPOnCurv._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv__kill_pointed, None, Extrema_SequenceNodeOfSequenceOfPOnCurv)
Extrema_SequenceNodeOfSequenceOfPOnCurv.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv_GetHandle, None, Extrema_SequenceNodeOfSequenceOfPOnCurv)
Extrema_SequenceNodeOfSequenceOfPOnCurv_swigregister = _Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv_swigregister
Extrema_SequenceNodeOfSequenceOfPOnCurv_swigregister(Extrema_SequenceNodeOfSequenceOfPOnCurv)

class Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv_Nullify, None, Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv)
Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv_IsNull, None, Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv)
Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv_GetObject, None, Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv)
Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv__kill_pointed, None, Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv)
Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv_swigregister
Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv_swigregister(Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv)

def Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv_DownCast

class Extrema_SequenceNodeOfSequenceOfPOnCurv2d(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnCurv2d &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv2d_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSequenceOfPOnCurv2d(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv2d_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSequenceOfPOnCurv2d self)"""
        return _Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv2d__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSequenceOfPOnCurv2d self) -> Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d"""
        return _Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv2d_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSequenceOfPOnCurv2d.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv2d_Value, None, Extrema_SequenceNodeOfSequenceOfPOnCurv2d)
Extrema_SequenceNodeOfSequenceOfPOnCurv2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv2d__kill_pointed, None, Extrema_SequenceNodeOfSequenceOfPOnCurv2d)
Extrema_SequenceNodeOfSequenceOfPOnCurv2d.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv2d_GetHandle, None, Extrema_SequenceNodeOfSequenceOfPOnCurv2d)
Extrema_SequenceNodeOfSequenceOfPOnCurv2d_swigregister = _Extrema.Extrema_SequenceNodeOfSequenceOfPOnCurv2d_swigregister
Extrema_SequenceNodeOfSequenceOfPOnCurv2d_swigregister(Extrema_SequenceNodeOfSequenceOfPOnCurv2d)

class Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d_Nullify, None, Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d)
Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d_IsNull, None, Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d)
Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d_GetObject, None, Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d)
Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d__kill_pointed, None, Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d)
Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d_swigregister
Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d_swigregister(Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d)

def Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnCurv2d_DownCast

class Extrema_SequenceNodeOfSequenceOfPOnSurf(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Extrema_POnSurf &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _Extrema.Extrema_SequenceNodeOfSequenceOfPOnSurf_swiginit(self, _Extrema.new_Extrema_SequenceNodeOfSequenceOfPOnSurf(*args))

    def Value(self, *args):
        """
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_SequenceNodeOfSequenceOfPOnSurf_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(Extrema_SequenceNodeOfSequenceOfPOnSurf self)"""
        return _Extrema.Extrema_SequenceNodeOfSequenceOfPOnSurf__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(Extrema_SequenceNodeOfSequenceOfPOnSurf self) -> Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf"""
        return _Extrema.Extrema_SequenceNodeOfSequenceOfPOnSurf_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceNodeOfSequenceOfPOnSurf.Value = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSequenceOfPOnSurf_Value, None, Extrema_SequenceNodeOfSequenceOfPOnSurf)
Extrema_SequenceNodeOfSequenceOfPOnSurf._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSequenceOfPOnSurf__kill_pointed, None, Extrema_SequenceNodeOfSequenceOfPOnSurf)
Extrema_SequenceNodeOfSequenceOfPOnSurf.GetHandle = new_instancemethod(_Extrema.Extrema_SequenceNodeOfSequenceOfPOnSurf_GetHandle, None, Extrema_SequenceNodeOfSequenceOfPOnSurf)
Extrema_SequenceNodeOfSequenceOfPOnSurf_swigregister = _Extrema.Extrema_SequenceNodeOfSequenceOfPOnSurf_swigregister
Extrema_SequenceNodeOfSequenceOfPOnSurf_swigregister(Extrema_SequenceNodeOfSequenceOfPOnSurf)

class Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf_swiginit(self, _Extrema.new_Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf(*args))
    DownCast = staticmethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf.Nullify = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf_Nullify, None, Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf)
Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf.IsNull = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf_IsNull, None, Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf)
Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf.GetObject = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf_GetObject, None, Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf)
Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf._kill_pointed = new_instancemethod(_Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf__kill_pointed, None, Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf)
Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf_swigregister = _Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf_swigregister
Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf_swigregister(Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf)

def Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf_DownCast(AnObject):
    return _Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf_DownCast(AnObject)
Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf_DownCast = _Extrema.Handle_Extrema_SequenceNodeOfSequenceOfPOnSurf_DownCast

class Extrema_SequenceOfPOnCurv(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SequenceOfPOnCurv_swiginit(self, _Extrema.new_Extrema_SequenceOfPOnCurv(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SequenceOfPOnCurv &
        :rtype: Extrema_SequenceOfPOnCurv

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SequenceOfPOnCurv &
        :rtype: Extrema_SequenceOfPOnCurv

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SequenceOfPOnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param S:
        :type S: Extrema_SequenceOfPOnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SequenceOfPOnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SequenceOfPOnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SequenceOfPOnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceOfPOnCurv.Clear = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_Clear, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.Assign = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_Assign, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.Set = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_Set, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.Append = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_Append, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.Prepend = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_Prepend, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.InsertBefore = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_InsertBefore, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.InsertAfter = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_InsertAfter, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.First = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_First, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.Last = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_Last, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.Split = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_Split, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.Value = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_Value, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.SetValue = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_SetValue, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.ChangeValue = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_ChangeValue, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv.Remove = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv_Remove, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv__kill_pointed, None, Extrema_SequenceOfPOnCurv)
Extrema_SequenceOfPOnCurv_swigregister = _Extrema.Extrema_SequenceOfPOnCurv_swigregister
Extrema_SequenceOfPOnCurv_swigregister(Extrema_SequenceOfPOnCurv)

class Extrema_SequenceOfPOnCurv2d(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SequenceOfPOnCurv2d_swiginit(self, _Extrema.new_Extrema_SequenceOfPOnCurv2d(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SequenceOfPOnCurv2d &
        :rtype: Extrema_SequenceOfPOnCurv2d

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SequenceOfPOnCurv2d &
        :rtype: Extrema_SequenceOfPOnCurv2d

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SequenceOfPOnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param S:
        :type S: Extrema_SequenceOfPOnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SequenceOfPOnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnCurv2d &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SequenceOfPOnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SequenceOfPOnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnCurv2d &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnCurv2d

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnCurv2d_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceOfPOnCurv2d.Clear = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_Clear, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.Assign = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_Assign, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.Set = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_Set, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.Append = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_Append, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.Prepend = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_Prepend, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.InsertBefore = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_InsertBefore, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.InsertAfter = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_InsertAfter, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.First = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_First, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.Last = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_Last, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.Split = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_Split, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.Value = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_Value, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.SetValue = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_SetValue, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.ChangeValue = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_ChangeValue, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d.Remove = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d_Remove, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceOfPOnCurv2d__kill_pointed, None, Extrema_SequenceOfPOnCurv2d)
Extrema_SequenceOfPOnCurv2d_swigregister = _Extrema.Extrema_SequenceOfPOnCurv2d_swigregister
Extrema_SequenceOfPOnCurv2d_swigregister(Extrema_SequenceOfPOnCurv2d)

class Extrema_SequenceOfPOnSurf(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _Extrema.Extrema_SequenceOfPOnSurf_swiginit(self, _Extrema.new_Extrema_SequenceOfPOnSurf(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: Extrema_SequenceOfPOnSurf &
        :rtype: Extrema_SequenceOfPOnSurf

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: Extrema_SequenceOfPOnSurf &
        :rtype: Extrema_SequenceOfPOnSurf

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Extrema_POnSurf &
        :rtype: None

        :param S:
        :type S: Extrema_SequenceOfPOnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Extrema_POnSurf &
        :rtype: None

        :param S:
        :type S: Extrema_SequenceOfPOnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnSurf &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SequenceOfPOnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Extrema_POnSurf &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: Extrema_SequenceOfPOnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: Extrema_SequenceOfPOnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Extrema_POnSurf &
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Extrema_POnSurf

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _Extrema.Extrema_SequenceOfPOnSurf_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_SequenceOfPOnSurf.Clear = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_Clear, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.Assign = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_Assign, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.Set = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_Set, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.Append = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_Append, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.Prepend = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_Prepend, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.InsertBefore = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_InsertBefore, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.InsertAfter = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_InsertAfter, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.First = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_First, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.Last = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_Last, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.Split = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_Split, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.Value = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_Value, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.SetValue = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_SetValue, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.ChangeValue = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_ChangeValue, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf.Remove = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf_Remove, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf._kill_pointed = new_instancemethod(_Extrema.Extrema_SequenceOfPOnSurf__kill_pointed, None, Extrema_SequenceOfPOnSurf)
Extrema_SequenceOfPOnSurf_swigregister = _Extrema.Extrema_SequenceOfPOnSurf_swigregister
Extrema_SequenceOfPOnSurf_swigregister(Extrema_SequenceOfPOnSurf)

class Extrema_POnSurfParams(Extrema_POnSurf):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        * empty constructor

        :rtype: None

        * Creation of a point on surface with parameter values on the surface and a Pnt from gp.

        :param theU:
        :type theU: float
        :param theV:
        :type theV: float
        :param thePnt:
        :type thePnt: gp_Pnt
        :rtype: None

        """
        _Extrema.Extrema_POnSurfParams_swiginit(self, _Extrema.new_Extrema_POnSurfParams(*args))

    def SetSqrDistance(self, *args):
        """
        * Sets the square distance from this point to another one (e.g. to the point to be projected).

        :param theSqrDistance:
        :type theSqrDistance: float
        :rtype: None

        """
        return _Extrema.Extrema_POnSurfParams_SetSqrDistance(self, *args)


    def GetSqrDistance(self, *args):
        """
        * Query the square distance from this point to another one.

        :rtype: float

        """
        return _Extrema.Extrema_POnSurfParams_GetSqrDistance(self, *args)


    def SetElementType(self, *args):
        """
        * Sets the element type on which this point is situated.

        :param theElementType:
        :type theElementType: Extrema_ElementType
        :rtype: None

        """
        return _Extrema.Extrema_POnSurfParams_SetElementType(self, *args)


    def GetElementType(self, *args):
        """
        * Query the element type on which this point is situated.

        :rtype: Extrema_ElementType

        """
        return _Extrema.Extrema_POnSurfParams_GetElementType(self, *args)


    def SetIndices(self, *args):
        """
        * Sets the U and V indices of an element that contains this point.

        :param theIndexU:
        :type theIndexU: int
        :param theIndexV:
        :type theIndexV: int
        :rtype: None

        """
        return _Extrema.Extrema_POnSurfParams_SetIndices(self, *args)


    def GetIndices(self, *args):
        """
        * Query the U and V indices of an element that contains this point.

        :param theIndexU:
        :type theIndexU: int &
        :param theIndexV:
        :type theIndexV: int &
        :rtype: None

        """
        return _Extrema.Extrema_POnSurfParams_GetIndices(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


Extrema_POnSurfParams.SetSqrDistance = new_instancemethod(_Extrema.Extrema_POnSurfParams_SetSqrDistance, None, Extrema_POnSurfParams)
Extrema_POnSurfParams.GetSqrDistance = new_instancemethod(_Extrema.Extrema_POnSurfParams_GetSqrDistance, None, Extrema_POnSurfParams)
Extrema_POnSurfParams.SetElementType = new_instancemethod(_Extrema.Extrema_POnSurfParams_SetElementType, None, Extrema_POnSurfParams)
Extrema_POnSurfParams.GetElementType = new_instancemethod(_Extrema.Extrema_POnSurfParams_GetElementType, None, Extrema_POnSurfParams)
Extrema_POnSurfParams.SetIndices = new_instancemethod(_Extrema.Extrema_POnSurfParams_SetIndices, None, Extrema_POnSurfParams)
Extrema_POnSurfParams.GetIndices = new_instancemethod(_Extrema.Extrema_POnSurfParams_GetIndices, None, Extrema_POnSurfParams)
Extrema_POnSurfParams._kill_pointed = new_instancemethod(_Extrema.Extrema_POnSurfParams__kill_pointed, None, Extrema_POnSurfParams)
Extrema_POnSurfParams_swigregister = _Extrema.Extrema_POnSurfParams_swigregister
Extrema_POnSurfParams_swigregister(Extrema_POnSurfParams)



