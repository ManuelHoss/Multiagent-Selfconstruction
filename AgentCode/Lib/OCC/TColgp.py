# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _TColgp.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_TColgp', [dirname(__file__)])
        except ImportError:
            import _TColgp
            return _TColgp
        if fp is not None:
            try:
                _mod = imp.load_module('_TColgp', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _TColgp = swig_import_helper()
    del swig_import_helper
else:
    import _TColgp
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TColgp.delete_SwigPyIterator
    def __iter__(self): return self
SwigPyIterator.value = new_instancemethod(_TColgp.SwigPyIterator_value,None,SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_TColgp.SwigPyIterator_incr,None,SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_TColgp.SwigPyIterator_decr,None,SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_TColgp.SwigPyIterator_distance,None,SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_TColgp.SwigPyIterator_equal,None,SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_TColgp.SwigPyIterator_copy,None,SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_TColgp.SwigPyIterator_next,None,SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_TColgp.SwigPyIterator___next__,None,SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_TColgp.SwigPyIterator_previous,None,SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_TColgp.SwigPyIterator_advance,None,SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_TColgp.SwigPyIterator___eq__,None,SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_TColgp.SwigPyIterator___ne__,None,SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_TColgp.SwigPyIterator___iadd__,None,SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_TColgp.SwigPyIterator___isub__,None,SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_TColgp.SwigPyIterator___add__,None,SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_TColgp.SwigPyIterator___sub__,None,SwigPyIterator)
SwigPyIterator_swigregister = _TColgp.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

import OCC.Standard
import OCC.gp
import OCC.TCollection
import OCC.MMgt
class TColgp_Array1OfCirc2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: gp_Circ2d
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColgp.TColgp_Array1OfCirc2d_swiginit(self,_TColgp.new_TColgp_Array1OfCirc2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Circ2d
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfCirc2d_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfCirc2d_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_Array1OfCirc2d_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfCirc2d
        :rtype: TColgp_Array1OfCirc2d

        """
        return _TColgp.TColgp_Array1OfCirc2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfCirc2d
        :rtype: TColgp_Array1OfCirc2d

        """
        return _TColgp.TColgp_Array1OfCirc2d_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfCirc2d_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfCirc2d_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfCirc2d_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Circ2d
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfCirc2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Circ2d

        """
        return _TColgp.TColgp_Array1OfCirc2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Circ2d

        """
        return _TColgp.TColgp_Array1OfCirc2d_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array1OfCirc2d.Init = new_instancemethod(_TColgp.TColgp_Array1OfCirc2d_Init,None,TColgp_Array1OfCirc2d)
TColgp_Array1OfCirc2d.Destroy = new_instancemethod(_TColgp.TColgp_Array1OfCirc2d_Destroy,None,TColgp_Array1OfCirc2d)
TColgp_Array1OfCirc2d.IsAllocated = new_instancemethod(_TColgp.TColgp_Array1OfCirc2d_IsAllocated,None,TColgp_Array1OfCirc2d)
TColgp_Array1OfCirc2d.Assign = new_instancemethod(_TColgp.TColgp_Array1OfCirc2d_Assign,None,TColgp_Array1OfCirc2d)
TColgp_Array1OfCirc2d.Set = new_instancemethod(_TColgp.TColgp_Array1OfCirc2d_Set,None,TColgp_Array1OfCirc2d)
TColgp_Array1OfCirc2d.Length = new_instancemethod(_TColgp.TColgp_Array1OfCirc2d_Length,None,TColgp_Array1OfCirc2d)
TColgp_Array1OfCirc2d.Lower = new_instancemethod(_TColgp.TColgp_Array1OfCirc2d_Lower,None,TColgp_Array1OfCirc2d)
TColgp_Array1OfCirc2d.Upper = new_instancemethod(_TColgp.TColgp_Array1OfCirc2d_Upper,None,TColgp_Array1OfCirc2d)
TColgp_Array1OfCirc2d.SetValue = new_instancemethod(_TColgp.TColgp_Array1OfCirc2d_SetValue,None,TColgp_Array1OfCirc2d)
TColgp_Array1OfCirc2d.Value = new_instancemethod(_TColgp.TColgp_Array1OfCirc2d_Value,None,TColgp_Array1OfCirc2d)
TColgp_Array1OfCirc2d.ChangeValue = new_instancemethod(_TColgp.TColgp_Array1OfCirc2d_ChangeValue,None,TColgp_Array1OfCirc2d)
TColgp_Array1OfCirc2d._kill_pointed = new_instancemethod(_TColgp.TColgp_Array1OfCirc2d__kill_pointed,None,TColgp_Array1OfCirc2d)
TColgp_Array1OfCirc2d_swigregister = _TColgp.TColgp_Array1OfCirc2d_swigregister
TColgp_Array1OfCirc2d_swigregister(TColgp_Array1OfCirc2d)

class TColgp_Array1OfDir(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: gp_Dir
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColgp.TColgp_Array1OfDir_swiginit(self,_TColgp.new_TColgp_Array1OfDir(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Dir
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfDir_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfDir_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_Array1OfDir_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfDir
        :rtype: TColgp_Array1OfDir

        """
        return _TColgp.TColgp_Array1OfDir_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfDir
        :rtype: TColgp_Array1OfDir

        """
        return _TColgp.TColgp_Array1OfDir_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfDir_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfDir_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfDir_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Dir
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfDir_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_Array1OfDir_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_Array1OfDir_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array1OfDir.Init = new_instancemethod(_TColgp.TColgp_Array1OfDir_Init,None,TColgp_Array1OfDir)
TColgp_Array1OfDir.Destroy = new_instancemethod(_TColgp.TColgp_Array1OfDir_Destroy,None,TColgp_Array1OfDir)
TColgp_Array1OfDir.IsAllocated = new_instancemethod(_TColgp.TColgp_Array1OfDir_IsAllocated,None,TColgp_Array1OfDir)
TColgp_Array1OfDir.Assign = new_instancemethod(_TColgp.TColgp_Array1OfDir_Assign,None,TColgp_Array1OfDir)
TColgp_Array1OfDir.Set = new_instancemethod(_TColgp.TColgp_Array1OfDir_Set,None,TColgp_Array1OfDir)
TColgp_Array1OfDir.Length = new_instancemethod(_TColgp.TColgp_Array1OfDir_Length,None,TColgp_Array1OfDir)
TColgp_Array1OfDir.Lower = new_instancemethod(_TColgp.TColgp_Array1OfDir_Lower,None,TColgp_Array1OfDir)
TColgp_Array1OfDir.Upper = new_instancemethod(_TColgp.TColgp_Array1OfDir_Upper,None,TColgp_Array1OfDir)
TColgp_Array1OfDir.SetValue = new_instancemethod(_TColgp.TColgp_Array1OfDir_SetValue,None,TColgp_Array1OfDir)
TColgp_Array1OfDir.Value = new_instancemethod(_TColgp.TColgp_Array1OfDir_Value,None,TColgp_Array1OfDir)
TColgp_Array1OfDir.ChangeValue = new_instancemethod(_TColgp.TColgp_Array1OfDir_ChangeValue,None,TColgp_Array1OfDir)
TColgp_Array1OfDir._kill_pointed = new_instancemethod(_TColgp.TColgp_Array1OfDir__kill_pointed,None,TColgp_Array1OfDir)
TColgp_Array1OfDir_swigregister = _TColgp.TColgp_Array1OfDir_swigregister
TColgp_Array1OfDir_swigregister(TColgp_Array1OfDir)

class TColgp_Array1OfDir2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: gp_Dir2d
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColgp.TColgp_Array1OfDir2d_swiginit(self,_TColgp.new_TColgp_Array1OfDir2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Dir2d
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfDir2d_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfDir2d_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_Array1OfDir2d_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfDir2d
        :rtype: TColgp_Array1OfDir2d

        """
        return _TColgp.TColgp_Array1OfDir2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfDir2d
        :rtype: TColgp_Array1OfDir2d

        """
        return _TColgp.TColgp_Array1OfDir2d_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfDir2d_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfDir2d_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfDir2d_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Dir2d
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfDir2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_Array1OfDir2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_Array1OfDir2d_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array1OfDir2d.Init = new_instancemethod(_TColgp.TColgp_Array1OfDir2d_Init,None,TColgp_Array1OfDir2d)
TColgp_Array1OfDir2d.Destroy = new_instancemethod(_TColgp.TColgp_Array1OfDir2d_Destroy,None,TColgp_Array1OfDir2d)
TColgp_Array1OfDir2d.IsAllocated = new_instancemethod(_TColgp.TColgp_Array1OfDir2d_IsAllocated,None,TColgp_Array1OfDir2d)
TColgp_Array1OfDir2d.Assign = new_instancemethod(_TColgp.TColgp_Array1OfDir2d_Assign,None,TColgp_Array1OfDir2d)
TColgp_Array1OfDir2d.Set = new_instancemethod(_TColgp.TColgp_Array1OfDir2d_Set,None,TColgp_Array1OfDir2d)
TColgp_Array1OfDir2d.Length = new_instancemethod(_TColgp.TColgp_Array1OfDir2d_Length,None,TColgp_Array1OfDir2d)
TColgp_Array1OfDir2d.Lower = new_instancemethod(_TColgp.TColgp_Array1OfDir2d_Lower,None,TColgp_Array1OfDir2d)
TColgp_Array1OfDir2d.Upper = new_instancemethod(_TColgp.TColgp_Array1OfDir2d_Upper,None,TColgp_Array1OfDir2d)
TColgp_Array1OfDir2d.SetValue = new_instancemethod(_TColgp.TColgp_Array1OfDir2d_SetValue,None,TColgp_Array1OfDir2d)
TColgp_Array1OfDir2d.Value = new_instancemethod(_TColgp.TColgp_Array1OfDir2d_Value,None,TColgp_Array1OfDir2d)
TColgp_Array1OfDir2d.ChangeValue = new_instancemethod(_TColgp.TColgp_Array1OfDir2d_ChangeValue,None,TColgp_Array1OfDir2d)
TColgp_Array1OfDir2d._kill_pointed = new_instancemethod(_TColgp.TColgp_Array1OfDir2d__kill_pointed,None,TColgp_Array1OfDir2d)
TColgp_Array1OfDir2d_swigregister = _TColgp.TColgp_Array1OfDir2d_swigregister
TColgp_Array1OfDir2d_swigregister(TColgp_Array1OfDir2d)

class TColgp_Array1OfLin2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: gp_Lin2d
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColgp.TColgp_Array1OfLin2d_swiginit(self,_TColgp.new_TColgp_Array1OfLin2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Lin2d
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfLin2d_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfLin2d_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_Array1OfLin2d_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfLin2d
        :rtype: TColgp_Array1OfLin2d

        """
        return _TColgp.TColgp_Array1OfLin2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfLin2d
        :rtype: TColgp_Array1OfLin2d

        """
        return _TColgp.TColgp_Array1OfLin2d_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfLin2d_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfLin2d_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfLin2d_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Lin2d
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfLin2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Lin2d

        """
        return _TColgp.TColgp_Array1OfLin2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Lin2d

        """
        return _TColgp.TColgp_Array1OfLin2d_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array1OfLin2d.Init = new_instancemethod(_TColgp.TColgp_Array1OfLin2d_Init,None,TColgp_Array1OfLin2d)
TColgp_Array1OfLin2d.Destroy = new_instancemethod(_TColgp.TColgp_Array1OfLin2d_Destroy,None,TColgp_Array1OfLin2d)
TColgp_Array1OfLin2d.IsAllocated = new_instancemethod(_TColgp.TColgp_Array1OfLin2d_IsAllocated,None,TColgp_Array1OfLin2d)
TColgp_Array1OfLin2d.Assign = new_instancemethod(_TColgp.TColgp_Array1OfLin2d_Assign,None,TColgp_Array1OfLin2d)
TColgp_Array1OfLin2d.Set = new_instancemethod(_TColgp.TColgp_Array1OfLin2d_Set,None,TColgp_Array1OfLin2d)
TColgp_Array1OfLin2d.Length = new_instancemethod(_TColgp.TColgp_Array1OfLin2d_Length,None,TColgp_Array1OfLin2d)
TColgp_Array1OfLin2d.Lower = new_instancemethod(_TColgp.TColgp_Array1OfLin2d_Lower,None,TColgp_Array1OfLin2d)
TColgp_Array1OfLin2d.Upper = new_instancemethod(_TColgp.TColgp_Array1OfLin2d_Upper,None,TColgp_Array1OfLin2d)
TColgp_Array1OfLin2d.SetValue = new_instancemethod(_TColgp.TColgp_Array1OfLin2d_SetValue,None,TColgp_Array1OfLin2d)
TColgp_Array1OfLin2d.Value = new_instancemethod(_TColgp.TColgp_Array1OfLin2d_Value,None,TColgp_Array1OfLin2d)
TColgp_Array1OfLin2d.ChangeValue = new_instancemethod(_TColgp.TColgp_Array1OfLin2d_ChangeValue,None,TColgp_Array1OfLin2d)
TColgp_Array1OfLin2d._kill_pointed = new_instancemethod(_TColgp.TColgp_Array1OfLin2d__kill_pointed,None,TColgp_Array1OfLin2d)
TColgp_Array1OfLin2d_swigregister = _TColgp.TColgp_Array1OfLin2d_swigregister
TColgp_Array1OfLin2d_swigregister(TColgp_Array1OfLin2d)

class TColgp_Array1OfPnt(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: gp_Pnt
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColgp.TColgp_Array1OfPnt_swiginit(self,_TColgp.new_TColgp_Array1OfPnt(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Pnt
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfPnt_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfPnt_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_Array1OfPnt_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfPnt
        :rtype: TColgp_Array1OfPnt

        """
        return _TColgp.TColgp_Array1OfPnt_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfPnt
        :rtype: TColgp_Array1OfPnt

        """
        return _TColgp.TColgp_Array1OfPnt_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfPnt_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfPnt_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfPnt_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Pnt
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfPnt_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_Array1OfPnt_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_Array1OfPnt_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array1OfPnt.Init = new_instancemethod(_TColgp.TColgp_Array1OfPnt_Init,None,TColgp_Array1OfPnt)
TColgp_Array1OfPnt.Destroy = new_instancemethod(_TColgp.TColgp_Array1OfPnt_Destroy,None,TColgp_Array1OfPnt)
TColgp_Array1OfPnt.IsAllocated = new_instancemethod(_TColgp.TColgp_Array1OfPnt_IsAllocated,None,TColgp_Array1OfPnt)
TColgp_Array1OfPnt.Assign = new_instancemethod(_TColgp.TColgp_Array1OfPnt_Assign,None,TColgp_Array1OfPnt)
TColgp_Array1OfPnt.Set = new_instancemethod(_TColgp.TColgp_Array1OfPnt_Set,None,TColgp_Array1OfPnt)
TColgp_Array1OfPnt.Length = new_instancemethod(_TColgp.TColgp_Array1OfPnt_Length,None,TColgp_Array1OfPnt)
TColgp_Array1OfPnt.Lower = new_instancemethod(_TColgp.TColgp_Array1OfPnt_Lower,None,TColgp_Array1OfPnt)
TColgp_Array1OfPnt.Upper = new_instancemethod(_TColgp.TColgp_Array1OfPnt_Upper,None,TColgp_Array1OfPnt)
TColgp_Array1OfPnt.SetValue = new_instancemethod(_TColgp.TColgp_Array1OfPnt_SetValue,None,TColgp_Array1OfPnt)
TColgp_Array1OfPnt.Value = new_instancemethod(_TColgp.TColgp_Array1OfPnt_Value,None,TColgp_Array1OfPnt)
TColgp_Array1OfPnt.ChangeValue = new_instancemethod(_TColgp.TColgp_Array1OfPnt_ChangeValue,None,TColgp_Array1OfPnt)
TColgp_Array1OfPnt._kill_pointed = new_instancemethod(_TColgp.TColgp_Array1OfPnt__kill_pointed,None,TColgp_Array1OfPnt)
TColgp_Array1OfPnt_swigregister = _TColgp.TColgp_Array1OfPnt_swigregister
TColgp_Array1OfPnt_swigregister(TColgp_Array1OfPnt)

class TColgp_Array1OfPnt2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: gp_Pnt2d
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColgp.TColgp_Array1OfPnt2d_swiginit(self,_TColgp.new_TColgp_Array1OfPnt2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Pnt2d
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfPnt2d_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfPnt2d_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_Array1OfPnt2d_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfPnt2d
        :rtype: TColgp_Array1OfPnt2d

        """
        return _TColgp.TColgp_Array1OfPnt2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfPnt2d
        :rtype: TColgp_Array1OfPnt2d

        """
        return _TColgp.TColgp_Array1OfPnt2d_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfPnt2d_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfPnt2d_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfPnt2d_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Pnt2d
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfPnt2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_Array1OfPnt2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_Array1OfPnt2d_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array1OfPnt2d.Init = new_instancemethod(_TColgp.TColgp_Array1OfPnt2d_Init,None,TColgp_Array1OfPnt2d)
TColgp_Array1OfPnt2d.Destroy = new_instancemethod(_TColgp.TColgp_Array1OfPnt2d_Destroy,None,TColgp_Array1OfPnt2d)
TColgp_Array1OfPnt2d.IsAllocated = new_instancemethod(_TColgp.TColgp_Array1OfPnt2d_IsAllocated,None,TColgp_Array1OfPnt2d)
TColgp_Array1OfPnt2d.Assign = new_instancemethod(_TColgp.TColgp_Array1OfPnt2d_Assign,None,TColgp_Array1OfPnt2d)
TColgp_Array1OfPnt2d.Set = new_instancemethod(_TColgp.TColgp_Array1OfPnt2d_Set,None,TColgp_Array1OfPnt2d)
TColgp_Array1OfPnt2d.Length = new_instancemethod(_TColgp.TColgp_Array1OfPnt2d_Length,None,TColgp_Array1OfPnt2d)
TColgp_Array1OfPnt2d.Lower = new_instancemethod(_TColgp.TColgp_Array1OfPnt2d_Lower,None,TColgp_Array1OfPnt2d)
TColgp_Array1OfPnt2d.Upper = new_instancemethod(_TColgp.TColgp_Array1OfPnt2d_Upper,None,TColgp_Array1OfPnt2d)
TColgp_Array1OfPnt2d.SetValue = new_instancemethod(_TColgp.TColgp_Array1OfPnt2d_SetValue,None,TColgp_Array1OfPnt2d)
TColgp_Array1OfPnt2d.Value = new_instancemethod(_TColgp.TColgp_Array1OfPnt2d_Value,None,TColgp_Array1OfPnt2d)
TColgp_Array1OfPnt2d.ChangeValue = new_instancemethod(_TColgp.TColgp_Array1OfPnt2d_ChangeValue,None,TColgp_Array1OfPnt2d)
TColgp_Array1OfPnt2d._kill_pointed = new_instancemethod(_TColgp.TColgp_Array1OfPnt2d__kill_pointed,None,TColgp_Array1OfPnt2d)
TColgp_Array1OfPnt2d_swigregister = _TColgp.TColgp_Array1OfPnt2d_swigregister
TColgp_Array1OfPnt2d_swigregister(TColgp_Array1OfPnt2d)

class TColgp_Array1OfVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: gp_Vec
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColgp.TColgp_Array1OfVec_swiginit(self,_TColgp.new_TColgp_Array1OfVec(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Vec
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfVec_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfVec_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_Array1OfVec_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfVec
        :rtype: TColgp_Array1OfVec

        """
        return _TColgp.TColgp_Array1OfVec_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfVec
        :rtype: TColgp_Array1OfVec

        """
        return _TColgp.TColgp_Array1OfVec_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfVec_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfVec_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfVec_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Vec
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfVec_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_Array1OfVec_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_Array1OfVec_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array1OfVec.Init = new_instancemethod(_TColgp.TColgp_Array1OfVec_Init,None,TColgp_Array1OfVec)
TColgp_Array1OfVec.Destroy = new_instancemethod(_TColgp.TColgp_Array1OfVec_Destroy,None,TColgp_Array1OfVec)
TColgp_Array1OfVec.IsAllocated = new_instancemethod(_TColgp.TColgp_Array1OfVec_IsAllocated,None,TColgp_Array1OfVec)
TColgp_Array1OfVec.Assign = new_instancemethod(_TColgp.TColgp_Array1OfVec_Assign,None,TColgp_Array1OfVec)
TColgp_Array1OfVec.Set = new_instancemethod(_TColgp.TColgp_Array1OfVec_Set,None,TColgp_Array1OfVec)
TColgp_Array1OfVec.Length = new_instancemethod(_TColgp.TColgp_Array1OfVec_Length,None,TColgp_Array1OfVec)
TColgp_Array1OfVec.Lower = new_instancemethod(_TColgp.TColgp_Array1OfVec_Lower,None,TColgp_Array1OfVec)
TColgp_Array1OfVec.Upper = new_instancemethod(_TColgp.TColgp_Array1OfVec_Upper,None,TColgp_Array1OfVec)
TColgp_Array1OfVec.SetValue = new_instancemethod(_TColgp.TColgp_Array1OfVec_SetValue,None,TColgp_Array1OfVec)
TColgp_Array1OfVec.Value = new_instancemethod(_TColgp.TColgp_Array1OfVec_Value,None,TColgp_Array1OfVec)
TColgp_Array1OfVec.ChangeValue = new_instancemethod(_TColgp.TColgp_Array1OfVec_ChangeValue,None,TColgp_Array1OfVec)
TColgp_Array1OfVec._kill_pointed = new_instancemethod(_TColgp.TColgp_Array1OfVec__kill_pointed,None,TColgp_Array1OfVec)
TColgp_Array1OfVec_swigregister = _TColgp.TColgp_Array1OfVec_swigregister
TColgp_Array1OfVec_swigregister(TColgp_Array1OfVec)

class TColgp_Array1OfVec2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: gp_Vec2d
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColgp.TColgp_Array1OfVec2d_swiginit(self,_TColgp.new_TColgp_Array1OfVec2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Vec2d
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfVec2d_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfVec2d_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_Array1OfVec2d_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfVec2d
        :rtype: TColgp_Array1OfVec2d

        """
        return _TColgp.TColgp_Array1OfVec2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfVec2d
        :rtype: TColgp_Array1OfVec2d

        """
        return _TColgp.TColgp_Array1OfVec2d_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfVec2d_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfVec2d_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfVec2d_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Vec2d
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfVec2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_Array1OfVec2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_Array1OfVec2d_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array1OfVec2d.Init = new_instancemethod(_TColgp.TColgp_Array1OfVec2d_Init,None,TColgp_Array1OfVec2d)
TColgp_Array1OfVec2d.Destroy = new_instancemethod(_TColgp.TColgp_Array1OfVec2d_Destroy,None,TColgp_Array1OfVec2d)
TColgp_Array1OfVec2d.IsAllocated = new_instancemethod(_TColgp.TColgp_Array1OfVec2d_IsAllocated,None,TColgp_Array1OfVec2d)
TColgp_Array1OfVec2d.Assign = new_instancemethod(_TColgp.TColgp_Array1OfVec2d_Assign,None,TColgp_Array1OfVec2d)
TColgp_Array1OfVec2d.Set = new_instancemethod(_TColgp.TColgp_Array1OfVec2d_Set,None,TColgp_Array1OfVec2d)
TColgp_Array1OfVec2d.Length = new_instancemethod(_TColgp.TColgp_Array1OfVec2d_Length,None,TColgp_Array1OfVec2d)
TColgp_Array1OfVec2d.Lower = new_instancemethod(_TColgp.TColgp_Array1OfVec2d_Lower,None,TColgp_Array1OfVec2d)
TColgp_Array1OfVec2d.Upper = new_instancemethod(_TColgp.TColgp_Array1OfVec2d_Upper,None,TColgp_Array1OfVec2d)
TColgp_Array1OfVec2d.SetValue = new_instancemethod(_TColgp.TColgp_Array1OfVec2d_SetValue,None,TColgp_Array1OfVec2d)
TColgp_Array1OfVec2d.Value = new_instancemethod(_TColgp.TColgp_Array1OfVec2d_Value,None,TColgp_Array1OfVec2d)
TColgp_Array1OfVec2d.ChangeValue = new_instancemethod(_TColgp.TColgp_Array1OfVec2d_ChangeValue,None,TColgp_Array1OfVec2d)
TColgp_Array1OfVec2d._kill_pointed = new_instancemethod(_TColgp.TColgp_Array1OfVec2d__kill_pointed,None,TColgp_Array1OfVec2d)
TColgp_Array1OfVec2d_swigregister = _TColgp.TColgp_Array1OfVec2d_swigregister
TColgp_Array1OfVec2d_swigregister(TColgp_Array1OfVec2d)

class TColgp_Array1OfXY(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: gp_XY
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColgp.TColgp_Array1OfXY_swiginit(self,_TColgp.new_TColgp_Array1OfXY(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_XY
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfXY_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfXY_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_Array1OfXY_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfXY
        :rtype: TColgp_Array1OfXY

        """
        return _TColgp.TColgp_Array1OfXY_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfXY
        :rtype: TColgp_Array1OfXY

        """
        return _TColgp.TColgp_Array1OfXY_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfXY_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfXY_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfXY_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_XY
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfXY_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_XY

        """
        return _TColgp.TColgp_Array1OfXY_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_XY

        """
        return _TColgp.TColgp_Array1OfXY_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array1OfXY.Init = new_instancemethod(_TColgp.TColgp_Array1OfXY_Init,None,TColgp_Array1OfXY)
TColgp_Array1OfXY.Destroy = new_instancemethod(_TColgp.TColgp_Array1OfXY_Destroy,None,TColgp_Array1OfXY)
TColgp_Array1OfXY.IsAllocated = new_instancemethod(_TColgp.TColgp_Array1OfXY_IsAllocated,None,TColgp_Array1OfXY)
TColgp_Array1OfXY.Assign = new_instancemethod(_TColgp.TColgp_Array1OfXY_Assign,None,TColgp_Array1OfXY)
TColgp_Array1OfXY.Set = new_instancemethod(_TColgp.TColgp_Array1OfXY_Set,None,TColgp_Array1OfXY)
TColgp_Array1OfXY.Length = new_instancemethod(_TColgp.TColgp_Array1OfXY_Length,None,TColgp_Array1OfXY)
TColgp_Array1OfXY.Lower = new_instancemethod(_TColgp.TColgp_Array1OfXY_Lower,None,TColgp_Array1OfXY)
TColgp_Array1OfXY.Upper = new_instancemethod(_TColgp.TColgp_Array1OfXY_Upper,None,TColgp_Array1OfXY)
TColgp_Array1OfXY.SetValue = new_instancemethod(_TColgp.TColgp_Array1OfXY_SetValue,None,TColgp_Array1OfXY)
TColgp_Array1OfXY.Value = new_instancemethod(_TColgp.TColgp_Array1OfXY_Value,None,TColgp_Array1OfXY)
TColgp_Array1OfXY.ChangeValue = new_instancemethod(_TColgp.TColgp_Array1OfXY_ChangeValue,None,TColgp_Array1OfXY)
TColgp_Array1OfXY._kill_pointed = new_instancemethod(_TColgp.TColgp_Array1OfXY__kill_pointed,None,TColgp_Array1OfXY)
TColgp_Array1OfXY_swigregister = _TColgp.TColgp_Array1OfXY_swigregister
TColgp_Array1OfXY_swigregister(TColgp_Array1OfXY)

class TColgp_Array1OfXYZ(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: gp_XYZ
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColgp.TColgp_Array1OfXYZ_swiginit(self,_TColgp.new_TColgp_Array1OfXYZ(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_XYZ
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfXYZ_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfXYZ_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_Array1OfXYZ_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfXYZ
        :rtype: TColgp_Array1OfXYZ

        """
        return _TColgp.TColgp_Array1OfXYZ_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array1OfXYZ
        :rtype: TColgp_Array1OfXYZ

        """
        return _TColgp.TColgp_Array1OfXYZ_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfXYZ_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfXYZ_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array1OfXYZ_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_XYZ
        :rtype: None

        """
        return _TColgp.TColgp_Array1OfXYZ_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_Array1OfXYZ_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_Array1OfXYZ_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array1OfXYZ.Init = new_instancemethod(_TColgp.TColgp_Array1OfXYZ_Init,None,TColgp_Array1OfXYZ)
TColgp_Array1OfXYZ.Destroy = new_instancemethod(_TColgp.TColgp_Array1OfXYZ_Destroy,None,TColgp_Array1OfXYZ)
TColgp_Array1OfXYZ.IsAllocated = new_instancemethod(_TColgp.TColgp_Array1OfXYZ_IsAllocated,None,TColgp_Array1OfXYZ)
TColgp_Array1OfXYZ.Assign = new_instancemethod(_TColgp.TColgp_Array1OfXYZ_Assign,None,TColgp_Array1OfXYZ)
TColgp_Array1OfXYZ.Set = new_instancemethod(_TColgp.TColgp_Array1OfXYZ_Set,None,TColgp_Array1OfXYZ)
TColgp_Array1OfXYZ.Length = new_instancemethod(_TColgp.TColgp_Array1OfXYZ_Length,None,TColgp_Array1OfXYZ)
TColgp_Array1OfXYZ.Lower = new_instancemethod(_TColgp.TColgp_Array1OfXYZ_Lower,None,TColgp_Array1OfXYZ)
TColgp_Array1OfXYZ.Upper = new_instancemethod(_TColgp.TColgp_Array1OfXYZ_Upper,None,TColgp_Array1OfXYZ)
TColgp_Array1OfXYZ.SetValue = new_instancemethod(_TColgp.TColgp_Array1OfXYZ_SetValue,None,TColgp_Array1OfXYZ)
TColgp_Array1OfXYZ.Value = new_instancemethod(_TColgp.TColgp_Array1OfXYZ_Value,None,TColgp_Array1OfXYZ)
TColgp_Array1OfXYZ.ChangeValue = new_instancemethod(_TColgp.TColgp_Array1OfXYZ_ChangeValue,None,TColgp_Array1OfXYZ)
TColgp_Array1OfXYZ._kill_pointed = new_instancemethod(_TColgp.TColgp_Array1OfXYZ__kill_pointed,None,TColgp_Array1OfXYZ)
TColgp_Array1OfXYZ_swigregister = _TColgp.TColgp_Array1OfXYZ_swigregister
TColgp_Array1OfXYZ_swigregister(TColgp_Array1OfXYZ)

class TColgp_Array2OfCirc2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: gp_Circ2d
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColgp.TColgp_Array2OfCirc2d_swiginit(self,_TColgp.new_TColgp_Array2OfCirc2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Circ2d
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfCirc2d_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfCirc2d_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfCirc2d
        :rtype: TColgp_Array2OfCirc2d

        """
        return _TColgp.TColgp_Array2OfCirc2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfCirc2d
        :rtype: TColgp_Array2OfCirc2d

        """
        return _TColgp.TColgp_Array2OfCirc2d_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfCirc2d_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfCirc2d_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfCirc2d_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfCirc2d_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfCirc2d_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfCirc2d_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Circ2d
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfCirc2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Circ2d

        """
        return _TColgp.TColgp_Array2OfCirc2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Circ2d

        """
        return _TColgp.TColgp_Array2OfCirc2d_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array2OfCirc2d.Init = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_Init,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d.Destroy = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_Destroy,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d.Assign = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_Assign,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d.Set = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_Set,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d.ColLength = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_ColLength,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d.RowLength = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_RowLength,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d.LowerCol = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_LowerCol,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d.LowerRow = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_LowerRow,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d.UpperCol = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_UpperCol,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d.UpperRow = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_UpperRow,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d.SetValue = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_SetValue,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d.Value = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_Value,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d.ChangeValue = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d_ChangeValue,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d._kill_pointed = new_instancemethod(_TColgp.TColgp_Array2OfCirc2d__kill_pointed,None,TColgp_Array2OfCirc2d)
TColgp_Array2OfCirc2d_swigregister = _TColgp.TColgp_Array2OfCirc2d_swigregister
TColgp_Array2OfCirc2d_swigregister(TColgp_Array2OfCirc2d)

class TColgp_Array2OfDir(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: gp_Dir
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColgp.TColgp_Array2OfDir_swiginit(self,_TColgp.new_TColgp_Array2OfDir(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Dir
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfDir_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfDir_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfDir
        :rtype: TColgp_Array2OfDir

        """
        return _TColgp.TColgp_Array2OfDir_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfDir
        :rtype: TColgp_Array2OfDir

        """
        return _TColgp.TColgp_Array2OfDir_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfDir_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfDir_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfDir_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfDir_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfDir_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfDir_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Dir
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfDir_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_Array2OfDir_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_Array2OfDir_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array2OfDir.Init = new_instancemethod(_TColgp.TColgp_Array2OfDir_Init,None,TColgp_Array2OfDir)
TColgp_Array2OfDir.Destroy = new_instancemethod(_TColgp.TColgp_Array2OfDir_Destroy,None,TColgp_Array2OfDir)
TColgp_Array2OfDir.Assign = new_instancemethod(_TColgp.TColgp_Array2OfDir_Assign,None,TColgp_Array2OfDir)
TColgp_Array2OfDir.Set = new_instancemethod(_TColgp.TColgp_Array2OfDir_Set,None,TColgp_Array2OfDir)
TColgp_Array2OfDir.ColLength = new_instancemethod(_TColgp.TColgp_Array2OfDir_ColLength,None,TColgp_Array2OfDir)
TColgp_Array2OfDir.RowLength = new_instancemethod(_TColgp.TColgp_Array2OfDir_RowLength,None,TColgp_Array2OfDir)
TColgp_Array2OfDir.LowerCol = new_instancemethod(_TColgp.TColgp_Array2OfDir_LowerCol,None,TColgp_Array2OfDir)
TColgp_Array2OfDir.LowerRow = new_instancemethod(_TColgp.TColgp_Array2OfDir_LowerRow,None,TColgp_Array2OfDir)
TColgp_Array2OfDir.UpperCol = new_instancemethod(_TColgp.TColgp_Array2OfDir_UpperCol,None,TColgp_Array2OfDir)
TColgp_Array2OfDir.UpperRow = new_instancemethod(_TColgp.TColgp_Array2OfDir_UpperRow,None,TColgp_Array2OfDir)
TColgp_Array2OfDir.SetValue = new_instancemethod(_TColgp.TColgp_Array2OfDir_SetValue,None,TColgp_Array2OfDir)
TColgp_Array2OfDir.Value = new_instancemethod(_TColgp.TColgp_Array2OfDir_Value,None,TColgp_Array2OfDir)
TColgp_Array2OfDir.ChangeValue = new_instancemethod(_TColgp.TColgp_Array2OfDir_ChangeValue,None,TColgp_Array2OfDir)
TColgp_Array2OfDir._kill_pointed = new_instancemethod(_TColgp.TColgp_Array2OfDir__kill_pointed,None,TColgp_Array2OfDir)
TColgp_Array2OfDir_swigregister = _TColgp.TColgp_Array2OfDir_swigregister
TColgp_Array2OfDir_swigregister(TColgp_Array2OfDir)

class TColgp_Array2OfDir2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: gp_Dir2d
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColgp.TColgp_Array2OfDir2d_swiginit(self,_TColgp.new_TColgp_Array2OfDir2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Dir2d
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfDir2d_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfDir2d_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfDir2d
        :rtype: TColgp_Array2OfDir2d

        """
        return _TColgp.TColgp_Array2OfDir2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfDir2d
        :rtype: TColgp_Array2OfDir2d

        """
        return _TColgp.TColgp_Array2OfDir2d_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfDir2d_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfDir2d_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfDir2d_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfDir2d_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfDir2d_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfDir2d_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Dir2d
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfDir2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_Array2OfDir2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_Array2OfDir2d_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array2OfDir2d.Init = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_Init,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d.Destroy = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_Destroy,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d.Assign = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_Assign,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d.Set = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_Set,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d.ColLength = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_ColLength,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d.RowLength = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_RowLength,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d.LowerCol = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_LowerCol,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d.LowerRow = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_LowerRow,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d.UpperCol = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_UpperCol,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d.UpperRow = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_UpperRow,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d.SetValue = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_SetValue,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d.Value = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_Value,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d.ChangeValue = new_instancemethod(_TColgp.TColgp_Array2OfDir2d_ChangeValue,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d._kill_pointed = new_instancemethod(_TColgp.TColgp_Array2OfDir2d__kill_pointed,None,TColgp_Array2OfDir2d)
TColgp_Array2OfDir2d_swigregister = _TColgp.TColgp_Array2OfDir2d_swigregister
TColgp_Array2OfDir2d_swigregister(TColgp_Array2OfDir2d)

class TColgp_Array2OfLin2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: gp_Lin2d
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColgp.TColgp_Array2OfLin2d_swiginit(self,_TColgp.new_TColgp_Array2OfLin2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Lin2d
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfLin2d_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfLin2d_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfLin2d
        :rtype: TColgp_Array2OfLin2d

        """
        return _TColgp.TColgp_Array2OfLin2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfLin2d
        :rtype: TColgp_Array2OfLin2d

        """
        return _TColgp.TColgp_Array2OfLin2d_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfLin2d_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfLin2d_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfLin2d_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfLin2d_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfLin2d_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfLin2d_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Lin2d
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfLin2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Lin2d

        """
        return _TColgp.TColgp_Array2OfLin2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Lin2d

        """
        return _TColgp.TColgp_Array2OfLin2d_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array2OfLin2d.Init = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_Init,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d.Destroy = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_Destroy,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d.Assign = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_Assign,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d.Set = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_Set,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d.ColLength = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_ColLength,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d.RowLength = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_RowLength,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d.LowerCol = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_LowerCol,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d.LowerRow = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_LowerRow,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d.UpperCol = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_UpperCol,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d.UpperRow = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_UpperRow,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d.SetValue = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_SetValue,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d.Value = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_Value,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d.ChangeValue = new_instancemethod(_TColgp.TColgp_Array2OfLin2d_ChangeValue,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d._kill_pointed = new_instancemethod(_TColgp.TColgp_Array2OfLin2d__kill_pointed,None,TColgp_Array2OfLin2d)
TColgp_Array2OfLin2d_swigregister = _TColgp.TColgp_Array2OfLin2d_swigregister
TColgp_Array2OfLin2d_swigregister(TColgp_Array2OfLin2d)

class TColgp_Array2OfPnt(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: gp_Pnt
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColgp.TColgp_Array2OfPnt_swiginit(self,_TColgp.new_TColgp_Array2OfPnt(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Pnt
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfPnt_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfPnt_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfPnt
        :rtype: TColgp_Array2OfPnt

        """
        return _TColgp.TColgp_Array2OfPnt_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfPnt
        :rtype: TColgp_Array2OfPnt

        """
        return _TColgp.TColgp_Array2OfPnt_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfPnt_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfPnt_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfPnt_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfPnt_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfPnt_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfPnt_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Pnt
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfPnt_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_Array2OfPnt_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_Array2OfPnt_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array2OfPnt.Init = new_instancemethod(_TColgp.TColgp_Array2OfPnt_Init,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt.Destroy = new_instancemethod(_TColgp.TColgp_Array2OfPnt_Destroy,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt.Assign = new_instancemethod(_TColgp.TColgp_Array2OfPnt_Assign,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt.Set = new_instancemethod(_TColgp.TColgp_Array2OfPnt_Set,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt.ColLength = new_instancemethod(_TColgp.TColgp_Array2OfPnt_ColLength,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt.RowLength = new_instancemethod(_TColgp.TColgp_Array2OfPnt_RowLength,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt.LowerCol = new_instancemethod(_TColgp.TColgp_Array2OfPnt_LowerCol,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt.LowerRow = new_instancemethod(_TColgp.TColgp_Array2OfPnt_LowerRow,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt.UpperCol = new_instancemethod(_TColgp.TColgp_Array2OfPnt_UpperCol,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt.UpperRow = new_instancemethod(_TColgp.TColgp_Array2OfPnt_UpperRow,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt.SetValue = new_instancemethod(_TColgp.TColgp_Array2OfPnt_SetValue,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt.Value = new_instancemethod(_TColgp.TColgp_Array2OfPnt_Value,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt.ChangeValue = new_instancemethod(_TColgp.TColgp_Array2OfPnt_ChangeValue,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt._kill_pointed = new_instancemethod(_TColgp.TColgp_Array2OfPnt__kill_pointed,None,TColgp_Array2OfPnt)
TColgp_Array2OfPnt_swigregister = _TColgp.TColgp_Array2OfPnt_swigregister
TColgp_Array2OfPnt_swigregister(TColgp_Array2OfPnt)

class TColgp_Array2OfPnt2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: gp_Pnt2d
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColgp.TColgp_Array2OfPnt2d_swiginit(self,_TColgp.new_TColgp_Array2OfPnt2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Pnt2d
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfPnt2d_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfPnt2d_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfPnt2d
        :rtype: TColgp_Array2OfPnt2d

        """
        return _TColgp.TColgp_Array2OfPnt2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfPnt2d
        :rtype: TColgp_Array2OfPnt2d

        """
        return _TColgp.TColgp_Array2OfPnt2d_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfPnt2d_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfPnt2d_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfPnt2d_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfPnt2d_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfPnt2d_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfPnt2d_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Pnt2d
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfPnt2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_Array2OfPnt2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_Array2OfPnt2d_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array2OfPnt2d.Init = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_Init,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d.Destroy = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_Destroy,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d.Assign = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_Assign,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d.Set = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_Set,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d.ColLength = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_ColLength,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d.RowLength = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_RowLength,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d.LowerCol = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_LowerCol,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d.LowerRow = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_LowerRow,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d.UpperCol = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_UpperCol,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d.UpperRow = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_UpperRow,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d.SetValue = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_SetValue,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d.Value = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_Value,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d.ChangeValue = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d_ChangeValue,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d._kill_pointed = new_instancemethod(_TColgp.TColgp_Array2OfPnt2d__kill_pointed,None,TColgp_Array2OfPnt2d)
TColgp_Array2OfPnt2d_swigregister = _TColgp.TColgp_Array2OfPnt2d_swigregister
TColgp_Array2OfPnt2d_swigregister(TColgp_Array2OfPnt2d)

class TColgp_Array2OfVec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: gp_Vec
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColgp.TColgp_Array2OfVec_swiginit(self,_TColgp.new_TColgp_Array2OfVec(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Vec
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfVec_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfVec_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfVec
        :rtype: TColgp_Array2OfVec

        """
        return _TColgp.TColgp_Array2OfVec_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfVec
        :rtype: TColgp_Array2OfVec

        """
        return _TColgp.TColgp_Array2OfVec_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfVec_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfVec_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfVec_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfVec_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfVec_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfVec_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Vec
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfVec_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_Array2OfVec_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_Array2OfVec_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array2OfVec.Init = new_instancemethod(_TColgp.TColgp_Array2OfVec_Init,None,TColgp_Array2OfVec)
TColgp_Array2OfVec.Destroy = new_instancemethod(_TColgp.TColgp_Array2OfVec_Destroy,None,TColgp_Array2OfVec)
TColgp_Array2OfVec.Assign = new_instancemethod(_TColgp.TColgp_Array2OfVec_Assign,None,TColgp_Array2OfVec)
TColgp_Array2OfVec.Set = new_instancemethod(_TColgp.TColgp_Array2OfVec_Set,None,TColgp_Array2OfVec)
TColgp_Array2OfVec.ColLength = new_instancemethod(_TColgp.TColgp_Array2OfVec_ColLength,None,TColgp_Array2OfVec)
TColgp_Array2OfVec.RowLength = new_instancemethod(_TColgp.TColgp_Array2OfVec_RowLength,None,TColgp_Array2OfVec)
TColgp_Array2OfVec.LowerCol = new_instancemethod(_TColgp.TColgp_Array2OfVec_LowerCol,None,TColgp_Array2OfVec)
TColgp_Array2OfVec.LowerRow = new_instancemethod(_TColgp.TColgp_Array2OfVec_LowerRow,None,TColgp_Array2OfVec)
TColgp_Array2OfVec.UpperCol = new_instancemethod(_TColgp.TColgp_Array2OfVec_UpperCol,None,TColgp_Array2OfVec)
TColgp_Array2OfVec.UpperRow = new_instancemethod(_TColgp.TColgp_Array2OfVec_UpperRow,None,TColgp_Array2OfVec)
TColgp_Array2OfVec.SetValue = new_instancemethod(_TColgp.TColgp_Array2OfVec_SetValue,None,TColgp_Array2OfVec)
TColgp_Array2OfVec.Value = new_instancemethod(_TColgp.TColgp_Array2OfVec_Value,None,TColgp_Array2OfVec)
TColgp_Array2OfVec.ChangeValue = new_instancemethod(_TColgp.TColgp_Array2OfVec_ChangeValue,None,TColgp_Array2OfVec)
TColgp_Array2OfVec._kill_pointed = new_instancemethod(_TColgp.TColgp_Array2OfVec__kill_pointed,None,TColgp_Array2OfVec)
TColgp_Array2OfVec_swigregister = _TColgp.TColgp_Array2OfVec_swigregister
TColgp_Array2OfVec_swigregister(TColgp_Array2OfVec)

class TColgp_Array2OfVec2d(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: gp_Vec2d
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColgp.TColgp_Array2OfVec2d_swiginit(self,_TColgp.new_TColgp_Array2OfVec2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Vec2d
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfVec2d_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfVec2d_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfVec2d
        :rtype: TColgp_Array2OfVec2d

        """
        return _TColgp.TColgp_Array2OfVec2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfVec2d
        :rtype: TColgp_Array2OfVec2d

        """
        return _TColgp.TColgp_Array2OfVec2d_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfVec2d_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfVec2d_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfVec2d_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfVec2d_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfVec2d_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfVec2d_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Vec2d
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfVec2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_Array2OfVec2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_Array2OfVec2d_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array2OfVec2d.Init = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_Init,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d.Destroy = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_Destroy,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d.Assign = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_Assign,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d.Set = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_Set,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d.ColLength = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_ColLength,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d.RowLength = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_RowLength,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d.LowerCol = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_LowerCol,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d.LowerRow = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_LowerRow,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d.UpperCol = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_UpperCol,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d.UpperRow = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_UpperRow,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d.SetValue = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_SetValue,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d.Value = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_Value,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d.ChangeValue = new_instancemethod(_TColgp.TColgp_Array2OfVec2d_ChangeValue,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d._kill_pointed = new_instancemethod(_TColgp.TColgp_Array2OfVec2d__kill_pointed,None,TColgp_Array2OfVec2d)
TColgp_Array2OfVec2d_swigregister = _TColgp.TColgp_Array2OfVec2d_swigregister
TColgp_Array2OfVec2d_swigregister(TColgp_Array2OfVec2d)

class TColgp_Array2OfXY(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: gp_XY
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColgp.TColgp_Array2OfXY_swiginit(self,_TColgp.new_TColgp_Array2OfXY(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_XY
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfXY_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfXY_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfXY
        :rtype: TColgp_Array2OfXY

        """
        return _TColgp.TColgp_Array2OfXY_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfXY
        :rtype: TColgp_Array2OfXY

        """
        return _TColgp.TColgp_Array2OfXY_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfXY_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfXY_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfXY_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfXY_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfXY_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfXY_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_XY
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfXY_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_XY

        """
        return _TColgp.TColgp_Array2OfXY_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_XY

        """
        return _TColgp.TColgp_Array2OfXY_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array2OfXY.Init = new_instancemethod(_TColgp.TColgp_Array2OfXY_Init,None,TColgp_Array2OfXY)
TColgp_Array2OfXY.Destroy = new_instancemethod(_TColgp.TColgp_Array2OfXY_Destroy,None,TColgp_Array2OfXY)
TColgp_Array2OfXY.Assign = new_instancemethod(_TColgp.TColgp_Array2OfXY_Assign,None,TColgp_Array2OfXY)
TColgp_Array2OfXY.Set = new_instancemethod(_TColgp.TColgp_Array2OfXY_Set,None,TColgp_Array2OfXY)
TColgp_Array2OfXY.ColLength = new_instancemethod(_TColgp.TColgp_Array2OfXY_ColLength,None,TColgp_Array2OfXY)
TColgp_Array2OfXY.RowLength = new_instancemethod(_TColgp.TColgp_Array2OfXY_RowLength,None,TColgp_Array2OfXY)
TColgp_Array2OfXY.LowerCol = new_instancemethod(_TColgp.TColgp_Array2OfXY_LowerCol,None,TColgp_Array2OfXY)
TColgp_Array2OfXY.LowerRow = new_instancemethod(_TColgp.TColgp_Array2OfXY_LowerRow,None,TColgp_Array2OfXY)
TColgp_Array2OfXY.UpperCol = new_instancemethod(_TColgp.TColgp_Array2OfXY_UpperCol,None,TColgp_Array2OfXY)
TColgp_Array2OfXY.UpperRow = new_instancemethod(_TColgp.TColgp_Array2OfXY_UpperRow,None,TColgp_Array2OfXY)
TColgp_Array2OfXY.SetValue = new_instancemethod(_TColgp.TColgp_Array2OfXY_SetValue,None,TColgp_Array2OfXY)
TColgp_Array2OfXY.Value = new_instancemethod(_TColgp.TColgp_Array2OfXY_Value,None,TColgp_Array2OfXY)
TColgp_Array2OfXY.ChangeValue = new_instancemethod(_TColgp.TColgp_Array2OfXY_ChangeValue,None,TColgp_Array2OfXY)
TColgp_Array2OfXY._kill_pointed = new_instancemethod(_TColgp.TColgp_Array2OfXY__kill_pointed,None,TColgp_Array2OfXY)
TColgp_Array2OfXY_swigregister = _TColgp.TColgp_Array2OfXY_swigregister
TColgp_Array2OfXY_swigregister(TColgp_Array2OfXY)

class TColgp_Array2OfXYZ(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: gp_XYZ
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColgp.TColgp_Array2OfXYZ_swiginit(self,_TColgp.new_TColgp_Array2OfXYZ(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_XYZ
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfXYZ_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfXYZ_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfXYZ
        :rtype: TColgp_Array2OfXYZ

        """
        return _TColgp.TColgp_Array2OfXYZ_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_Array2OfXYZ
        :rtype: TColgp_Array2OfXYZ

        """
        return _TColgp.TColgp_Array2OfXYZ_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfXYZ_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfXYZ_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfXYZ_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfXYZ_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfXYZ_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_Array2OfXYZ_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_XYZ
        :rtype: None

        """
        return _TColgp.TColgp_Array2OfXYZ_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_Array2OfXYZ_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_Array2OfXYZ_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_Array2OfXYZ.Init = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_Init,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ.Destroy = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_Destroy,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ.Assign = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_Assign,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ.Set = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_Set,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ.ColLength = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_ColLength,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ.RowLength = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_RowLength,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ.LowerCol = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_LowerCol,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ.LowerRow = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_LowerRow,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ.UpperCol = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_UpperCol,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ.UpperRow = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_UpperRow,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ.SetValue = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_SetValue,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ.Value = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_Value,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ.ChangeValue = new_instancemethod(_TColgp.TColgp_Array2OfXYZ_ChangeValue,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ._kill_pointed = new_instancemethod(_TColgp.TColgp_Array2OfXYZ__kill_pointed,None,TColgp_Array2OfXYZ)
TColgp_Array2OfXYZ_swigregister = _TColgp.TColgp_Array2OfXYZ_swigregister
TColgp_Array2OfXYZ_swigregister(TColgp_Array2OfXYZ)

class TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TColgp_DataMapOfIntegerCirc2d
        :rtype: None

        """
        _TColgp.TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d_swiginit(self,_TColgp.new_TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TColgp_DataMapOfIntegerCirc2d
        :rtype: None

        """
        return _TColgp.TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: gp_Circ2d

        """
        return _TColgp.TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d.Initialize = new_instancemethod(_TColgp.TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d_Initialize,None,TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d)
TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d.Key = new_instancemethod(_TColgp.TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d_Key,None,TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d)
TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d.Value = new_instancemethod(_TColgp.TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d_Value,None,TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d)
TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d._kill_pointed = new_instancemethod(_TColgp.TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d__kill_pointed,None,TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d)
TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d_swigregister = _TColgp.TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d_swigregister
TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d_swigregister(TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d)

class TColgp_DataMapNodeOfDataMapOfIntegerCirc2d(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: int &
        :param I:
        :type I: gp_Circ2d
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TColgp.TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_swiginit(self,_TColgp.new_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d(*args))
    def GetKey(self):
        """GetKey(TColgp_DataMapNodeOfDataMapOfIntegerCirc2d self) -> Standard_Integer"""
        return _TColgp.TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_GetKey(self)

    def SetKey(self, *args):
        """SetKey(TColgp_DataMapNodeOfDataMapOfIntegerCirc2d self, Standard_Integer value)"""
        return _TColgp.TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_SetKey(self, *args)

    def Value(self, *args):
        """
        :rtype: gp_Circ2d

        """
        return _TColgp.TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_DataMapNodeOfDataMapOfIntegerCirc2d self)"""
        return _TColgp.TColgp_DataMapNodeOfDataMapOfIntegerCirc2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_DataMapNodeOfDataMapOfIntegerCirc2d self) -> Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d"""
        return _TColgp.TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_DataMapNodeOfDataMapOfIntegerCirc2d.GetKey = new_instancemethod(_TColgp.TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_GetKey,None,TColgp_DataMapNodeOfDataMapOfIntegerCirc2d)
TColgp_DataMapNodeOfDataMapOfIntegerCirc2d.SetKey = new_instancemethod(_TColgp.TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_SetKey,None,TColgp_DataMapNodeOfDataMapOfIntegerCirc2d)
TColgp_DataMapNodeOfDataMapOfIntegerCirc2d.Value = new_instancemethod(_TColgp.TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_Value,None,TColgp_DataMapNodeOfDataMapOfIntegerCirc2d)
TColgp_DataMapNodeOfDataMapOfIntegerCirc2d._kill_pointed = new_instancemethod(_TColgp.TColgp_DataMapNodeOfDataMapOfIntegerCirc2d__kill_pointed,None,TColgp_DataMapNodeOfDataMapOfIntegerCirc2d)
TColgp_DataMapNodeOfDataMapOfIntegerCirc2d.GetHandle = new_instancemethod(_TColgp.TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_GetHandle,None,TColgp_DataMapNodeOfDataMapOfIntegerCirc2d)
TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_swigregister = _TColgp.TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_swigregister
TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_swigregister(TColgp_DataMapNodeOfDataMapOfIntegerCirc2d)

class Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_swiginit(self,_TColgp.new_Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_Nullify,None,Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d)
Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_IsNull,None,Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d)
Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_GetObject,None,Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d)
Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d__kill_pointed,None,Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d)
Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_swigregister = _TColgp.Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_swigregister
Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_swigregister(Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d)

def Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_DownCast(*args):
  return _TColgp.Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_DownCast(*args)
Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_DownCast = _TColgp.Handle_TColgp_DataMapNodeOfDataMapOfIntegerCirc2d_DownCast

class TColgp_DataMapOfIntegerCirc2d(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TColgp.TColgp_DataMapOfIntegerCirc2d_swiginit(self,_TColgp.new_TColgp_DataMapOfIntegerCirc2d(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_DataMapOfIntegerCirc2d
        :rtype: TColgp_DataMapOfIntegerCirc2d

        """
        return _TColgp.TColgp_DataMapOfIntegerCirc2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_DataMapOfIntegerCirc2d
        :rtype: TColgp_DataMapOfIntegerCirc2d

        """
        return _TColgp.TColgp_DataMapOfIntegerCirc2d_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TColgp.TColgp_DataMapOfIntegerCirc2d_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_DataMapOfIntegerCirc2d_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: gp_Circ2d
        :rtype: bool

        """
        return _TColgp.TColgp_DataMapOfIntegerCirc2d_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TColgp.TColgp_DataMapOfIntegerCirc2d_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TColgp.TColgp_DataMapOfIntegerCirc2d_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: gp_Circ2d

        """
        return _TColgp.TColgp_DataMapOfIntegerCirc2d_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: gp_Circ2d

        """
        return _TColgp.TColgp_DataMapOfIntegerCirc2d_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TColgp.TColgp_DataMapOfIntegerCirc2d_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TColgp.TColgp_DataMapOfIntegerCirc2d_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_DataMapOfIntegerCirc2d self)"""
        return _TColgp.TColgp_DataMapOfIntegerCirc2d__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_DataMapOfIntegerCirc2d.Assign = new_instancemethod(_TColgp.TColgp_DataMapOfIntegerCirc2d_Assign,None,TColgp_DataMapOfIntegerCirc2d)
TColgp_DataMapOfIntegerCirc2d.Set = new_instancemethod(_TColgp.TColgp_DataMapOfIntegerCirc2d_Set,None,TColgp_DataMapOfIntegerCirc2d)
TColgp_DataMapOfIntegerCirc2d.ReSize = new_instancemethod(_TColgp.TColgp_DataMapOfIntegerCirc2d_ReSize,None,TColgp_DataMapOfIntegerCirc2d)
TColgp_DataMapOfIntegerCirc2d.Clear = new_instancemethod(_TColgp.TColgp_DataMapOfIntegerCirc2d_Clear,None,TColgp_DataMapOfIntegerCirc2d)
TColgp_DataMapOfIntegerCirc2d.Bind = new_instancemethod(_TColgp.TColgp_DataMapOfIntegerCirc2d_Bind,None,TColgp_DataMapOfIntegerCirc2d)
TColgp_DataMapOfIntegerCirc2d.IsBound = new_instancemethod(_TColgp.TColgp_DataMapOfIntegerCirc2d_IsBound,None,TColgp_DataMapOfIntegerCirc2d)
TColgp_DataMapOfIntegerCirc2d.UnBind = new_instancemethod(_TColgp.TColgp_DataMapOfIntegerCirc2d_UnBind,None,TColgp_DataMapOfIntegerCirc2d)
TColgp_DataMapOfIntegerCirc2d.Find = new_instancemethod(_TColgp.TColgp_DataMapOfIntegerCirc2d_Find,None,TColgp_DataMapOfIntegerCirc2d)
TColgp_DataMapOfIntegerCirc2d.ChangeFind = new_instancemethod(_TColgp.TColgp_DataMapOfIntegerCirc2d_ChangeFind,None,TColgp_DataMapOfIntegerCirc2d)
TColgp_DataMapOfIntegerCirc2d.Find1 = new_instancemethod(_TColgp.TColgp_DataMapOfIntegerCirc2d_Find1,None,TColgp_DataMapOfIntegerCirc2d)
TColgp_DataMapOfIntegerCirc2d.ChangeFind1 = new_instancemethod(_TColgp.TColgp_DataMapOfIntegerCirc2d_ChangeFind1,None,TColgp_DataMapOfIntegerCirc2d)
TColgp_DataMapOfIntegerCirc2d._kill_pointed = new_instancemethod(_TColgp.TColgp_DataMapOfIntegerCirc2d__kill_pointed,None,TColgp_DataMapOfIntegerCirc2d)
TColgp_DataMapOfIntegerCirc2d_swigregister = _TColgp.TColgp_DataMapOfIntegerCirc2d_swigregister
TColgp_DataMapOfIntegerCirc2d_swigregister(TColgp_DataMapOfIntegerCirc2d)

class TColgp_HArray1OfCirc2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: gp_Circ2d
        :rtype: None

        """
        _TColgp.TColgp_HArray1OfCirc2d_swiginit(self,_TColgp.new_TColgp_HArray1OfCirc2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Circ2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfCirc2d_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfCirc2d_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfCirc2d_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfCirc2d_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Circ2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfCirc2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Circ2d

        """
        return _TColgp.TColgp_HArray1OfCirc2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Circ2d

        """
        return _TColgp.TColgp_HArray1OfCirc2d_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColgp_Array1OfCirc2d

        """
        return _TColgp.TColgp_HArray1OfCirc2d_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColgp_Array1OfCirc2d

        """
        return _TColgp.TColgp_HArray1OfCirc2d_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray1OfCirc2d self)"""
        return _TColgp.TColgp_HArray1OfCirc2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray1OfCirc2d self) -> Handle_TColgp_HArray1OfCirc2d"""
        return _TColgp.TColgp_HArray1OfCirc2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray1OfCirc2d.Init = new_instancemethod(_TColgp.TColgp_HArray1OfCirc2d_Init,None,TColgp_HArray1OfCirc2d)
TColgp_HArray1OfCirc2d.Length = new_instancemethod(_TColgp.TColgp_HArray1OfCirc2d_Length,None,TColgp_HArray1OfCirc2d)
TColgp_HArray1OfCirc2d.Lower = new_instancemethod(_TColgp.TColgp_HArray1OfCirc2d_Lower,None,TColgp_HArray1OfCirc2d)
TColgp_HArray1OfCirc2d.Upper = new_instancemethod(_TColgp.TColgp_HArray1OfCirc2d_Upper,None,TColgp_HArray1OfCirc2d)
TColgp_HArray1OfCirc2d.SetValue = new_instancemethod(_TColgp.TColgp_HArray1OfCirc2d_SetValue,None,TColgp_HArray1OfCirc2d)
TColgp_HArray1OfCirc2d.Value = new_instancemethod(_TColgp.TColgp_HArray1OfCirc2d_Value,None,TColgp_HArray1OfCirc2d)
TColgp_HArray1OfCirc2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray1OfCirc2d_ChangeValue,None,TColgp_HArray1OfCirc2d)
TColgp_HArray1OfCirc2d.Array1 = new_instancemethod(_TColgp.TColgp_HArray1OfCirc2d_Array1,None,TColgp_HArray1OfCirc2d)
TColgp_HArray1OfCirc2d.ChangeArray1 = new_instancemethod(_TColgp.TColgp_HArray1OfCirc2d_ChangeArray1,None,TColgp_HArray1OfCirc2d)
TColgp_HArray1OfCirc2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray1OfCirc2d__kill_pointed,None,TColgp_HArray1OfCirc2d)
TColgp_HArray1OfCirc2d.GetHandle = new_instancemethod(_TColgp.TColgp_HArray1OfCirc2d_GetHandle,None,TColgp_HArray1OfCirc2d)
TColgp_HArray1OfCirc2d_swigregister = _TColgp.TColgp_HArray1OfCirc2d_swigregister
TColgp_HArray1OfCirc2d_swigregister(TColgp_HArray1OfCirc2d)

class Handle_TColgp_HArray1OfCirc2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray1OfCirc2d_swiginit(self,_TColgp.new_Handle_TColgp_HArray1OfCirc2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray1OfCirc2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray1OfCirc2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfCirc2d_Nullify,None,Handle_TColgp_HArray1OfCirc2d)
Handle_TColgp_HArray1OfCirc2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfCirc2d_IsNull,None,Handle_TColgp_HArray1OfCirc2d)
Handle_TColgp_HArray1OfCirc2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfCirc2d_GetObject,None,Handle_TColgp_HArray1OfCirc2d)
Handle_TColgp_HArray1OfCirc2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfCirc2d__kill_pointed,None,Handle_TColgp_HArray1OfCirc2d)
Handle_TColgp_HArray1OfCirc2d_swigregister = _TColgp.Handle_TColgp_HArray1OfCirc2d_swigregister
Handle_TColgp_HArray1OfCirc2d_swigregister(Handle_TColgp_HArray1OfCirc2d)

def Handle_TColgp_HArray1OfCirc2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray1OfCirc2d_DownCast(*args)
Handle_TColgp_HArray1OfCirc2d_DownCast = _TColgp.Handle_TColgp_HArray1OfCirc2d_DownCast

class TColgp_HArray1OfDir(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: gp_Dir
        :rtype: None

        """
        _TColgp.TColgp_HArray1OfDir_swiginit(self,_TColgp.new_TColgp_HArray1OfDir(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Dir
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfDir_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfDir_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfDir_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfDir_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Dir
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfDir_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_HArray1OfDir_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_HArray1OfDir_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColgp_Array1OfDir

        """
        return _TColgp.TColgp_HArray1OfDir_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColgp_Array1OfDir

        """
        return _TColgp.TColgp_HArray1OfDir_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray1OfDir self)"""
        return _TColgp.TColgp_HArray1OfDir__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray1OfDir self) -> Handle_TColgp_HArray1OfDir"""
        return _TColgp.TColgp_HArray1OfDir_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray1OfDir.Init = new_instancemethod(_TColgp.TColgp_HArray1OfDir_Init,None,TColgp_HArray1OfDir)
TColgp_HArray1OfDir.Length = new_instancemethod(_TColgp.TColgp_HArray1OfDir_Length,None,TColgp_HArray1OfDir)
TColgp_HArray1OfDir.Lower = new_instancemethod(_TColgp.TColgp_HArray1OfDir_Lower,None,TColgp_HArray1OfDir)
TColgp_HArray1OfDir.Upper = new_instancemethod(_TColgp.TColgp_HArray1OfDir_Upper,None,TColgp_HArray1OfDir)
TColgp_HArray1OfDir.SetValue = new_instancemethod(_TColgp.TColgp_HArray1OfDir_SetValue,None,TColgp_HArray1OfDir)
TColgp_HArray1OfDir.Value = new_instancemethod(_TColgp.TColgp_HArray1OfDir_Value,None,TColgp_HArray1OfDir)
TColgp_HArray1OfDir.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray1OfDir_ChangeValue,None,TColgp_HArray1OfDir)
TColgp_HArray1OfDir.Array1 = new_instancemethod(_TColgp.TColgp_HArray1OfDir_Array1,None,TColgp_HArray1OfDir)
TColgp_HArray1OfDir.ChangeArray1 = new_instancemethod(_TColgp.TColgp_HArray1OfDir_ChangeArray1,None,TColgp_HArray1OfDir)
TColgp_HArray1OfDir._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray1OfDir__kill_pointed,None,TColgp_HArray1OfDir)
TColgp_HArray1OfDir.GetHandle = new_instancemethod(_TColgp.TColgp_HArray1OfDir_GetHandle,None,TColgp_HArray1OfDir)
TColgp_HArray1OfDir_swigregister = _TColgp.TColgp_HArray1OfDir_swigregister
TColgp_HArray1OfDir_swigregister(TColgp_HArray1OfDir)

class Handle_TColgp_HArray1OfDir(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray1OfDir_swiginit(self,_TColgp.new_Handle_TColgp_HArray1OfDir(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray1OfDir_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray1OfDir.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfDir_Nullify,None,Handle_TColgp_HArray1OfDir)
Handle_TColgp_HArray1OfDir.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfDir_IsNull,None,Handle_TColgp_HArray1OfDir)
Handle_TColgp_HArray1OfDir.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfDir_GetObject,None,Handle_TColgp_HArray1OfDir)
Handle_TColgp_HArray1OfDir._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfDir__kill_pointed,None,Handle_TColgp_HArray1OfDir)
Handle_TColgp_HArray1OfDir_swigregister = _TColgp.Handle_TColgp_HArray1OfDir_swigregister
Handle_TColgp_HArray1OfDir_swigregister(Handle_TColgp_HArray1OfDir)

def Handle_TColgp_HArray1OfDir_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray1OfDir_DownCast(*args)
Handle_TColgp_HArray1OfDir_DownCast = _TColgp.Handle_TColgp_HArray1OfDir_DownCast

class TColgp_HArray1OfDir2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: gp_Dir2d
        :rtype: None

        """
        _TColgp.TColgp_HArray1OfDir2d_swiginit(self,_TColgp.new_TColgp_HArray1OfDir2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Dir2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfDir2d_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfDir2d_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfDir2d_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfDir2d_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Dir2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfDir2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_HArray1OfDir2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_HArray1OfDir2d_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColgp_Array1OfDir2d

        """
        return _TColgp.TColgp_HArray1OfDir2d_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColgp_Array1OfDir2d

        """
        return _TColgp.TColgp_HArray1OfDir2d_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray1OfDir2d self)"""
        return _TColgp.TColgp_HArray1OfDir2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray1OfDir2d self) -> Handle_TColgp_HArray1OfDir2d"""
        return _TColgp.TColgp_HArray1OfDir2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray1OfDir2d.Init = new_instancemethod(_TColgp.TColgp_HArray1OfDir2d_Init,None,TColgp_HArray1OfDir2d)
TColgp_HArray1OfDir2d.Length = new_instancemethod(_TColgp.TColgp_HArray1OfDir2d_Length,None,TColgp_HArray1OfDir2d)
TColgp_HArray1OfDir2d.Lower = new_instancemethod(_TColgp.TColgp_HArray1OfDir2d_Lower,None,TColgp_HArray1OfDir2d)
TColgp_HArray1OfDir2d.Upper = new_instancemethod(_TColgp.TColgp_HArray1OfDir2d_Upper,None,TColgp_HArray1OfDir2d)
TColgp_HArray1OfDir2d.SetValue = new_instancemethod(_TColgp.TColgp_HArray1OfDir2d_SetValue,None,TColgp_HArray1OfDir2d)
TColgp_HArray1OfDir2d.Value = new_instancemethod(_TColgp.TColgp_HArray1OfDir2d_Value,None,TColgp_HArray1OfDir2d)
TColgp_HArray1OfDir2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray1OfDir2d_ChangeValue,None,TColgp_HArray1OfDir2d)
TColgp_HArray1OfDir2d.Array1 = new_instancemethod(_TColgp.TColgp_HArray1OfDir2d_Array1,None,TColgp_HArray1OfDir2d)
TColgp_HArray1OfDir2d.ChangeArray1 = new_instancemethod(_TColgp.TColgp_HArray1OfDir2d_ChangeArray1,None,TColgp_HArray1OfDir2d)
TColgp_HArray1OfDir2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray1OfDir2d__kill_pointed,None,TColgp_HArray1OfDir2d)
TColgp_HArray1OfDir2d.GetHandle = new_instancemethod(_TColgp.TColgp_HArray1OfDir2d_GetHandle,None,TColgp_HArray1OfDir2d)
TColgp_HArray1OfDir2d_swigregister = _TColgp.TColgp_HArray1OfDir2d_swigregister
TColgp_HArray1OfDir2d_swigregister(TColgp_HArray1OfDir2d)

class Handle_TColgp_HArray1OfDir2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray1OfDir2d_swiginit(self,_TColgp.new_Handle_TColgp_HArray1OfDir2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray1OfDir2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray1OfDir2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfDir2d_Nullify,None,Handle_TColgp_HArray1OfDir2d)
Handle_TColgp_HArray1OfDir2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfDir2d_IsNull,None,Handle_TColgp_HArray1OfDir2d)
Handle_TColgp_HArray1OfDir2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfDir2d_GetObject,None,Handle_TColgp_HArray1OfDir2d)
Handle_TColgp_HArray1OfDir2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfDir2d__kill_pointed,None,Handle_TColgp_HArray1OfDir2d)
Handle_TColgp_HArray1OfDir2d_swigregister = _TColgp.Handle_TColgp_HArray1OfDir2d_swigregister
Handle_TColgp_HArray1OfDir2d_swigregister(Handle_TColgp_HArray1OfDir2d)

def Handle_TColgp_HArray1OfDir2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray1OfDir2d_DownCast(*args)
Handle_TColgp_HArray1OfDir2d_DownCast = _TColgp.Handle_TColgp_HArray1OfDir2d_DownCast

class TColgp_HArray1OfLin2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: gp_Lin2d
        :rtype: None

        """
        _TColgp.TColgp_HArray1OfLin2d_swiginit(self,_TColgp.new_TColgp_HArray1OfLin2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Lin2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfLin2d_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfLin2d_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfLin2d_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfLin2d_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Lin2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfLin2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Lin2d

        """
        return _TColgp.TColgp_HArray1OfLin2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Lin2d

        """
        return _TColgp.TColgp_HArray1OfLin2d_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColgp_Array1OfLin2d

        """
        return _TColgp.TColgp_HArray1OfLin2d_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColgp_Array1OfLin2d

        """
        return _TColgp.TColgp_HArray1OfLin2d_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray1OfLin2d self)"""
        return _TColgp.TColgp_HArray1OfLin2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray1OfLin2d self) -> Handle_TColgp_HArray1OfLin2d"""
        return _TColgp.TColgp_HArray1OfLin2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray1OfLin2d.Init = new_instancemethod(_TColgp.TColgp_HArray1OfLin2d_Init,None,TColgp_HArray1OfLin2d)
TColgp_HArray1OfLin2d.Length = new_instancemethod(_TColgp.TColgp_HArray1OfLin2d_Length,None,TColgp_HArray1OfLin2d)
TColgp_HArray1OfLin2d.Lower = new_instancemethod(_TColgp.TColgp_HArray1OfLin2d_Lower,None,TColgp_HArray1OfLin2d)
TColgp_HArray1OfLin2d.Upper = new_instancemethod(_TColgp.TColgp_HArray1OfLin2d_Upper,None,TColgp_HArray1OfLin2d)
TColgp_HArray1OfLin2d.SetValue = new_instancemethod(_TColgp.TColgp_HArray1OfLin2d_SetValue,None,TColgp_HArray1OfLin2d)
TColgp_HArray1OfLin2d.Value = new_instancemethod(_TColgp.TColgp_HArray1OfLin2d_Value,None,TColgp_HArray1OfLin2d)
TColgp_HArray1OfLin2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray1OfLin2d_ChangeValue,None,TColgp_HArray1OfLin2d)
TColgp_HArray1OfLin2d.Array1 = new_instancemethod(_TColgp.TColgp_HArray1OfLin2d_Array1,None,TColgp_HArray1OfLin2d)
TColgp_HArray1OfLin2d.ChangeArray1 = new_instancemethod(_TColgp.TColgp_HArray1OfLin2d_ChangeArray1,None,TColgp_HArray1OfLin2d)
TColgp_HArray1OfLin2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray1OfLin2d__kill_pointed,None,TColgp_HArray1OfLin2d)
TColgp_HArray1OfLin2d.GetHandle = new_instancemethod(_TColgp.TColgp_HArray1OfLin2d_GetHandle,None,TColgp_HArray1OfLin2d)
TColgp_HArray1OfLin2d_swigregister = _TColgp.TColgp_HArray1OfLin2d_swigregister
TColgp_HArray1OfLin2d_swigregister(TColgp_HArray1OfLin2d)

class Handle_TColgp_HArray1OfLin2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray1OfLin2d_swiginit(self,_TColgp.new_Handle_TColgp_HArray1OfLin2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray1OfLin2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray1OfLin2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfLin2d_Nullify,None,Handle_TColgp_HArray1OfLin2d)
Handle_TColgp_HArray1OfLin2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfLin2d_IsNull,None,Handle_TColgp_HArray1OfLin2d)
Handle_TColgp_HArray1OfLin2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfLin2d_GetObject,None,Handle_TColgp_HArray1OfLin2d)
Handle_TColgp_HArray1OfLin2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfLin2d__kill_pointed,None,Handle_TColgp_HArray1OfLin2d)
Handle_TColgp_HArray1OfLin2d_swigregister = _TColgp.Handle_TColgp_HArray1OfLin2d_swigregister
Handle_TColgp_HArray1OfLin2d_swigregister(Handle_TColgp_HArray1OfLin2d)

def Handle_TColgp_HArray1OfLin2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray1OfLin2d_DownCast(*args)
Handle_TColgp_HArray1OfLin2d_DownCast = _TColgp.Handle_TColgp_HArray1OfLin2d_DownCast

class TColgp_HArray1OfPnt(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: gp_Pnt
        :rtype: None

        """
        _TColgp.TColgp_HArray1OfPnt_swiginit(self,_TColgp.new_TColgp_HArray1OfPnt(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Pnt
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfPnt_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfPnt_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfPnt_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfPnt_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Pnt
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfPnt_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_HArray1OfPnt_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_HArray1OfPnt_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColgp_Array1OfPnt

        """
        return _TColgp.TColgp_HArray1OfPnt_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColgp_Array1OfPnt

        """
        return _TColgp.TColgp_HArray1OfPnt_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray1OfPnt self)"""
        return _TColgp.TColgp_HArray1OfPnt__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray1OfPnt self) -> Handle_TColgp_HArray1OfPnt"""
        return _TColgp.TColgp_HArray1OfPnt_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray1OfPnt.Init = new_instancemethod(_TColgp.TColgp_HArray1OfPnt_Init,None,TColgp_HArray1OfPnt)
TColgp_HArray1OfPnt.Length = new_instancemethod(_TColgp.TColgp_HArray1OfPnt_Length,None,TColgp_HArray1OfPnt)
TColgp_HArray1OfPnt.Lower = new_instancemethod(_TColgp.TColgp_HArray1OfPnt_Lower,None,TColgp_HArray1OfPnt)
TColgp_HArray1OfPnt.Upper = new_instancemethod(_TColgp.TColgp_HArray1OfPnt_Upper,None,TColgp_HArray1OfPnt)
TColgp_HArray1OfPnt.SetValue = new_instancemethod(_TColgp.TColgp_HArray1OfPnt_SetValue,None,TColgp_HArray1OfPnt)
TColgp_HArray1OfPnt.Value = new_instancemethod(_TColgp.TColgp_HArray1OfPnt_Value,None,TColgp_HArray1OfPnt)
TColgp_HArray1OfPnt.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray1OfPnt_ChangeValue,None,TColgp_HArray1OfPnt)
TColgp_HArray1OfPnt.Array1 = new_instancemethod(_TColgp.TColgp_HArray1OfPnt_Array1,None,TColgp_HArray1OfPnt)
TColgp_HArray1OfPnt.ChangeArray1 = new_instancemethod(_TColgp.TColgp_HArray1OfPnt_ChangeArray1,None,TColgp_HArray1OfPnt)
TColgp_HArray1OfPnt._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray1OfPnt__kill_pointed,None,TColgp_HArray1OfPnt)
TColgp_HArray1OfPnt.GetHandle = new_instancemethod(_TColgp.TColgp_HArray1OfPnt_GetHandle,None,TColgp_HArray1OfPnt)
TColgp_HArray1OfPnt_swigregister = _TColgp.TColgp_HArray1OfPnt_swigregister
TColgp_HArray1OfPnt_swigregister(TColgp_HArray1OfPnt)

class Handle_TColgp_HArray1OfPnt(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray1OfPnt_swiginit(self,_TColgp.new_Handle_TColgp_HArray1OfPnt(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray1OfPnt_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray1OfPnt.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfPnt_Nullify,None,Handle_TColgp_HArray1OfPnt)
Handle_TColgp_HArray1OfPnt.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfPnt_IsNull,None,Handle_TColgp_HArray1OfPnt)
Handle_TColgp_HArray1OfPnt.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfPnt_GetObject,None,Handle_TColgp_HArray1OfPnt)
Handle_TColgp_HArray1OfPnt._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfPnt__kill_pointed,None,Handle_TColgp_HArray1OfPnt)
Handle_TColgp_HArray1OfPnt_swigregister = _TColgp.Handle_TColgp_HArray1OfPnt_swigregister
Handle_TColgp_HArray1OfPnt_swigregister(Handle_TColgp_HArray1OfPnt)

def Handle_TColgp_HArray1OfPnt_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray1OfPnt_DownCast(*args)
Handle_TColgp_HArray1OfPnt_DownCast = _TColgp.Handle_TColgp_HArray1OfPnt_DownCast

class TColgp_HArray1OfPnt2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: gp_Pnt2d
        :rtype: None

        """
        _TColgp.TColgp_HArray1OfPnt2d_swiginit(self,_TColgp.new_TColgp_HArray1OfPnt2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Pnt2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfPnt2d_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfPnt2d_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfPnt2d_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfPnt2d_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Pnt2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfPnt2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_HArray1OfPnt2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_HArray1OfPnt2d_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColgp_Array1OfPnt2d

        """
        return _TColgp.TColgp_HArray1OfPnt2d_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColgp_Array1OfPnt2d

        """
        return _TColgp.TColgp_HArray1OfPnt2d_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray1OfPnt2d self)"""
        return _TColgp.TColgp_HArray1OfPnt2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray1OfPnt2d self) -> Handle_TColgp_HArray1OfPnt2d"""
        return _TColgp.TColgp_HArray1OfPnt2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray1OfPnt2d.Init = new_instancemethod(_TColgp.TColgp_HArray1OfPnt2d_Init,None,TColgp_HArray1OfPnt2d)
TColgp_HArray1OfPnt2d.Length = new_instancemethod(_TColgp.TColgp_HArray1OfPnt2d_Length,None,TColgp_HArray1OfPnt2d)
TColgp_HArray1OfPnt2d.Lower = new_instancemethod(_TColgp.TColgp_HArray1OfPnt2d_Lower,None,TColgp_HArray1OfPnt2d)
TColgp_HArray1OfPnt2d.Upper = new_instancemethod(_TColgp.TColgp_HArray1OfPnt2d_Upper,None,TColgp_HArray1OfPnt2d)
TColgp_HArray1OfPnt2d.SetValue = new_instancemethod(_TColgp.TColgp_HArray1OfPnt2d_SetValue,None,TColgp_HArray1OfPnt2d)
TColgp_HArray1OfPnt2d.Value = new_instancemethod(_TColgp.TColgp_HArray1OfPnt2d_Value,None,TColgp_HArray1OfPnt2d)
TColgp_HArray1OfPnt2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray1OfPnt2d_ChangeValue,None,TColgp_HArray1OfPnt2d)
TColgp_HArray1OfPnt2d.Array1 = new_instancemethod(_TColgp.TColgp_HArray1OfPnt2d_Array1,None,TColgp_HArray1OfPnt2d)
TColgp_HArray1OfPnt2d.ChangeArray1 = new_instancemethod(_TColgp.TColgp_HArray1OfPnt2d_ChangeArray1,None,TColgp_HArray1OfPnt2d)
TColgp_HArray1OfPnt2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray1OfPnt2d__kill_pointed,None,TColgp_HArray1OfPnt2d)
TColgp_HArray1OfPnt2d.GetHandle = new_instancemethod(_TColgp.TColgp_HArray1OfPnt2d_GetHandle,None,TColgp_HArray1OfPnt2d)
TColgp_HArray1OfPnt2d_swigregister = _TColgp.TColgp_HArray1OfPnt2d_swigregister
TColgp_HArray1OfPnt2d_swigregister(TColgp_HArray1OfPnt2d)

class Handle_TColgp_HArray1OfPnt2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray1OfPnt2d_swiginit(self,_TColgp.new_Handle_TColgp_HArray1OfPnt2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray1OfPnt2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray1OfPnt2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfPnt2d_Nullify,None,Handle_TColgp_HArray1OfPnt2d)
Handle_TColgp_HArray1OfPnt2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfPnt2d_IsNull,None,Handle_TColgp_HArray1OfPnt2d)
Handle_TColgp_HArray1OfPnt2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfPnt2d_GetObject,None,Handle_TColgp_HArray1OfPnt2d)
Handle_TColgp_HArray1OfPnt2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfPnt2d__kill_pointed,None,Handle_TColgp_HArray1OfPnt2d)
Handle_TColgp_HArray1OfPnt2d_swigregister = _TColgp.Handle_TColgp_HArray1OfPnt2d_swigregister
Handle_TColgp_HArray1OfPnt2d_swigregister(Handle_TColgp_HArray1OfPnt2d)

def Handle_TColgp_HArray1OfPnt2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray1OfPnt2d_DownCast(*args)
Handle_TColgp_HArray1OfPnt2d_DownCast = _TColgp.Handle_TColgp_HArray1OfPnt2d_DownCast

class TColgp_HArray1OfVec(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: gp_Vec
        :rtype: None

        """
        _TColgp.TColgp_HArray1OfVec_swiginit(self,_TColgp.new_TColgp_HArray1OfVec(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Vec
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfVec_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfVec_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfVec_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfVec_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Vec
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfVec_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_HArray1OfVec_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_HArray1OfVec_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColgp_Array1OfVec

        """
        return _TColgp.TColgp_HArray1OfVec_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColgp_Array1OfVec

        """
        return _TColgp.TColgp_HArray1OfVec_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray1OfVec self)"""
        return _TColgp.TColgp_HArray1OfVec__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray1OfVec self) -> Handle_TColgp_HArray1OfVec"""
        return _TColgp.TColgp_HArray1OfVec_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray1OfVec.Init = new_instancemethod(_TColgp.TColgp_HArray1OfVec_Init,None,TColgp_HArray1OfVec)
TColgp_HArray1OfVec.Length = new_instancemethod(_TColgp.TColgp_HArray1OfVec_Length,None,TColgp_HArray1OfVec)
TColgp_HArray1OfVec.Lower = new_instancemethod(_TColgp.TColgp_HArray1OfVec_Lower,None,TColgp_HArray1OfVec)
TColgp_HArray1OfVec.Upper = new_instancemethod(_TColgp.TColgp_HArray1OfVec_Upper,None,TColgp_HArray1OfVec)
TColgp_HArray1OfVec.SetValue = new_instancemethod(_TColgp.TColgp_HArray1OfVec_SetValue,None,TColgp_HArray1OfVec)
TColgp_HArray1OfVec.Value = new_instancemethod(_TColgp.TColgp_HArray1OfVec_Value,None,TColgp_HArray1OfVec)
TColgp_HArray1OfVec.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray1OfVec_ChangeValue,None,TColgp_HArray1OfVec)
TColgp_HArray1OfVec.Array1 = new_instancemethod(_TColgp.TColgp_HArray1OfVec_Array1,None,TColgp_HArray1OfVec)
TColgp_HArray1OfVec.ChangeArray1 = new_instancemethod(_TColgp.TColgp_HArray1OfVec_ChangeArray1,None,TColgp_HArray1OfVec)
TColgp_HArray1OfVec._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray1OfVec__kill_pointed,None,TColgp_HArray1OfVec)
TColgp_HArray1OfVec.GetHandle = new_instancemethod(_TColgp.TColgp_HArray1OfVec_GetHandle,None,TColgp_HArray1OfVec)
TColgp_HArray1OfVec_swigregister = _TColgp.TColgp_HArray1OfVec_swigregister
TColgp_HArray1OfVec_swigregister(TColgp_HArray1OfVec)

class Handle_TColgp_HArray1OfVec(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray1OfVec_swiginit(self,_TColgp.new_Handle_TColgp_HArray1OfVec(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray1OfVec_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray1OfVec.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfVec_Nullify,None,Handle_TColgp_HArray1OfVec)
Handle_TColgp_HArray1OfVec.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfVec_IsNull,None,Handle_TColgp_HArray1OfVec)
Handle_TColgp_HArray1OfVec.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfVec_GetObject,None,Handle_TColgp_HArray1OfVec)
Handle_TColgp_HArray1OfVec._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfVec__kill_pointed,None,Handle_TColgp_HArray1OfVec)
Handle_TColgp_HArray1OfVec_swigregister = _TColgp.Handle_TColgp_HArray1OfVec_swigregister
Handle_TColgp_HArray1OfVec_swigregister(Handle_TColgp_HArray1OfVec)

def Handle_TColgp_HArray1OfVec_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray1OfVec_DownCast(*args)
Handle_TColgp_HArray1OfVec_DownCast = _TColgp.Handle_TColgp_HArray1OfVec_DownCast

class TColgp_HArray1OfVec2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: gp_Vec2d
        :rtype: None

        """
        _TColgp.TColgp_HArray1OfVec2d_swiginit(self,_TColgp.new_TColgp_HArray1OfVec2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Vec2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfVec2d_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfVec2d_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfVec2d_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfVec2d_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_Vec2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfVec2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_HArray1OfVec2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_HArray1OfVec2d_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColgp_Array1OfVec2d

        """
        return _TColgp.TColgp_HArray1OfVec2d_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColgp_Array1OfVec2d

        """
        return _TColgp.TColgp_HArray1OfVec2d_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray1OfVec2d self)"""
        return _TColgp.TColgp_HArray1OfVec2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray1OfVec2d self) -> Handle_TColgp_HArray1OfVec2d"""
        return _TColgp.TColgp_HArray1OfVec2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray1OfVec2d.Init = new_instancemethod(_TColgp.TColgp_HArray1OfVec2d_Init,None,TColgp_HArray1OfVec2d)
TColgp_HArray1OfVec2d.Length = new_instancemethod(_TColgp.TColgp_HArray1OfVec2d_Length,None,TColgp_HArray1OfVec2d)
TColgp_HArray1OfVec2d.Lower = new_instancemethod(_TColgp.TColgp_HArray1OfVec2d_Lower,None,TColgp_HArray1OfVec2d)
TColgp_HArray1OfVec2d.Upper = new_instancemethod(_TColgp.TColgp_HArray1OfVec2d_Upper,None,TColgp_HArray1OfVec2d)
TColgp_HArray1OfVec2d.SetValue = new_instancemethod(_TColgp.TColgp_HArray1OfVec2d_SetValue,None,TColgp_HArray1OfVec2d)
TColgp_HArray1OfVec2d.Value = new_instancemethod(_TColgp.TColgp_HArray1OfVec2d_Value,None,TColgp_HArray1OfVec2d)
TColgp_HArray1OfVec2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray1OfVec2d_ChangeValue,None,TColgp_HArray1OfVec2d)
TColgp_HArray1OfVec2d.Array1 = new_instancemethod(_TColgp.TColgp_HArray1OfVec2d_Array1,None,TColgp_HArray1OfVec2d)
TColgp_HArray1OfVec2d.ChangeArray1 = new_instancemethod(_TColgp.TColgp_HArray1OfVec2d_ChangeArray1,None,TColgp_HArray1OfVec2d)
TColgp_HArray1OfVec2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray1OfVec2d__kill_pointed,None,TColgp_HArray1OfVec2d)
TColgp_HArray1OfVec2d.GetHandle = new_instancemethod(_TColgp.TColgp_HArray1OfVec2d_GetHandle,None,TColgp_HArray1OfVec2d)
TColgp_HArray1OfVec2d_swigregister = _TColgp.TColgp_HArray1OfVec2d_swigregister
TColgp_HArray1OfVec2d_swigregister(TColgp_HArray1OfVec2d)

class Handle_TColgp_HArray1OfVec2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray1OfVec2d_swiginit(self,_TColgp.new_Handle_TColgp_HArray1OfVec2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray1OfVec2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray1OfVec2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfVec2d_Nullify,None,Handle_TColgp_HArray1OfVec2d)
Handle_TColgp_HArray1OfVec2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfVec2d_IsNull,None,Handle_TColgp_HArray1OfVec2d)
Handle_TColgp_HArray1OfVec2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfVec2d_GetObject,None,Handle_TColgp_HArray1OfVec2d)
Handle_TColgp_HArray1OfVec2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfVec2d__kill_pointed,None,Handle_TColgp_HArray1OfVec2d)
Handle_TColgp_HArray1OfVec2d_swigregister = _TColgp.Handle_TColgp_HArray1OfVec2d_swigregister
Handle_TColgp_HArray1OfVec2d_swigregister(Handle_TColgp_HArray1OfVec2d)

def Handle_TColgp_HArray1OfVec2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray1OfVec2d_DownCast(*args)
Handle_TColgp_HArray1OfVec2d_DownCast = _TColgp.Handle_TColgp_HArray1OfVec2d_DownCast

class TColgp_HArray1OfXY(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: gp_XY
        :rtype: None

        """
        _TColgp.TColgp_HArray1OfXY_swiginit(self,_TColgp.new_TColgp_HArray1OfXY(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_XY
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfXY_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfXY_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfXY_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfXY_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_XY
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfXY_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_XY

        """
        return _TColgp.TColgp_HArray1OfXY_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_XY

        """
        return _TColgp.TColgp_HArray1OfXY_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColgp_Array1OfXY

        """
        return _TColgp.TColgp_HArray1OfXY_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColgp_Array1OfXY

        """
        return _TColgp.TColgp_HArray1OfXY_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray1OfXY self)"""
        return _TColgp.TColgp_HArray1OfXY__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray1OfXY self) -> Handle_TColgp_HArray1OfXY"""
        return _TColgp.TColgp_HArray1OfXY_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray1OfXY.Init = new_instancemethod(_TColgp.TColgp_HArray1OfXY_Init,None,TColgp_HArray1OfXY)
TColgp_HArray1OfXY.Length = new_instancemethod(_TColgp.TColgp_HArray1OfXY_Length,None,TColgp_HArray1OfXY)
TColgp_HArray1OfXY.Lower = new_instancemethod(_TColgp.TColgp_HArray1OfXY_Lower,None,TColgp_HArray1OfXY)
TColgp_HArray1OfXY.Upper = new_instancemethod(_TColgp.TColgp_HArray1OfXY_Upper,None,TColgp_HArray1OfXY)
TColgp_HArray1OfXY.SetValue = new_instancemethod(_TColgp.TColgp_HArray1OfXY_SetValue,None,TColgp_HArray1OfXY)
TColgp_HArray1OfXY.Value = new_instancemethod(_TColgp.TColgp_HArray1OfXY_Value,None,TColgp_HArray1OfXY)
TColgp_HArray1OfXY.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray1OfXY_ChangeValue,None,TColgp_HArray1OfXY)
TColgp_HArray1OfXY.Array1 = new_instancemethod(_TColgp.TColgp_HArray1OfXY_Array1,None,TColgp_HArray1OfXY)
TColgp_HArray1OfXY.ChangeArray1 = new_instancemethod(_TColgp.TColgp_HArray1OfXY_ChangeArray1,None,TColgp_HArray1OfXY)
TColgp_HArray1OfXY._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray1OfXY__kill_pointed,None,TColgp_HArray1OfXY)
TColgp_HArray1OfXY.GetHandle = new_instancemethod(_TColgp.TColgp_HArray1OfXY_GetHandle,None,TColgp_HArray1OfXY)
TColgp_HArray1OfXY_swigregister = _TColgp.TColgp_HArray1OfXY_swigregister
TColgp_HArray1OfXY_swigregister(TColgp_HArray1OfXY)

class Handle_TColgp_HArray1OfXY(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray1OfXY_swiginit(self,_TColgp.new_Handle_TColgp_HArray1OfXY(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray1OfXY_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray1OfXY.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfXY_Nullify,None,Handle_TColgp_HArray1OfXY)
Handle_TColgp_HArray1OfXY.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfXY_IsNull,None,Handle_TColgp_HArray1OfXY)
Handle_TColgp_HArray1OfXY.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfXY_GetObject,None,Handle_TColgp_HArray1OfXY)
Handle_TColgp_HArray1OfXY._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfXY__kill_pointed,None,Handle_TColgp_HArray1OfXY)
Handle_TColgp_HArray1OfXY_swigregister = _TColgp.Handle_TColgp_HArray1OfXY_swigregister
Handle_TColgp_HArray1OfXY_swigregister(Handle_TColgp_HArray1OfXY)

def Handle_TColgp_HArray1OfXY_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray1OfXY_DownCast(*args)
Handle_TColgp_HArray1OfXY_DownCast = _TColgp.Handle_TColgp_HArray1OfXY_DownCast

class TColgp_HArray1OfXYZ(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: gp_XYZ
        :rtype: None

        """
        _TColgp.TColgp_HArray1OfXYZ_swiginit(self,_TColgp.new_TColgp_HArray1OfXYZ(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_XYZ
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfXYZ_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfXYZ_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfXYZ_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray1OfXYZ_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: gp_XYZ
        :rtype: None

        """
        return _TColgp.TColgp_HArray1OfXYZ_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_HArray1OfXYZ_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_HArray1OfXYZ_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TColgp_Array1OfXYZ

        """
        return _TColgp.TColgp_HArray1OfXYZ_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TColgp_Array1OfXYZ

        """
        return _TColgp.TColgp_HArray1OfXYZ_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray1OfXYZ self)"""
        return _TColgp.TColgp_HArray1OfXYZ__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray1OfXYZ self) -> Handle_TColgp_HArray1OfXYZ"""
        return _TColgp.TColgp_HArray1OfXYZ_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray1OfXYZ.Init = new_instancemethod(_TColgp.TColgp_HArray1OfXYZ_Init,None,TColgp_HArray1OfXYZ)
TColgp_HArray1OfXYZ.Length = new_instancemethod(_TColgp.TColgp_HArray1OfXYZ_Length,None,TColgp_HArray1OfXYZ)
TColgp_HArray1OfXYZ.Lower = new_instancemethod(_TColgp.TColgp_HArray1OfXYZ_Lower,None,TColgp_HArray1OfXYZ)
TColgp_HArray1OfXYZ.Upper = new_instancemethod(_TColgp.TColgp_HArray1OfXYZ_Upper,None,TColgp_HArray1OfXYZ)
TColgp_HArray1OfXYZ.SetValue = new_instancemethod(_TColgp.TColgp_HArray1OfXYZ_SetValue,None,TColgp_HArray1OfXYZ)
TColgp_HArray1OfXYZ.Value = new_instancemethod(_TColgp.TColgp_HArray1OfXYZ_Value,None,TColgp_HArray1OfXYZ)
TColgp_HArray1OfXYZ.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray1OfXYZ_ChangeValue,None,TColgp_HArray1OfXYZ)
TColgp_HArray1OfXYZ.Array1 = new_instancemethod(_TColgp.TColgp_HArray1OfXYZ_Array1,None,TColgp_HArray1OfXYZ)
TColgp_HArray1OfXYZ.ChangeArray1 = new_instancemethod(_TColgp.TColgp_HArray1OfXYZ_ChangeArray1,None,TColgp_HArray1OfXYZ)
TColgp_HArray1OfXYZ._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray1OfXYZ__kill_pointed,None,TColgp_HArray1OfXYZ)
TColgp_HArray1OfXYZ.GetHandle = new_instancemethod(_TColgp.TColgp_HArray1OfXYZ_GetHandle,None,TColgp_HArray1OfXYZ)
TColgp_HArray1OfXYZ_swigregister = _TColgp.TColgp_HArray1OfXYZ_swigregister
TColgp_HArray1OfXYZ_swigregister(TColgp_HArray1OfXYZ)

class Handle_TColgp_HArray1OfXYZ(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray1OfXYZ_swiginit(self,_TColgp.new_Handle_TColgp_HArray1OfXYZ(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray1OfXYZ_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray1OfXYZ.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfXYZ_Nullify,None,Handle_TColgp_HArray1OfXYZ)
Handle_TColgp_HArray1OfXYZ.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfXYZ_IsNull,None,Handle_TColgp_HArray1OfXYZ)
Handle_TColgp_HArray1OfXYZ.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfXYZ_GetObject,None,Handle_TColgp_HArray1OfXYZ)
Handle_TColgp_HArray1OfXYZ._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray1OfXYZ__kill_pointed,None,Handle_TColgp_HArray1OfXYZ)
Handle_TColgp_HArray1OfXYZ_swigregister = _TColgp.Handle_TColgp_HArray1OfXYZ_swigregister
Handle_TColgp_HArray1OfXYZ_swigregister(Handle_TColgp_HArray1OfXYZ)

def Handle_TColgp_HArray1OfXYZ_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray1OfXYZ_DownCast(*args)
Handle_TColgp_HArray1OfXYZ_DownCast = _TColgp.Handle_TColgp_HArray1OfXYZ_DownCast

class TColgp_HArray2OfCirc2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: gp_Circ2d
        :rtype: None

        """
        _TColgp.TColgp_HArray2OfCirc2d_swiginit(self,_TColgp.new_TColgp_HArray2OfCirc2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Circ2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfCirc2d_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfCirc2d_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfCirc2d_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfCirc2d_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfCirc2d_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfCirc2d_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfCirc2d_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Circ2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfCirc2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Circ2d

        """
        return _TColgp.TColgp_HArray2OfCirc2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Circ2d

        """
        return _TColgp.TColgp_HArray2OfCirc2d_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColgp_Array2OfCirc2d

        """
        return _TColgp.TColgp_HArray2OfCirc2d_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColgp_Array2OfCirc2d

        """
        return _TColgp.TColgp_HArray2OfCirc2d_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray2OfCirc2d self)"""
        return _TColgp.TColgp_HArray2OfCirc2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray2OfCirc2d self) -> Handle_TColgp_HArray2OfCirc2d"""
        return _TColgp.TColgp_HArray2OfCirc2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray2OfCirc2d.Init = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_Init,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d.ColLength = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_ColLength,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d.RowLength = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_RowLength,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d.LowerCol = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_LowerCol,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d.LowerRow = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_LowerRow,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d.UpperCol = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_UpperCol,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d.UpperRow = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_UpperRow,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d.SetValue = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_SetValue,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d.Value = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_Value,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_ChangeValue,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d.Array2 = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_Array2,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d.ChangeArray2 = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_ChangeArray2,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d__kill_pointed,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d.GetHandle = new_instancemethod(_TColgp.TColgp_HArray2OfCirc2d_GetHandle,None,TColgp_HArray2OfCirc2d)
TColgp_HArray2OfCirc2d_swigregister = _TColgp.TColgp_HArray2OfCirc2d_swigregister
TColgp_HArray2OfCirc2d_swigregister(TColgp_HArray2OfCirc2d)

class Handle_TColgp_HArray2OfCirc2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray2OfCirc2d_swiginit(self,_TColgp.new_Handle_TColgp_HArray2OfCirc2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray2OfCirc2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray2OfCirc2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfCirc2d_Nullify,None,Handle_TColgp_HArray2OfCirc2d)
Handle_TColgp_HArray2OfCirc2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfCirc2d_IsNull,None,Handle_TColgp_HArray2OfCirc2d)
Handle_TColgp_HArray2OfCirc2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfCirc2d_GetObject,None,Handle_TColgp_HArray2OfCirc2d)
Handle_TColgp_HArray2OfCirc2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfCirc2d__kill_pointed,None,Handle_TColgp_HArray2OfCirc2d)
Handle_TColgp_HArray2OfCirc2d_swigregister = _TColgp.Handle_TColgp_HArray2OfCirc2d_swigregister
Handle_TColgp_HArray2OfCirc2d_swigregister(Handle_TColgp_HArray2OfCirc2d)

def Handle_TColgp_HArray2OfCirc2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray2OfCirc2d_DownCast(*args)
Handle_TColgp_HArray2OfCirc2d_DownCast = _TColgp.Handle_TColgp_HArray2OfCirc2d_DownCast

class TColgp_HArray2OfDir(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: gp_Dir
        :rtype: None

        """
        _TColgp.TColgp_HArray2OfDir_swiginit(self,_TColgp.new_TColgp_HArray2OfDir(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Dir
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfDir_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfDir_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfDir_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfDir_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfDir_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfDir_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfDir_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Dir
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfDir_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_HArray2OfDir_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_HArray2OfDir_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColgp_Array2OfDir

        """
        return _TColgp.TColgp_HArray2OfDir_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColgp_Array2OfDir

        """
        return _TColgp.TColgp_HArray2OfDir_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray2OfDir self)"""
        return _TColgp.TColgp_HArray2OfDir__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray2OfDir self) -> Handle_TColgp_HArray2OfDir"""
        return _TColgp.TColgp_HArray2OfDir_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray2OfDir.Init = new_instancemethod(_TColgp.TColgp_HArray2OfDir_Init,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir.ColLength = new_instancemethod(_TColgp.TColgp_HArray2OfDir_ColLength,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir.RowLength = new_instancemethod(_TColgp.TColgp_HArray2OfDir_RowLength,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir.LowerCol = new_instancemethod(_TColgp.TColgp_HArray2OfDir_LowerCol,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir.LowerRow = new_instancemethod(_TColgp.TColgp_HArray2OfDir_LowerRow,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir.UpperCol = new_instancemethod(_TColgp.TColgp_HArray2OfDir_UpperCol,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir.UpperRow = new_instancemethod(_TColgp.TColgp_HArray2OfDir_UpperRow,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir.SetValue = new_instancemethod(_TColgp.TColgp_HArray2OfDir_SetValue,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir.Value = new_instancemethod(_TColgp.TColgp_HArray2OfDir_Value,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray2OfDir_ChangeValue,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir.Array2 = new_instancemethod(_TColgp.TColgp_HArray2OfDir_Array2,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir.ChangeArray2 = new_instancemethod(_TColgp.TColgp_HArray2OfDir_ChangeArray2,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray2OfDir__kill_pointed,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir.GetHandle = new_instancemethod(_TColgp.TColgp_HArray2OfDir_GetHandle,None,TColgp_HArray2OfDir)
TColgp_HArray2OfDir_swigregister = _TColgp.TColgp_HArray2OfDir_swigregister
TColgp_HArray2OfDir_swigregister(TColgp_HArray2OfDir)

class Handle_TColgp_HArray2OfDir(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray2OfDir_swiginit(self,_TColgp.new_Handle_TColgp_HArray2OfDir(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray2OfDir_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray2OfDir.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfDir_Nullify,None,Handle_TColgp_HArray2OfDir)
Handle_TColgp_HArray2OfDir.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfDir_IsNull,None,Handle_TColgp_HArray2OfDir)
Handle_TColgp_HArray2OfDir.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfDir_GetObject,None,Handle_TColgp_HArray2OfDir)
Handle_TColgp_HArray2OfDir._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfDir__kill_pointed,None,Handle_TColgp_HArray2OfDir)
Handle_TColgp_HArray2OfDir_swigregister = _TColgp.Handle_TColgp_HArray2OfDir_swigregister
Handle_TColgp_HArray2OfDir_swigregister(Handle_TColgp_HArray2OfDir)

def Handle_TColgp_HArray2OfDir_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray2OfDir_DownCast(*args)
Handle_TColgp_HArray2OfDir_DownCast = _TColgp.Handle_TColgp_HArray2OfDir_DownCast

class TColgp_HArray2OfDir2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: gp_Dir2d
        :rtype: None

        """
        _TColgp.TColgp_HArray2OfDir2d_swiginit(self,_TColgp.new_TColgp_HArray2OfDir2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Dir2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfDir2d_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfDir2d_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfDir2d_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfDir2d_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfDir2d_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfDir2d_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfDir2d_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Dir2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfDir2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_HArray2OfDir2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_HArray2OfDir2d_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColgp_Array2OfDir2d

        """
        return _TColgp.TColgp_HArray2OfDir2d_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColgp_Array2OfDir2d

        """
        return _TColgp.TColgp_HArray2OfDir2d_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray2OfDir2d self)"""
        return _TColgp.TColgp_HArray2OfDir2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray2OfDir2d self) -> Handle_TColgp_HArray2OfDir2d"""
        return _TColgp.TColgp_HArray2OfDir2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray2OfDir2d.Init = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_Init,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d.ColLength = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_ColLength,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d.RowLength = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_RowLength,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d.LowerCol = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_LowerCol,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d.LowerRow = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_LowerRow,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d.UpperCol = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_UpperCol,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d.UpperRow = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_UpperRow,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d.SetValue = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_SetValue,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d.Value = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_Value,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_ChangeValue,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d.Array2 = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_Array2,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d.ChangeArray2 = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_ChangeArray2,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d__kill_pointed,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d.GetHandle = new_instancemethod(_TColgp.TColgp_HArray2OfDir2d_GetHandle,None,TColgp_HArray2OfDir2d)
TColgp_HArray2OfDir2d_swigregister = _TColgp.TColgp_HArray2OfDir2d_swigregister
TColgp_HArray2OfDir2d_swigregister(TColgp_HArray2OfDir2d)

class Handle_TColgp_HArray2OfDir2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray2OfDir2d_swiginit(self,_TColgp.new_Handle_TColgp_HArray2OfDir2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray2OfDir2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray2OfDir2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfDir2d_Nullify,None,Handle_TColgp_HArray2OfDir2d)
Handle_TColgp_HArray2OfDir2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfDir2d_IsNull,None,Handle_TColgp_HArray2OfDir2d)
Handle_TColgp_HArray2OfDir2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfDir2d_GetObject,None,Handle_TColgp_HArray2OfDir2d)
Handle_TColgp_HArray2OfDir2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfDir2d__kill_pointed,None,Handle_TColgp_HArray2OfDir2d)
Handle_TColgp_HArray2OfDir2d_swigregister = _TColgp.Handle_TColgp_HArray2OfDir2d_swigregister
Handle_TColgp_HArray2OfDir2d_swigregister(Handle_TColgp_HArray2OfDir2d)

def Handle_TColgp_HArray2OfDir2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray2OfDir2d_DownCast(*args)
Handle_TColgp_HArray2OfDir2d_DownCast = _TColgp.Handle_TColgp_HArray2OfDir2d_DownCast

class TColgp_HArray2OfLin2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: gp_Lin2d
        :rtype: None

        """
        _TColgp.TColgp_HArray2OfLin2d_swiginit(self,_TColgp.new_TColgp_HArray2OfLin2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Lin2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfLin2d_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfLin2d_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfLin2d_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfLin2d_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfLin2d_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfLin2d_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfLin2d_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Lin2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfLin2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Lin2d

        """
        return _TColgp.TColgp_HArray2OfLin2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Lin2d

        """
        return _TColgp.TColgp_HArray2OfLin2d_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColgp_Array2OfLin2d

        """
        return _TColgp.TColgp_HArray2OfLin2d_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColgp_Array2OfLin2d

        """
        return _TColgp.TColgp_HArray2OfLin2d_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray2OfLin2d self)"""
        return _TColgp.TColgp_HArray2OfLin2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray2OfLin2d self) -> Handle_TColgp_HArray2OfLin2d"""
        return _TColgp.TColgp_HArray2OfLin2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray2OfLin2d.Init = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_Init,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d.ColLength = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_ColLength,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d.RowLength = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_RowLength,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d.LowerCol = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_LowerCol,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d.LowerRow = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_LowerRow,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d.UpperCol = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_UpperCol,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d.UpperRow = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_UpperRow,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d.SetValue = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_SetValue,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d.Value = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_Value,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_ChangeValue,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d.Array2 = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_Array2,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d.ChangeArray2 = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_ChangeArray2,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d__kill_pointed,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d.GetHandle = new_instancemethod(_TColgp.TColgp_HArray2OfLin2d_GetHandle,None,TColgp_HArray2OfLin2d)
TColgp_HArray2OfLin2d_swigregister = _TColgp.TColgp_HArray2OfLin2d_swigregister
TColgp_HArray2OfLin2d_swigregister(TColgp_HArray2OfLin2d)

class Handle_TColgp_HArray2OfLin2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray2OfLin2d_swiginit(self,_TColgp.new_Handle_TColgp_HArray2OfLin2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray2OfLin2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray2OfLin2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfLin2d_Nullify,None,Handle_TColgp_HArray2OfLin2d)
Handle_TColgp_HArray2OfLin2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfLin2d_IsNull,None,Handle_TColgp_HArray2OfLin2d)
Handle_TColgp_HArray2OfLin2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfLin2d_GetObject,None,Handle_TColgp_HArray2OfLin2d)
Handle_TColgp_HArray2OfLin2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfLin2d__kill_pointed,None,Handle_TColgp_HArray2OfLin2d)
Handle_TColgp_HArray2OfLin2d_swigregister = _TColgp.Handle_TColgp_HArray2OfLin2d_swigregister
Handle_TColgp_HArray2OfLin2d_swigregister(Handle_TColgp_HArray2OfLin2d)

def Handle_TColgp_HArray2OfLin2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray2OfLin2d_DownCast(*args)
Handle_TColgp_HArray2OfLin2d_DownCast = _TColgp.Handle_TColgp_HArray2OfLin2d_DownCast

class TColgp_HArray2OfPnt(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: gp_Pnt
        :rtype: None

        """
        _TColgp.TColgp_HArray2OfPnt_swiginit(self,_TColgp.new_TColgp_HArray2OfPnt(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Pnt
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfPnt_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfPnt_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfPnt_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfPnt_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfPnt_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfPnt_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfPnt_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Pnt
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfPnt_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_HArray2OfPnt_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_HArray2OfPnt_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColgp_Array2OfPnt

        """
        return _TColgp.TColgp_HArray2OfPnt_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColgp_Array2OfPnt

        """
        return _TColgp.TColgp_HArray2OfPnt_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray2OfPnt self)"""
        return _TColgp.TColgp_HArray2OfPnt__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray2OfPnt self) -> Handle_TColgp_HArray2OfPnt"""
        return _TColgp.TColgp_HArray2OfPnt_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray2OfPnt.Init = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_Init,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt.ColLength = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_ColLength,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt.RowLength = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_RowLength,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt.LowerCol = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_LowerCol,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt.LowerRow = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_LowerRow,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt.UpperCol = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_UpperCol,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt.UpperRow = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_UpperRow,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt.SetValue = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_SetValue,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt.Value = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_Value,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_ChangeValue,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt.Array2 = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_Array2,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt.ChangeArray2 = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_ChangeArray2,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray2OfPnt__kill_pointed,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt.GetHandle = new_instancemethod(_TColgp.TColgp_HArray2OfPnt_GetHandle,None,TColgp_HArray2OfPnt)
TColgp_HArray2OfPnt_swigregister = _TColgp.TColgp_HArray2OfPnt_swigregister
TColgp_HArray2OfPnt_swigregister(TColgp_HArray2OfPnt)

class Handle_TColgp_HArray2OfPnt(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray2OfPnt_swiginit(self,_TColgp.new_Handle_TColgp_HArray2OfPnt(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray2OfPnt_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray2OfPnt.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfPnt_Nullify,None,Handle_TColgp_HArray2OfPnt)
Handle_TColgp_HArray2OfPnt.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfPnt_IsNull,None,Handle_TColgp_HArray2OfPnt)
Handle_TColgp_HArray2OfPnt.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfPnt_GetObject,None,Handle_TColgp_HArray2OfPnt)
Handle_TColgp_HArray2OfPnt._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfPnt__kill_pointed,None,Handle_TColgp_HArray2OfPnt)
Handle_TColgp_HArray2OfPnt_swigregister = _TColgp.Handle_TColgp_HArray2OfPnt_swigregister
Handle_TColgp_HArray2OfPnt_swigregister(Handle_TColgp_HArray2OfPnt)

def Handle_TColgp_HArray2OfPnt_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray2OfPnt_DownCast(*args)
Handle_TColgp_HArray2OfPnt_DownCast = _TColgp.Handle_TColgp_HArray2OfPnt_DownCast

class TColgp_HArray2OfPnt2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: gp_Pnt2d
        :rtype: None

        """
        _TColgp.TColgp_HArray2OfPnt2d_swiginit(self,_TColgp.new_TColgp_HArray2OfPnt2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Pnt2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfPnt2d_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfPnt2d_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfPnt2d_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfPnt2d_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfPnt2d_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfPnt2d_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfPnt2d_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Pnt2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfPnt2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_HArray2OfPnt2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_HArray2OfPnt2d_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColgp_Array2OfPnt2d

        """
        return _TColgp.TColgp_HArray2OfPnt2d_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColgp_Array2OfPnt2d

        """
        return _TColgp.TColgp_HArray2OfPnt2d_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray2OfPnt2d self)"""
        return _TColgp.TColgp_HArray2OfPnt2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray2OfPnt2d self) -> Handle_TColgp_HArray2OfPnt2d"""
        return _TColgp.TColgp_HArray2OfPnt2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray2OfPnt2d.Init = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_Init,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d.ColLength = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_ColLength,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d.RowLength = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_RowLength,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d.LowerCol = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_LowerCol,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d.LowerRow = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_LowerRow,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d.UpperCol = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_UpperCol,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d.UpperRow = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_UpperRow,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d.SetValue = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_SetValue,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d.Value = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_Value,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_ChangeValue,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d.Array2 = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_Array2,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d.ChangeArray2 = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_ChangeArray2,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d__kill_pointed,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d.GetHandle = new_instancemethod(_TColgp.TColgp_HArray2OfPnt2d_GetHandle,None,TColgp_HArray2OfPnt2d)
TColgp_HArray2OfPnt2d_swigregister = _TColgp.TColgp_HArray2OfPnt2d_swigregister
TColgp_HArray2OfPnt2d_swigregister(TColgp_HArray2OfPnt2d)

class Handle_TColgp_HArray2OfPnt2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray2OfPnt2d_swiginit(self,_TColgp.new_Handle_TColgp_HArray2OfPnt2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray2OfPnt2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray2OfPnt2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfPnt2d_Nullify,None,Handle_TColgp_HArray2OfPnt2d)
Handle_TColgp_HArray2OfPnt2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfPnt2d_IsNull,None,Handle_TColgp_HArray2OfPnt2d)
Handle_TColgp_HArray2OfPnt2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfPnt2d_GetObject,None,Handle_TColgp_HArray2OfPnt2d)
Handle_TColgp_HArray2OfPnt2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfPnt2d__kill_pointed,None,Handle_TColgp_HArray2OfPnt2d)
Handle_TColgp_HArray2OfPnt2d_swigregister = _TColgp.Handle_TColgp_HArray2OfPnt2d_swigregister
Handle_TColgp_HArray2OfPnt2d_swigregister(Handle_TColgp_HArray2OfPnt2d)

def Handle_TColgp_HArray2OfPnt2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray2OfPnt2d_DownCast(*args)
Handle_TColgp_HArray2OfPnt2d_DownCast = _TColgp.Handle_TColgp_HArray2OfPnt2d_DownCast

class TColgp_HArray2OfVec(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: gp_Vec
        :rtype: None

        """
        _TColgp.TColgp_HArray2OfVec_swiginit(self,_TColgp.new_TColgp_HArray2OfVec(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Vec
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfVec_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfVec_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfVec_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfVec_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfVec_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfVec_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfVec_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Vec
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfVec_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_HArray2OfVec_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_HArray2OfVec_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColgp_Array2OfVec

        """
        return _TColgp.TColgp_HArray2OfVec_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColgp_Array2OfVec

        """
        return _TColgp.TColgp_HArray2OfVec_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray2OfVec self)"""
        return _TColgp.TColgp_HArray2OfVec__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray2OfVec self) -> Handle_TColgp_HArray2OfVec"""
        return _TColgp.TColgp_HArray2OfVec_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray2OfVec.Init = new_instancemethod(_TColgp.TColgp_HArray2OfVec_Init,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec.ColLength = new_instancemethod(_TColgp.TColgp_HArray2OfVec_ColLength,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec.RowLength = new_instancemethod(_TColgp.TColgp_HArray2OfVec_RowLength,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec.LowerCol = new_instancemethod(_TColgp.TColgp_HArray2OfVec_LowerCol,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec.LowerRow = new_instancemethod(_TColgp.TColgp_HArray2OfVec_LowerRow,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec.UpperCol = new_instancemethod(_TColgp.TColgp_HArray2OfVec_UpperCol,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec.UpperRow = new_instancemethod(_TColgp.TColgp_HArray2OfVec_UpperRow,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec.SetValue = new_instancemethod(_TColgp.TColgp_HArray2OfVec_SetValue,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec.Value = new_instancemethod(_TColgp.TColgp_HArray2OfVec_Value,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray2OfVec_ChangeValue,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec.Array2 = new_instancemethod(_TColgp.TColgp_HArray2OfVec_Array2,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec.ChangeArray2 = new_instancemethod(_TColgp.TColgp_HArray2OfVec_ChangeArray2,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray2OfVec__kill_pointed,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec.GetHandle = new_instancemethod(_TColgp.TColgp_HArray2OfVec_GetHandle,None,TColgp_HArray2OfVec)
TColgp_HArray2OfVec_swigregister = _TColgp.TColgp_HArray2OfVec_swigregister
TColgp_HArray2OfVec_swigregister(TColgp_HArray2OfVec)

class Handle_TColgp_HArray2OfVec(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray2OfVec_swiginit(self,_TColgp.new_Handle_TColgp_HArray2OfVec(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray2OfVec_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray2OfVec.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfVec_Nullify,None,Handle_TColgp_HArray2OfVec)
Handle_TColgp_HArray2OfVec.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfVec_IsNull,None,Handle_TColgp_HArray2OfVec)
Handle_TColgp_HArray2OfVec.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfVec_GetObject,None,Handle_TColgp_HArray2OfVec)
Handle_TColgp_HArray2OfVec._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfVec__kill_pointed,None,Handle_TColgp_HArray2OfVec)
Handle_TColgp_HArray2OfVec_swigregister = _TColgp.Handle_TColgp_HArray2OfVec_swigregister
Handle_TColgp_HArray2OfVec_swigregister(Handle_TColgp_HArray2OfVec)

def Handle_TColgp_HArray2OfVec_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray2OfVec_DownCast(*args)
Handle_TColgp_HArray2OfVec_DownCast = _TColgp.Handle_TColgp_HArray2OfVec_DownCast

class TColgp_HArray2OfVec2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: gp_Vec2d
        :rtype: None

        """
        _TColgp.TColgp_HArray2OfVec2d_swiginit(self,_TColgp.new_TColgp_HArray2OfVec2d(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_Vec2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfVec2d_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfVec2d_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfVec2d_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfVec2d_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfVec2d_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfVec2d_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfVec2d_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_Vec2d
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfVec2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_HArray2OfVec2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_HArray2OfVec2d_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColgp_Array2OfVec2d

        """
        return _TColgp.TColgp_HArray2OfVec2d_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColgp_Array2OfVec2d

        """
        return _TColgp.TColgp_HArray2OfVec2d_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray2OfVec2d self)"""
        return _TColgp.TColgp_HArray2OfVec2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray2OfVec2d self) -> Handle_TColgp_HArray2OfVec2d"""
        return _TColgp.TColgp_HArray2OfVec2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray2OfVec2d.Init = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_Init,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d.ColLength = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_ColLength,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d.RowLength = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_RowLength,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d.LowerCol = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_LowerCol,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d.LowerRow = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_LowerRow,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d.UpperCol = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_UpperCol,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d.UpperRow = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_UpperRow,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d.SetValue = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_SetValue,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d.Value = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_Value,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_ChangeValue,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d.Array2 = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_Array2,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d.ChangeArray2 = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_ChangeArray2,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d__kill_pointed,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d.GetHandle = new_instancemethod(_TColgp.TColgp_HArray2OfVec2d_GetHandle,None,TColgp_HArray2OfVec2d)
TColgp_HArray2OfVec2d_swigregister = _TColgp.TColgp_HArray2OfVec2d_swigregister
TColgp_HArray2OfVec2d_swigregister(TColgp_HArray2OfVec2d)

class Handle_TColgp_HArray2OfVec2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray2OfVec2d_swiginit(self,_TColgp.new_Handle_TColgp_HArray2OfVec2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray2OfVec2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray2OfVec2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfVec2d_Nullify,None,Handle_TColgp_HArray2OfVec2d)
Handle_TColgp_HArray2OfVec2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfVec2d_IsNull,None,Handle_TColgp_HArray2OfVec2d)
Handle_TColgp_HArray2OfVec2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfVec2d_GetObject,None,Handle_TColgp_HArray2OfVec2d)
Handle_TColgp_HArray2OfVec2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfVec2d__kill_pointed,None,Handle_TColgp_HArray2OfVec2d)
Handle_TColgp_HArray2OfVec2d_swigregister = _TColgp.Handle_TColgp_HArray2OfVec2d_swigregister
Handle_TColgp_HArray2OfVec2d_swigregister(Handle_TColgp_HArray2OfVec2d)

def Handle_TColgp_HArray2OfVec2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray2OfVec2d_DownCast(*args)
Handle_TColgp_HArray2OfVec2d_DownCast = _TColgp.Handle_TColgp_HArray2OfVec2d_DownCast

class TColgp_HArray2OfXY(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: gp_XY
        :rtype: None

        """
        _TColgp.TColgp_HArray2OfXY_swiginit(self,_TColgp.new_TColgp_HArray2OfXY(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_XY
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfXY_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfXY_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfXY_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfXY_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfXY_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfXY_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfXY_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_XY
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfXY_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_XY

        """
        return _TColgp.TColgp_HArray2OfXY_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_XY

        """
        return _TColgp.TColgp_HArray2OfXY_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColgp_Array2OfXY

        """
        return _TColgp.TColgp_HArray2OfXY_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColgp_Array2OfXY

        """
        return _TColgp.TColgp_HArray2OfXY_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray2OfXY self)"""
        return _TColgp.TColgp_HArray2OfXY__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray2OfXY self) -> Handle_TColgp_HArray2OfXY"""
        return _TColgp.TColgp_HArray2OfXY_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray2OfXY.Init = new_instancemethod(_TColgp.TColgp_HArray2OfXY_Init,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY.ColLength = new_instancemethod(_TColgp.TColgp_HArray2OfXY_ColLength,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY.RowLength = new_instancemethod(_TColgp.TColgp_HArray2OfXY_RowLength,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY.LowerCol = new_instancemethod(_TColgp.TColgp_HArray2OfXY_LowerCol,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY.LowerRow = new_instancemethod(_TColgp.TColgp_HArray2OfXY_LowerRow,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY.UpperCol = new_instancemethod(_TColgp.TColgp_HArray2OfXY_UpperCol,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY.UpperRow = new_instancemethod(_TColgp.TColgp_HArray2OfXY_UpperRow,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY.SetValue = new_instancemethod(_TColgp.TColgp_HArray2OfXY_SetValue,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY.Value = new_instancemethod(_TColgp.TColgp_HArray2OfXY_Value,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray2OfXY_ChangeValue,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY.Array2 = new_instancemethod(_TColgp.TColgp_HArray2OfXY_Array2,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY.ChangeArray2 = new_instancemethod(_TColgp.TColgp_HArray2OfXY_ChangeArray2,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray2OfXY__kill_pointed,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY.GetHandle = new_instancemethod(_TColgp.TColgp_HArray2OfXY_GetHandle,None,TColgp_HArray2OfXY)
TColgp_HArray2OfXY_swigregister = _TColgp.TColgp_HArray2OfXY_swigregister
TColgp_HArray2OfXY_swigregister(TColgp_HArray2OfXY)

class Handle_TColgp_HArray2OfXY(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray2OfXY_swiginit(self,_TColgp.new_Handle_TColgp_HArray2OfXY(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray2OfXY_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray2OfXY.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfXY_Nullify,None,Handle_TColgp_HArray2OfXY)
Handle_TColgp_HArray2OfXY.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfXY_IsNull,None,Handle_TColgp_HArray2OfXY)
Handle_TColgp_HArray2OfXY.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfXY_GetObject,None,Handle_TColgp_HArray2OfXY)
Handle_TColgp_HArray2OfXY._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfXY__kill_pointed,None,Handle_TColgp_HArray2OfXY)
Handle_TColgp_HArray2OfXY_swigregister = _TColgp.Handle_TColgp_HArray2OfXY_swigregister
Handle_TColgp_HArray2OfXY_swigregister(Handle_TColgp_HArray2OfXY)

def Handle_TColgp_HArray2OfXY_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray2OfXY_DownCast(*args)
Handle_TColgp_HArray2OfXY_DownCast = _TColgp.Handle_TColgp_HArray2OfXY_DownCast

class TColgp_HArray2OfXYZ(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: gp_XYZ
        :rtype: None

        """
        _TColgp.TColgp_HArray2OfXYZ_swiginit(self,_TColgp.new_TColgp_HArray2OfXYZ(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: gp_XYZ
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfXYZ_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfXYZ_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfXYZ_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfXYZ_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfXYZ_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfXYZ_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HArray2OfXYZ_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: gp_XYZ
        :rtype: None

        """
        return _TColgp.TColgp_HArray2OfXYZ_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_HArray2OfXYZ_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_HArray2OfXYZ_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TColgp_Array2OfXYZ

        """
        return _TColgp.TColgp_HArray2OfXYZ_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TColgp_Array2OfXYZ

        """
        return _TColgp.TColgp_HArray2OfXYZ_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HArray2OfXYZ self)"""
        return _TColgp.TColgp_HArray2OfXYZ__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HArray2OfXYZ self) -> Handle_TColgp_HArray2OfXYZ"""
        return _TColgp.TColgp_HArray2OfXYZ_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HArray2OfXYZ.Init = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_Init,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ.ColLength = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_ColLength,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ.RowLength = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_RowLength,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ.LowerCol = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_LowerCol,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ.LowerRow = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_LowerRow,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ.UpperCol = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_UpperCol,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ.UpperRow = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_UpperRow,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ.SetValue = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_SetValue,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ.Value = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_Value,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ.ChangeValue = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_ChangeValue,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ.Array2 = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_Array2,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ.ChangeArray2 = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_ChangeArray2,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ._kill_pointed = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ__kill_pointed,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ.GetHandle = new_instancemethod(_TColgp.TColgp_HArray2OfXYZ_GetHandle,None,TColgp_HArray2OfXYZ)
TColgp_HArray2OfXYZ_swigregister = _TColgp.TColgp_HArray2OfXYZ_swigregister
TColgp_HArray2OfXYZ_swigregister(TColgp_HArray2OfXYZ)

class Handle_TColgp_HArray2OfXYZ(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HArray2OfXYZ_swiginit(self,_TColgp.new_Handle_TColgp_HArray2OfXYZ(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HArray2OfXYZ_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HArray2OfXYZ.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfXYZ_Nullify,None,Handle_TColgp_HArray2OfXYZ)
Handle_TColgp_HArray2OfXYZ.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfXYZ_IsNull,None,Handle_TColgp_HArray2OfXYZ)
Handle_TColgp_HArray2OfXYZ.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfXYZ_GetObject,None,Handle_TColgp_HArray2OfXYZ)
Handle_TColgp_HArray2OfXYZ._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HArray2OfXYZ__kill_pointed,None,Handle_TColgp_HArray2OfXYZ)
Handle_TColgp_HArray2OfXYZ_swigregister = _TColgp.Handle_TColgp_HArray2OfXYZ_swigregister
Handle_TColgp_HArray2OfXYZ_swigregister(Handle_TColgp_HArray2OfXYZ)

def Handle_TColgp_HArray2OfXYZ_DownCast(*args):
  return _TColgp.Handle_TColgp_HArray2OfXYZ_DownCast(*args)
Handle_TColgp_HArray2OfXYZ_DownCast = _TColgp.Handle_TColgp_HArray2OfXYZ_DownCast

class TColgp_HSequenceOfDir(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_HSequenceOfDir_swiginit(self,_TColgp.new_TColgp_HSequenceOfDir(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_HSequenceOfDir_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HSequenceOfDir_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: gp_Dir
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfDir
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: gp_Dir
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfDir
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Dir
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfDir
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Dir
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfDir
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColgp_HSequenceOfDir

        """
        return _TColgp.TColgp_HSequenceOfDir_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Dir
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_HSequenceOfDir_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_HSequenceOfDir_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColgp_SequenceOfDir

        """
        return _TColgp.TColgp_HSequenceOfDir_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColgp_SequenceOfDir

        """
        return _TColgp.TColgp_HSequenceOfDir_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColgp_HSequenceOfDir

        """
        return _TColgp.TColgp_HSequenceOfDir_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HSequenceOfDir self)"""
        return _TColgp.TColgp_HSequenceOfDir__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HSequenceOfDir self) -> Handle_TColgp_HSequenceOfDir"""
        return _TColgp.TColgp_HSequenceOfDir_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HSequenceOfDir.IsEmpty = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_IsEmpty,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.Length = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_Length,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.Clear = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_Clear,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.Append = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_Append,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.Prepend = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_Prepend,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.Reverse = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_Reverse,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.InsertBefore = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_InsertBefore,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.InsertAfter = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_InsertAfter,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.Exchange = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_Exchange,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.Split = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_Split,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.SetValue = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_SetValue,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.Value = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_Value,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.ChangeValue = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_ChangeValue,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.Remove = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_Remove,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.Sequence = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_Sequence,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.ChangeSequence = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_ChangeSequence,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.ShallowCopy = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_ShallowCopy,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir._kill_pointed = new_instancemethod(_TColgp.TColgp_HSequenceOfDir__kill_pointed,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir.GetHandle = new_instancemethod(_TColgp.TColgp_HSequenceOfDir_GetHandle,None,TColgp_HSequenceOfDir)
TColgp_HSequenceOfDir_swigregister = _TColgp.TColgp_HSequenceOfDir_swigregister
TColgp_HSequenceOfDir_swigregister(TColgp_HSequenceOfDir)

class Handle_TColgp_HSequenceOfDir(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HSequenceOfDir_swiginit(self,_TColgp.new_Handle_TColgp_HSequenceOfDir(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HSequenceOfDir_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HSequenceOfDir.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfDir_Nullify,None,Handle_TColgp_HSequenceOfDir)
Handle_TColgp_HSequenceOfDir.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfDir_IsNull,None,Handle_TColgp_HSequenceOfDir)
Handle_TColgp_HSequenceOfDir.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfDir_GetObject,None,Handle_TColgp_HSequenceOfDir)
Handle_TColgp_HSequenceOfDir._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfDir__kill_pointed,None,Handle_TColgp_HSequenceOfDir)
Handle_TColgp_HSequenceOfDir_swigregister = _TColgp.Handle_TColgp_HSequenceOfDir_swigregister
Handle_TColgp_HSequenceOfDir_swigregister(Handle_TColgp_HSequenceOfDir)

def Handle_TColgp_HSequenceOfDir_DownCast(*args):
  return _TColgp.Handle_TColgp_HSequenceOfDir_DownCast(*args)
Handle_TColgp_HSequenceOfDir_DownCast = _TColgp.Handle_TColgp_HSequenceOfDir_DownCast

class TColgp_HSequenceOfDir2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_HSequenceOfDir2d_swiginit(self,_TColgp.new_TColgp_HSequenceOfDir2d(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_HSequenceOfDir2d_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HSequenceOfDir2d_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir2d_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: gp_Dir2d
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfDir2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir2d_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: gp_Dir2d
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfDir2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir2d_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir2d_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Dir2d
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfDir2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir2d_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Dir2d
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfDir2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir2d_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir2d_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColgp_HSequenceOfDir2d

        """
        return _TColgp.TColgp_HSequenceOfDir2d_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Dir2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_HSequenceOfDir2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_HSequenceOfDir2d_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfDir2d_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColgp_SequenceOfDir2d

        """
        return _TColgp.TColgp_HSequenceOfDir2d_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColgp_SequenceOfDir2d

        """
        return _TColgp.TColgp_HSequenceOfDir2d_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColgp_HSequenceOfDir2d

        """
        return _TColgp.TColgp_HSequenceOfDir2d_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HSequenceOfDir2d self)"""
        return _TColgp.TColgp_HSequenceOfDir2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HSequenceOfDir2d self) -> Handle_TColgp_HSequenceOfDir2d"""
        return _TColgp.TColgp_HSequenceOfDir2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HSequenceOfDir2d.IsEmpty = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_IsEmpty,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.Length = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_Length,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.Clear = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_Clear,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.Append = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_Append,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.Prepend = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_Prepend,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.Reverse = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_Reverse,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.InsertBefore = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_InsertBefore,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.InsertAfter = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_InsertAfter,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.Exchange = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_Exchange,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.Split = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_Split,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.SetValue = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_SetValue,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.Value = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_Value,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_ChangeValue,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.Remove = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_Remove,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.Sequence = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_Sequence,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.ChangeSequence = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_ChangeSequence,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.ShallowCopy = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_ShallowCopy,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d__kill_pointed,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d.GetHandle = new_instancemethod(_TColgp.TColgp_HSequenceOfDir2d_GetHandle,None,TColgp_HSequenceOfDir2d)
TColgp_HSequenceOfDir2d_swigregister = _TColgp.TColgp_HSequenceOfDir2d_swigregister
TColgp_HSequenceOfDir2d_swigregister(TColgp_HSequenceOfDir2d)

class Handle_TColgp_HSequenceOfDir2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HSequenceOfDir2d_swiginit(self,_TColgp.new_Handle_TColgp_HSequenceOfDir2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HSequenceOfDir2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HSequenceOfDir2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfDir2d_Nullify,None,Handle_TColgp_HSequenceOfDir2d)
Handle_TColgp_HSequenceOfDir2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfDir2d_IsNull,None,Handle_TColgp_HSequenceOfDir2d)
Handle_TColgp_HSequenceOfDir2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfDir2d_GetObject,None,Handle_TColgp_HSequenceOfDir2d)
Handle_TColgp_HSequenceOfDir2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfDir2d__kill_pointed,None,Handle_TColgp_HSequenceOfDir2d)
Handle_TColgp_HSequenceOfDir2d_swigregister = _TColgp.Handle_TColgp_HSequenceOfDir2d_swigregister
Handle_TColgp_HSequenceOfDir2d_swigregister(Handle_TColgp_HSequenceOfDir2d)

def Handle_TColgp_HSequenceOfDir2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HSequenceOfDir2d_DownCast(*args)
Handle_TColgp_HSequenceOfDir2d_DownCast = _TColgp.Handle_TColgp_HSequenceOfDir2d_DownCast

class TColgp_HSequenceOfPnt(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_HSequenceOfPnt_swiginit(self,_TColgp.new_TColgp_HSequenceOfPnt(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_HSequenceOfPnt_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HSequenceOfPnt_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: gp_Pnt
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfPnt
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: gp_Pnt
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfPnt
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Pnt
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfPnt
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Pnt
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfPnt
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColgp_HSequenceOfPnt

        """
        return _TColgp.TColgp_HSequenceOfPnt_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Pnt
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_HSequenceOfPnt_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_HSequenceOfPnt_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColgp_SequenceOfPnt

        """
        return _TColgp.TColgp_HSequenceOfPnt_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColgp_SequenceOfPnt

        """
        return _TColgp.TColgp_HSequenceOfPnt_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColgp_HSequenceOfPnt

        """
        return _TColgp.TColgp_HSequenceOfPnt_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HSequenceOfPnt self)"""
        return _TColgp.TColgp_HSequenceOfPnt__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HSequenceOfPnt self) -> Handle_TColgp_HSequenceOfPnt"""
        return _TColgp.TColgp_HSequenceOfPnt_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HSequenceOfPnt.IsEmpty = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_IsEmpty,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.Length = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_Length,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.Clear = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_Clear,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.Append = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_Append,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.Prepend = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_Prepend,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.Reverse = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_Reverse,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.InsertBefore = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_InsertBefore,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.InsertAfter = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_InsertAfter,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.Exchange = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_Exchange,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.Split = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_Split,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.SetValue = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_SetValue,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.Value = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_Value,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.ChangeValue = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_ChangeValue,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.Remove = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_Remove,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.Sequence = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_Sequence,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.ChangeSequence = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_ChangeSequence,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.ShallowCopy = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_ShallowCopy,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt._kill_pointed = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt__kill_pointed,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt.GetHandle = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt_GetHandle,None,TColgp_HSequenceOfPnt)
TColgp_HSequenceOfPnt_swigregister = _TColgp.TColgp_HSequenceOfPnt_swigregister
TColgp_HSequenceOfPnt_swigregister(TColgp_HSequenceOfPnt)

class Handle_TColgp_HSequenceOfPnt(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HSequenceOfPnt_swiginit(self,_TColgp.new_Handle_TColgp_HSequenceOfPnt(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HSequenceOfPnt_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HSequenceOfPnt.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfPnt_Nullify,None,Handle_TColgp_HSequenceOfPnt)
Handle_TColgp_HSequenceOfPnt.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfPnt_IsNull,None,Handle_TColgp_HSequenceOfPnt)
Handle_TColgp_HSequenceOfPnt.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfPnt_GetObject,None,Handle_TColgp_HSequenceOfPnt)
Handle_TColgp_HSequenceOfPnt._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfPnt__kill_pointed,None,Handle_TColgp_HSequenceOfPnt)
Handle_TColgp_HSequenceOfPnt_swigregister = _TColgp.Handle_TColgp_HSequenceOfPnt_swigregister
Handle_TColgp_HSequenceOfPnt_swigregister(Handle_TColgp_HSequenceOfPnt)

def Handle_TColgp_HSequenceOfPnt_DownCast(*args):
  return _TColgp.Handle_TColgp_HSequenceOfPnt_DownCast(*args)
Handle_TColgp_HSequenceOfPnt_DownCast = _TColgp.Handle_TColgp_HSequenceOfPnt_DownCast

class TColgp_HSequenceOfPnt2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_HSequenceOfPnt2d_swiginit(self,_TColgp.new_TColgp_HSequenceOfPnt2d(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: gp_Pnt2d
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: gp_Pnt2d
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Pnt2d
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Pnt2d
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColgp_HSequenceOfPnt2d

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Pnt2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColgp_SequenceOfPnt2d

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColgp_SequenceOfPnt2d

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColgp_HSequenceOfPnt2d

        """
        return _TColgp.TColgp_HSequenceOfPnt2d_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HSequenceOfPnt2d self)"""
        return _TColgp.TColgp_HSequenceOfPnt2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HSequenceOfPnt2d self) -> Handle_TColgp_HSequenceOfPnt2d"""
        return _TColgp.TColgp_HSequenceOfPnt2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HSequenceOfPnt2d.IsEmpty = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_IsEmpty,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.Length = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_Length,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.Clear = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_Clear,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.Append = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_Append,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.Prepend = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_Prepend,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.Reverse = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_Reverse,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.InsertBefore = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_InsertBefore,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.InsertAfter = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_InsertAfter,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.Exchange = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_Exchange,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.Split = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_Split,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.SetValue = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_SetValue,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.Value = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_Value,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_ChangeValue,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.Remove = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_Remove,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.Sequence = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_Sequence,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.ChangeSequence = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_ChangeSequence,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.ShallowCopy = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_ShallowCopy,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d__kill_pointed,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d.GetHandle = new_instancemethod(_TColgp.TColgp_HSequenceOfPnt2d_GetHandle,None,TColgp_HSequenceOfPnt2d)
TColgp_HSequenceOfPnt2d_swigregister = _TColgp.TColgp_HSequenceOfPnt2d_swigregister
TColgp_HSequenceOfPnt2d_swigregister(TColgp_HSequenceOfPnt2d)

class Handle_TColgp_HSequenceOfPnt2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HSequenceOfPnt2d_swiginit(self,_TColgp.new_Handle_TColgp_HSequenceOfPnt2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HSequenceOfPnt2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HSequenceOfPnt2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfPnt2d_Nullify,None,Handle_TColgp_HSequenceOfPnt2d)
Handle_TColgp_HSequenceOfPnt2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfPnt2d_IsNull,None,Handle_TColgp_HSequenceOfPnt2d)
Handle_TColgp_HSequenceOfPnt2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfPnt2d_GetObject,None,Handle_TColgp_HSequenceOfPnt2d)
Handle_TColgp_HSequenceOfPnt2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfPnt2d__kill_pointed,None,Handle_TColgp_HSequenceOfPnt2d)
Handle_TColgp_HSequenceOfPnt2d_swigregister = _TColgp.Handle_TColgp_HSequenceOfPnt2d_swigregister
Handle_TColgp_HSequenceOfPnt2d_swigregister(Handle_TColgp_HSequenceOfPnt2d)

def Handle_TColgp_HSequenceOfPnt2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HSequenceOfPnt2d_DownCast(*args)
Handle_TColgp_HSequenceOfPnt2d_DownCast = _TColgp.Handle_TColgp_HSequenceOfPnt2d_DownCast

class TColgp_HSequenceOfVec(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_HSequenceOfVec_swiginit(self,_TColgp.new_TColgp_HSequenceOfVec(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_HSequenceOfVec_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HSequenceOfVec_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: gp_Vec
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfVec
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: gp_Vec
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfVec
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Vec
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfVec
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Vec
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfVec
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColgp_HSequenceOfVec

        """
        return _TColgp.TColgp_HSequenceOfVec_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Vec
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_HSequenceOfVec_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_HSequenceOfVec_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColgp_SequenceOfVec

        """
        return _TColgp.TColgp_HSequenceOfVec_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColgp_SequenceOfVec

        """
        return _TColgp.TColgp_HSequenceOfVec_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColgp_HSequenceOfVec

        """
        return _TColgp.TColgp_HSequenceOfVec_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HSequenceOfVec self)"""
        return _TColgp.TColgp_HSequenceOfVec__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HSequenceOfVec self) -> Handle_TColgp_HSequenceOfVec"""
        return _TColgp.TColgp_HSequenceOfVec_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HSequenceOfVec.IsEmpty = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_IsEmpty,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.Length = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_Length,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.Clear = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_Clear,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.Append = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_Append,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.Prepend = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_Prepend,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.Reverse = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_Reverse,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.InsertBefore = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_InsertBefore,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.InsertAfter = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_InsertAfter,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.Exchange = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_Exchange,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.Split = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_Split,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.SetValue = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_SetValue,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.Value = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_Value,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.ChangeValue = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_ChangeValue,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.Remove = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_Remove,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.Sequence = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_Sequence,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.ChangeSequence = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_ChangeSequence,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.ShallowCopy = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_ShallowCopy,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec._kill_pointed = new_instancemethod(_TColgp.TColgp_HSequenceOfVec__kill_pointed,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec.GetHandle = new_instancemethod(_TColgp.TColgp_HSequenceOfVec_GetHandle,None,TColgp_HSequenceOfVec)
TColgp_HSequenceOfVec_swigregister = _TColgp.TColgp_HSequenceOfVec_swigregister
TColgp_HSequenceOfVec_swigregister(TColgp_HSequenceOfVec)

class Handle_TColgp_HSequenceOfVec(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HSequenceOfVec_swiginit(self,_TColgp.new_Handle_TColgp_HSequenceOfVec(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HSequenceOfVec_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HSequenceOfVec.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfVec_Nullify,None,Handle_TColgp_HSequenceOfVec)
Handle_TColgp_HSequenceOfVec.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfVec_IsNull,None,Handle_TColgp_HSequenceOfVec)
Handle_TColgp_HSequenceOfVec.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfVec_GetObject,None,Handle_TColgp_HSequenceOfVec)
Handle_TColgp_HSequenceOfVec._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfVec__kill_pointed,None,Handle_TColgp_HSequenceOfVec)
Handle_TColgp_HSequenceOfVec_swigregister = _TColgp.Handle_TColgp_HSequenceOfVec_swigregister
Handle_TColgp_HSequenceOfVec_swigregister(Handle_TColgp_HSequenceOfVec)

def Handle_TColgp_HSequenceOfVec_DownCast(*args):
  return _TColgp.Handle_TColgp_HSequenceOfVec_DownCast(*args)
Handle_TColgp_HSequenceOfVec_DownCast = _TColgp.Handle_TColgp_HSequenceOfVec_DownCast

class TColgp_HSequenceOfVec2d(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_HSequenceOfVec2d_swiginit(self,_TColgp.new_TColgp_HSequenceOfVec2d(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_HSequenceOfVec2d_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HSequenceOfVec2d_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec2d_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: gp_Vec2d
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfVec2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec2d_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: gp_Vec2d
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfVec2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec2d_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec2d_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Vec2d
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfVec2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec2d_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Vec2d
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfVec2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec2d_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec2d_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColgp_HSequenceOfVec2d

        """
        return _TColgp.TColgp_HSequenceOfVec2d_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_Vec2d
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec2d_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_HSequenceOfVec2d_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_HSequenceOfVec2d_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfVec2d_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColgp_SequenceOfVec2d

        """
        return _TColgp.TColgp_HSequenceOfVec2d_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColgp_SequenceOfVec2d

        """
        return _TColgp.TColgp_HSequenceOfVec2d_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColgp_HSequenceOfVec2d

        """
        return _TColgp.TColgp_HSequenceOfVec2d_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HSequenceOfVec2d self)"""
        return _TColgp.TColgp_HSequenceOfVec2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HSequenceOfVec2d self) -> Handle_TColgp_HSequenceOfVec2d"""
        return _TColgp.TColgp_HSequenceOfVec2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HSequenceOfVec2d.IsEmpty = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_IsEmpty,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.Length = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_Length,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.Clear = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_Clear,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.Append = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_Append,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.Prepend = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_Prepend,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.Reverse = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_Reverse,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.InsertBefore = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_InsertBefore,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.InsertAfter = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_InsertAfter,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.Exchange = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_Exchange,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.Split = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_Split,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.SetValue = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_SetValue,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.Value = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_Value,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.ChangeValue = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_ChangeValue,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.Remove = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_Remove,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.Sequence = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_Sequence,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.ChangeSequence = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_ChangeSequence,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.ShallowCopy = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_ShallowCopy,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d._kill_pointed = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d__kill_pointed,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d.GetHandle = new_instancemethod(_TColgp.TColgp_HSequenceOfVec2d_GetHandle,None,TColgp_HSequenceOfVec2d)
TColgp_HSequenceOfVec2d_swigregister = _TColgp.TColgp_HSequenceOfVec2d_swigregister
TColgp_HSequenceOfVec2d_swigregister(TColgp_HSequenceOfVec2d)

class Handle_TColgp_HSequenceOfVec2d(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HSequenceOfVec2d_swiginit(self,_TColgp.new_Handle_TColgp_HSequenceOfVec2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HSequenceOfVec2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HSequenceOfVec2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfVec2d_Nullify,None,Handle_TColgp_HSequenceOfVec2d)
Handle_TColgp_HSequenceOfVec2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfVec2d_IsNull,None,Handle_TColgp_HSequenceOfVec2d)
Handle_TColgp_HSequenceOfVec2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfVec2d_GetObject,None,Handle_TColgp_HSequenceOfVec2d)
Handle_TColgp_HSequenceOfVec2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfVec2d__kill_pointed,None,Handle_TColgp_HSequenceOfVec2d)
Handle_TColgp_HSequenceOfVec2d_swigregister = _TColgp.Handle_TColgp_HSequenceOfVec2d_swigregister
Handle_TColgp_HSequenceOfVec2d_swigregister(Handle_TColgp_HSequenceOfVec2d)

def Handle_TColgp_HSequenceOfVec2d_DownCast(*args):
  return _TColgp.Handle_TColgp_HSequenceOfVec2d_DownCast(*args)
Handle_TColgp_HSequenceOfVec2d_DownCast = _TColgp.Handle_TColgp_HSequenceOfVec2d_DownCast

class TColgp_HSequenceOfXY(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_HSequenceOfXY_swiginit(self,_TColgp.new_TColgp_HSequenceOfXY(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_HSequenceOfXY_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HSequenceOfXY_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXY_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: gp_XY
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfXY
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXY_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: gp_XY
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfXY
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXY_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXY_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_XY
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfXY
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXY_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_XY
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfXY
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXY_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXY_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColgp_HSequenceOfXY

        """
        return _TColgp.TColgp_HSequenceOfXY_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_XY
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXY_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_XY

        """
        return _TColgp.TColgp_HSequenceOfXY_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_XY

        """
        return _TColgp.TColgp_HSequenceOfXY_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXY_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColgp_SequenceOfXY

        """
        return _TColgp.TColgp_HSequenceOfXY_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColgp_SequenceOfXY

        """
        return _TColgp.TColgp_HSequenceOfXY_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColgp_HSequenceOfXY

        """
        return _TColgp.TColgp_HSequenceOfXY_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HSequenceOfXY self)"""
        return _TColgp.TColgp_HSequenceOfXY__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HSequenceOfXY self) -> Handle_TColgp_HSequenceOfXY"""
        return _TColgp.TColgp_HSequenceOfXY_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HSequenceOfXY.IsEmpty = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_IsEmpty,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.Length = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_Length,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.Clear = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_Clear,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.Append = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_Append,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.Prepend = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_Prepend,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.Reverse = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_Reverse,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.InsertBefore = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_InsertBefore,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.InsertAfter = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_InsertAfter,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.Exchange = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_Exchange,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.Split = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_Split,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.SetValue = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_SetValue,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.Value = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_Value,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.ChangeValue = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_ChangeValue,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.Remove = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_Remove,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.Sequence = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_Sequence,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.ChangeSequence = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_ChangeSequence,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.ShallowCopy = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_ShallowCopy,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY._kill_pointed = new_instancemethod(_TColgp.TColgp_HSequenceOfXY__kill_pointed,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY.GetHandle = new_instancemethod(_TColgp.TColgp_HSequenceOfXY_GetHandle,None,TColgp_HSequenceOfXY)
TColgp_HSequenceOfXY_swigregister = _TColgp.TColgp_HSequenceOfXY_swigregister
TColgp_HSequenceOfXY_swigregister(TColgp_HSequenceOfXY)

class Handle_TColgp_HSequenceOfXY(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HSequenceOfXY_swiginit(self,_TColgp.new_Handle_TColgp_HSequenceOfXY(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HSequenceOfXY_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HSequenceOfXY.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfXY_Nullify,None,Handle_TColgp_HSequenceOfXY)
Handle_TColgp_HSequenceOfXY.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfXY_IsNull,None,Handle_TColgp_HSequenceOfXY)
Handle_TColgp_HSequenceOfXY.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfXY_GetObject,None,Handle_TColgp_HSequenceOfXY)
Handle_TColgp_HSequenceOfXY._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfXY__kill_pointed,None,Handle_TColgp_HSequenceOfXY)
Handle_TColgp_HSequenceOfXY_swigregister = _TColgp.Handle_TColgp_HSequenceOfXY_swigregister
Handle_TColgp_HSequenceOfXY_swigregister(Handle_TColgp_HSequenceOfXY)

def Handle_TColgp_HSequenceOfXY_DownCast(*args):
  return _TColgp.Handle_TColgp_HSequenceOfXY_DownCast(*args)
Handle_TColgp_HSequenceOfXY_DownCast = _TColgp.Handle_TColgp_HSequenceOfXY_DownCast

class TColgp_HSequenceOfXYZ(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_HSequenceOfXYZ_swiginit(self,_TColgp.new_TColgp_HSequenceOfXYZ(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColgp.TColgp_HSequenceOfXYZ_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColgp.TColgp_HSequenceOfXYZ_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXYZ_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: gp_XYZ
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfXYZ
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXYZ_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: gp_XYZ
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfXYZ
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXYZ_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXYZ_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_XYZ
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfXYZ
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXYZ_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_XYZ
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColgp_HSequenceOfXYZ
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXYZ_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXYZ_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColgp_HSequenceOfXYZ

        """
        return _TColgp.TColgp_HSequenceOfXYZ_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: gp_XYZ
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXYZ_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_HSequenceOfXYZ_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_HSequenceOfXYZ_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_HSequenceOfXYZ_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TColgp_SequenceOfXYZ

        """
        return _TColgp.TColgp_HSequenceOfXYZ_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TColgp_SequenceOfXYZ

        """
        return _TColgp.TColgp_HSequenceOfXYZ_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColgp_HSequenceOfXYZ

        """
        return _TColgp.TColgp_HSequenceOfXYZ_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_HSequenceOfXYZ self)"""
        return _TColgp.TColgp_HSequenceOfXYZ__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_HSequenceOfXYZ self) -> Handle_TColgp_HSequenceOfXYZ"""
        return _TColgp.TColgp_HSequenceOfXYZ_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_HSequenceOfXYZ.IsEmpty = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_IsEmpty,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.Length = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_Length,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.Clear = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_Clear,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.Append = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_Append,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.Prepend = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_Prepend,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.Reverse = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_Reverse,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.InsertBefore = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_InsertBefore,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.InsertAfter = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_InsertAfter,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.Exchange = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_Exchange,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.Split = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_Split,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.SetValue = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_SetValue,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.Value = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_Value,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.ChangeValue = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_ChangeValue,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.Remove = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_Remove,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.Sequence = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_Sequence,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.ChangeSequence = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_ChangeSequence,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.ShallowCopy = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_ShallowCopy,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ._kill_pointed = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ__kill_pointed,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ.GetHandle = new_instancemethod(_TColgp.TColgp_HSequenceOfXYZ_GetHandle,None,TColgp_HSequenceOfXYZ)
TColgp_HSequenceOfXYZ_swigregister = _TColgp.TColgp_HSequenceOfXYZ_swigregister
TColgp_HSequenceOfXYZ_swigregister(TColgp_HSequenceOfXYZ)

class Handle_TColgp_HSequenceOfXYZ(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_HSequenceOfXYZ_swiginit(self,_TColgp.new_Handle_TColgp_HSequenceOfXYZ(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_HSequenceOfXYZ_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_HSequenceOfXYZ.Nullify = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfXYZ_Nullify,None,Handle_TColgp_HSequenceOfXYZ)
Handle_TColgp_HSequenceOfXYZ.IsNull = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfXYZ_IsNull,None,Handle_TColgp_HSequenceOfXYZ)
Handle_TColgp_HSequenceOfXYZ.GetObject = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfXYZ_GetObject,None,Handle_TColgp_HSequenceOfXYZ)
Handle_TColgp_HSequenceOfXYZ._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_HSequenceOfXYZ__kill_pointed,None,Handle_TColgp_HSequenceOfXYZ)
Handle_TColgp_HSequenceOfXYZ_swigregister = _TColgp.Handle_TColgp_HSequenceOfXYZ_swigregister
Handle_TColgp_HSequenceOfXYZ_swigregister(Handle_TColgp_HSequenceOfXYZ)

def Handle_TColgp_HSequenceOfXYZ_DownCast(*args):
  return _TColgp.Handle_TColgp_HSequenceOfXYZ_DownCast(*args)
Handle_TColgp_HSequenceOfXYZ_DownCast = _TColgp.Handle_TColgp_HSequenceOfXYZ_DownCast

class TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: Handle_TColgp_HArray1OfPnt2d
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColgp.TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_swiginit(self,_TColgp.new_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d(*args))
    def Value(self, *args):
        """
        :rtype: Handle_TColgp_HArray1OfPnt2d

        """
        return _TColgp.TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d self)"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d self) -> Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d.Value = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_Value,None,TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d)
TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d__kill_pointed,None,TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d)
TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d.GetHandle = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_GetHandle,None,TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d)
TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_swigregister = _TColgp.TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_swigregister
TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_swigregister(TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d)

class Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_swiginit(self,_TColgp.new_Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_Nullify,None,Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d)
Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_IsNull,None,Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d)
Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_GetObject,None,Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d)
Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d__kill_pointed,None,Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d)
Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_swigregister = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_swigregister
Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_swigregister(Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d)

def Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_DownCast(*args):
  return _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_DownCast(*args)
Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_DownCast = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfArray1OfPnt2d_DownCast

class TColgp_SequenceNodeOfSequenceOfDir(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: gp_Dir
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColgp.TColgp_SequenceNodeOfSequenceOfDir_swiginit(self,_TColgp.new_TColgp_SequenceNodeOfSequenceOfDir(*args))
    def Value(self, *args):
        """
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_SequenceNodeOfSequenceOfDir_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_SequenceNodeOfSequenceOfDir self)"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfDir__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_SequenceNodeOfSequenceOfDir self) -> Handle_TColgp_SequenceNodeOfSequenceOfDir"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfDir_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceNodeOfSequenceOfDir.Value = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfDir_Value,None,TColgp_SequenceNodeOfSequenceOfDir)
TColgp_SequenceNodeOfSequenceOfDir._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfDir__kill_pointed,None,TColgp_SequenceNodeOfSequenceOfDir)
TColgp_SequenceNodeOfSequenceOfDir.GetHandle = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfDir_GetHandle,None,TColgp_SequenceNodeOfSequenceOfDir)
TColgp_SequenceNodeOfSequenceOfDir_swigregister = _TColgp.TColgp_SequenceNodeOfSequenceOfDir_swigregister
TColgp_SequenceNodeOfSequenceOfDir_swigregister(TColgp_SequenceNodeOfSequenceOfDir)

class Handle_TColgp_SequenceNodeOfSequenceOfDir(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir_swiginit(self,_TColgp.new_Handle_TColgp_SequenceNodeOfSequenceOfDir(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_SequenceNodeOfSequenceOfDir.Nullify = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir_Nullify,None,Handle_TColgp_SequenceNodeOfSequenceOfDir)
Handle_TColgp_SequenceNodeOfSequenceOfDir.IsNull = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir_IsNull,None,Handle_TColgp_SequenceNodeOfSequenceOfDir)
Handle_TColgp_SequenceNodeOfSequenceOfDir.GetObject = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir_GetObject,None,Handle_TColgp_SequenceNodeOfSequenceOfDir)
Handle_TColgp_SequenceNodeOfSequenceOfDir._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir__kill_pointed,None,Handle_TColgp_SequenceNodeOfSequenceOfDir)
Handle_TColgp_SequenceNodeOfSequenceOfDir_swigregister = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir_swigregister
Handle_TColgp_SequenceNodeOfSequenceOfDir_swigregister(Handle_TColgp_SequenceNodeOfSequenceOfDir)

def Handle_TColgp_SequenceNodeOfSequenceOfDir_DownCast(*args):
  return _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir_DownCast(*args)
Handle_TColgp_SequenceNodeOfSequenceOfDir_DownCast = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir_DownCast

class TColgp_SequenceNodeOfSequenceOfDir2d(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: gp_Dir2d
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColgp.TColgp_SequenceNodeOfSequenceOfDir2d_swiginit(self,_TColgp.new_TColgp_SequenceNodeOfSequenceOfDir2d(*args))
    def Value(self, *args):
        """
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_SequenceNodeOfSequenceOfDir2d_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_SequenceNodeOfSequenceOfDir2d self)"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfDir2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_SequenceNodeOfSequenceOfDir2d self) -> Handle_TColgp_SequenceNodeOfSequenceOfDir2d"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfDir2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceNodeOfSequenceOfDir2d.Value = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfDir2d_Value,None,TColgp_SequenceNodeOfSequenceOfDir2d)
TColgp_SequenceNodeOfSequenceOfDir2d._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfDir2d__kill_pointed,None,TColgp_SequenceNodeOfSequenceOfDir2d)
TColgp_SequenceNodeOfSequenceOfDir2d.GetHandle = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfDir2d_GetHandle,None,TColgp_SequenceNodeOfSequenceOfDir2d)
TColgp_SequenceNodeOfSequenceOfDir2d_swigregister = _TColgp.TColgp_SequenceNodeOfSequenceOfDir2d_swigregister
TColgp_SequenceNodeOfSequenceOfDir2d_swigregister(TColgp_SequenceNodeOfSequenceOfDir2d)

class Handle_TColgp_SequenceNodeOfSequenceOfDir2d(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir2d_swiginit(self,_TColgp.new_Handle_TColgp_SequenceNodeOfSequenceOfDir2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_SequenceNodeOfSequenceOfDir2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir2d_Nullify,None,Handle_TColgp_SequenceNodeOfSequenceOfDir2d)
Handle_TColgp_SequenceNodeOfSequenceOfDir2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir2d_IsNull,None,Handle_TColgp_SequenceNodeOfSequenceOfDir2d)
Handle_TColgp_SequenceNodeOfSequenceOfDir2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir2d_GetObject,None,Handle_TColgp_SequenceNodeOfSequenceOfDir2d)
Handle_TColgp_SequenceNodeOfSequenceOfDir2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir2d__kill_pointed,None,Handle_TColgp_SequenceNodeOfSequenceOfDir2d)
Handle_TColgp_SequenceNodeOfSequenceOfDir2d_swigregister = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir2d_swigregister
Handle_TColgp_SequenceNodeOfSequenceOfDir2d_swigregister(Handle_TColgp_SequenceNodeOfSequenceOfDir2d)

def Handle_TColgp_SequenceNodeOfSequenceOfDir2d_DownCast(*args):
  return _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir2d_DownCast(*args)
Handle_TColgp_SequenceNodeOfSequenceOfDir2d_DownCast = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfDir2d_DownCast

class TColgp_SequenceNodeOfSequenceOfPnt(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: gp_Pnt
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColgp.TColgp_SequenceNodeOfSequenceOfPnt_swiginit(self,_TColgp.new_TColgp_SequenceNodeOfSequenceOfPnt(*args))
    def Value(self, *args):
        """
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_SequenceNodeOfSequenceOfPnt_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_SequenceNodeOfSequenceOfPnt self)"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfPnt__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_SequenceNodeOfSequenceOfPnt self) -> Handle_TColgp_SequenceNodeOfSequenceOfPnt"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfPnt_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceNodeOfSequenceOfPnt.Value = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfPnt_Value,None,TColgp_SequenceNodeOfSequenceOfPnt)
TColgp_SequenceNodeOfSequenceOfPnt._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfPnt__kill_pointed,None,TColgp_SequenceNodeOfSequenceOfPnt)
TColgp_SequenceNodeOfSequenceOfPnt.GetHandle = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfPnt_GetHandle,None,TColgp_SequenceNodeOfSequenceOfPnt)
TColgp_SequenceNodeOfSequenceOfPnt_swigregister = _TColgp.TColgp_SequenceNodeOfSequenceOfPnt_swigregister
TColgp_SequenceNodeOfSequenceOfPnt_swigregister(TColgp_SequenceNodeOfSequenceOfPnt)

class Handle_TColgp_SequenceNodeOfSequenceOfPnt(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt_swiginit(self,_TColgp.new_Handle_TColgp_SequenceNodeOfSequenceOfPnt(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_SequenceNodeOfSequenceOfPnt.Nullify = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt_Nullify,None,Handle_TColgp_SequenceNodeOfSequenceOfPnt)
Handle_TColgp_SequenceNodeOfSequenceOfPnt.IsNull = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt_IsNull,None,Handle_TColgp_SequenceNodeOfSequenceOfPnt)
Handle_TColgp_SequenceNodeOfSequenceOfPnt.GetObject = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt_GetObject,None,Handle_TColgp_SequenceNodeOfSequenceOfPnt)
Handle_TColgp_SequenceNodeOfSequenceOfPnt._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt__kill_pointed,None,Handle_TColgp_SequenceNodeOfSequenceOfPnt)
Handle_TColgp_SequenceNodeOfSequenceOfPnt_swigregister = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt_swigregister
Handle_TColgp_SequenceNodeOfSequenceOfPnt_swigregister(Handle_TColgp_SequenceNodeOfSequenceOfPnt)

def Handle_TColgp_SequenceNodeOfSequenceOfPnt_DownCast(*args):
  return _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt_DownCast(*args)
Handle_TColgp_SequenceNodeOfSequenceOfPnt_DownCast = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt_DownCast

class TColgp_SequenceNodeOfSequenceOfPnt2d(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: gp_Pnt2d
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColgp.TColgp_SequenceNodeOfSequenceOfPnt2d_swiginit(self,_TColgp.new_TColgp_SequenceNodeOfSequenceOfPnt2d(*args))
    def Value(self, *args):
        """
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_SequenceNodeOfSequenceOfPnt2d_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_SequenceNodeOfSequenceOfPnt2d self)"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfPnt2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_SequenceNodeOfSequenceOfPnt2d self) -> Handle_TColgp_SequenceNodeOfSequenceOfPnt2d"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfPnt2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceNodeOfSequenceOfPnt2d.Value = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfPnt2d_Value,None,TColgp_SequenceNodeOfSequenceOfPnt2d)
TColgp_SequenceNodeOfSequenceOfPnt2d._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfPnt2d__kill_pointed,None,TColgp_SequenceNodeOfSequenceOfPnt2d)
TColgp_SequenceNodeOfSequenceOfPnt2d.GetHandle = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfPnt2d_GetHandle,None,TColgp_SequenceNodeOfSequenceOfPnt2d)
TColgp_SequenceNodeOfSequenceOfPnt2d_swigregister = _TColgp.TColgp_SequenceNodeOfSequenceOfPnt2d_swigregister
TColgp_SequenceNodeOfSequenceOfPnt2d_swigregister(TColgp_SequenceNodeOfSequenceOfPnt2d)

class Handle_TColgp_SequenceNodeOfSequenceOfPnt2d(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt2d_swiginit(self,_TColgp.new_Handle_TColgp_SequenceNodeOfSequenceOfPnt2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_SequenceNodeOfSequenceOfPnt2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt2d_Nullify,None,Handle_TColgp_SequenceNodeOfSequenceOfPnt2d)
Handle_TColgp_SequenceNodeOfSequenceOfPnt2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt2d_IsNull,None,Handle_TColgp_SequenceNodeOfSequenceOfPnt2d)
Handle_TColgp_SequenceNodeOfSequenceOfPnt2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt2d_GetObject,None,Handle_TColgp_SequenceNodeOfSequenceOfPnt2d)
Handle_TColgp_SequenceNodeOfSequenceOfPnt2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt2d__kill_pointed,None,Handle_TColgp_SequenceNodeOfSequenceOfPnt2d)
Handle_TColgp_SequenceNodeOfSequenceOfPnt2d_swigregister = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt2d_swigregister
Handle_TColgp_SequenceNodeOfSequenceOfPnt2d_swigregister(Handle_TColgp_SequenceNodeOfSequenceOfPnt2d)

def Handle_TColgp_SequenceNodeOfSequenceOfPnt2d_DownCast(*args):
  return _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt2d_DownCast(*args)
Handle_TColgp_SequenceNodeOfSequenceOfPnt2d_DownCast = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfPnt2d_DownCast

class TColgp_SequenceNodeOfSequenceOfVec(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: gp_Vec
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColgp.TColgp_SequenceNodeOfSequenceOfVec_swiginit(self,_TColgp.new_TColgp_SequenceNodeOfSequenceOfVec(*args))
    def Value(self, *args):
        """
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_SequenceNodeOfSequenceOfVec_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_SequenceNodeOfSequenceOfVec self)"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfVec__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_SequenceNodeOfSequenceOfVec self) -> Handle_TColgp_SequenceNodeOfSequenceOfVec"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfVec_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceNodeOfSequenceOfVec.Value = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfVec_Value,None,TColgp_SequenceNodeOfSequenceOfVec)
TColgp_SequenceNodeOfSequenceOfVec._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfVec__kill_pointed,None,TColgp_SequenceNodeOfSequenceOfVec)
TColgp_SequenceNodeOfSequenceOfVec.GetHandle = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfVec_GetHandle,None,TColgp_SequenceNodeOfSequenceOfVec)
TColgp_SequenceNodeOfSequenceOfVec_swigregister = _TColgp.TColgp_SequenceNodeOfSequenceOfVec_swigregister
TColgp_SequenceNodeOfSequenceOfVec_swigregister(TColgp_SequenceNodeOfSequenceOfVec)

class Handle_TColgp_SequenceNodeOfSequenceOfVec(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec_swiginit(self,_TColgp.new_Handle_TColgp_SequenceNodeOfSequenceOfVec(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_SequenceNodeOfSequenceOfVec.Nullify = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec_Nullify,None,Handle_TColgp_SequenceNodeOfSequenceOfVec)
Handle_TColgp_SequenceNodeOfSequenceOfVec.IsNull = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec_IsNull,None,Handle_TColgp_SequenceNodeOfSequenceOfVec)
Handle_TColgp_SequenceNodeOfSequenceOfVec.GetObject = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec_GetObject,None,Handle_TColgp_SequenceNodeOfSequenceOfVec)
Handle_TColgp_SequenceNodeOfSequenceOfVec._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec__kill_pointed,None,Handle_TColgp_SequenceNodeOfSequenceOfVec)
Handle_TColgp_SequenceNodeOfSequenceOfVec_swigregister = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec_swigregister
Handle_TColgp_SequenceNodeOfSequenceOfVec_swigregister(Handle_TColgp_SequenceNodeOfSequenceOfVec)

def Handle_TColgp_SequenceNodeOfSequenceOfVec_DownCast(*args):
  return _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec_DownCast(*args)
Handle_TColgp_SequenceNodeOfSequenceOfVec_DownCast = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec_DownCast

class TColgp_SequenceNodeOfSequenceOfVec2d(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: gp_Vec2d
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColgp.TColgp_SequenceNodeOfSequenceOfVec2d_swiginit(self,_TColgp.new_TColgp_SequenceNodeOfSequenceOfVec2d(*args))
    def Value(self, *args):
        """
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_SequenceNodeOfSequenceOfVec2d_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_SequenceNodeOfSequenceOfVec2d self)"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfVec2d__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_SequenceNodeOfSequenceOfVec2d self) -> Handle_TColgp_SequenceNodeOfSequenceOfVec2d"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfVec2d_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceNodeOfSequenceOfVec2d.Value = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfVec2d_Value,None,TColgp_SequenceNodeOfSequenceOfVec2d)
TColgp_SequenceNodeOfSequenceOfVec2d._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfVec2d__kill_pointed,None,TColgp_SequenceNodeOfSequenceOfVec2d)
TColgp_SequenceNodeOfSequenceOfVec2d.GetHandle = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfVec2d_GetHandle,None,TColgp_SequenceNodeOfSequenceOfVec2d)
TColgp_SequenceNodeOfSequenceOfVec2d_swigregister = _TColgp.TColgp_SequenceNodeOfSequenceOfVec2d_swigregister
TColgp_SequenceNodeOfSequenceOfVec2d_swigregister(TColgp_SequenceNodeOfSequenceOfVec2d)

class Handle_TColgp_SequenceNodeOfSequenceOfVec2d(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec2d_swiginit(self,_TColgp.new_Handle_TColgp_SequenceNodeOfSequenceOfVec2d(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec2d_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_SequenceNodeOfSequenceOfVec2d.Nullify = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec2d_Nullify,None,Handle_TColgp_SequenceNodeOfSequenceOfVec2d)
Handle_TColgp_SequenceNodeOfSequenceOfVec2d.IsNull = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec2d_IsNull,None,Handle_TColgp_SequenceNodeOfSequenceOfVec2d)
Handle_TColgp_SequenceNodeOfSequenceOfVec2d.GetObject = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec2d_GetObject,None,Handle_TColgp_SequenceNodeOfSequenceOfVec2d)
Handle_TColgp_SequenceNodeOfSequenceOfVec2d._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec2d__kill_pointed,None,Handle_TColgp_SequenceNodeOfSequenceOfVec2d)
Handle_TColgp_SequenceNodeOfSequenceOfVec2d_swigregister = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec2d_swigregister
Handle_TColgp_SequenceNodeOfSequenceOfVec2d_swigregister(Handle_TColgp_SequenceNodeOfSequenceOfVec2d)

def Handle_TColgp_SequenceNodeOfSequenceOfVec2d_DownCast(*args):
  return _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec2d_DownCast(*args)
Handle_TColgp_SequenceNodeOfSequenceOfVec2d_DownCast = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfVec2d_DownCast

class TColgp_SequenceNodeOfSequenceOfXY(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: gp_XY
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColgp.TColgp_SequenceNodeOfSequenceOfXY_swiginit(self,_TColgp.new_TColgp_SequenceNodeOfSequenceOfXY(*args))
    def Value(self, *args):
        """
        :rtype: gp_XY

        """
        return _TColgp.TColgp_SequenceNodeOfSequenceOfXY_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_SequenceNodeOfSequenceOfXY self)"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfXY__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_SequenceNodeOfSequenceOfXY self) -> Handle_TColgp_SequenceNodeOfSequenceOfXY"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfXY_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceNodeOfSequenceOfXY.Value = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfXY_Value,None,TColgp_SequenceNodeOfSequenceOfXY)
TColgp_SequenceNodeOfSequenceOfXY._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfXY__kill_pointed,None,TColgp_SequenceNodeOfSequenceOfXY)
TColgp_SequenceNodeOfSequenceOfXY.GetHandle = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfXY_GetHandle,None,TColgp_SequenceNodeOfSequenceOfXY)
TColgp_SequenceNodeOfSequenceOfXY_swigregister = _TColgp.TColgp_SequenceNodeOfSequenceOfXY_swigregister
TColgp_SequenceNodeOfSequenceOfXY_swigregister(TColgp_SequenceNodeOfSequenceOfXY)

class Handle_TColgp_SequenceNodeOfSequenceOfXY(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXY_swiginit(self,_TColgp.new_Handle_TColgp_SequenceNodeOfSequenceOfXY(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXY_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_SequenceNodeOfSequenceOfXY.Nullify = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXY_Nullify,None,Handle_TColgp_SequenceNodeOfSequenceOfXY)
Handle_TColgp_SequenceNodeOfSequenceOfXY.IsNull = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXY_IsNull,None,Handle_TColgp_SequenceNodeOfSequenceOfXY)
Handle_TColgp_SequenceNodeOfSequenceOfXY.GetObject = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXY_GetObject,None,Handle_TColgp_SequenceNodeOfSequenceOfXY)
Handle_TColgp_SequenceNodeOfSequenceOfXY._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXY__kill_pointed,None,Handle_TColgp_SequenceNodeOfSequenceOfXY)
Handle_TColgp_SequenceNodeOfSequenceOfXY_swigregister = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXY_swigregister
Handle_TColgp_SequenceNodeOfSequenceOfXY_swigregister(Handle_TColgp_SequenceNodeOfSequenceOfXY)

def Handle_TColgp_SequenceNodeOfSequenceOfXY_DownCast(*args):
  return _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXY_DownCast(*args)
Handle_TColgp_SequenceNodeOfSequenceOfXY_DownCast = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXY_DownCast

class TColgp_SequenceNodeOfSequenceOfXYZ(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: gp_XYZ
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColgp.TColgp_SequenceNodeOfSequenceOfXYZ_swiginit(self,_TColgp.new_TColgp_SequenceNodeOfSequenceOfXYZ(*args))
    def Value(self, *args):
        """
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_SequenceNodeOfSequenceOfXYZ_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TColgp_SequenceNodeOfSequenceOfXYZ self)"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfXYZ__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TColgp_SequenceNodeOfSequenceOfXYZ self) -> Handle_TColgp_SequenceNodeOfSequenceOfXYZ"""
        return _TColgp.TColgp_SequenceNodeOfSequenceOfXYZ_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceNodeOfSequenceOfXYZ.Value = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfXYZ_Value,None,TColgp_SequenceNodeOfSequenceOfXYZ)
TColgp_SequenceNodeOfSequenceOfXYZ._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfXYZ__kill_pointed,None,TColgp_SequenceNodeOfSequenceOfXYZ)
TColgp_SequenceNodeOfSequenceOfXYZ.GetHandle = new_instancemethod(_TColgp.TColgp_SequenceNodeOfSequenceOfXYZ_GetHandle,None,TColgp_SequenceNodeOfSequenceOfXYZ)
TColgp_SequenceNodeOfSequenceOfXYZ_swigregister = _TColgp.TColgp_SequenceNodeOfSequenceOfXYZ_swigregister
TColgp_SequenceNodeOfSequenceOfXYZ_swigregister(TColgp_SequenceNodeOfSequenceOfXYZ)

class Handle_TColgp_SequenceNodeOfSequenceOfXYZ(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXYZ_swiginit(self,_TColgp.new_Handle_TColgp_SequenceNodeOfSequenceOfXYZ(*args))
    DownCast = staticmethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXYZ_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColgp_SequenceNodeOfSequenceOfXYZ.Nullify = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXYZ_Nullify,None,Handle_TColgp_SequenceNodeOfSequenceOfXYZ)
Handle_TColgp_SequenceNodeOfSequenceOfXYZ.IsNull = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXYZ_IsNull,None,Handle_TColgp_SequenceNodeOfSequenceOfXYZ)
Handle_TColgp_SequenceNodeOfSequenceOfXYZ.GetObject = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXYZ_GetObject,None,Handle_TColgp_SequenceNodeOfSequenceOfXYZ)
Handle_TColgp_SequenceNodeOfSequenceOfXYZ._kill_pointed = new_instancemethod(_TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXYZ__kill_pointed,None,Handle_TColgp_SequenceNodeOfSequenceOfXYZ)
Handle_TColgp_SequenceNodeOfSequenceOfXYZ_swigregister = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXYZ_swigregister
Handle_TColgp_SequenceNodeOfSequenceOfXYZ_swigregister(Handle_TColgp_SequenceNodeOfSequenceOfXYZ)

def Handle_TColgp_SequenceNodeOfSequenceOfXYZ_DownCast(*args):
  return _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXYZ_DownCast(*args)
Handle_TColgp_SequenceNodeOfSequenceOfXYZ_DownCast = _TColgp.Handle_TColgp_SequenceNodeOfSequenceOfXYZ_DownCast

class TColgp_SequenceOfArray1OfPnt2d(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_SequenceOfArray1OfPnt2d_swiginit(self,_TColgp.new_TColgp_SequenceOfArray1OfPnt2d(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfArray1OfPnt2d
        :rtype: TColgp_SequenceOfArray1OfPnt2d

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfArray1OfPnt2d
        :rtype: TColgp_SequenceOfArray1OfPnt2d

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: Handle_TColgp_HArray1OfPnt2d
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfArray1OfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: Handle_TColgp_HArray1OfPnt2d
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfArray1OfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_TColgp_HArray1OfPnt2d
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfArray1OfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_TColgp_HArray1OfPnt2d
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfArray1OfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: Handle_TColgp_HArray1OfPnt2d

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_First(self, *args)

    def Last(self, *args):
        """
        :rtype: Handle_TColgp_HArray1OfPnt2d

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColgp_SequenceOfArray1OfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_TColgp_HArray1OfPnt2d

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Handle_TColgp_HArray1OfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_TColgp_HArray1OfPnt2d

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfArray1OfPnt2d_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceOfArray1OfPnt2d.Clear = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Clear,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.Assign = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Assign,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.Set = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Set,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.Append = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Append,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.Prepend = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Prepend,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.InsertBefore = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_InsertBefore,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.InsertAfter = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_InsertAfter,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.First = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_First,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.Last = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Last,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.Split = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Split,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.Value = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Value,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.SetValue = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_SetValue,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.ChangeValue = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_ChangeValue,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d.Remove = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Remove,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceOfArray1OfPnt2d__kill_pointed,None,TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d_swigregister = _TColgp.TColgp_SequenceOfArray1OfPnt2d_swigregister
TColgp_SequenceOfArray1OfPnt2d_swigregister(TColgp_SequenceOfArray1OfPnt2d)

class TColgp_SequenceOfDir(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_SequenceOfDir_swiginit(self,_TColgp.new_TColgp_SequenceOfDir(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfDir
        :rtype: TColgp_SequenceOfDir

        """
        return _TColgp.TColgp_SequenceOfDir_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfDir
        :rtype: TColgp_SequenceOfDir

        """
        return _TColgp.TColgp_SequenceOfDir_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: gp_Dir
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfDir
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: gp_Dir
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfDir
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_Dir
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfDir
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_Dir
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfDir
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_SequenceOfDir_First(self, *args)

    def Last(self, *args):
        """
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_SequenceOfDir_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColgp_SequenceOfDir
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_SequenceOfDir_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: gp_Dir
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Dir

        """
        return _TColgp.TColgp_SequenceOfDir_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceOfDir.Clear = new_instancemethod(_TColgp.TColgp_SequenceOfDir_Clear,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.Assign = new_instancemethod(_TColgp.TColgp_SequenceOfDir_Assign,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.Set = new_instancemethod(_TColgp.TColgp_SequenceOfDir_Set,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.Append = new_instancemethod(_TColgp.TColgp_SequenceOfDir_Append,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.Prepend = new_instancemethod(_TColgp.TColgp_SequenceOfDir_Prepend,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.InsertBefore = new_instancemethod(_TColgp.TColgp_SequenceOfDir_InsertBefore,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.InsertAfter = new_instancemethod(_TColgp.TColgp_SequenceOfDir_InsertAfter,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.First = new_instancemethod(_TColgp.TColgp_SequenceOfDir_First,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.Last = new_instancemethod(_TColgp.TColgp_SequenceOfDir_Last,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.Split = new_instancemethod(_TColgp.TColgp_SequenceOfDir_Split,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.Value = new_instancemethod(_TColgp.TColgp_SequenceOfDir_Value,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.SetValue = new_instancemethod(_TColgp.TColgp_SequenceOfDir_SetValue,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.ChangeValue = new_instancemethod(_TColgp.TColgp_SequenceOfDir_ChangeValue,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir.Remove = new_instancemethod(_TColgp.TColgp_SequenceOfDir_Remove,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceOfDir__kill_pointed,None,TColgp_SequenceOfDir)
TColgp_SequenceOfDir_swigregister = _TColgp.TColgp_SequenceOfDir_swigregister
TColgp_SequenceOfDir_swigregister(TColgp_SequenceOfDir)

class TColgp_SequenceOfDir2d(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_SequenceOfDir2d_swiginit(self,_TColgp.new_TColgp_SequenceOfDir2d(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir2d_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfDir2d
        :rtype: TColgp_SequenceOfDir2d

        """
        return _TColgp.TColgp_SequenceOfDir2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfDir2d
        :rtype: TColgp_SequenceOfDir2d

        """
        return _TColgp.TColgp_SequenceOfDir2d_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: gp_Dir2d
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfDir2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir2d_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: gp_Dir2d
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfDir2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir2d_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_Dir2d
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfDir2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir2d_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_Dir2d
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfDir2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir2d_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_SequenceOfDir2d_First(self, *args)

    def Last(self, *args):
        """
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_SequenceOfDir2d_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColgp_SequenceOfDir2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir2d_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_SequenceOfDir2d_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: gp_Dir2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir2d_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Dir2d

        """
        return _TColgp.TColgp_SequenceOfDir2d_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfDir2d_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceOfDir2d.Clear = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_Clear,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.Assign = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_Assign,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.Set = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_Set,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.Append = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_Append,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.Prepend = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_Prepend,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.InsertBefore = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_InsertBefore,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.InsertAfter = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_InsertAfter,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.First = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_First,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.Last = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_Last,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.Split = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_Split,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.Value = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_Value,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.SetValue = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_SetValue,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.ChangeValue = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_ChangeValue,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d.Remove = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d_Remove,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceOfDir2d__kill_pointed,None,TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d_swigregister = _TColgp.TColgp_SequenceOfDir2d_swigregister
TColgp_SequenceOfDir2d_swigregister(TColgp_SequenceOfDir2d)

class TColgp_SequenceOfPnt(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_SequenceOfPnt_swiginit(self,_TColgp.new_TColgp_SequenceOfPnt(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfPnt
        :rtype: TColgp_SequenceOfPnt

        """
        return _TColgp.TColgp_SequenceOfPnt_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfPnt
        :rtype: TColgp_SequenceOfPnt

        """
        return _TColgp.TColgp_SequenceOfPnt_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: gp_Pnt
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfPnt
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: gp_Pnt
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfPnt
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_Pnt
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfPnt
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_Pnt
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfPnt
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_SequenceOfPnt_First(self, *args)

    def Last(self, *args):
        """
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_SequenceOfPnt_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColgp_SequenceOfPnt
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_SequenceOfPnt_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: gp_Pnt
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Pnt

        """
        return _TColgp.TColgp_SequenceOfPnt_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceOfPnt.Clear = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_Clear,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.Assign = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_Assign,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.Set = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_Set,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.Append = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_Append,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.Prepend = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_Prepend,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.InsertBefore = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_InsertBefore,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.InsertAfter = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_InsertAfter,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.First = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_First,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.Last = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_Last,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.Split = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_Split,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.Value = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_Value,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.SetValue = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_SetValue,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.ChangeValue = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_ChangeValue,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt.Remove = new_instancemethod(_TColgp.TColgp_SequenceOfPnt_Remove,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceOfPnt__kill_pointed,None,TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt_swigregister = _TColgp.TColgp_SequenceOfPnt_swigregister
TColgp_SequenceOfPnt_swigregister(TColgp_SequenceOfPnt)

class TColgp_SequenceOfPnt2d(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_SequenceOfPnt2d_swiginit(self,_TColgp.new_TColgp_SequenceOfPnt2d(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt2d_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfPnt2d
        :rtype: TColgp_SequenceOfPnt2d

        """
        return _TColgp.TColgp_SequenceOfPnt2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfPnt2d
        :rtype: TColgp_SequenceOfPnt2d

        """
        return _TColgp.TColgp_SequenceOfPnt2d_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: gp_Pnt2d
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt2d_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: gp_Pnt2d
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt2d_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_Pnt2d
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt2d_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_Pnt2d
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt2d_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_SequenceOfPnt2d_First(self, *args)

    def Last(self, *args):
        """
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_SequenceOfPnt2d_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColgp_SequenceOfPnt2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt2d_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_SequenceOfPnt2d_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: gp_Pnt2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt2d_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Pnt2d

        """
        return _TColgp.TColgp_SequenceOfPnt2d_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfPnt2d_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceOfPnt2d.Clear = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_Clear,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.Assign = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_Assign,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.Set = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_Set,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.Append = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_Append,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.Prepend = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_Prepend,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.InsertBefore = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_InsertBefore,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.InsertAfter = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_InsertAfter,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.First = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_First,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.Last = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_Last,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.Split = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_Split,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.Value = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_Value,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.SetValue = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_SetValue,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.ChangeValue = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_ChangeValue,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d.Remove = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d_Remove,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceOfPnt2d__kill_pointed,None,TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d_swigregister = _TColgp.TColgp_SequenceOfPnt2d_swigregister
TColgp_SequenceOfPnt2d_swigregister(TColgp_SequenceOfPnt2d)

class TColgp_SequenceOfVec(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_SequenceOfVec_swiginit(self,_TColgp.new_TColgp_SequenceOfVec(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfVec
        :rtype: TColgp_SequenceOfVec

        """
        return _TColgp.TColgp_SequenceOfVec_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfVec
        :rtype: TColgp_SequenceOfVec

        """
        return _TColgp.TColgp_SequenceOfVec_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: gp_Vec
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfVec
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: gp_Vec
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfVec
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_Vec
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfVec
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_Vec
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfVec
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_SequenceOfVec_First(self, *args)

    def Last(self, *args):
        """
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_SequenceOfVec_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColgp_SequenceOfVec
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_SequenceOfVec_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: gp_Vec
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Vec

        """
        return _TColgp.TColgp_SequenceOfVec_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceOfVec.Clear = new_instancemethod(_TColgp.TColgp_SequenceOfVec_Clear,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.Assign = new_instancemethod(_TColgp.TColgp_SequenceOfVec_Assign,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.Set = new_instancemethod(_TColgp.TColgp_SequenceOfVec_Set,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.Append = new_instancemethod(_TColgp.TColgp_SequenceOfVec_Append,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.Prepend = new_instancemethod(_TColgp.TColgp_SequenceOfVec_Prepend,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.InsertBefore = new_instancemethod(_TColgp.TColgp_SequenceOfVec_InsertBefore,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.InsertAfter = new_instancemethod(_TColgp.TColgp_SequenceOfVec_InsertAfter,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.First = new_instancemethod(_TColgp.TColgp_SequenceOfVec_First,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.Last = new_instancemethod(_TColgp.TColgp_SequenceOfVec_Last,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.Split = new_instancemethod(_TColgp.TColgp_SequenceOfVec_Split,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.Value = new_instancemethod(_TColgp.TColgp_SequenceOfVec_Value,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.SetValue = new_instancemethod(_TColgp.TColgp_SequenceOfVec_SetValue,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.ChangeValue = new_instancemethod(_TColgp.TColgp_SequenceOfVec_ChangeValue,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec.Remove = new_instancemethod(_TColgp.TColgp_SequenceOfVec_Remove,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceOfVec__kill_pointed,None,TColgp_SequenceOfVec)
TColgp_SequenceOfVec_swigregister = _TColgp.TColgp_SequenceOfVec_swigregister
TColgp_SequenceOfVec_swigregister(TColgp_SequenceOfVec)

class TColgp_SequenceOfVec2d(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_SequenceOfVec2d_swiginit(self,_TColgp.new_TColgp_SequenceOfVec2d(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec2d_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfVec2d
        :rtype: TColgp_SequenceOfVec2d

        """
        return _TColgp.TColgp_SequenceOfVec2d_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfVec2d
        :rtype: TColgp_SequenceOfVec2d

        """
        return _TColgp.TColgp_SequenceOfVec2d_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: gp_Vec2d
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfVec2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec2d_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: gp_Vec2d
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfVec2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec2d_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_Vec2d
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfVec2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec2d_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_Vec2d
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfVec2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec2d_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_SequenceOfVec2d_First(self, *args)

    def Last(self, *args):
        """
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_SequenceOfVec2d_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColgp_SequenceOfVec2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec2d_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_SequenceOfVec2d_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: gp_Vec2d
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec2d_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_Vec2d

        """
        return _TColgp.TColgp_SequenceOfVec2d_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfVec2d_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceOfVec2d.Clear = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_Clear,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.Assign = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_Assign,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.Set = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_Set,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.Append = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_Append,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.Prepend = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_Prepend,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.InsertBefore = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_InsertBefore,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.InsertAfter = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_InsertAfter,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.First = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_First,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.Last = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_Last,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.Split = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_Split,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.Value = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_Value,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.SetValue = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_SetValue,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.ChangeValue = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_ChangeValue,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d.Remove = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d_Remove,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceOfVec2d__kill_pointed,None,TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d_swigregister = _TColgp.TColgp_SequenceOfVec2d_swigregister
TColgp_SequenceOfVec2d_swigregister(TColgp_SequenceOfVec2d)

class TColgp_SequenceOfXY(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_SequenceOfXY_swiginit(self,_TColgp.new_TColgp_SequenceOfXY(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXY_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfXY
        :rtype: TColgp_SequenceOfXY

        """
        return _TColgp.TColgp_SequenceOfXY_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfXY
        :rtype: TColgp_SequenceOfXY

        """
        return _TColgp.TColgp_SequenceOfXY_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: gp_XY
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfXY
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXY_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: gp_XY
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfXY
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXY_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_XY
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfXY
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXY_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_XY
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfXY
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXY_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: gp_XY

        """
        return _TColgp.TColgp_SequenceOfXY_First(self, *args)

    def Last(self, *args):
        """
        :rtype: gp_XY

        """
        return _TColgp.TColgp_SequenceOfXY_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColgp_SequenceOfXY
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXY_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_XY

        """
        return _TColgp.TColgp_SequenceOfXY_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: gp_XY
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXY_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_XY

        """
        return _TColgp.TColgp_SequenceOfXY_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXY_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceOfXY.Clear = new_instancemethod(_TColgp.TColgp_SequenceOfXY_Clear,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.Assign = new_instancemethod(_TColgp.TColgp_SequenceOfXY_Assign,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.Set = new_instancemethod(_TColgp.TColgp_SequenceOfXY_Set,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.Append = new_instancemethod(_TColgp.TColgp_SequenceOfXY_Append,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.Prepend = new_instancemethod(_TColgp.TColgp_SequenceOfXY_Prepend,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.InsertBefore = new_instancemethod(_TColgp.TColgp_SequenceOfXY_InsertBefore,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.InsertAfter = new_instancemethod(_TColgp.TColgp_SequenceOfXY_InsertAfter,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.First = new_instancemethod(_TColgp.TColgp_SequenceOfXY_First,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.Last = new_instancemethod(_TColgp.TColgp_SequenceOfXY_Last,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.Split = new_instancemethod(_TColgp.TColgp_SequenceOfXY_Split,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.Value = new_instancemethod(_TColgp.TColgp_SequenceOfXY_Value,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.SetValue = new_instancemethod(_TColgp.TColgp_SequenceOfXY_SetValue,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.ChangeValue = new_instancemethod(_TColgp.TColgp_SequenceOfXY_ChangeValue,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY.Remove = new_instancemethod(_TColgp.TColgp_SequenceOfXY_Remove,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceOfXY__kill_pointed,None,TColgp_SequenceOfXY)
TColgp_SequenceOfXY_swigregister = _TColgp.TColgp_SequenceOfXY_swigregister
TColgp_SequenceOfXY_swigregister(TColgp_SequenceOfXY)

class TColgp_SequenceOfXYZ(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TColgp.TColgp_SequenceOfXYZ_swiginit(self,_TColgp.new_TColgp_SequenceOfXYZ(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXYZ_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfXYZ
        :rtype: TColgp_SequenceOfXYZ

        """
        return _TColgp.TColgp_SequenceOfXYZ_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TColgp_SequenceOfXYZ
        :rtype: TColgp_SequenceOfXYZ

        """
        return _TColgp.TColgp_SequenceOfXYZ_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: gp_XYZ
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfXYZ
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXYZ_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: gp_XYZ
        :rtype: None

        :param S:
        :type S: TColgp_SequenceOfXYZ
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXYZ_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_XYZ
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfXYZ
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXYZ_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: gp_XYZ
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColgp_SequenceOfXYZ
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXYZ_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_SequenceOfXYZ_First(self, *args)

    def Last(self, *args):
        """
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_SequenceOfXYZ_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColgp_SequenceOfXYZ
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXYZ_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_SequenceOfXYZ_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: gp_XYZ
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXYZ_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: gp_XYZ

        """
        return _TColgp.TColgp_SequenceOfXYZ_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColgp.TColgp_SequenceOfXYZ_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColgp_SequenceOfXYZ.Clear = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_Clear,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.Assign = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_Assign,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.Set = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_Set,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.Append = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_Append,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.Prepend = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_Prepend,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.InsertBefore = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_InsertBefore,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.InsertAfter = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_InsertAfter,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.First = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_First,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.Last = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_Last,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.Split = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_Split,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.Value = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_Value,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.SetValue = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_SetValue,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.ChangeValue = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_ChangeValue,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ.Remove = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ_Remove,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ._kill_pointed = new_instancemethod(_TColgp.TColgp_SequenceOfXYZ__kill_pointed,None,TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ_swigregister = _TColgp.TColgp_SequenceOfXYZ_swigregister
TColgp_SequenceOfXYZ_swigregister(TColgp_SequenceOfXYZ)



