# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _STEPCAFControl.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_STEPCAFControl', [dirname(__file__)])
        except ImportError:
            import _STEPCAFControl
            return _STEPCAFControl
        if fp is not None:
            try:
                _mod = imp.load_module('_STEPCAFControl', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _STEPCAFControl = swig_import_helper()
    del swig_import_helper
else:
    import _STEPCAFControl
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _STEPCAFControl.delete_SwigPyIterator
    def __iter__(self): return self
SwigPyIterator.value = new_instancemethod(_STEPCAFControl.SwigPyIterator_value,None,SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_STEPCAFControl.SwigPyIterator_incr,None,SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_STEPCAFControl.SwigPyIterator_decr,None,SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_STEPCAFControl.SwigPyIterator_distance,None,SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_STEPCAFControl.SwigPyIterator_equal,None,SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_STEPCAFControl.SwigPyIterator_copy,None,SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_STEPCAFControl.SwigPyIterator_next,None,SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_STEPCAFControl.SwigPyIterator___next__,None,SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_STEPCAFControl.SwigPyIterator_previous,None,SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_STEPCAFControl.SwigPyIterator_advance,None,SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_STEPCAFControl.SwigPyIterator___eq__,None,SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_STEPCAFControl.SwigPyIterator___ne__,None,SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_STEPCAFControl.SwigPyIterator___iadd__,None,SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_STEPCAFControl.SwigPyIterator___isub__,None,SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_STEPCAFControl.SwigPyIterator___add__,None,SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_STEPCAFControl.SwigPyIterator___sub__,None,SwigPyIterator)
SwigPyIterator_swigregister = _STEPCAFControl.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

import OCC.STEPControl
import OCC.Standard
import OCC.gp
import OCC.TopTools
import OCC.TopoDS
import OCC.MMgt
import OCC.TCollection
import OCC.TopLoc
import OCC.TopAbs
import OCC.TColStd
import OCC.Message
import OCC.XSControl
import OCC.IFSelect
import OCC.Interface
import OCC.Dico
import OCC.TDF
import OCC.TDocStd
import OCC.Resource
import OCC.XCAFDoc
import OCC.Quantity
class STEPCAFControl_ActorWrite(OCC.STEPControl.STEPControl_ActorWrite):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_ActorWrite_swiginit(self,_STEPCAFControl.new_STEPCAFControl_ActorWrite(*args))
    def SetStdMode(self, *args):
        """
        * Set standard mode of work In standard mode Actor (default) behaves exactly as its ancestor, also map is cleared

        :param stdmode: default value is Standard_True
        :type stdmode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_ActorWrite_SetStdMode(self, *args)

    def ClearMap(self, *args):
        """
        * Clears map of shapes registered as assemblies

        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_ActorWrite_ClearMap(self, *args)

    def RegisterAssembly(self, *args):
        """
        * Registers shape to be written as assembly The shape should be TopoDS_Compound (else does nothing)

        :param S:
        :type S: TopoDS_Shape &
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_ActorWrite_RegisterAssembly(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_ActorWrite.SetStdMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_ActorWrite_SetStdMode,None,STEPCAFControl_ActorWrite)
STEPCAFControl_ActorWrite.ClearMap = new_instancemethod(_STEPCAFControl.STEPCAFControl_ActorWrite_ClearMap,None,STEPCAFControl_ActorWrite)
STEPCAFControl_ActorWrite.RegisterAssembly = new_instancemethod(_STEPCAFControl.STEPCAFControl_ActorWrite_RegisterAssembly,None,STEPCAFControl_ActorWrite)
STEPCAFControl_ActorWrite._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_ActorWrite__kill_pointed,None,STEPCAFControl_ActorWrite)
STEPCAFControl_ActorWrite.GetHandle = new_instancemethod(_STEPCAFControl.STEPCAFControl_ActorWrite_GetHandle,None,STEPCAFControl_ActorWrite)
STEPCAFControl_ActorWrite_swigregister = _STEPCAFControl.STEPCAFControl_ActorWrite_swigregister
STEPCAFControl_ActorWrite_swigregister(STEPCAFControl_ActorWrite)

class Handle_STEPCAFControl_ActorWrite(OCC.STEPControl.Handle_STEPControl_ActorWrite):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _STEPCAFControl.Handle_STEPCAFControl_ActorWrite_swiginit(self,_STEPCAFControl.new_Handle_STEPCAFControl_ActorWrite(*args))
    DownCast = staticmethod(_STEPCAFControl.Handle_STEPCAFControl_ActorWrite_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_STEPCAFControl_ActorWrite.Nullify = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_ActorWrite_Nullify,None,Handle_STEPCAFControl_ActorWrite)
Handle_STEPCAFControl_ActorWrite.IsNull = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_ActorWrite_IsNull,None,Handle_STEPCAFControl_ActorWrite)
Handle_STEPCAFControl_ActorWrite.GetObject = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_ActorWrite_GetObject,None,Handle_STEPCAFControl_ActorWrite)
Handle_STEPCAFControl_ActorWrite._kill_pointed = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_ActorWrite__kill_pointed,None,Handle_STEPCAFControl_ActorWrite)
Handle_STEPCAFControl_ActorWrite_swigregister = _STEPCAFControl.Handle_STEPCAFControl_ActorWrite_swigregister
Handle_STEPCAFControl_ActorWrite_swigregister(Handle_STEPCAFControl_ActorWrite)

def Handle_STEPCAFControl_ActorWrite_DownCast(*args):
  return _STEPCAFControl.Handle_STEPCAFControl_ActorWrite_DownCast(*args)
Handle_STEPCAFControl_ActorWrite_DownCast = _STEPCAFControl.Handle_STEPCAFControl_ActorWrite_DownCast

class STEPCAFControl_Controller(OCC.STEPControl.STEPControl_Controller):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        * Initializes the use of STEP Norm (the first time)

        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_Controller_swiginit(self,_STEPCAFControl.new_STEPCAFControl_Controller(*args))
    def Init(*args):
        """
        * Standard Initialisation. It creates a Controller for STEP-XCAF and records it to various names, available to select it later Returns True when done, False if could not be done

        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Controller_Init(*args)

    Init = staticmethod(Init)
    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_Controller self)"""
        return _STEPCAFControl.STEPCAFControl_Controller__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(STEPCAFControl_Controller self) -> Handle_STEPCAFControl_Controller"""
        return _STEPCAFControl.STEPCAFControl_Controller_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_Controller._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_Controller__kill_pointed,None,STEPCAFControl_Controller)
STEPCAFControl_Controller.GetHandle = new_instancemethod(_STEPCAFControl.STEPCAFControl_Controller_GetHandle,None,STEPCAFControl_Controller)
STEPCAFControl_Controller_swigregister = _STEPCAFControl.STEPCAFControl_Controller_swigregister
STEPCAFControl_Controller_swigregister(STEPCAFControl_Controller)

def STEPCAFControl_Controller_Init(*args):
  """
    * Standard Initialisation. It creates a Controller for STEP-XCAF and records it to various names, available to select it later Returns True when done, False if could not be done

    :rtype: bool

    """
  return _STEPCAFControl.STEPCAFControl_Controller_Init(*args)

class Handle_STEPCAFControl_Controller(OCC.STEPControl.Handle_STEPControl_Controller):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _STEPCAFControl.Handle_STEPCAFControl_Controller_swiginit(self,_STEPCAFControl.new_Handle_STEPCAFControl_Controller(*args))
    DownCast = staticmethod(_STEPCAFControl.Handle_STEPCAFControl_Controller_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_STEPCAFControl_Controller.Nullify = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_Controller_Nullify,None,Handle_STEPCAFControl_Controller)
Handle_STEPCAFControl_Controller.IsNull = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_Controller_IsNull,None,Handle_STEPCAFControl_Controller)
Handle_STEPCAFControl_Controller.GetObject = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_Controller_GetObject,None,Handle_STEPCAFControl_Controller)
Handle_STEPCAFControl_Controller._kill_pointed = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_Controller__kill_pointed,None,Handle_STEPCAFControl_Controller)
Handle_STEPCAFControl_Controller_swigregister = _STEPCAFControl.Handle_STEPCAFControl_Controller_swigregister
Handle_STEPCAFControl_Controller_swigregister(Handle_STEPCAFControl_Controller)

def Handle_STEPCAFControl_Controller_DownCast(*args):
  return _STEPCAFControl.Handle_STEPCAFControl_Controller_DownCast(*args)
Handle_STEPCAFControl_Controller_DownCast = _STEPCAFControl.Handle_STEPCAFControl_Controller_DownCast

class STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: STEPCAFControl_DataMapOfLabelExternFile &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: STEPCAFControl_DataMapOfLabelExternFile &
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TDF_Label

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile.Initialize = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile_Initialize,None,STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile)
STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile.Key = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile_Key,None,STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile)
STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile_Value,None,STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile)
STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile__kill_pointed,None,STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile)
STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile_swigregister = _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile_swigregister
STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile_swigregister(STEPCAFControl_DataMapIteratorOfDataMapOfLabelExternFile)

class STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: STEPCAFControl_DataMapOfLabelShape &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: STEPCAFControl_DataMapOfLabelShape &
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TDF_Label

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape.Initialize = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape_Initialize,None,STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape)
STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape.Key = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape_Key,None,STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape)
STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape_Value,None,STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape)
STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape__kill_pointed,None,STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape)
STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape_swigregister = _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape_swigregister
STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape_swigregister(STEPCAFControl_DataMapIteratorOfDataMapOfLabelShape)

class STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: STEPCAFControl_DataMapOfPDExternFile &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: STEPCAFControl_DataMapOfPDExternFile &
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: Handle_StepBasic_ProductDefinition

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile.Initialize = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile_Initialize,None,STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile)
STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile.Key = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile_Key,None,STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile)
STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile_Value,None,STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile)
STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile__kill_pointed,None,STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile)
STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile_swigregister = _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile_swigregister
STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile_swigregister(STEPCAFControl_DataMapIteratorOfDataMapOfPDExternFile)

class STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: STEPCAFControl_DataMapOfSDRExternFile &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: STEPCAFControl_DataMapOfSDRExternFile &
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: Handle_StepShape_ShapeDefinitionRepresentation

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile.Initialize = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile_Initialize,None,STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile)
STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile.Key = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile_Key,None,STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile)
STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile_Value,None,STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile)
STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile__kill_pointed,None,STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile)
STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile_swigregister = _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile_swigregister
STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile_swigregister(STEPCAFControl_DataMapIteratorOfDataMapOfSDRExternFile)

class STEPCAFControl_DataMapIteratorOfDataMapOfShapePD(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: STEPCAFControl_DataMapOfShapePD &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapePD_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapIteratorOfDataMapOfShapePD(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: STEPCAFControl_DataMapOfShapePD &
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapePD_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapePD_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_StepBasic_ProductDefinition

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapePD_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapIteratorOfDataMapOfShapePD.Initialize = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapePD_Initialize,None,STEPCAFControl_DataMapIteratorOfDataMapOfShapePD)
STEPCAFControl_DataMapIteratorOfDataMapOfShapePD.Key = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapePD_Key,None,STEPCAFControl_DataMapIteratorOfDataMapOfShapePD)
STEPCAFControl_DataMapIteratorOfDataMapOfShapePD.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapePD_Value,None,STEPCAFControl_DataMapIteratorOfDataMapOfShapePD)
STEPCAFControl_DataMapIteratorOfDataMapOfShapePD._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapePD__kill_pointed,None,STEPCAFControl_DataMapIteratorOfDataMapOfShapePD)
STEPCAFControl_DataMapIteratorOfDataMapOfShapePD_swigregister = _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapePD_swigregister
STEPCAFControl_DataMapIteratorOfDataMapOfShapePD_swigregister(STEPCAFControl_DataMapIteratorOfDataMapOfShapePD)

class STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: STEPCAFControl_DataMapOfShapeSDR &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: STEPCAFControl_DataMapOfShapeSDR &
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_StepShape_ShapeDefinitionRepresentation

        """
        return _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR.Initialize = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR_Initialize,None,STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR)
STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR.Key = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR_Key,None,STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR)
STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR_Value,None,STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR)
STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR__kill_pointed,None,STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR)
STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR_swigregister = _STEPCAFControl.STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR_swigregister
STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR_swigregister(STEPCAFControl_DataMapIteratorOfDataMapOfShapeSDR)

class STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TDF_Label &
        :param I:
        :type I: Handle_STEPCAFControl_ExternFile &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile(*args))
    def Key(self, *args):
        """
        :rtype: TDF_Label

        """
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile self)"""
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile self) -> Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile"""
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile.Key = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_Key,None,STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile)
STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_Value,None,STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile)
STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile__kill_pointed,None,STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile)
STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile.GetHandle = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_GetHandle,None,STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile)
STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_swigregister = _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_swigregister
STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_swigregister(STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile)

class Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_swiginit(self,_STEPCAFControl.new_Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile(*args))
    DownCast = staticmethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile.Nullify = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_Nullify,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile.IsNull = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_IsNull,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile.GetObject = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_GetObject,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile__kill_pointed,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_swigregister = _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_swigregister
Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_swigregister(Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile)

def Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_DownCast(*args):
  return _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_DownCast(*args)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_DownCast = _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelExternFile_DownCast

class STEPCAFControl_DataMapNodeOfDataMapOfLabelShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TDF_Label &
        :param I:
        :type I: TopoDS_Shape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape(*args))
    def Key(self, *args):
        """
        :rtype: TDF_Label

        """
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DataMapNodeOfDataMapOfLabelShape self)"""
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(STEPCAFControl_DataMapNodeOfDataMapOfLabelShape self) -> Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape"""
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapNodeOfDataMapOfLabelShape.Key = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_Key,None,STEPCAFControl_DataMapNodeOfDataMapOfLabelShape)
STEPCAFControl_DataMapNodeOfDataMapOfLabelShape.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_Value,None,STEPCAFControl_DataMapNodeOfDataMapOfLabelShape)
STEPCAFControl_DataMapNodeOfDataMapOfLabelShape._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelShape__kill_pointed,None,STEPCAFControl_DataMapNodeOfDataMapOfLabelShape)
STEPCAFControl_DataMapNodeOfDataMapOfLabelShape.GetHandle = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_GetHandle,None,STEPCAFControl_DataMapNodeOfDataMapOfLabelShape)
STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_swigregister = _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_swigregister
STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_swigregister(STEPCAFControl_DataMapNodeOfDataMapOfLabelShape)

class Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_swiginit(self,_STEPCAFControl.new_Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape(*args))
    DownCast = staticmethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape.Nullify = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_Nullify,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape.IsNull = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_IsNull,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape.GetObject = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_GetObject,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape._kill_pointed = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape__kill_pointed,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_swigregister = _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_swigregister
Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_swigregister(Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape)

def Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_DownCast(*args):
  return _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_DownCast(*args)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_DownCast = _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfLabelShape_DownCast

class STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: Handle_StepBasic_ProductDefinition &
        :param I:
        :type I: Handle_STEPCAFControl_ExternFile &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile(*args))
    def Key(self, *args):
        """
        :rtype: Handle_StepBasic_ProductDefinition

        """
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile self)"""
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile self) -> Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile"""
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile.Key = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_Key,None,STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile)
STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_Value,None,STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile)
STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile__kill_pointed,None,STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile)
STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile.GetHandle = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_GetHandle,None,STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile)
STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_swigregister = _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_swigregister
STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_swigregister(STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile)

class Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_swiginit(self,_STEPCAFControl.new_Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile(*args))
    DownCast = staticmethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile.Nullify = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_Nullify,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile.IsNull = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_IsNull,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile.GetObject = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_GetObject,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile__kill_pointed,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_swigregister = _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_swigregister
Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_swigregister(Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile)

def Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_DownCast(*args):
  return _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_DownCast(*args)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_DownCast = _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfPDExternFile_DownCast

class STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: Handle_StepShape_ShapeDefinitionRepresentation &
        :param I:
        :type I: Handle_STEPCAFControl_ExternFile &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile(*args))
    def Key(self, *args):
        """
        :rtype: Handle_StepShape_ShapeDefinitionRepresentation

        """
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile self)"""
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile self) -> Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile"""
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile.Key = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_Key,None,STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile)
STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_Value,None,STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile)
STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile__kill_pointed,None,STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile)
STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile.GetHandle = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_GetHandle,None,STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile)
STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_swigregister = _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_swigregister
STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_swigregister(STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile)

class Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_swiginit(self,_STEPCAFControl.new_Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile(*args))
    DownCast = staticmethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile.Nullify = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_Nullify,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile.IsNull = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_IsNull,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile.GetObject = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_GetObject,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile__kill_pointed,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_swigregister = _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_swigregister
Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_swigregister(Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile)

def Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_DownCast(*args):
  return _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_DownCast(*args)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_DownCast = _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfSDRExternFile_DownCast

class STEPCAFControl_DataMapNodeOfDataMapOfShapePD(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: Handle_StepBasic_ProductDefinition &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapePD_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapNodeOfDataMapOfShapePD(*args))
    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapePD_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_StepBasic_ProductDefinition

        """
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapePD_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DataMapNodeOfDataMapOfShapePD self)"""
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapePD__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(STEPCAFControl_DataMapNodeOfDataMapOfShapePD self) -> Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD"""
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapePD_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapNodeOfDataMapOfShapePD.Key = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapePD_Key,None,STEPCAFControl_DataMapNodeOfDataMapOfShapePD)
STEPCAFControl_DataMapNodeOfDataMapOfShapePD.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapePD_Value,None,STEPCAFControl_DataMapNodeOfDataMapOfShapePD)
STEPCAFControl_DataMapNodeOfDataMapOfShapePD._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapePD__kill_pointed,None,STEPCAFControl_DataMapNodeOfDataMapOfShapePD)
STEPCAFControl_DataMapNodeOfDataMapOfShapePD.GetHandle = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapePD_GetHandle,None,STEPCAFControl_DataMapNodeOfDataMapOfShapePD)
STEPCAFControl_DataMapNodeOfDataMapOfShapePD_swigregister = _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapePD_swigregister
STEPCAFControl_DataMapNodeOfDataMapOfShapePD_swigregister(STEPCAFControl_DataMapNodeOfDataMapOfShapePD)

class Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD_swiginit(self,_STEPCAFControl.new_Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD(*args))
    DownCast = staticmethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD.Nullify = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD_Nullify,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD.IsNull = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD_IsNull,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD.GetObject = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD_GetObject,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD._kill_pointed = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD__kill_pointed,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD_swigregister = _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD_swigregister
Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD_swigregister(Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD)

def Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD_DownCast(*args):
  return _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD_DownCast(*args)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD_DownCast = _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapePD_DownCast

class STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: Handle_StepShape_ShapeDefinitionRepresentation &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR(*args))
    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_StepShape_ShapeDefinitionRepresentation

        """
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR self)"""
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR self) -> Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR"""
        return _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR.Key = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_Key,None,STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR)
STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_Value,None,STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR)
STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR__kill_pointed,None,STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR)
STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR.GetHandle = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_GetHandle,None,STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR)
STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_swigregister = _STEPCAFControl.STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_swigregister
STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_swigregister(STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR)

class Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_swiginit(self,_STEPCAFControl.new_Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR(*args))
    DownCast = staticmethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR.Nullify = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_Nullify,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR.IsNull = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_IsNull,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR.GetObject = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_GetObject,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR._kill_pointed = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR__kill_pointed,None,Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_swigregister = _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_swigregister
Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_swigregister(Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR)

def Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_DownCast(*args):
  return _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_DownCast(*args)
Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_DownCast = _STEPCAFControl.Handle_STEPCAFControl_DataMapNodeOfDataMapOfShapeSDR_DownCast

class STEPCAFControl_DataMapOfLabelExternFile(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapOfLabelExternFile(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: STEPCAFControl_DataMapOfLabelExternFile &
        :rtype: STEPCAFControl_DataMapOfLabelExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: STEPCAFControl_DataMapOfLabelExternFile &
        :rtype: STEPCAFControl_DataMapOfLabelExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :param I:
        :type I: Handle_STEPCAFControl_ExternFile &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :rtype: Standard_Address

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :rtype: Standard_Address

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DataMapOfLabelExternFile self)"""
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapOfLabelExternFile.Assign = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_Assign,None,STEPCAFControl_DataMapOfLabelExternFile)
STEPCAFControl_DataMapOfLabelExternFile.Set = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_Set,None,STEPCAFControl_DataMapOfLabelExternFile)
STEPCAFControl_DataMapOfLabelExternFile.ReSize = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_ReSize,None,STEPCAFControl_DataMapOfLabelExternFile)
STEPCAFControl_DataMapOfLabelExternFile.Clear = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_Clear,None,STEPCAFControl_DataMapOfLabelExternFile)
STEPCAFControl_DataMapOfLabelExternFile.Bind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_Bind,None,STEPCAFControl_DataMapOfLabelExternFile)
STEPCAFControl_DataMapOfLabelExternFile.IsBound = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_IsBound,None,STEPCAFControl_DataMapOfLabelExternFile)
STEPCAFControl_DataMapOfLabelExternFile.UnBind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_UnBind,None,STEPCAFControl_DataMapOfLabelExternFile)
STEPCAFControl_DataMapOfLabelExternFile.Find = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_Find,None,STEPCAFControl_DataMapOfLabelExternFile)
STEPCAFControl_DataMapOfLabelExternFile.ChangeFind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_ChangeFind,None,STEPCAFControl_DataMapOfLabelExternFile)
STEPCAFControl_DataMapOfLabelExternFile.Find1 = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_Find1,None,STEPCAFControl_DataMapOfLabelExternFile)
STEPCAFControl_DataMapOfLabelExternFile.ChangeFind1 = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_ChangeFind1,None,STEPCAFControl_DataMapOfLabelExternFile)
STEPCAFControl_DataMapOfLabelExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile__kill_pointed,None,STEPCAFControl_DataMapOfLabelExternFile)
STEPCAFControl_DataMapOfLabelExternFile_swigregister = _STEPCAFControl.STEPCAFControl_DataMapOfLabelExternFile_swigregister
STEPCAFControl_DataMapOfLabelExternFile_swigregister(STEPCAFControl_DataMapOfLabelExternFile)

class STEPCAFControl_DataMapOfLabelShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapOfLabelShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: STEPCAFControl_DataMapOfLabelShape &
        :rtype: STEPCAFControl_DataMapOfLabelShape

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: STEPCAFControl_DataMapOfLabelShape &
        :rtype: STEPCAFControl_DataMapOfLabelShape

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :param I:
        :type I: TopoDS_Shape &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :rtype: TopoDS_Shape

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :rtype: TopoDS_Shape

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :rtype: Standard_Address

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TDF_Label &
        :rtype: Standard_Address

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DataMapOfLabelShape self)"""
        return _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapOfLabelShape.Assign = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_Assign,None,STEPCAFControl_DataMapOfLabelShape)
STEPCAFControl_DataMapOfLabelShape.Set = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_Set,None,STEPCAFControl_DataMapOfLabelShape)
STEPCAFControl_DataMapOfLabelShape.ReSize = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_ReSize,None,STEPCAFControl_DataMapOfLabelShape)
STEPCAFControl_DataMapOfLabelShape.Clear = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_Clear,None,STEPCAFControl_DataMapOfLabelShape)
STEPCAFControl_DataMapOfLabelShape.Bind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_Bind,None,STEPCAFControl_DataMapOfLabelShape)
STEPCAFControl_DataMapOfLabelShape.IsBound = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_IsBound,None,STEPCAFControl_DataMapOfLabelShape)
STEPCAFControl_DataMapOfLabelShape.UnBind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_UnBind,None,STEPCAFControl_DataMapOfLabelShape)
STEPCAFControl_DataMapOfLabelShape.Find = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_Find,None,STEPCAFControl_DataMapOfLabelShape)
STEPCAFControl_DataMapOfLabelShape.ChangeFind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_ChangeFind,None,STEPCAFControl_DataMapOfLabelShape)
STEPCAFControl_DataMapOfLabelShape.Find1 = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_Find1,None,STEPCAFControl_DataMapOfLabelShape)
STEPCAFControl_DataMapOfLabelShape.ChangeFind1 = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_ChangeFind1,None,STEPCAFControl_DataMapOfLabelShape)
STEPCAFControl_DataMapOfLabelShape._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfLabelShape__kill_pointed,None,STEPCAFControl_DataMapOfLabelShape)
STEPCAFControl_DataMapOfLabelShape_swigregister = _STEPCAFControl.STEPCAFControl_DataMapOfLabelShape_swigregister
STEPCAFControl_DataMapOfLabelShape_swigregister(STEPCAFControl_DataMapOfLabelShape)

class STEPCAFControl_DataMapOfPDExternFile(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapOfPDExternFile(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: STEPCAFControl_DataMapOfPDExternFile &
        :rtype: STEPCAFControl_DataMapOfPDExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: STEPCAFControl_DataMapOfPDExternFile &
        :rtype: STEPCAFControl_DataMapOfPDExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: Handle_StepBasic_ProductDefinition &
        :param I:
        :type I: Handle_STEPCAFControl_ExternFile &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: Handle_StepBasic_ProductDefinition &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: Handle_StepBasic_ProductDefinition &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: Handle_StepBasic_ProductDefinition &
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: Handle_StepBasic_ProductDefinition &
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: Handle_StepBasic_ProductDefinition &
        :rtype: Standard_Address

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: Handle_StepBasic_ProductDefinition &
        :rtype: Standard_Address

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DataMapOfPDExternFile self)"""
        return _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapOfPDExternFile.Assign = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_Assign,None,STEPCAFControl_DataMapOfPDExternFile)
STEPCAFControl_DataMapOfPDExternFile.Set = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_Set,None,STEPCAFControl_DataMapOfPDExternFile)
STEPCAFControl_DataMapOfPDExternFile.ReSize = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_ReSize,None,STEPCAFControl_DataMapOfPDExternFile)
STEPCAFControl_DataMapOfPDExternFile.Clear = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_Clear,None,STEPCAFControl_DataMapOfPDExternFile)
STEPCAFControl_DataMapOfPDExternFile.Bind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_Bind,None,STEPCAFControl_DataMapOfPDExternFile)
STEPCAFControl_DataMapOfPDExternFile.IsBound = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_IsBound,None,STEPCAFControl_DataMapOfPDExternFile)
STEPCAFControl_DataMapOfPDExternFile.UnBind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_UnBind,None,STEPCAFControl_DataMapOfPDExternFile)
STEPCAFControl_DataMapOfPDExternFile.Find = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_Find,None,STEPCAFControl_DataMapOfPDExternFile)
STEPCAFControl_DataMapOfPDExternFile.ChangeFind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_ChangeFind,None,STEPCAFControl_DataMapOfPDExternFile)
STEPCAFControl_DataMapOfPDExternFile.Find1 = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_Find1,None,STEPCAFControl_DataMapOfPDExternFile)
STEPCAFControl_DataMapOfPDExternFile.ChangeFind1 = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_ChangeFind1,None,STEPCAFControl_DataMapOfPDExternFile)
STEPCAFControl_DataMapOfPDExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile__kill_pointed,None,STEPCAFControl_DataMapOfPDExternFile)
STEPCAFControl_DataMapOfPDExternFile_swigregister = _STEPCAFControl.STEPCAFControl_DataMapOfPDExternFile_swigregister
STEPCAFControl_DataMapOfPDExternFile_swigregister(STEPCAFControl_DataMapOfPDExternFile)

class STEPCAFControl_DataMapOfSDRExternFile(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapOfSDRExternFile(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: STEPCAFControl_DataMapOfSDRExternFile &
        :rtype: STEPCAFControl_DataMapOfSDRExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: STEPCAFControl_DataMapOfSDRExternFile &
        :rtype: STEPCAFControl_DataMapOfSDRExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: Handle_StepShape_ShapeDefinitionRepresentation &
        :param I:
        :type I: Handle_STEPCAFControl_ExternFile &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: Handle_StepShape_ShapeDefinitionRepresentation &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: Handle_StepShape_ShapeDefinitionRepresentation &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: Handle_StepShape_ShapeDefinitionRepresentation &
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: Handle_StepShape_ShapeDefinitionRepresentation &
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: Handle_StepShape_ShapeDefinitionRepresentation &
        :rtype: Standard_Address

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: Handle_StepShape_ShapeDefinitionRepresentation &
        :rtype: Standard_Address

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DataMapOfSDRExternFile self)"""
        return _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapOfSDRExternFile.Assign = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_Assign,None,STEPCAFControl_DataMapOfSDRExternFile)
STEPCAFControl_DataMapOfSDRExternFile.Set = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_Set,None,STEPCAFControl_DataMapOfSDRExternFile)
STEPCAFControl_DataMapOfSDRExternFile.ReSize = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_ReSize,None,STEPCAFControl_DataMapOfSDRExternFile)
STEPCAFControl_DataMapOfSDRExternFile.Clear = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_Clear,None,STEPCAFControl_DataMapOfSDRExternFile)
STEPCAFControl_DataMapOfSDRExternFile.Bind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_Bind,None,STEPCAFControl_DataMapOfSDRExternFile)
STEPCAFControl_DataMapOfSDRExternFile.IsBound = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_IsBound,None,STEPCAFControl_DataMapOfSDRExternFile)
STEPCAFControl_DataMapOfSDRExternFile.UnBind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_UnBind,None,STEPCAFControl_DataMapOfSDRExternFile)
STEPCAFControl_DataMapOfSDRExternFile.Find = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_Find,None,STEPCAFControl_DataMapOfSDRExternFile)
STEPCAFControl_DataMapOfSDRExternFile.ChangeFind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_ChangeFind,None,STEPCAFControl_DataMapOfSDRExternFile)
STEPCAFControl_DataMapOfSDRExternFile.Find1 = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_Find1,None,STEPCAFControl_DataMapOfSDRExternFile)
STEPCAFControl_DataMapOfSDRExternFile.ChangeFind1 = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_ChangeFind1,None,STEPCAFControl_DataMapOfSDRExternFile)
STEPCAFControl_DataMapOfSDRExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile__kill_pointed,None,STEPCAFControl_DataMapOfSDRExternFile)
STEPCAFControl_DataMapOfSDRExternFile_swigregister = _STEPCAFControl.STEPCAFControl_DataMapOfSDRExternFile_swigregister
STEPCAFControl_DataMapOfSDRExternFile_swigregister(STEPCAFControl_DataMapOfSDRExternFile)

class STEPCAFControl_DataMapOfShapePD(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapOfShapePD(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: STEPCAFControl_DataMapOfShapePD &
        :rtype: STEPCAFControl_DataMapOfShapePD

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: STEPCAFControl_DataMapOfShapePD &
        :rtype: STEPCAFControl_DataMapOfShapePD

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: Handle_StepBasic_ProductDefinition &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Handle_StepBasic_ProductDefinition

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Handle_StepBasic_ProductDefinition

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DataMapOfShapePD self)"""
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapePD__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapOfShapePD.Assign = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapePD_Assign,None,STEPCAFControl_DataMapOfShapePD)
STEPCAFControl_DataMapOfShapePD.Set = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapePD_Set,None,STEPCAFControl_DataMapOfShapePD)
STEPCAFControl_DataMapOfShapePD.ReSize = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapePD_ReSize,None,STEPCAFControl_DataMapOfShapePD)
STEPCAFControl_DataMapOfShapePD.Clear = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapePD_Clear,None,STEPCAFControl_DataMapOfShapePD)
STEPCAFControl_DataMapOfShapePD.Bind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapePD_Bind,None,STEPCAFControl_DataMapOfShapePD)
STEPCAFControl_DataMapOfShapePD.IsBound = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapePD_IsBound,None,STEPCAFControl_DataMapOfShapePD)
STEPCAFControl_DataMapOfShapePD.UnBind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapePD_UnBind,None,STEPCAFControl_DataMapOfShapePD)
STEPCAFControl_DataMapOfShapePD.Find = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapePD_Find,None,STEPCAFControl_DataMapOfShapePD)
STEPCAFControl_DataMapOfShapePD.ChangeFind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapePD_ChangeFind,None,STEPCAFControl_DataMapOfShapePD)
STEPCAFControl_DataMapOfShapePD.Find1 = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapePD_Find1,None,STEPCAFControl_DataMapOfShapePD)
STEPCAFControl_DataMapOfShapePD.ChangeFind1 = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapePD_ChangeFind1,None,STEPCAFControl_DataMapOfShapePD)
STEPCAFControl_DataMapOfShapePD._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapePD__kill_pointed,None,STEPCAFControl_DataMapOfShapePD)
STEPCAFControl_DataMapOfShapePD_swigregister = _STEPCAFControl.STEPCAFControl_DataMapOfShapePD_swigregister
STEPCAFControl_DataMapOfShapePD_swigregister(STEPCAFControl_DataMapOfShapePD)

class STEPCAFControl_DataMapOfShapeSDR(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DataMapOfShapeSDR(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: STEPCAFControl_DataMapOfShapeSDR &
        :rtype: STEPCAFControl_DataMapOfShapeSDR

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: STEPCAFControl_DataMapOfShapeSDR &
        :rtype: STEPCAFControl_DataMapOfShapeSDR

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: Handle_StepShape_ShapeDefinitionRepresentation &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Handle_StepShape_ShapeDefinitionRepresentation

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Handle_StepShape_ShapeDefinitionRepresentation

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DataMapOfShapeSDR self)"""
        return _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DataMapOfShapeSDR.Assign = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_Assign,None,STEPCAFControl_DataMapOfShapeSDR)
STEPCAFControl_DataMapOfShapeSDR.Set = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_Set,None,STEPCAFControl_DataMapOfShapeSDR)
STEPCAFControl_DataMapOfShapeSDR.ReSize = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_ReSize,None,STEPCAFControl_DataMapOfShapeSDR)
STEPCAFControl_DataMapOfShapeSDR.Clear = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_Clear,None,STEPCAFControl_DataMapOfShapeSDR)
STEPCAFControl_DataMapOfShapeSDR.Bind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_Bind,None,STEPCAFControl_DataMapOfShapeSDR)
STEPCAFControl_DataMapOfShapeSDR.IsBound = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_IsBound,None,STEPCAFControl_DataMapOfShapeSDR)
STEPCAFControl_DataMapOfShapeSDR.UnBind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_UnBind,None,STEPCAFControl_DataMapOfShapeSDR)
STEPCAFControl_DataMapOfShapeSDR.Find = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_Find,None,STEPCAFControl_DataMapOfShapeSDR)
STEPCAFControl_DataMapOfShapeSDR.ChangeFind = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_ChangeFind,None,STEPCAFControl_DataMapOfShapeSDR)
STEPCAFControl_DataMapOfShapeSDR.Find1 = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_Find1,None,STEPCAFControl_DataMapOfShapeSDR)
STEPCAFControl_DataMapOfShapeSDR.ChangeFind1 = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_ChangeFind1,None,STEPCAFControl_DataMapOfShapeSDR)
STEPCAFControl_DataMapOfShapeSDR._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR__kill_pointed,None,STEPCAFControl_DataMapOfShapeSDR)
STEPCAFControl_DataMapOfShapeSDR_swigregister = _STEPCAFControl.STEPCAFControl_DataMapOfShapeSDR_swigregister
STEPCAFControl_DataMapOfShapeSDR_swigregister(STEPCAFControl_DataMapOfShapeSDR)

class STEPCAFControl_DictionaryOfExternFile(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_DictionaryOfExternFile(*args))
    def HasItem(self, *args):
        """
        :param name:
        :type name: char *
        :param exact: default value is Standard_False
        :type exact: bool
        :rtype: bool

        :param name:
        :type name: TCollection_AsciiString &
        :param exact: default value is Standard_True
        :type exact: bool
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_HasItem(self, *args)

    def Item(self, *args):
        """
        :param name:
        :type name: char *
        :param exact: default value is Standard_True
        :type exact: bool
        :rtype: Handle_STEPCAFControl_ExternFile

        :param name:
        :type name: TCollection_AsciiString &
        :param exact: default value is Standard_True
        :type exact: bool
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_Item(self, *args)

    def GetItem(self, *args):
        """
        :param name:
        :type name: char *
        :param anitem:
        :type anitem: Handle_STEPCAFControl_ExternFile &
        :param exact: default value is Standard_True
        :type exact: bool
        :rtype: bool

        :param name:
        :type name: TCollection_AsciiString &
        :param anitem:
        :type anitem: Handle_STEPCAFControl_ExternFile &
        :param exact: default value is Standard_True
        :type exact: bool
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_GetItem(self, *args)

    def SetItem(self, *args):
        """
        :param name:
        :type name: char *
        :param anitem:
        :type anitem: Handle_STEPCAFControl_ExternFile &
        :param exact: default value is Standard_True
        :type exact: bool
        :rtype: None

        :param name:
        :type name: TCollection_AsciiString &
        :param anitem:
        :type anitem: Handle_STEPCAFControl_ExternFile &
        :param exact: default value is Standard_True
        :type exact: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_SetItem(self, *args)

    def NewItem(self, *args):
        """
        :param name:
        :type name: char *
        :param isvalued:
        :type isvalued: bool
        :param exact: default value is Standard_True
        :type exact: bool
        :rtype: Handle_STEPCAFControl_ExternFile

        :param name:
        :type name: TCollection_AsciiString &
        :param isvalued:
        :type isvalued: bool
        :param exact: default value is Standard_True
        :type exact: bool
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_NewItem(self, *args)

    def RemoveItem(self, *args):
        """
        :param name:
        :type name: char *
        :param cln: default value is Standard_True
        :type cln: bool
        :param exact: default value is Standard_True
        :type exact: bool
        :rtype: bool

        :param name:
        :type name: TCollection_AsciiString &
        :param cln: default value is Standard_True
        :type cln: bool
        :param exact: default value is Standard_True
        :type exact: bool
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_RemoveItem(self, *args)

    def Clean(self, *args):
        """
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_Clean(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_IsEmpty(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_Clear(self, *args)

    def Copy(self, *args):
        """
        :rtype: Handle_STEPCAFControl_DictionaryOfExternFile

        """
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_Copy(self, *args)

    def Complete(self, *args):
        """
        :param acell:
        :type acell: Handle_STEPCAFControl_DictionaryOfExternFile &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_Complete(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_DictionaryOfExternFile self)"""
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(STEPCAFControl_DictionaryOfExternFile self) -> Handle_STEPCAFControl_DictionaryOfExternFile"""
        return _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_DictionaryOfExternFile.HasItem = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_HasItem,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile.Item = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_Item,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile.GetItem = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_GetItem,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile.SetItem = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_SetItem,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile.NewItem = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_NewItem,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile.RemoveItem = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_RemoveItem,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile.Clean = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_Clean,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile.IsEmpty = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_IsEmpty,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile.Clear = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_Clear,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile.Copy = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_Copy,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile.Complete = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_Complete,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile__kill_pointed,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile.GetHandle = new_instancemethod(_STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_GetHandle,None,STEPCAFControl_DictionaryOfExternFile)
STEPCAFControl_DictionaryOfExternFile_swigregister = _STEPCAFControl.STEPCAFControl_DictionaryOfExternFile_swigregister
STEPCAFControl_DictionaryOfExternFile_swigregister(STEPCAFControl_DictionaryOfExternFile)

class Handle_STEPCAFControl_DictionaryOfExternFile(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _STEPCAFControl.Handle_STEPCAFControl_DictionaryOfExternFile_swiginit(self,_STEPCAFControl.new_Handle_STEPCAFControl_DictionaryOfExternFile(*args))
    DownCast = staticmethod(_STEPCAFControl.Handle_STEPCAFControl_DictionaryOfExternFile_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_STEPCAFControl_DictionaryOfExternFile.Nullify = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DictionaryOfExternFile_Nullify,None,Handle_STEPCAFControl_DictionaryOfExternFile)
Handle_STEPCAFControl_DictionaryOfExternFile.IsNull = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DictionaryOfExternFile_IsNull,None,Handle_STEPCAFControl_DictionaryOfExternFile)
Handle_STEPCAFControl_DictionaryOfExternFile.GetObject = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DictionaryOfExternFile_GetObject,None,Handle_STEPCAFControl_DictionaryOfExternFile)
Handle_STEPCAFControl_DictionaryOfExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_DictionaryOfExternFile__kill_pointed,None,Handle_STEPCAFControl_DictionaryOfExternFile)
Handle_STEPCAFControl_DictionaryOfExternFile_swigregister = _STEPCAFControl.Handle_STEPCAFControl_DictionaryOfExternFile_swigregister
Handle_STEPCAFControl_DictionaryOfExternFile_swigregister(Handle_STEPCAFControl_DictionaryOfExternFile)

def Handle_STEPCAFControl_DictionaryOfExternFile_DownCast(*args):
  return _STEPCAFControl.Handle_STEPCAFControl_DictionaryOfExternFile_DownCast(*args)
Handle_STEPCAFControl_DictionaryOfExternFile_DownCast = _STEPCAFControl.Handle_STEPCAFControl_DictionaryOfExternFile_DownCast

class STEPCAFControl_ExternFile(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        * Creates an empty structure

        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_ExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_ExternFile(*args))
    def SetWS(self, *args):
        """
        :param WS:
        :type WS: Handle_XSControl_WorkSession &
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_ExternFile_SetWS(self, *args)

    def GetWS(self, *args):
        """
        :rtype: Handle_XSControl_WorkSession

        """
        return _STEPCAFControl.STEPCAFControl_ExternFile_GetWS(self, *args)

    def SetLoadStatus(self, *args):
        """
        :param stat:
        :type stat: IFSelect_ReturnStatus
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_ExternFile_SetLoadStatus(self, *args)

    def GetLoadStatus(self, *args):
        """
        :rtype: IFSelect_ReturnStatus

        """
        return _STEPCAFControl.STEPCAFControl_ExternFile_GetLoadStatus(self, *args)

    def SetTransferStatus(self, *args):
        """
        :param isok:
        :type isok: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_ExternFile_SetTransferStatus(self, *args)

    def GetTransferStatus(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_ExternFile_GetTransferStatus(self, *args)

    def SetWriteStatus(self, *args):
        """
        :param stat:
        :type stat: IFSelect_ReturnStatus
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_ExternFile_SetWriteStatus(self, *args)

    def GetWriteStatus(self, *args):
        """
        :rtype: IFSelect_ReturnStatus

        """
        return _STEPCAFControl.STEPCAFControl_ExternFile_GetWriteStatus(self, *args)

    def SetName(self, *args):
        """
        :param name:
        :type name: Handle_TCollection_HAsciiString &
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_ExternFile_SetName(self, *args)

    def GetName(self, *args):
        """
        :rtype: Handle_TCollection_HAsciiString

        """
        return _STEPCAFControl.STEPCAFControl_ExternFile_GetName(self, *args)

    def SetLabel(self, *args):
        """
        :param L:
        :type L: TDF_Label &
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_ExternFile_SetLabel(self, *args)

    def GetLabel(self, *args):
        """
        :rtype: TDF_Label

        """
        return _STEPCAFControl.STEPCAFControl_ExternFile_GetLabel(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_ExternFile self)"""
        return _STEPCAFControl.STEPCAFControl_ExternFile__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(STEPCAFControl_ExternFile self) -> Handle_STEPCAFControl_ExternFile"""
        return _STEPCAFControl.STEPCAFControl_ExternFile_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_ExternFile.SetWS = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_SetWS,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile.GetWS = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_GetWS,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile.SetLoadStatus = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_SetLoadStatus,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile.GetLoadStatus = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_GetLoadStatus,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile.SetTransferStatus = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_SetTransferStatus,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile.GetTransferStatus = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_GetTransferStatus,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile.SetWriteStatus = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_SetWriteStatus,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile.GetWriteStatus = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_GetWriteStatus,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile.SetName = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_SetName,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile.GetName = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_GetName,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile.SetLabel = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_SetLabel,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile.GetLabel = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_GetLabel,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile__kill_pointed,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile.GetHandle = new_instancemethod(_STEPCAFControl.STEPCAFControl_ExternFile_GetHandle,None,STEPCAFControl_ExternFile)
STEPCAFControl_ExternFile_swigregister = _STEPCAFControl.STEPCAFControl_ExternFile_swigregister
STEPCAFControl_ExternFile_swigregister(STEPCAFControl_ExternFile)

class Handle_STEPCAFControl_ExternFile(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _STEPCAFControl.Handle_STEPCAFControl_ExternFile_swiginit(self,_STEPCAFControl.new_Handle_STEPCAFControl_ExternFile(*args))
    DownCast = staticmethod(_STEPCAFControl.Handle_STEPCAFControl_ExternFile_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_STEPCAFControl_ExternFile.Nullify = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_ExternFile_Nullify,None,Handle_STEPCAFControl_ExternFile)
Handle_STEPCAFControl_ExternFile.IsNull = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_ExternFile_IsNull,None,Handle_STEPCAFControl_ExternFile)
Handle_STEPCAFControl_ExternFile.GetObject = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_ExternFile_GetObject,None,Handle_STEPCAFControl_ExternFile)
Handle_STEPCAFControl_ExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_ExternFile__kill_pointed,None,Handle_STEPCAFControl_ExternFile)
Handle_STEPCAFControl_ExternFile_swigregister = _STEPCAFControl.Handle_STEPCAFControl_ExternFile_swigregister
Handle_STEPCAFControl_ExternFile_swigregister(Handle_STEPCAFControl_ExternFile)

def Handle_STEPCAFControl_ExternFile_DownCast(*args):
  return _STEPCAFControl.Handle_STEPCAFControl_ExternFile_DownCast(*args)
Handle_STEPCAFControl_ExternFile_DownCast = _STEPCAFControl.Handle_STEPCAFControl_ExternFile_DownCast

class STEPCAFControl_IteratorOfDictionaryOfExternFile(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param acell:
        :type acell: Handle_STEPCAFControl_DictionaryOfExternFile &
        :rtype: None

        :param acell:
        :type acell: Handle_STEPCAFControl_DictionaryOfExternFile &
        :param basename:
        :type basename: char *
        :rtype: None

        :param acell:
        :type acell: Handle_STEPCAFControl_DictionaryOfExternFile &
        :param basename:
        :type basename: TCollection_AsciiString &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_IteratorOfDictionaryOfExternFile(*args))
    def Start(self, *args):
        """
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile_Start(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile_Next(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_STEPCAFControl_ExternFile

        """
        return _STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile_Value(self, *args)

    def Name(self, *args):
        """
        :rtype: TCollection_AsciiString

        """
        return _STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile_Name(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_IteratorOfDictionaryOfExternFile.Start = new_instancemethod(_STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile_Start,None,STEPCAFControl_IteratorOfDictionaryOfExternFile)
STEPCAFControl_IteratorOfDictionaryOfExternFile.More = new_instancemethod(_STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile_More,None,STEPCAFControl_IteratorOfDictionaryOfExternFile)
STEPCAFControl_IteratorOfDictionaryOfExternFile.Next = new_instancemethod(_STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile_Next,None,STEPCAFControl_IteratorOfDictionaryOfExternFile)
STEPCAFControl_IteratorOfDictionaryOfExternFile.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile_Value,None,STEPCAFControl_IteratorOfDictionaryOfExternFile)
STEPCAFControl_IteratorOfDictionaryOfExternFile.Name = new_instancemethod(_STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile_Name,None,STEPCAFControl_IteratorOfDictionaryOfExternFile)
STEPCAFControl_IteratorOfDictionaryOfExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile__kill_pointed,None,STEPCAFControl_IteratorOfDictionaryOfExternFile)
STEPCAFControl_IteratorOfDictionaryOfExternFile_swigregister = _STEPCAFControl.STEPCAFControl_IteratorOfDictionaryOfExternFile_swigregister
STEPCAFControl_IteratorOfDictionaryOfExternFile_swigregister(STEPCAFControl_IteratorOfDictionaryOfExternFile)

class STEPCAFControl_Reader(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        * Creates a reader with an empty STEP model and sets ColorMode, LayerMode, NameMode and PropsMode to Standard_True.

        :rtype: None

        * Creates a reader tool and attaches it to an already existing Session 	 Clears the session if it was not yet set for STEP

        :param WS:
        :type WS: Handle_XSControl_WorkSession &
        :param scratch: default value is Standard_True
        :type scratch: bool
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_Reader_swiginit(self,_STEPCAFControl.new_STEPCAFControl_Reader(*args))
    def Init(self, *args):
        """
        * Clears the internal data structures and attaches to a new session Clears the session if it was not yet set for STEP

        :param WS:
        :type WS: Handle_XSControl_WorkSession &
        :param scratch: default value is Standard_True
        :type scratch: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Reader_Init(self, *args)

    def ReadFile(self, *args):
        """
        * Loads a file and returns the read status Provided for use like single-file reader

        :param filename:
        :type filename: char *
        :rtype: IFSelect_ReturnStatus

        """
        return _STEPCAFControl.STEPCAFControl_Reader_ReadFile(self, *args)

    def NbRootsForTransfer(self, *args):
        """
        * Returns number of roots recognized for transfer Shortcut for Reader().NbRootsForTransfer()

        :rtype: int

        """
        return _STEPCAFControl.STEPCAFControl_Reader_NbRootsForTransfer(self, *args)

    def TransferOneRoot(self, *args):
        """
        * Translates currently loaded STEP file into the document Returns True if succeeded, and False in case of fail Provided for use like single-file reader

        :param num:
        :type num: int
        :param doc:
        :type doc: Handle_TDocStd_Document &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Reader_TransferOneRoot(self, *args)

    def Transfer(self, *args):
        """
        * Translates currently loaded STEP file into the document Returns True if succeeded, and False in case of fail Provided for use like single-file reader

        :param doc:
        :type doc: Handle_TDocStd_Document &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Reader_Transfer(self, *args)

    def Perform(self, *args):
        """
        :param filename:
        :type filename: TCollection_AsciiString &
        :param doc:
        :type doc: Handle_TDocStd_Document &
        :rtype: bool

        * Translate STEP file given by filename into the document Return True if succeeded, and False in case of fail

        :param filename:
        :type filename: char *
        :param doc:
        :type doc: Handle_TDocStd_Document &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Reader_Perform(self, *args)

    def ExternFiles(self, *args):
        """
        * Returns data on external files Returns Null handle if no external files are read

        :rtype: Handle_STEPCAFControl_DictionaryOfExternFile

        """
        return _STEPCAFControl.STEPCAFControl_Reader_ExternFiles(self, *args)

    def ExternFile(self, *args):
        """
        * Returns data on external file by its name Returns False if no external file with given name is read

        :param name:
        :type name: char *
        :param ef:
        :type ef: Handle_STEPCAFControl_ExternFile &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Reader_ExternFile(self, *args)

    def ChangeReader(self, *args):
        """
        * Returns basic reader

        :rtype: STEPControl_Reader

        """
        return _STEPCAFControl.STEPCAFControl_Reader_ChangeReader(self, *args)

    def Reader(self, *args):
        """
        * Returns basic reader as const

        :rtype: STEPControl_Reader

        """
        return _STEPCAFControl.STEPCAFControl_Reader_Reader(self, *args)

    def FindInstance(*args):
        """
        * Returns label of instance of an assembly component corresponding to a given NAUO

        :param NAUO:
        :type NAUO: Handle_StepRepr_NextAssemblyUsageOccurrence &
        :param STool:
        :type STool: Handle_XCAFDoc_ShapeTool &
        :param Tool:
        :type Tool: STEPConstruct_Tool &
        :param PDRFileMap:
        :type PDRFileMap: STEPCAFControl_DataMapOfPDExternFile &
        :param ShapeLabelMap:
        :type ShapeLabelMap: XCAFDoc_DataMapOfShapeLabel &
        :rtype: TDF_Label

        """
        return _STEPCAFControl.STEPCAFControl_Reader_FindInstance(*args)

    FindInstance = staticmethod(FindInstance)
    def SetColorMode(self, *args):
        """
        * Set ColorMode for indicate read Colors or not.

        :param colormode:
        :type colormode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Reader_SetColorMode(self, *args)

    def GetColorMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Reader_GetColorMode(self, *args)

    def SetNameMode(self, *args):
        """
        * Set NameMode for indicate read Name or not.

        :param namemode:
        :type namemode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Reader_SetNameMode(self, *args)

    def GetNameMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Reader_GetNameMode(self, *args)

    def SetLayerMode(self, *args):
        """
        * Set LayerMode for indicate read Layers or not.

        :param layermode:
        :type layermode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Reader_SetLayerMode(self, *args)

    def GetLayerMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Reader_GetLayerMode(self, *args)

    def SetPropsMode(self, *args):
        """
        * PropsMode for indicate read Validation properties or not.

        :param propsmode:
        :type propsmode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Reader_SetPropsMode(self, *args)

    def GetPropsMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Reader_GetPropsMode(self, *args)

    def SetSHUOMode(self, *args):
        """
        * Set SHUO mode for indicate write SHUO or not.

        :param shuomode:
        :type shuomode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Reader_SetSHUOMode(self, *args)

    def GetSHUOMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Reader_GetSHUOMode(self, *args)

    def SetGDTMode(self, *args):
        """
        * Set GDT mode for indicate write GDT or not.

        :param gdtmode:
        :type gdtmode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Reader_SetGDTMode(self, *args)

    def GetGDTMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Reader_GetGDTMode(self, *args)

    def SetMatMode(self, *args):
        """
        * Set Material mode

        :param matmode:
        :type matmode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Reader_SetMatMode(self, *args)

    def GetMatMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Reader_GetMatMode(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_Reader.Init = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_Init,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.ReadFile = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_ReadFile,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.NbRootsForTransfer = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_NbRootsForTransfer,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.TransferOneRoot = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_TransferOneRoot,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.Transfer = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_Transfer,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.Perform = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_Perform,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.ExternFiles = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_ExternFiles,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.ExternFile = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_ExternFile,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.ChangeReader = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_ChangeReader,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.Reader = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_Reader,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.SetColorMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_SetColorMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.GetColorMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_GetColorMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.SetNameMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_SetNameMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.GetNameMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_GetNameMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.SetLayerMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_SetLayerMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.GetLayerMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_GetLayerMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.SetPropsMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_SetPropsMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.GetPropsMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_GetPropsMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.SetSHUOMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_SetSHUOMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.GetSHUOMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_GetSHUOMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.SetGDTMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_SetGDTMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.GetGDTMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_GetGDTMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.SetMatMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_SetMatMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader.GetMatMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader_GetMatMode,None,STEPCAFControl_Reader)
STEPCAFControl_Reader._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_Reader__kill_pointed,None,STEPCAFControl_Reader)
STEPCAFControl_Reader_swigregister = _STEPCAFControl.STEPCAFControl_Reader_swigregister
STEPCAFControl_Reader_swigregister(STEPCAFControl_Reader)

def STEPCAFControl_Reader_FindInstance(*args):
  """
    * Returns label of instance of an assembly component corresponding to a given NAUO

    :param NAUO:
    :type NAUO: Handle_StepRepr_NextAssemblyUsageOccurrence &
    :param STool:
    :type STool: Handle_XCAFDoc_ShapeTool &
    :param Tool:
    :type Tool: STEPConstruct_Tool &
    :param PDRFileMap:
    :type PDRFileMap: STEPCAFControl_DataMapOfPDExternFile &
    :param ShapeLabelMap:
    :type ShapeLabelMap: XCAFDoc_DataMapOfShapeLabel &
    :rtype: TDF_Label

    """
  return _STEPCAFControl.STEPCAFControl_Reader_FindInstance(*args)

class STEPCAFControl_StackItemOfDictionaryOfExternFile(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param previous:
        :type previous: Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile &
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_StackItemOfDictionaryOfExternFile_swiginit(self,_STEPCAFControl.new_STEPCAFControl_StackItemOfDictionaryOfExternFile(*args))
    def Previous(self, *args):
        """
        :rtype: Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile

        """
        return _STEPCAFControl.STEPCAFControl_StackItemOfDictionaryOfExternFile_Previous(self, *args)

    def Value(self, *args):
        """
        :rtype: Handle_STEPCAFControl_DictionaryOfExternFile

        """
        return _STEPCAFControl.STEPCAFControl_StackItemOfDictionaryOfExternFile_Value(self, *args)

    def SetValue(self, *args):
        """
        :param cval:
        :type cval: Handle_STEPCAFControl_DictionaryOfExternFile &
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_StackItemOfDictionaryOfExternFile_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(STEPCAFControl_StackItemOfDictionaryOfExternFile self)"""
        return _STEPCAFControl.STEPCAFControl_StackItemOfDictionaryOfExternFile__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(STEPCAFControl_StackItemOfDictionaryOfExternFile self) -> Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile"""
        return _STEPCAFControl.STEPCAFControl_StackItemOfDictionaryOfExternFile_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_StackItemOfDictionaryOfExternFile.Previous = new_instancemethod(_STEPCAFControl.STEPCAFControl_StackItemOfDictionaryOfExternFile_Previous,None,STEPCAFControl_StackItemOfDictionaryOfExternFile)
STEPCAFControl_StackItemOfDictionaryOfExternFile.Value = new_instancemethod(_STEPCAFControl.STEPCAFControl_StackItemOfDictionaryOfExternFile_Value,None,STEPCAFControl_StackItemOfDictionaryOfExternFile)
STEPCAFControl_StackItemOfDictionaryOfExternFile.SetValue = new_instancemethod(_STEPCAFControl.STEPCAFControl_StackItemOfDictionaryOfExternFile_SetValue,None,STEPCAFControl_StackItemOfDictionaryOfExternFile)
STEPCAFControl_StackItemOfDictionaryOfExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_StackItemOfDictionaryOfExternFile__kill_pointed,None,STEPCAFControl_StackItemOfDictionaryOfExternFile)
STEPCAFControl_StackItemOfDictionaryOfExternFile.GetHandle = new_instancemethod(_STEPCAFControl.STEPCAFControl_StackItemOfDictionaryOfExternFile_GetHandle,None,STEPCAFControl_StackItemOfDictionaryOfExternFile)
STEPCAFControl_StackItemOfDictionaryOfExternFile_swigregister = _STEPCAFControl.STEPCAFControl_StackItemOfDictionaryOfExternFile_swigregister
STEPCAFControl_StackItemOfDictionaryOfExternFile_swigregister(STEPCAFControl_StackItemOfDictionaryOfExternFile)

class Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _STEPCAFControl.Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile_swiginit(self,_STEPCAFControl.new_Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile(*args))
    DownCast = staticmethod(_STEPCAFControl.Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile.Nullify = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile_Nullify,None,Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile)
Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile.IsNull = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile_IsNull,None,Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile)
Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile.GetObject = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile_GetObject,None,Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile)
Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile._kill_pointed = new_instancemethod(_STEPCAFControl.Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile__kill_pointed,None,Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile)
Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile_swigregister = _STEPCAFControl.Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile_swigregister
Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile_swigregister(Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile)

def Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile_DownCast(*args):
  return _STEPCAFControl.Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile_DownCast(*args)
Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile_DownCast = _STEPCAFControl.Handle_STEPCAFControl_StackItemOfDictionaryOfExternFile_DownCast

class STEPCAFControl_Writer(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        * Creates a writer with an empty STEP model and sets ColorMode, LayerMode, NameMode and PropsMode to Standard_True.

        :rtype: None

        * Creates a reader tool and attaches it to an already existing Session Clears the session if it was not yet set for STEP Clears the internal data structures

        :param WS:
        :type WS: Handle_XSControl_WorkSession &
        :param scratch: default value is Standard_True
        :type scratch: bool
        :rtype: None

        """
        _STEPCAFControl.STEPCAFControl_Writer_swiginit(self,_STEPCAFControl.new_STEPCAFControl_Writer(*args))
    def Init(self, *args):
        """
        * Clears the internal data structures and attaches to a new session Clears the session if it was not yet set for STEP

        :param WS:
        :type WS: Handle_XSControl_WorkSession &
        :param scratch: default value is Standard_True
        :type scratch: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Writer_Init(self, *args)

    def Write(self, *args):
        """
        * Writes all the produced models into file In case of multimodel with extern references, filename will be a name of root file, all other files have names of corresponding parts Provided for use like single-file writer

        :param filename:
        :type filename: char *
        :rtype: IFSelect_ReturnStatus

        """
        return _STEPCAFControl.STEPCAFControl_Writer_Write(self, *args)

    def Transfer(self, *args):
        """
        :param doc:
        :type doc: Handle_TDocStd_Document &
        :param mode: default value is STEPControl_AsIs
        :type mode: STEPControl_StepModelType
        :param multi: default value is 0
        :type multi: char *
        :rtype: bool

        * Transfers a document (or single label) to a STEP model The mode of translation of shape is AsIs If multi is not null pointer, it switches to multifile mode (with external refs), and string pointed by <multi> gives prefix for names of extern files (can be empty string) Returns True if translation is OK

        :param L:
        :type L: TDF_Label &
        :param mode: default value is STEPControl_AsIs
        :type mode: STEPControl_StepModelType
        :param multi: default value is 0
        :type multi: char *
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Writer_Transfer(self, *args)

    def Perform(self, *args):
        """
        :param doc:
        :type doc: Handle_TDocStd_Document &
        :param filename:
        :type filename: TCollection_AsciiString &
        :rtype: bool

        * Transfers a document and writes it to a STEP file Returns True if translation is OK

        :param doc:
        :type doc: Handle_TDocStd_Document &
        :param filename:
        :type filename: char *
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Writer_Perform(self, *args)

    def ExternFiles(self, *args):
        """
        * Returns data on external files Returns Null handle if no external files are read

        :rtype: Handle_STEPCAFControl_DictionaryOfExternFile

        """
        return _STEPCAFControl.STEPCAFControl_Writer_ExternFiles(self, *args)

    def ExternFile(self, *args):
        """
        * Returns data on external file by its original label Returns False if no external file with given name is read

        :param L:
        :type L: TDF_Label &
        :param ef:
        :type ef: Handle_STEPCAFControl_ExternFile &
        :rtype: bool

        * Returns data on external file by its name Returns False if no external file with given name is read

        :param name:
        :type name: char *
        :param ef:
        :type ef: Handle_STEPCAFControl_ExternFile &
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Writer_ExternFile(self, *args)

    def ChangeWriter(self, *args):
        """
        * Returns basic reader for root file

        :rtype: STEPControl_Writer

        """
        return _STEPCAFControl.STEPCAFControl_Writer_ChangeWriter(self, *args)

    def Writer(self, *args):
        """
        * Returns basic reader as const

        :rtype: STEPControl_Writer

        """
        return _STEPCAFControl.STEPCAFControl_Writer_Writer(self, *args)

    def SetColorMode(self, *args):
        """
        * Set ColorMode for indicate write Colors or not.

        :param colormode:
        :type colormode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Writer_SetColorMode(self, *args)

    def GetColorMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Writer_GetColorMode(self, *args)

    def SetNameMode(self, *args):
        """
        * Set NameMode for indicate write Name or not.

        :param namemode:
        :type namemode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Writer_SetNameMode(self, *args)

    def GetNameMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Writer_GetNameMode(self, *args)

    def SetLayerMode(self, *args):
        """
        * Set LayerMode for indicate write Layers or not.

        :param layermode:
        :type layermode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Writer_SetLayerMode(self, *args)

    def GetLayerMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Writer_GetLayerMode(self, *args)

    def SetPropsMode(self, *args):
        """
        * PropsMode for indicate write Validation properties or not.

        :param propsmode:
        :type propsmode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Writer_SetPropsMode(self, *args)

    def GetPropsMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Writer_GetPropsMode(self, *args)

    def SetSHUOMode(self, *args):
        """
        * Set SHUO mode for indicate write SHUO or not.

        :param shuomode:
        :type shuomode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Writer_SetSHUOMode(self, *args)

    def GetSHUOMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Writer_GetSHUOMode(self, *args)

    def SetDimTolMode(self, *args):
        """
        * Set dimtolmode for indicate write D&GTs or not.

        :param dimtolmode:
        :type dimtolmode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Writer_SetDimTolMode(self, *args)

    def GetDimTolMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Writer_GetDimTolMode(self, *args)

    def SetMaterialMode(self, *args):
        """
        * Set dimtolmode for indicate write D&GTs or not.

        :param matmode:
        :type matmode: bool
        :rtype: None

        """
        return _STEPCAFControl.STEPCAFControl_Writer_SetMaterialMode(self, *args)

    def GetMaterialMode(self, *args):
        """
        :rtype: bool

        """
        return _STEPCAFControl.STEPCAFControl_Writer_GetMaterialMode(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


STEPCAFControl_Writer.Init = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_Init,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.Write = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_Write,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.Transfer = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_Transfer,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.Perform = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_Perform,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.ExternFiles = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_ExternFiles,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.ExternFile = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_ExternFile,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.ChangeWriter = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_ChangeWriter,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.Writer = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_Writer,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.SetColorMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_SetColorMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.GetColorMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_GetColorMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.SetNameMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_SetNameMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.GetNameMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_GetNameMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.SetLayerMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_SetLayerMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.GetLayerMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_GetLayerMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.SetPropsMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_SetPropsMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.GetPropsMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_GetPropsMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.SetSHUOMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_SetSHUOMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.GetSHUOMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_GetSHUOMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.SetDimTolMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_SetDimTolMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.GetDimTolMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_GetDimTolMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.SetMaterialMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_SetMaterialMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer.GetMaterialMode = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer_GetMaterialMode,None,STEPCAFControl_Writer)
STEPCAFControl_Writer._kill_pointed = new_instancemethod(_STEPCAFControl.STEPCAFControl_Writer__kill_pointed,None,STEPCAFControl_Writer)
STEPCAFControl_Writer_swigregister = _STEPCAFControl.STEPCAFControl_Writer_swigregister
STEPCAFControl_Writer_swigregister(STEPCAFControl_Writer)



