# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _TColGeom.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_TColGeom', [dirname(__file__)])
        except ImportError:
            import _TColGeom
            return _TColGeom
        if fp is not None:
            try:
                _mod = imp.load_module('_TColGeom', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _TColGeom = swig_import_helper()
    del swig_import_helper
else:
    import _TColGeom
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TColGeom.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_TColGeom.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_TColGeom.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_TColGeom.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_TColGeom.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_TColGeom.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_TColGeom.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_TColGeom.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_TColGeom.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_TColGeom.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_TColGeom.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_TColGeom.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_TColGeom.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_TColGeom.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_TColGeom.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_TColGeom.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_TColGeom.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _TColGeom.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

import OCC.Standard
import OCC.Geom
import OCC.MMgt
import OCC.gp
import OCC.TCollection
import OCC.GeomAbs
import OCC.TColgp
import OCC.TColStd
class TColGeom_Array1OfBSplineCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Handle_Geom_BSplineCurve &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColGeom.TColGeom_Array1OfBSplineCurve_swiginit(self, _TColGeom.new_TColGeom_Array1OfBSplineCurve(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BSplineCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfBSplineCurve_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfBSplineCurve_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColGeom.TColGeom_Array1OfBSplineCurve_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array1OfBSplineCurve &
        :rtype: TColGeom_Array1OfBSplineCurve

        """
        return _TColGeom.TColGeom_Array1OfBSplineCurve_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array1OfBSplineCurve &
        :rtype: TColGeom_Array1OfBSplineCurve

        """
        return _TColGeom.TColGeom_Array1OfBSplineCurve_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfBSplineCurve_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfBSplineCurve_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfBSplineCurve_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Geom_BSplineCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfBSplineCurve_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BSplineCurve

        """
        return _TColGeom.TColGeom_Array1OfBSplineCurve_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BSplineCurve

        """
        return _TColGeom.TColGeom_Array1OfBSplineCurve_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_Array1OfBSplineCurve.Init = new_instancemethod(_TColGeom.TColGeom_Array1OfBSplineCurve_Init, None, TColGeom_Array1OfBSplineCurve)
TColGeom_Array1OfBSplineCurve.Destroy = new_instancemethod(_TColGeom.TColGeom_Array1OfBSplineCurve_Destroy, None, TColGeom_Array1OfBSplineCurve)
TColGeom_Array1OfBSplineCurve.IsAllocated = new_instancemethod(_TColGeom.TColGeom_Array1OfBSplineCurve_IsAllocated, None, TColGeom_Array1OfBSplineCurve)
TColGeom_Array1OfBSplineCurve.Assign = new_instancemethod(_TColGeom.TColGeom_Array1OfBSplineCurve_Assign, None, TColGeom_Array1OfBSplineCurve)
TColGeom_Array1OfBSplineCurve.Set = new_instancemethod(_TColGeom.TColGeom_Array1OfBSplineCurve_Set, None, TColGeom_Array1OfBSplineCurve)
TColGeom_Array1OfBSplineCurve.Length = new_instancemethod(_TColGeom.TColGeom_Array1OfBSplineCurve_Length, None, TColGeom_Array1OfBSplineCurve)
TColGeom_Array1OfBSplineCurve.Lower = new_instancemethod(_TColGeom.TColGeom_Array1OfBSplineCurve_Lower, None, TColGeom_Array1OfBSplineCurve)
TColGeom_Array1OfBSplineCurve.Upper = new_instancemethod(_TColGeom.TColGeom_Array1OfBSplineCurve_Upper, None, TColGeom_Array1OfBSplineCurve)
TColGeom_Array1OfBSplineCurve.SetValue = new_instancemethod(_TColGeom.TColGeom_Array1OfBSplineCurve_SetValue, None, TColGeom_Array1OfBSplineCurve)
TColGeom_Array1OfBSplineCurve.Value = new_instancemethod(_TColGeom.TColGeom_Array1OfBSplineCurve_Value, None, TColGeom_Array1OfBSplineCurve)
TColGeom_Array1OfBSplineCurve.ChangeValue = new_instancemethod(_TColGeom.TColGeom_Array1OfBSplineCurve_ChangeValue, None, TColGeom_Array1OfBSplineCurve)
TColGeom_Array1OfBSplineCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_Array1OfBSplineCurve__kill_pointed, None, TColGeom_Array1OfBSplineCurve)
TColGeom_Array1OfBSplineCurve_swigregister = _TColGeom.TColGeom_Array1OfBSplineCurve_swigregister
TColGeom_Array1OfBSplineCurve_swigregister(TColGeom_Array1OfBSplineCurve)

class TColGeom_Array1OfBezierCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Handle_Geom_BezierCurve &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColGeom.TColGeom_Array1OfBezierCurve_swiginit(self, _TColGeom.new_TColGeom_Array1OfBezierCurve(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BezierCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfBezierCurve_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfBezierCurve_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColGeom.TColGeom_Array1OfBezierCurve_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array1OfBezierCurve &
        :rtype: TColGeom_Array1OfBezierCurve

        """
        return _TColGeom.TColGeom_Array1OfBezierCurve_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array1OfBezierCurve &
        :rtype: TColGeom_Array1OfBezierCurve

        """
        return _TColGeom.TColGeom_Array1OfBezierCurve_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfBezierCurve_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfBezierCurve_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfBezierCurve_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Geom_BezierCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfBezierCurve_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BezierCurve

        """
        return _TColGeom.TColGeom_Array1OfBezierCurve_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BezierCurve

        """
        return _TColGeom.TColGeom_Array1OfBezierCurve_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_Array1OfBezierCurve.Init = new_instancemethod(_TColGeom.TColGeom_Array1OfBezierCurve_Init, None, TColGeom_Array1OfBezierCurve)
TColGeom_Array1OfBezierCurve.Destroy = new_instancemethod(_TColGeom.TColGeom_Array1OfBezierCurve_Destroy, None, TColGeom_Array1OfBezierCurve)
TColGeom_Array1OfBezierCurve.IsAllocated = new_instancemethod(_TColGeom.TColGeom_Array1OfBezierCurve_IsAllocated, None, TColGeom_Array1OfBezierCurve)
TColGeom_Array1OfBezierCurve.Assign = new_instancemethod(_TColGeom.TColGeom_Array1OfBezierCurve_Assign, None, TColGeom_Array1OfBezierCurve)
TColGeom_Array1OfBezierCurve.Set = new_instancemethod(_TColGeom.TColGeom_Array1OfBezierCurve_Set, None, TColGeom_Array1OfBezierCurve)
TColGeom_Array1OfBezierCurve.Length = new_instancemethod(_TColGeom.TColGeom_Array1OfBezierCurve_Length, None, TColGeom_Array1OfBezierCurve)
TColGeom_Array1OfBezierCurve.Lower = new_instancemethod(_TColGeom.TColGeom_Array1OfBezierCurve_Lower, None, TColGeom_Array1OfBezierCurve)
TColGeom_Array1OfBezierCurve.Upper = new_instancemethod(_TColGeom.TColGeom_Array1OfBezierCurve_Upper, None, TColGeom_Array1OfBezierCurve)
TColGeom_Array1OfBezierCurve.SetValue = new_instancemethod(_TColGeom.TColGeom_Array1OfBezierCurve_SetValue, None, TColGeom_Array1OfBezierCurve)
TColGeom_Array1OfBezierCurve.Value = new_instancemethod(_TColGeom.TColGeom_Array1OfBezierCurve_Value, None, TColGeom_Array1OfBezierCurve)
TColGeom_Array1OfBezierCurve.ChangeValue = new_instancemethod(_TColGeom.TColGeom_Array1OfBezierCurve_ChangeValue, None, TColGeom_Array1OfBezierCurve)
TColGeom_Array1OfBezierCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_Array1OfBezierCurve__kill_pointed, None, TColGeom_Array1OfBezierCurve)
TColGeom_Array1OfBezierCurve_swigregister = _TColGeom.TColGeom_Array1OfBezierCurve_swigregister
TColGeom_Array1OfBezierCurve_swigregister(TColGeom_Array1OfBezierCurve)

class TColGeom_Array1OfBoundedCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Handle_Geom_BoundedCurve &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColGeom.TColGeom_Array1OfBoundedCurve_swiginit(self, _TColGeom.new_TColGeom_Array1OfBoundedCurve(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfBoundedCurve_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfBoundedCurve_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColGeom.TColGeom_Array1OfBoundedCurve_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array1OfBoundedCurve &
        :rtype: TColGeom_Array1OfBoundedCurve

        """
        return _TColGeom.TColGeom_Array1OfBoundedCurve_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array1OfBoundedCurve &
        :rtype: TColGeom_Array1OfBoundedCurve

        """
        return _TColGeom.TColGeom_Array1OfBoundedCurve_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfBoundedCurve_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfBoundedCurve_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfBoundedCurve_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Geom_BoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfBoundedCurve_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BoundedCurve

        """
        return _TColGeom.TColGeom_Array1OfBoundedCurve_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BoundedCurve

        """
        return _TColGeom.TColGeom_Array1OfBoundedCurve_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_Array1OfBoundedCurve.Init = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedCurve_Init, None, TColGeom_Array1OfBoundedCurve)
TColGeom_Array1OfBoundedCurve.Destroy = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedCurve_Destroy, None, TColGeom_Array1OfBoundedCurve)
TColGeom_Array1OfBoundedCurve.IsAllocated = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedCurve_IsAllocated, None, TColGeom_Array1OfBoundedCurve)
TColGeom_Array1OfBoundedCurve.Assign = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedCurve_Assign, None, TColGeom_Array1OfBoundedCurve)
TColGeom_Array1OfBoundedCurve.Set = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedCurve_Set, None, TColGeom_Array1OfBoundedCurve)
TColGeom_Array1OfBoundedCurve.Length = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedCurve_Length, None, TColGeom_Array1OfBoundedCurve)
TColGeom_Array1OfBoundedCurve.Lower = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedCurve_Lower, None, TColGeom_Array1OfBoundedCurve)
TColGeom_Array1OfBoundedCurve.Upper = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedCurve_Upper, None, TColGeom_Array1OfBoundedCurve)
TColGeom_Array1OfBoundedCurve.SetValue = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedCurve_SetValue, None, TColGeom_Array1OfBoundedCurve)
TColGeom_Array1OfBoundedCurve.Value = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedCurve_Value, None, TColGeom_Array1OfBoundedCurve)
TColGeom_Array1OfBoundedCurve.ChangeValue = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedCurve_ChangeValue, None, TColGeom_Array1OfBoundedCurve)
TColGeom_Array1OfBoundedCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedCurve__kill_pointed, None, TColGeom_Array1OfBoundedCurve)
TColGeom_Array1OfBoundedCurve_swigregister = _TColGeom.TColGeom_Array1OfBoundedCurve_swigregister
TColGeom_Array1OfBoundedCurve_swigregister(TColGeom_Array1OfBoundedCurve)

class TColGeom_Array1OfBoundedSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Handle_Geom_BoundedSurface &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColGeom.TColGeom_Array1OfBoundedSurface_swiginit(self, _TColGeom.new_TColGeom_Array1OfBoundedSurface(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfBoundedSurface_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfBoundedSurface_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColGeom.TColGeom_Array1OfBoundedSurface_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array1OfBoundedSurface &
        :rtype: TColGeom_Array1OfBoundedSurface

        """
        return _TColGeom.TColGeom_Array1OfBoundedSurface_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array1OfBoundedSurface &
        :rtype: TColGeom_Array1OfBoundedSurface

        """
        return _TColGeom.TColGeom_Array1OfBoundedSurface_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfBoundedSurface_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfBoundedSurface_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfBoundedSurface_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Geom_BoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfBoundedSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_Array1OfBoundedSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_Array1OfBoundedSurface_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_Array1OfBoundedSurface.Init = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedSurface_Init, None, TColGeom_Array1OfBoundedSurface)
TColGeom_Array1OfBoundedSurface.Destroy = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedSurface_Destroy, None, TColGeom_Array1OfBoundedSurface)
TColGeom_Array1OfBoundedSurface.IsAllocated = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedSurface_IsAllocated, None, TColGeom_Array1OfBoundedSurface)
TColGeom_Array1OfBoundedSurface.Assign = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedSurface_Assign, None, TColGeom_Array1OfBoundedSurface)
TColGeom_Array1OfBoundedSurface.Set = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedSurface_Set, None, TColGeom_Array1OfBoundedSurface)
TColGeom_Array1OfBoundedSurface.Length = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedSurface_Length, None, TColGeom_Array1OfBoundedSurface)
TColGeom_Array1OfBoundedSurface.Lower = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedSurface_Lower, None, TColGeom_Array1OfBoundedSurface)
TColGeom_Array1OfBoundedSurface.Upper = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedSurface_Upper, None, TColGeom_Array1OfBoundedSurface)
TColGeom_Array1OfBoundedSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedSurface_SetValue, None, TColGeom_Array1OfBoundedSurface)
TColGeom_Array1OfBoundedSurface.Value = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedSurface_Value, None, TColGeom_Array1OfBoundedSurface)
TColGeom_Array1OfBoundedSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedSurface_ChangeValue, None, TColGeom_Array1OfBoundedSurface)
TColGeom_Array1OfBoundedSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_Array1OfBoundedSurface__kill_pointed, None, TColGeom_Array1OfBoundedSurface)
TColGeom_Array1OfBoundedSurface_swigregister = _TColGeom.TColGeom_Array1OfBoundedSurface_swigregister
TColGeom_Array1OfBoundedSurface_swigregister(TColGeom_Array1OfBoundedSurface)

class TColGeom_Array1OfCurve(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Handle_Geom_Curve &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColGeom.TColGeom_Array1OfCurve_swiginit(self, _TColGeom.new_TColGeom_Array1OfCurve(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_Curve &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfCurve_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfCurve_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColGeom.TColGeom_Array1OfCurve_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array1OfCurve &
        :rtype: TColGeom_Array1OfCurve

        """
        return _TColGeom.TColGeom_Array1OfCurve_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array1OfCurve &
        :rtype: TColGeom_Array1OfCurve

        """
        return _TColGeom.TColGeom_Array1OfCurve_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfCurve_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfCurve_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfCurve_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Geom_Curve &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfCurve_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_Curve

        """
        return _TColGeom.TColGeom_Array1OfCurve_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_Curve

        """
        return _TColGeom.TColGeom_Array1OfCurve_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_Array1OfCurve.Init = new_instancemethod(_TColGeom.TColGeom_Array1OfCurve_Init, None, TColGeom_Array1OfCurve)
TColGeom_Array1OfCurve.Destroy = new_instancemethod(_TColGeom.TColGeom_Array1OfCurve_Destroy, None, TColGeom_Array1OfCurve)
TColGeom_Array1OfCurve.IsAllocated = new_instancemethod(_TColGeom.TColGeom_Array1OfCurve_IsAllocated, None, TColGeom_Array1OfCurve)
TColGeom_Array1OfCurve.Assign = new_instancemethod(_TColGeom.TColGeom_Array1OfCurve_Assign, None, TColGeom_Array1OfCurve)
TColGeom_Array1OfCurve.Set = new_instancemethod(_TColGeom.TColGeom_Array1OfCurve_Set, None, TColGeom_Array1OfCurve)
TColGeom_Array1OfCurve.Length = new_instancemethod(_TColGeom.TColGeom_Array1OfCurve_Length, None, TColGeom_Array1OfCurve)
TColGeom_Array1OfCurve.Lower = new_instancemethod(_TColGeom.TColGeom_Array1OfCurve_Lower, None, TColGeom_Array1OfCurve)
TColGeom_Array1OfCurve.Upper = new_instancemethod(_TColGeom.TColGeom_Array1OfCurve_Upper, None, TColGeom_Array1OfCurve)
TColGeom_Array1OfCurve.SetValue = new_instancemethod(_TColGeom.TColGeom_Array1OfCurve_SetValue, None, TColGeom_Array1OfCurve)
TColGeom_Array1OfCurve.Value = new_instancemethod(_TColGeom.TColGeom_Array1OfCurve_Value, None, TColGeom_Array1OfCurve)
TColGeom_Array1OfCurve.ChangeValue = new_instancemethod(_TColGeom.TColGeom_Array1OfCurve_ChangeValue, None, TColGeom_Array1OfCurve)
TColGeom_Array1OfCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_Array1OfCurve__kill_pointed, None, TColGeom_Array1OfCurve)
TColGeom_Array1OfCurve_swigregister = _TColGeom.TColGeom_Array1OfCurve_swigregister
TColGeom_Array1OfCurve_swigregister(TColGeom_Array1OfCurve)

class TColGeom_Array1OfSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Handle_Geom_Surface &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TColGeom.TColGeom_Array1OfSurface_swiginit(self, _TColGeom.new_TColGeom_Array1OfSurface(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_Surface &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfSurface_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfSurface_Destroy(self, *args)


    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TColGeom.TColGeom_Array1OfSurface_IsAllocated(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array1OfSurface &
        :rtype: TColGeom_Array1OfSurface

        """
        return _TColGeom.TColGeom_Array1OfSurface_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array1OfSurface &
        :rtype: TColGeom_Array1OfSurface

        """
        return _TColGeom.TColGeom_Array1OfSurface_Set(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfSurface_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfSurface_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array1OfSurface_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Geom_Surface &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array1OfSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_Array1OfSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_Array1OfSurface_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_Array1OfSurface.Init = new_instancemethod(_TColGeom.TColGeom_Array1OfSurface_Init, None, TColGeom_Array1OfSurface)
TColGeom_Array1OfSurface.Destroy = new_instancemethod(_TColGeom.TColGeom_Array1OfSurface_Destroy, None, TColGeom_Array1OfSurface)
TColGeom_Array1OfSurface.IsAllocated = new_instancemethod(_TColGeom.TColGeom_Array1OfSurface_IsAllocated, None, TColGeom_Array1OfSurface)
TColGeom_Array1OfSurface.Assign = new_instancemethod(_TColGeom.TColGeom_Array1OfSurface_Assign, None, TColGeom_Array1OfSurface)
TColGeom_Array1OfSurface.Set = new_instancemethod(_TColGeom.TColGeom_Array1OfSurface_Set, None, TColGeom_Array1OfSurface)
TColGeom_Array1OfSurface.Length = new_instancemethod(_TColGeom.TColGeom_Array1OfSurface_Length, None, TColGeom_Array1OfSurface)
TColGeom_Array1OfSurface.Lower = new_instancemethod(_TColGeom.TColGeom_Array1OfSurface_Lower, None, TColGeom_Array1OfSurface)
TColGeom_Array1OfSurface.Upper = new_instancemethod(_TColGeom.TColGeom_Array1OfSurface_Upper, None, TColGeom_Array1OfSurface)
TColGeom_Array1OfSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_Array1OfSurface_SetValue, None, TColGeom_Array1OfSurface)
TColGeom_Array1OfSurface.Value = new_instancemethod(_TColGeom.TColGeom_Array1OfSurface_Value, None, TColGeom_Array1OfSurface)
TColGeom_Array1OfSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_Array1OfSurface_ChangeValue, None, TColGeom_Array1OfSurface)
TColGeom_Array1OfSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_Array1OfSurface__kill_pointed, None, TColGeom_Array1OfSurface)
TColGeom_Array1OfSurface_swigregister = _TColGeom.TColGeom_Array1OfSurface_swigregister
TColGeom_Array1OfSurface_swigregister(TColGeom_Array1OfSurface)

class TColGeom_Array2OfBSplineSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: Handle_Geom_BSplineSurface &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColGeom.TColGeom_Array2OfBSplineSurface_swiginit(self, _TColGeom.new_TColGeom_Array2OfBSplineSurface(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BSplineSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_Destroy(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array2OfBSplineSurface &
        :rtype: TColGeom_Array2OfBSplineSurface

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array2OfBSplineSurface &
        :rtype: TColGeom_Array2OfBSplineSurface

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_Set(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Handle_Geom_BSplineSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_BSplineSurface

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_BSplineSurface

        """
        return _TColGeom.TColGeom_Array2OfBSplineSurface_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_Array2OfBSplineSurface.Init = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_Init, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface.Destroy = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_Destroy, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface.Assign = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_Assign, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface.Set = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_Set, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface.ColLength = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_ColLength, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface.RowLength = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_RowLength, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface.LowerCol = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_LowerCol, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface.LowerRow = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_LowerRow, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface.UpperCol = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_UpperCol, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface.UpperRow = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_UpperRow, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_SetValue, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface.Value = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_Value, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface_ChangeValue, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_Array2OfBSplineSurface__kill_pointed, None, TColGeom_Array2OfBSplineSurface)
TColGeom_Array2OfBSplineSurface_swigregister = _TColGeom.TColGeom_Array2OfBSplineSurface_swigregister
TColGeom_Array2OfBSplineSurface_swigregister(TColGeom_Array2OfBSplineSurface)

class TColGeom_Array2OfBezierSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: Handle_Geom_BezierSurface &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColGeom.TColGeom_Array2OfBezierSurface_swiginit(self, _TColGeom.new_TColGeom_Array2OfBezierSurface(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BezierSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_Destroy(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array2OfBezierSurface &
        :rtype: TColGeom_Array2OfBezierSurface

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array2OfBezierSurface &
        :rtype: TColGeom_Array2OfBezierSurface

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_Set(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Handle_Geom_BezierSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_BezierSurface

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_BezierSurface

        """
        return _TColGeom.TColGeom_Array2OfBezierSurface_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_Array2OfBezierSurface.Init = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_Init, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface.Destroy = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_Destroy, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface.Assign = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_Assign, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface.Set = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_Set, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface.ColLength = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_ColLength, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface.RowLength = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_RowLength, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface.LowerCol = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_LowerCol, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface.LowerRow = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_LowerRow, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface.UpperCol = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_UpperCol, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface.UpperRow = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_UpperRow, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_SetValue, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface.Value = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_Value, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface_ChangeValue, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_Array2OfBezierSurface__kill_pointed, None, TColGeom_Array2OfBezierSurface)
TColGeom_Array2OfBezierSurface_swigregister = _TColGeom.TColGeom_Array2OfBezierSurface_swigregister
TColGeom_Array2OfBezierSurface_swigregister(TColGeom_Array2OfBezierSurface)

class TColGeom_Array2OfBoundedSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: Handle_Geom_BoundedSurface &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColGeom.TColGeom_Array2OfBoundedSurface_swiginit(self, _TColGeom.new_TColGeom_Array2OfBoundedSurface(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_Destroy(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array2OfBoundedSurface &
        :rtype: TColGeom_Array2OfBoundedSurface

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array2OfBoundedSurface &
        :rtype: TColGeom_Array2OfBoundedSurface

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_Set(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Handle_Geom_BoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_Array2OfBoundedSurface_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_Array2OfBoundedSurface.Init = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_Init, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface.Destroy = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_Destroy, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface.Assign = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_Assign, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface.Set = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_Set, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface.ColLength = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_ColLength, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface.RowLength = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_RowLength, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface.LowerCol = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_LowerCol, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface.LowerRow = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_LowerRow, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface.UpperCol = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_UpperCol, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface.UpperRow = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_UpperRow, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_SetValue, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface.Value = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_Value, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface_ChangeValue, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_Array2OfBoundedSurface__kill_pointed, None, TColGeom_Array2OfBoundedSurface)
TColGeom_Array2OfBoundedSurface_swigregister = _TColGeom.TColGeom_Array2OfBoundedSurface_swigregister
TColGeom_Array2OfBoundedSurface_swigregister(TColGeom_Array2OfBoundedSurface)

class TColGeom_Array2OfSurface(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: Handle_Geom_Surface &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TColGeom.TColGeom_Array2OfSurface_swiginit(self, _TColGeom.new_TColGeom_Array2OfSurface(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_Surface &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array2OfSurface_Init(self, *args)


    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_Array2OfSurface_Destroy(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array2OfSurface &
        :rtype: TColGeom_Array2OfSurface

        """
        return _TColGeom.TColGeom_Array2OfSurface_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_Array2OfSurface &
        :rtype: TColGeom_Array2OfSurface

        """
        return _TColGeom.TColGeom_Array2OfSurface_Set(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfSurface_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfSurface_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfSurface_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfSurface_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfSurface_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_Array2OfSurface_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Handle_Geom_Surface &
        :rtype: None

        """
        return _TColGeom.TColGeom_Array2OfSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_Array2OfSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_Array2OfSurface_ChangeValue(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_Array2OfSurface.Init = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_Init, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface.Destroy = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_Destroy, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface.Assign = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_Assign, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface.Set = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_Set, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface.ColLength = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_ColLength, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface.RowLength = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_RowLength, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface.LowerCol = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_LowerCol, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface.LowerRow = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_LowerRow, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface.UpperCol = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_UpperCol, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface.UpperRow = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_UpperRow, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_SetValue, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface.Value = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_Value, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface_ChangeValue, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_Array2OfSurface__kill_pointed, None, TColGeom_Array2OfSurface)
TColGeom_Array2OfSurface_swigregister = _TColGeom.TColGeom_Array2OfSurface_swigregister
TColGeom_Array2OfSurface_swigregister(TColGeom_Array2OfSurface)

class TColGeom_HArray1OfBSplineCurve(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Handle_Geom_BSplineCurve &
        :rtype: None

        """
        _TColGeom.TColGeom_HArray1OfBSplineCurve_swiginit(self, _TColGeom.new_TColGeom_HArray1OfBSplineCurve(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BSplineCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray1OfBSplineCurve_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfBSplineCurve_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfBSplineCurve_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfBSplineCurve_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Geom_BSplineCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray1OfBSplineCurve_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BSplineCurve

        """
        return _TColGeom.TColGeom_HArray1OfBSplineCurve_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BSplineCurve

        """
        return _TColGeom.TColGeom_HArray1OfBSplineCurve_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: TColGeom_Array1OfBSplineCurve

        """
        return _TColGeom.TColGeom_HArray1OfBSplineCurve_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: TColGeom_Array1OfBSplineCurve

        """
        return _TColGeom.TColGeom_HArray1OfBSplineCurve_ChangeArray1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HArray1OfBSplineCurve self)"""
        return _TColGeom.TColGeom_HArray1OfBSplineCurve__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HArray1OfBSplineCurve self) -> Handle_TColGeom_HArray1OfBSplineCurve"""
        return _TColGeom.TColGeom_HArray1OfBSplineCurve_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HArray1OfBSplineCurve.Init = new_instancemethod(_TColGeom.TColGeom_HArray1OfBSplineCurve_Init, None, TColGeom_HArray1OfBSplineCurve)
TColGeom_HArray1OfBSplineCurve.Length = new_instancemethod(_TColGeom.TColGeom_HArray1OfBSplineCurve_Length, None, TColGeom_HArray1OfBSplineCurve)
TColGeom_HArray1OfBSplineCurve.Lower = new_instancemethod(_TColGeom.TColGeom_HArray1OfBSplineCurve_Lower, None, TColGeom_HArray1OfBSplineCurve)
TColGeom_HArray1OfBSplineCurve.Upper = new_instancemethod(_TColGeom.TColGeom_HArray1OfBSplineCurve_Upper, None, TColGeom_HArray1OfBSplineCurve)
TColGeom_HArray1OfBSplineCurve.SetValue = new_instancemethod(_TColGeom.TColGeom_HArray1OfBSplineCurve_SetValue, None, TColGeom_HArray1OfBSplineCurve)
TColGeom_HArray1OfBSplineCurve.Value = new_instancemethod(_TColGeom.TColGeom_HArray1OfBSplineCurve_Value, None, TColGeom_HArray1OfBSplineCurve)
TColGeom_HArray1OfBSplineCurve.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HArray1OfBSplineCurve_ChangeValue, None, TColGeom_HArray1OfBSplineCurve)
TColGeom_HArray1OfBSplineCurve.Array1 = new_instancemethod(_TColGeom.TColGeom_HArray1OfBSplineCurve_Array1, None, TColGeom_HArray1OfBSplineCurve)
TColGeom_HArray1OfBSplineCurve.ChangeArray1 = new_instancemethod(_TColGeom.TColGeom_HArray1OfBSplineCurve_ChangeArray1, None, TColGeom_HArray1OfBSplineCurve)
TColGeom_HArray1OfBSplineCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HArray1OfBSplineCurve__kill_pointed, None, TColGeom_HArray1OfBSplineCurve)
TColGeom_HArray1OfBSplineCurve.GetHandle = new_instancemethod(_TColGeom.TColGeom_HArray1OfBSplineCurve_GetHandle, None, TColGeom_HArray1OfBSplineCurve)
TColGeom_HArray1OfBSplineCurve_swigregister = _TColGeom.TColGeom_HArray1OfBSplineCurve_swigregister
TColGeom_HArray1OfBSplineCurve_swigregister(TColGeom_HArray1OfBSplineCurve)

class Handle_TColGeom_HArray1OfBSplineCurve(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HArray1OfBSplineCurve_swiginit(self, _TColGeom.new_Handle_TColGeom_HArray1OfBSplineCurve(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HArray1OfBSplineCurve_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HArray1OfBSplineCurve.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBSplineCurve_Nullify, None, Handle_TColGeom_HArray1OfBSplineCurve)
Handle_TColGeom_HArray1OfBSplineCurve.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBSplineCurve_IsNull, None, Handle_TColGeom_HArray1OfBSplineCurve)
Handle_TColGeom_HArray1OfBSplineCurve.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBSplineCurve_GetObject, None, Handle_TColGeom_HArray1OfBSplineCurve)
Handle_TColGeom_HArray1OfBSplineCurve._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBSplineCurve__kill_pointed, None, Handle_TColGeom_HArray1OfBSplineCurve)
Handle_TColGeom_HArray1OfBSplineCurve_swigregister = _TColGeom.Handle_TColGeom_HArray1OfBSplineCurve_swigregister
Handle_TColGeom_HArray1OfBSplineCurve_swigregister(Handle_TColGeom_HArray1OfBSplineCurve)

def Handle_TColGeom_HArray1OfBSplineCurve_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HArray1OfBSplineCurve_DownCast(AnObject)
Handle_TColGeom_HArray1OfBSplineCurve_DownCast = _TColGeom.Handle_TColGeom_HArray1OfBSplineCurve_DownCast

class TColGeom_HArray1OfBezierCurve(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Handle_Geom_BezierCurve &
        :rtype: None

        """
        _TColGeom.TColGeom_HArray1OfBezierCurve_swiginit(self, _TColGeom.new_TColGeom_HArray1OfBezierCurve(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BezierCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray1OfBezierCurve_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfBezierCurve_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfBezierCurve_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfBezierCurve_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Geom_BezierCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray1OfBezierCurve_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BezierCurve

        """
        return _TColGeom.TColGeom_HArray1OfBezierCurve_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BezierCurve

        """
        return _TColGeom.TColGeom_HArray1OfBezierCurve_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: TColGeom_Array1OfBezierCurve

        """
        return _TColGeom.TColGeom_HArray1OfBezierCurve_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: TColGeom_Array1OfBezierCurve

        """
        return _TColGeom.TColGeom_HArray1OfBezierCurve_ChangeArray1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HArray1OfBezierCurve self)"""
        return _TColGeom.TColGeom_HArray1OfBezierCurve__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HArray1OfBezierCurve self) -> Handle_TColGeom_HArray1OfBezierCurve"""
        return _TColGeom.TColGeom_HArray1OfBezierCurve_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HArray1OfBezierCurve.Init = new_instancemethod(_TColGeom.TColGeom_HArray1OfBezierCurve_Init, None, TColGeom_HArray1OfBezierCurve)
TColGeom_HArray1OfBezierCurve.Length = new_instancemethod(_TColGeom.TColGeom_HArray1OfBezierCurve_Length, None, TColGeom_HArray1OfBezierCurve)
TColGeom_HArray1OfBezierCurve.Lower = new_instancemethod(_TColGeom.TColGeom_HArray1OfBezierCurve_Lower, None, TColGeom_HArray1OfBezierCurve)
TColGeom_HArray1OfBezierCurve.Upper = new_instancemethod(_TColGeom.TColGeom_HArray1OfBezierCurve_Upper, None, TColGeom_HArray1OfBezierCurve)
TColGeom_HArray1OfBezierCurve.SetValue = new_instancemethod(_TColGeom.TColGeom_HArray1OfBezierCurve_SetValue, None, TColGeom_HArray1OfBezierCurve)
TColGeom_HArray1OfBezierCurve.Value = new_instancemethod(_TColGeom.TColGeom_HArray1OfBezierCurve_Value, None, TColGeom_HArray1OfBezierCurve)
TColGeom_HArray1OfBezierCurve.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HArray1OfBezierCurve_ChangeValue, None, TColGeom_HArray1OfBezierCurve)
TColGeom_HArray1OfBezierCurve.Array1 = new_instancemethod(_TColGeom.TColGeom_HArray1OfBezierCurve_Array1, None, TColGeom_HArray1OfBezierCurve)
TColGeom_HArray1OfBezierCurve.ChangeArray1 = new_instancemethod(_TColGeom.TColGeom_HArray1OfBezierCurve_ChangeArray1, None, TColGeom_HArray1OfBezierCurve)
TColGeom_HArray1OfBezierCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HArray1OfBezierCurve__kill_pointed, None, TColGeom_HArray1OfBezierCurve)
TColGeom_HArray1OfBezierCurve.GetHandle = new_instancemethod(_TColGeom.TColGeom_HArray1OfBezierCurve_GetHandle, None, TColGeom_HArray1OfBezierCurve)
TColGeom_HArray1OfBezierCurve_swigregister = _TColGeom.TColGeom_HArray1OfBezierCurve_swigregister
TColGeom_HArray1OfBezierCurve_swigregister(TColGeom_HArray1OfBezierCurve)

class Handle_TColGeom_HArray1OfBezierCurve(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HArray1OfBezierCurve_swiginit(self, _TColGeom.new_Handle_TColGeom_HArray1OfBezierCurve(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HArray1OfBezierCurve_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HArray1OfBezierCurve.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBezierCurve_Nullify, None, Handle_TColGeom_HArray1OfBezierCurve)
Handle_TColGeom_HArray1OfBezierCurve.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBezierCurve_IsNull, None, Handle_TColGeom_HArray1OfBezierCurve)
Handle_TColGeom_HArray1OfBezierCurve.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBezierCurve_GetObject, None, Handle_TColGeom_HArray1OfBezierCurve)
Handle_TColGeom_HArray1OfBezierCurve._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBezierCurve__kill_pointed, None, Handle_TColGeom_HArray1OfBezierCurve)
Handle_TColGeom_HArray1OfBezierCurve_swigregister = _TColGeom.Handle_TColGeom_HArray1OfBezierCurve_swigregister
Handle_TColGeom_HArray1OfBezierCurve_swigregister(Handle_TColGeom_HArray1OfBezierCurve)

def Handle_TColGeom_HArray1OfBezierCurve_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HArray1OfBezierCurve_DownCast(AnObject)
Handle_TColGeom_HArray1OfBezierCurve_DownCast = _TColGeom.Handle_TColGeom_HArray1OfBezierCurve_DownCast

class TColGeom_HArray1OfBoundedCurve(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Handle_Geom_BoundedCurve &
        :rtype: None

        """
        _TColGeom.TColGeom_HArray1OfBoundedCurve_swiginit(self, _TColGeom.new_TColGeom_HArray1OfBoundedCurve(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray1OfBoundedCurve_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfBoundedCurve_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfBoundedCurve_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfBoundedCurve_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Geom_BoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray1OfBoundedCurve_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BoundedCurve

        """
        return _TColGeom.TColGeom_HArray1OfBoundedCurve_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BoundedCurve

        """
        return _TColGeom.TColGeom_HArray1OfBoundedCurve_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: TColGeom_Array1OfBoundedCurve

        """
        return _TColGeom.TColGeom_HArray1OfBoundedCurve_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: TColGeom_Array1OfBoundedCurve

        """
        return _TColGeom.TColGeom_HArray1OfBoundedCurve_ChangeArray1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HArray1OfBoundedCurve self)"""
        return _TColGeom.TColGeom_HArray1OfBoundedCurve__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HArray1OfBoundedCurve self) -> Handle_TColGeom_HArray1OfBoundedCurve"""
        return _TColGeom.TColGeom_HArray1OfBoundedCurve_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HArray1OfBoundedCurve.Init = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedCurve_Init, None, TColGeom_HArray1OfBoundedCurve)
TColGeom_HArray1OfBoundedCurve.Length = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedCurve_Length, None, TColGeom_HArray1OfBoundedCurve)
TColGeom_HArray1OfBoundedCurve.Lower = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedCurve_Lower, None, TColGeom_HArray1OfBoundedCurve)
TColGeom_HArray1OfBoundedCurve.Upper = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedCurve_Upper, None, TColGeom_HArray1OfBoundedCurve)
TColGeom_HArray1OfBoundedCurve.SetValue = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedCurve_SetValue, None, TColGeom_HArray1OfBoundedCurve)
TColGeom_HArray1OfBoundedCurve.Value = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedCurve_Value, None, TColGeom_HArray1OfBoundedCurve)
TColGeom_HArray1OfBoundedCurve.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedCurve_ChangeValue, None, TColGeom_HArray1OfBoundedCurve)
TColGeom_HArray1OfBoundedCurve.Array1 = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedCurve_Array1, None, TColGeom_HArray1OfBoundedCurve)
TColGeom_HArray1OfBoundedCurve.ChangeArray1 = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedCurve_ChangeArray1, None, TColGeom_HArray1OfBoundedCurve)
TColGeom_HArray1OfBoundedCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedCurve__kill_pointed, None, TColGeom_HArray1OfBoundedCurve)
TColGeom_HArray1OfBoundedCurve.GetHandle = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedCurve_GetHandle, None, TColGeom_HArray1OfBoundedCurve)
TColGeom_HArray1OfBoundedCurve_swigregister = _TColGeom.TColGeom_HArray1OfBoundedCurve_swigregister
TColGeom_HArray1OfBoundedCurve_swigregister(TColGeom_HArray1OfBoundedCurve)

class Handle_TColGeom_HArray1OfBoundedCurve(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HArray1OfBoundedCurve_swiginit(self, _TColGeom.new_Handle_TColGeom_HArray1OfBoundedCurve(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HArray1OfBoundedCurve_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HArray1OfBoundedCurve.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBoundedCurve_Nullify, None, Handle_TColGeom_HArray1OfBoundedCurve)
Handle_TColGeom_HArray1OfBoundedCurve.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBoundedCurve_IsNull, None, Handle_TColGeom_HArray1OfBoundedCurve)
Handle_TColGeom_HArray1OfBoundedCurve.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBoundedCurve_GetObject, None, Handle_TColGeom_HArray1OfBoundedCurve)
Handle_TColGeom_HArray1OfBoundedCurve._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBoundedCurve__kill_pointed, None, Handle_TColGeom_HArray1OfBoundedCurve)
Handle_TColGeom_HArray1OfBoundedCurve_swigregister = _TColGeom.Handle_TColGeom_HArray1OfBoundedCurve_swigregister
Handle_TColGeom_HArray1OfBoundedCurve_swigregister(Handle_TColGeom_HArray1OfBoundedCurve)

def Handle_TColGeom_HArray1OfBoundedCurve_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HArray1OfBoundedCurve_DownCast(AnObject)
Handle_TColGeom_HArray1OfBoundedCurve_DownCast = _TColGeom.Handle_TColGeom_HArray1OfBoundedCurve_DownCast

class TColGeom_HArray1OfBoundedSurface(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Handle_Geom_BoundedSurface &
        :rtype: None

        """
        _TColGeom.TColGeom_HArray1OfBoundedSurface_swiginit(self, _TColGeom.new_TColGeom_HArray1OfBoundedSurface(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray1OfBoundedSurface_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfBoundedSurface_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfBoundedSurface_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfBoundedSurface_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Geom_BoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray1OfBoundedSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_HArray1OfBoundedSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_HArray1OfBoundedSurface_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: TColGeom_Array1OfBoundedSurface

        """
        return _TColGeom.TColGeom_HArray1OfBoundedSurface_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: TColGeom_Array1OfBoundedSurface

        """
        return _TColGeom.TColGeom_HArray1OfBoundedSurface_ChangeArray1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HArray1OfBoundedSurface self)"""
        return _TColGeom.TColGeom_HArray1OfBoundedSurface__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HArray1OfBoundedSurface self) -> Handle_TColGeom_HArray1OfBoundedSurface"""
        return _TColGeom.TColGeom_HArray1OfBoundedSurface_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HArray1OfBoundedSurface.Init = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedSurface_Init, None, TColGeom_HArray1OfBoundedSurface)
TColGeom_HArray1OfBoundedSurface.Length = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedSurface_Length, None, TColGeom_HArray1OfBoundedSurface)
TColGeom_HArray1OfBoundedSurface.Lower = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedSurface_Lower, None, TColGeom_HArray1OfBoundedSurface)
TColGeom_HArray1OfBoundedSurface.Upper = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedSurface_Upper, None, TColGeom_HArray1OfBoundedSurface)
TColGeom_HArray1OfBoundedSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedSurface_SetValue, None, TColGeom_HArray1OfBoundedSurface)
TColGeom_HArray1OfBoundedSurface.Value = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedSurface_Value, None, TColGeom_HArray1OfBoundedSurface)
TColGeom_HArray1OfBoundedSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedSurface_ChangeValue, None, TColGeom_HArray1OfBoundedSurface)
TColGeom_HArray1OfBoundedSurface.Array1 = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedSurface_Array1, None, TColGeom_HArray1OfBoundedSurface)
TColGeom_HArray1OfBoundedSurface.ChangeArray1 = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedSurface_ChangeArray1, None, TColGeom_HArray1OfBoundedSurface)
TColGeom_HArray1OfBoundedSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedSurface__kill_pointed, None, TColGeom_HArray1OfBoundedSurface)
TColGeom_HArray1OfBoundedSurface.GetHandle = new_instancemethod(_TColGeom.TColGeom_HArray1OfBoundedSurface_GetHandle, None, TColGeom_HArray1OfBoundedSurface)
TColGeom_HArray1OfBoundedSurface_swigregister = _TColGeom.TColGeom_HArray1OfBoundedSurface_swigregister
TColGeom_HArray1OfBoundedSurface_swigregister(TColGeom_HArray1OfBoundedSurface)

class Handle_TColGeom_HArray1OfBoundedSurface(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HArray1OfBoundedSurface_swiginit(self, _TColGeom.new_Handle_TColGeom_HArray1OfBoundedSurface(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HArray1OfBoundedSurface_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HArray1OfBoundedSurface.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBoundedSurface_Nullify, None, Handle_TColGeom_HArray1OfBoundedSurface)
Handle_TColGeom_HArray1OfBoundedSurface.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBoundedSurface_IsNull, None, Handle_TColGeom_HArray1OfBoundedSurface)
Handle_TColGeom_HArray1OfBoundedSurface.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBoundedSurface_GetObject, None, Handle_TColGeom_HArray1OfBoundedSurface)
Handle_TColGeom_HArray1OfBoundedSurface._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfBoundedSurface__kill_pointed, None, Handle_TColGeom_HArray1OfBoundedSurface)
Handle_TColGeom_HArray1OfBoundedSurface_swigregister = _TColGeom.Handle_TColGeom_HArray1OfBoundedSurface_swigregister
Handle_TColGeom_HArray1OfBoundedSurface_swigregister(Handle_TColGeom_HArray1OfBoundedSurface)

def Handle_TColGeom_HArray1OfBoundedSurface_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HArray1OfBoundedSurface_DownCast(AnObject)
Handle_TColGeom_HArray1OfBoundedSurface_DownCast = _TColGeom.Handle_TColGeom_HArray1OfBoundedSurface_DownCast

class TColGeom_HArray1OfCurve(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Handle_Geom_Curve &
        :rtype: None

        """
        _TColGeom.TColGeom_HArray1OfCurve_swiginit(self, _TColGeom.new_TColGeom_HArray1OfCurve(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_Curve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray1OfCurve_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfCurve_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfCurve_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfCurve_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Geom_Curve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray1OfCurve_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_Curve

        """
        return _TColGeom.TColGeom_HArray1OfCurve_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_Curve

        """
        return _TColGeom.TColGeom_HArray1OfCurve_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: TColGeom_Array1OfCurve

        """
        return _TColGeom.TColGeom_HArray1OfCurve_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: TColGeom_Array1OfCurve

        """
        return _TColGeom.TColGeom_HArray1OfCurve_ChangeArray1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HArray1OfCurve self)"""
        return _TColGeom.TColGeom_HArray1OfCurve__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HArray1OfCurve self) -> Handle_TColGeom_HArray1OfCurve"""
        return _TColGeom.TColGeom_HArray1OfCurve_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HArray1OfCurve.Init = new_instancemethod(_TColGeom.TColGeom_HArray1OfCurve_Init, None, TColGeom_HArray1OfCurve)
TColGeom_HArray1OfCurve.Length = new_instancemethod(_TColGeom.TColGeom_HArray1OfCurve_Length, None, TColGeom_HArray1OfCurve)
TColGeom_HArray1OfCurve.Lower = new_instancemethod(_TColGeom.TColGeom_HArray1OfCurve_Lower, None, TColGeom_HArray1OfCurve)
TColGeom_HArray1OfCurve.Upper = new_instancemethod(_TColGeom.TColGeom_HArray1OfCurve_Upper, None, TColGeom_HArray1OfCurve)
TColGeom_HArray1OfCurve.SetValue = new_instancemethod(_TColGeom.TColGeom_HArray1OfCurve_SetValue, None, TColGeom_HArray1OfCurve)
TColGeom_HArray1OfCurve.Value = new_instancemethod(_TColGeom.TColGeom_HArray1OfCurve_Value, None, TColGeom_HArray1OfCurve)
TColGeom_HArray1OfCurve.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HArray1OfCurve_ChangeValue, None, TColGeom_HArray1OfCurve)
TColGeom_HArray1OfCurve.Array1 = new_instancemethod(_TColGeom.TColGeom_HArray1OfCurve_Array1, None, TColGeom_HArray1OfCurve)
TColGeom_HArray1OfCurve.ChangeArray1 = new_instancemethod(_TColGeom.TColGeom_HArray1OfCurve_ChangeArray1, None, TColGeom_HArray1OfCurve)
TColGeom_HArray1OfCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HArray1OfCurve__kill_pointed, None, TColGeom_HArray1OfCurve)
TColGeom_HArray1OfCurve.GetHandle = new_instancemethod(_TColGeom.TColGeom_HArray1OfCurve_GetHandle, None, TColGeom_HArray1OfCurve)
TColGeom_HArray1OfCurve_swigregister = _TColGeom.TColGeom_HArray1OfCurve_swigregister
TColGeom_HArray1OfCurve_swigregister(TColGeom_HArray1OfCurve)

class Handle_TColGeom_HArray1OfCurve(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HArray1OfCurve_swiginit(self, _TColGeom.new_Handle_TColGeom_HArray1OfCurve(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HArray1OfCurve_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HArray1OfCurve.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfCurve_Nullify, None, Handle_TColGeom_HArray1OfCurve)
Handle_TColGeom_HArray1OfCurve.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfCurve_IsNull, None, Handle_TColGeom_HArray1OfCurve)
Handle_TColGeom_HArray1OfCurve.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfCurve_GetObject, None, Handle_TColGeom_HArray1OfCurve)
Handle_TColGeom_HArray1OfCurve._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfCurve__kill_pointed, None, Handle_TColGeom_HArray1OfCurve)
Handle_TColGeom_HArray1OfCurve_swigregister = _TColGeom.Handle_TColGeom_HArray1OfCurve_swigregister
Handle_TColGeom_HArray1OfCurve_swigregister(Handle_TColGeom_HArray1OfCurve)

def Handle_TColGeom_HArray1OfCurve_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HArray1OfCurve_DownCast(AnObject)
Handle_TColGeom_HArray1OfCurve_DownCast = _TColGeom.Handle_TColGeom_HArray1OfCurve_DownCast

class TColGeom_HArray1OfSurface(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Handle_Geom_Surface &
        :rtype: None

        """
        _TColGeom.TColGeom_HArray1OfSurface_swiginit(self, _TColGeom.new_TColGeom_HArray1OfSurface(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_Surface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray1OfSurface_Init(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfSurface_Length(self, *args)


    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfSurface_Lower(self, *args)


    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray1OfSurface_Upper(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Handle_Geom_Surface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray1OfSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_HArray1OfSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_HArray1OfSurface_ChangeValue(self, *args)


    def Array1(self, *args):
        """
        :rtype: TColGeom_Array1OfSurface

        """
        return _TColGeom.TColGeom_HArray1OfSurface_Array1(self, *args)


    def ChangeArray1(self, *args):
        """
        :rtype: TColGeom_Array1OfSurface

        """
        return _TColGeom.TColGeom_HArray1OfSurface_ChangeArray1(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HArray1OfSurface self)"""
        return _TColGeom.TColGeom_HArray1OfSurface__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HArray1OfSurface self) -> Handle_TColGeom_HArray1OfSurface"""
        return _TColGeom.TColGeom_HArray1OfSurface_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HArray1OfSurface.Init = new_instancemethod(_TColGeom.TColGeom_HArray1OfSurface_Init, None, TColGeom_HArray1OfSurface)
TColGeom_HArray1OfSurface.Length = new_instancemethod(_TColGeom.TColGeom_HArray1OfSurface_Length, None, TColGeom_HArray1OfSurface)
TColGeom_HArray1OfSurface.Lower = new_instancemethod(_TColGeom.TColGeom_HArray1OfSurface_Lower, None, TColGeom_HArray1OfSurface)
TColGeom_HArray1OfSurface.Upper = new_instancemethod(_TColGeom.TColGeom_HArray1OfSurface_Upper, None, TColGeom_HArray1OfSurface)
TColGeom_HArray1OfSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_HArray1OfSurface_SetValue, None, TColGeom_HArray1OfSurface)
TColGeom_HArray1OfSurface.Value = new_instancemethod(_TColGeom.TColGeom_HArray1OfSurface_Value, None, TColGeom_HArray1OfSurface)
TColGeom_HArray1OfSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HArray1OfSurface_ChangeValue, None, TColGeom_HArray1OfSurface)
TColGeom_HArray1OfSurface.Array1 = new_instancemethod(_TColGeom.TColGeom_HArray1OfSurface_Array1, None, TColGeom_HArray1OfSurface)
TColGeom_HArray1OfSurface.ChangeArray1 = new_instancemethod(_TColGeom.TColGeom_HArray1OfSurface_ChangeArray1, None, TColGeom_HArray1OfSurface)
TColGeom_HArray1OfSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HArray1OfSurface__kill_pointed, None, TColGeom_HArray1OfSurface)
TColGeom_HArray1OfSurface.GetHandle = new_instancemethod(_TColGeom.TColGeom_HArray1OfSurface_GetHandle, None, TColGeom_HArray1OfSurface)
TColGeom_HArray1OfSurface_swigregister = _TColGeom.TColGeom_HArray1OfSurface_swigregister
TColGeom_HArray1OfSurface_swigregister(TColGeom_HArray1OfSurface)

class Handle_TColGeom_HArray1OfSurface(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HArray1OfSurface_swiginit(self, _TColGeom.new_Handle_TColGeom_HArray1OfSurface(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HArray1OfSurface_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HArray1OfSurface.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfSurface_Nullify, None, Handle_TColGeom_HArray1OfSurface)
Handle_TColGeom_HArray1OfSurface.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfSurface_IsNull, None, Handle_TColGeom_HArray1OfSurface)
Handle_TColGeom_HArray1OfSurface.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfSurface_GetObject, None, Handle_TColGeom_HArray1OfSurface)
Handle_TColGeom_HArray1OfSurface._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HArray1OfSurface__kill_pointed, None, Handle_TColGeom_HArray1OfSurface)
Handle_TColGeom_HArray1OfSurface_swigregister = _TColGeom.Handle_TColGeom_HArray1OfSurface_swigregister
Handle_TColGeom_HArray1OfSurface_swigregister(Handle_TColGeom_HArray1OfSurface)

def Handle_TColGeom_HArray1OfSurface_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HArray1OfSurface_DownCast(AnObject)
Handle_TColGeom_HArray1OfSurface_DownCast = _TColGeom.Handle_TColGeom_HArray1OfSurface_DownCast

class TColGeom_HArray2OfBSplineSurface(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: Handle_Geom_BSplineSurface &
        :rtype: None

        """
        _TColGeom.TColGeom_HArray2OfBSplineSurface_swiginit(self, _TColGeom.new_TColGeom_HArray2OfBSplineSurface(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BSplineSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_Init(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Handle_Geom_BSplineSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_BSplineSurface

        """
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_BSplineSurface

        """
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_ChangeValue(self, *args)


    def Array2(self, *args):
        """
        :rtype: TColGeom_Array2OfBSplineSurface

        """
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_Array2(self, *args)


    def ChangeArray2(self, *args):
        """
        :rtype: TColGeom_Array2OfBSplineSurface

        """
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_ChangeArray2(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HArray2OfBSplineSurface self)"""
        return _TColGeom.TColGeom_HArray2OfBSplineSurface__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HArray2OfBSplineSurface self) -> Handle_TColGeom_HArray2OfBSplineSurface"""
        return _TColGeom.TColGeom_HArray2OfBSplineSurface_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HArray2OfBSplineSurface.Init = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_Init, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface.ColLength = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_ColLength, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface.RowLength = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_RowLength, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface.LowerCol = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_LowerCol, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface.LowerRow = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_LowerRow, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface.UpperCol = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_UpperCol, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface.UpperRow = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_UpperRow, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_SetValue, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface.Value = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_Value, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_ChangeValue, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface.Array2 = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_Array2, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface.ChangeArray2 = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_ChangeArray2, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface__kill_pointed, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface.GetHandle = new_instancemethod(_TColGeom.TColGeom_HArray2OfBSplineSurface_GetHandle, None, TColGeom_HArray2OfBSplineSurface)
TColGeom_HArray2OfBSplineSurface_swigregister = _TColGeom.TColGeom_HArray2OfBSplineSurface_swigregister
TColGeom_HArray2OfBSplineSurface_swigregister(TColGeom_HArray2OfBSplineSurface)

class Handle_TColGeom_HArray2OfBSplineSurface(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HArray2OfBSplineSurface_swiginit(self, _TColGeom.new_Handle_TColGeom_HArray2OfBSplineSurface(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HArray2OfBSplineSurface_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HArray2OfBSplineSurface.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfBSplineSurface_Nullify, None, Handle_TColGeom_HArray2OfBSplineSurface)
Handle_TColGeom_HArray2OfBSplineSurface.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfBSplineSurface_IsNull, None, Handle_TColGeom_HArray2OfBSplineSurface)
Handle_TColGeom_HArray2OfBSplineSurface.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfBSplineSurface_GetObject, None, Handle_TColGeom_HArray2OfBSplineSurface)
Handle_TColGeom_HArray2OfBSplineSurface._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfBSplineSurface__kill_pointed, None, Handle_TColGeom_HArray2OfBSplineSurface)
Handle_TColGeom_HArray2OfBSplineSurface_swigregister = _TColGeom.Handle_TColGeom_HArray2OfBSplineSurface_swigregister
Handle_TColGeom_HArray2OfBSplineSurface_swigregister(Handle_TColGeom_HArray2OfBSplineSurface)

def Handle_TColGeom_HArray2OfBSplineSurface_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HArray2OfBSplineSurface_DownCast(AnObject)
Handle_TColGeom_HArray2OfBSplineSurface_DownCast = _TColGeom.Handle_TColGeom_HArray2OfBSplineSurface_DownCast

class TColGeom_HArray2OfBezierSurface(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: Handle_Geom_BezierSurface &
        :rtype: None

        """
        _TColGeom.TColGeom_HArray2OfBezierSurface_swiginit(self, _TColGeom.new_TColGeom_HArray2OfBezierSurface(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BezierSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray2OfBezierSurface_Init(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBezierSurface_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBezierSurface_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBezierSurface_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBezierSurface_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBezierSurface_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBezierSurface_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Handle_Geom_BezierSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray2OfBezierSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_BezierSurface

        """
        return _TColGeom.TColGeom_HArray2OfBezierSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_BezierSurface

        """
        return _TColGeom.TColGeom_HArray2OfBezierSurface_ChangeValue(self, *args)


    def Array2(self, *args):
        """
        :rtype: TColGeom_Array2OfBezierSurface

        """
        return _TColGeom.TColGeom_HArray2OfBezierSurface_Array2(self, *args)


    def ChangeArray2(self, *args):
        """
        :rtype: TColGeom_Array2OfBezierSurface

        """
        return _TColGeom.TColGeom_HArray2OfBezierSurface_ChangeArray2(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HArray2OfBezierSurface self)"""
        return _TColGeom.TColGeom_HArray2OfBezierSurface__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HArray2OfBezierSurface self) -> Handle_TColGeom_HArray2OfBezierSurface"""
        return _TColGeom.TColGeom_HArray2OfBezierSurface_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HArray2OfBezierSurface.Init = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_Init, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface.ColLength = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_ColLength, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface.RowLength = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_RowLength, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface.LowerCol = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_LowerCol, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface.LowerRow = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_LowerRow, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface.UpperCol = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_UpperCol, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface.UpperRow = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_UpperRow, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_SetValue, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface.Value = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_Value, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_ChangeValue, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface.Array2 = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_Array2, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface.ChangeArray2 = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_ChangeArray2, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface__kill_pointed, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface.GetHandle = new_instancemethod(_TColGeom.TColGeom_HArray2OfBezierSurface_GetHandle, None, TColGeom_HArray2OfBezierSurface)
TColGeom_HArray2OfBezierSurface_swigregister = _TColGeom.TColGeom_HArray2OfBezierSurface_swigregister
TColGeom_HArray2OfBezierSurface_swigregister(TColGeom_HArray2OfBezierSurface)

class Handle_TColGeom_HArray2OfBezierSurface(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HArray2OfBezierSurface_swiginit(self, _TColGeom.new_Handle_TColGeom_HArray2OfBezierSurface(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HArray2OfBezierSurface_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HArray2OfBezierSurface.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfBezierSurface_Nullify, None, Handle_TColGeom_HArray2OfBezierSurface)
Handle_TColGeom_HArray2OfBezierSurface.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfBezierSurface_IsNull, None, Handle_TColGeom_HArray2OfBezierSurface)
Handle_TColGeom_HArray2OfBezierSurface.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfBezierSurface_GetObject, None, Handle_TColGeom_HArray2OfBezierSurface)
Handle_TColGeom_HArray2OfBezierSurface._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfBezierSurface__kill_pointed, None, Handle_TColGeom_HArray2OfBezierSurface)
Handle_TColGeom_HArray2OfBezierSurface_swigregister = _TColGeom.Handle_TColGeom_HArray2OfBezierSurface_swigregister
Handle_TColGeom_HArray2OfBezierSurface_swigregister(Handle_TColGeom_HArray2OfBezierSurface)

def Handle_TColGeom_HArray2OfBezierSurface_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HArray2OfBezierSurface_DownCast(AnObject)
Handle_TColGeom_HArray2OfBezierSurface_DownCast = _TColGeom.Handle_TColGeom_HArray2OfBezierSurface_DownCast

class TColGeom_HArray2OfBoundedSurface(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: Handle_Geom_BoundedSurface &
        :rtype: None

        """
        _TColGeom.TColGeom_HArray2OfBoundedSurface_swiginit(self, _TColGeom.new_TColGeom_HArray2OfBoundedSurface(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_BoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_Init(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Handle_Geom_BoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_ChangeValue(self, *args)


    def Array2(self, *args):
        """
        :rtype: TColGeom_Array2OfBoundedSurface

        """
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_Array2(self, *args)


    def ChangeArray2(self, *args):
        """
        :rtype: TColGeom_Array2OfBoundedSurface

        """
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_ChangeArray2(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HArray2OfBoundedSurface self)"""
        return _TColGeom.TColGeom_HArray2OfBoundedSurface__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HArray2OfBoundedSurface self) -> Handle_TColGeom_HArray2OfBoundedSurface"""
        return _TColGeom.TColGeom_HArray2OfBoundedSurface_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HArray2OfBoundedSurface.Init = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_Init, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface.ColLength = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_ColLength, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface.RowLength = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_RowLength, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface.LowerCol = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_LowerCol, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface.LowerRow = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_LowerRow, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface.UpperCol = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_UpperCol, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface.UpperRow = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_UpperRow, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_SetValue, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface.Value = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_Value, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_ChangeValue, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface.Array2 = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_Array2, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface.ChangeArray2 = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_ChangeArray2, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface__kill_pointed, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface.GetHandle = new_instancemethod(_TColGeom.TColGeom_HArray2OfBoundedSurface_GetHandle, None, TColGeom_HArray2OfBoundedSurface)
TColGeom_HArray2OfBoundedSurface_swigregister = _TColGeom.TColGeom_HArray2OfBoundedSurface_swigregister
TColGeom_HArray2OfBoundedSurface_swigregister(TColGeom_HArray2OfBoundedSurface)

class Handle_TColGeom_HArray2OfBoundedSurface(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HArray2OfBoundedSurface_swiginit(self, _TColGeom.new_Handle_TColGeom_HArray2OfBoundedSurface(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HArray2OfBoundedSurface_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HArray2OfBoundedSurface.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfBoundedSurface_Nullify, None, Handle_TColGeom_HArray2OfBoundedSurface)
Handle_TColGeom_HArray2OfBoundedSurface.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfBoundedSurface_IsNull, None, Handle_TColGeom_HArray2OfBoundedSurface)
Handle_TColGeom_HArray2OfBoundedSurface.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfBoundedSurface_GetObject, None, Handle_TColGeom_HArray2OfBoundedSurface)
Handle_TColGeom_HArray2OfBoundedSurface._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfBoundedSurface__kill_pointed, None, Handle_TColGeom_HArray2OfBoundedSurface)
Handle_TColGeom_HArray2OfBoundedSurface_swigregister = _TColGeom.Handle_TColGeom_HArray2OfBoundedSurface_swigregister
Handle_TColGeom_HArray2OfBoundedSurface_swigregister(Handle_TColGeom_HArray2OfBoundedSurface)

def Handle_TColGeom_HArray2OfBoundedSurface_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HArray2OfBoundedSurface_DownCast(AnObject)
Handle_TColGeom_HArray2OfBoundedSurface_DownCast = _TColGeom.Handle_TColGeom_HArray2OfBoundedSurface_DownCast

class TColGeom_HArray2OfSurface(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: Handle_Geom_Surface &
        :rtype: None

        """
        _TColGeom.TColGeom_HArray2OfSurface_swiginit(self, _TColGeom.new_TColGeom_HArray2OfSurface(*args))

    def Init(self, *args):
        """
        :param V:
        :type V: Handle_Geom_Surface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray2OfSurface_Init(self, *args)


    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfSurface_ColLength(self, *args)


    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfSurface_RowLength(self, *args)


    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfSurface_LowerCol(self, *args)


    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfSurface_LowerRow(self, *args)


    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfSurface_UpperCol(self, *args)


    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HArray2OfSurface_UpperRow(self, *args)


    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Handle_Geom_Surface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HArray2OfSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_HArray2OfSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_HArray2OfSurface_ChangeValue(self, *args)


    def Array2(self, *args):
        """
        :rtype: TColGeom_Array2OfSurface

        """
        return _TColGeom.TColGeom_HArray2OfSurface_Array2(self, *args)


    def ChangeArray2(self, *args):
        """
        :rtype: TColGeom_Array2OfSurface

        """
        return _TColGeom.TColGeom_HArray2OfSurface_ChangeArray2(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HArray2OfSurface self)"""
        return _TColGeom.TColGeom_HArray2OfSurface__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HArray2OfSurface self) -> Handle_TColGeom_HArray2OfSurface"""
        return _TColGeom.TColGeom_HArray2OfSurface_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HArray2OfSurface.Init = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_Init, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface.ColLength = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_ColLength, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface.RowLength = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_RowLength, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface.LowerCol = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_LowerCol, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface.LowerRow = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_LowerRow, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface.UpperCol = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_UpperCol, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface.UpperRow = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_UpperRow, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_SetValue, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface.Value = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_Value, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_ChangeValue, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface.Array2 = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_Array2, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface.ChangeArray2 = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_ChangeArray2, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface__kill_pointed, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface.GetHandle = new_instancemethod(_TColGeom.TColGeom_HArray2OfSurface_GetHandle, None, TColGeom_HArray2OfSurface)
TColGeom_HArray2OfSurface_swigregister = _TColGeom.TColGeom_HArray2OfSurface_swigregister
TColGeom_HArray2OfSurface_swigregister(TColGeom_HArray2OfSurface)

class Handle_TColGeom_HArray2OfSurface(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HArray2OfSurface_swiginit(self, _TColGeom.new_Handle_TColGeom_HArray2OfSurface(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HArray2OfSurface_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HArray2OfSurface.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfSurface_Nullify, None, Handle_TColGeom_HArray2OfSurface)
Handle_TColGeom_HArray2OfSurface.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfSurface_IsNull, None, Handle_TColGeom_HArray2OfSurface)
Handle_TColGeom_HArray2OfSurface.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfSurface_GetObject, None, Handle_TColGeom_HArray2OfSurface)
Handle_TColGeom_HArray2OfSurface._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HArray2OfSurface__kill_pointed, None, Handle_TColGeom_HArray2OfSurface)
Handle_TColGeom_HArray2OfSurface_swigregister = _TColGeom.Handle_TColGeom_HArray2OfSurface_swigregister
Handle_TColGeom_HArray2OfSurface_swigregister(Handle_TColGeom_HArray2OfSurface)

def Handle_TColGeom_HArray2OfSurface_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HArray2OfSurface_DownCast(AnObject)
Handle_TColGeom_HArray2OfSurface_DownCast = _TColGeom.Handle_TColGeom_HArray2OfSurface_DownCast

class TColGeom_HSequenceOfBoundedCurve(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TColGeom.TColGeom_HSequenceOfBoundedCurve_swiginit(self, _TColGeom.new_TColGeom_HSequenceOfBoundedCurve(*args))

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_IsEmpty(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_Length(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_Clear(self, *args)


    def Append(self, *args):
        """
        :param anItem:
        :type anItem: Handle_Geom_BoundedCurve &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfBoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_Append(self, *args)


    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: Handle_Geom_BoundedCurve &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfBoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_Prepend(self, *args)


    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_Reverse(self, *args)


    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Geom_BoundedCurve &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfBoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Geom_BoundedCurve &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfBoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_InsertAfter(self, *args)


    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_Exchange(self, *args)


    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColGeom_HSequenceOfBoundedCurve

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_Split(self, *args)


    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Geom_BoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_SetValue(self, *args)


    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_Geom_BoundedCurve

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_Geom_BoundedCurve

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_Remove(self, *args)


    def Sequence(self, *args):
        """
        :rtype: TColGeom_SequenceOfBoundedCurve

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_Sequence(self, *args)


    def ChangeSequence(self, *args):
        """
        :rtype: TColGeom_SequenceOfBoundedCurve

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_ChangeSequence(self, *args)


    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColGeom_HSequenceOfBoundedCurve

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_ShallowCopy(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HSequenceOfBoundedCurve self)"""
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HSequenceOfBoundedCurve self) -> Handle_TColGeom_HSequenceOfBoundedCurve"""
        return _TColGeom.TColGeom_HSequenceOfBoundedCurve_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HSequenceOfBoundedCurve.IsEmpty = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_IsEmpty, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.Length = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_Length, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.Clear = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_Clear, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.Append = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_Append, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.Prepend = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_Prepend, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.Reverse = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_Reverse, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.InsertBefore = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_InsertBefore, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.InsertAfter = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_InsertAfter, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.Exchange = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_Exchange, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.Split = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_Split, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.SetValue = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_SetValue, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.Value = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_Value, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_ChangeValue, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.Remove = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_Remove, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.Sequence = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_Sequence, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.ChangeSequence = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_ChangeSequence, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.ShallowCopy = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_ShallowCopy, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve__kill_pointed, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve.GetHandle = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedCurve_GetHandle, None, TColGeom_HSequenceOfBoundedCurve)
TColGeom_HSequenceOfBoundedCurve_swigregister = _TColGeom.TColGeom_HSequenceOfBoundedCurve_swigregister
TColGeom_HSequenceOfBoundedCurve_swigregister(TColGeom_HSequenceOfBoundedCurve)

class Handle_TColGeom_HSequenceOfBoundedCurve(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HSequenceOfBoundedCurve_swiginit(self, _TColGeom.new_Handle_TColGeom_HSequenceOfBoundedCurve(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HSequenceOfBoundedCurve_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HSequenceOfBoundedCurve.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfBoundedCurve_Nullify, None, Handle_TColGeom_HSequenceOfBoundedCurve)
Handle_TColGeom_HSequenceOfBoundedCurve.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfBoundedCurve_IsNull, None, Handle_TColGeom_HSequenceOfBoundedCurve)
Handle_TColGeom_HSequenceOfBoundedCurve.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfBoundedCurve_GetObject, None, Handle_TColGeom_HSequenceOfBoundedCurve)
Handle_TColGeom_HSequenceOfBoundedCurve._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfBoundedCurve__kill_pointed, None, Handle_TColGeom_HSequenceOfBoundedCurve)
Handle_TColGeom_HSequenceOfBoundedCurve_swigregister = _TColGeom.Handle_TColGeom_HSequenceOfBoundedCurve_swigregister
Handle_TColGeom_HSequenceOfBoundedCurve_swigregister(Handle_TColGeom_HSequenceOfBoundedCurve)

def Handle_TColGeom_HSequenceOfBoundedCurve_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HSequenceOfBoundedCurve_DownCast(AnObject)
Handle_TColGeom_HSequenceOfBoundedCurve_DownCast = _TColGeom.Handle_TColGeom_HSequenceOfBoundedCurve_DownCast

class TColGeom_HSequenceOfBoundedSurface(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TColGeom.TColGeom_HSequenceOfBoundedSurface_swiginit(self, _TColGeom.new_TColGeom_HSequenceOfBoundedSurface(*args))

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_IsEmpty(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_Length(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_Clear(self, *args)


    def Append(self, *args):
        """
        :param anItem:
        :type anItem: Handle_Geom_BoundedSurface &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfBoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_Append(self, *args)


    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: Handle_Geom_BoundedSurface &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfBoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_Prepend(self, *args)


    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_Reverse(self, *args)


    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Geom_BoundedSurface &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfBoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Geom_BoundedSurface &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfBoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_InsertAfter(self, *args)


    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_Exchange(self, *args)


    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColGeom_HSequenceOfBoundedSurface

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_Split(self, *args)


    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Geom_BoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_Remove(self, *args)


    def Sequence(self, *args):
        """
        :rtype: TColGeom_SequenceOfBoundedSurface

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_Sequence(self, *args)


    def ChangeSequence(self, *args):
        """
        :rtype: TColGeom_SequenceOfBoundedSurface

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_ChangeSequence(self, *args)


    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColGeom_HSequenceOfBoundedSurface

        """
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_ShallowCopy(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HSequenceOfBoundedSurface self)"""
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HSequenceOfBoundedSurface self) -> Handle_TColGeom_HSequenceOfBoundedSurface"""
        return _TColGeom.TColGeom_HSequenceOfBoundedSurface_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HSequenceOfBoundedSurface.IsEmpty = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_IsEmpty, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.Length = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_Length, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.Clear = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_Clear, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.Append = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_Append, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.Prepend = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_Prepend, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.Reverse = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_Reverse, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.InsertBefore = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_InsertBefore, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.InsertAfter = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_InsertAfter, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.Exchange = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_Exchange, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.Split = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_Split, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_SetValue, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.Value = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_Value, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_ChangeValue, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.Remove = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_Remove, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.Sequence = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_Sequence, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.ChangeSequence = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_ChangeSequence, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.ShallowCopy = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_ShallowCopy, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface__kill_pointed, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface.GetHandle = new_instancemethod(_TColGeom.TColGeom_HSequenceOfBoundedSurface_GetHandle, None, TColGeom_HSequenceOfBoundedSurface)
TColGeom_HSequenceOfBoundedSurface_swigregister = _TColGeom.TColGeom_HSequenceOfBoundedSurface_swigregister
TColGeom_HSequenceOfBoundedSurface_swigregister(TColGeom_HSequenceOfBoundedSurface)

class Handle_TColGeom_HSequenceOfBoundedSurface(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HSequenceOfBoundedSurface_swiginit(self, _TColGeom.new_Handle_TColGeom_HSequenceOfBoundedSurface(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HSequenceOfBoundedSurface_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HSequenceOfBoundedSurface.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfBoundedSurface_Nullify, None, Handle_TColGeom_HSequenceOfBoundedSurface)
Handle_TColGeom_HSequenceOfBoundedSurface.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfBoundedSurface_IsNull, None, Handle_TColGeom_HSequenceOfBoundedSurface)
Handle_TColGeom_HSequenceOfBoundedSurface.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfBoundedSurface_GetObject, None, Handle_TColGeom_HSequenceOfBoundedSurface)
Handle_TColGeom_HSequenceOfBoundedSurface._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfBoundedSurface__kill_pointed, None, Handle_TColGeom_HSequenceOfBoundedSurface)
Handle_TColGeom_HSequenceOfBoundedSurface_swigregister = _TColGeom.Handle_TColGeom_HSequenceOfBoundedSurface_swigregister
Handle_TColGeom_HSequenceOfBoundedSurface_swigregister(Handle_TColGeom_HSequenceOfBoundedSurface)

def Handle_TColGeom_HSequenceOfBoundedSurface_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HSequenceOfBoundedSurface_DownCast(AnObject)
Handle_TColGeom_HSequenceOfBoundedSurface_DownCast = _TColGeom.Handle_TColGeom_HSequenceOfBoundedSurface_DownCast

class TColGeom_HSequenceOfCurve(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TColGeom.TColGeom_HSequenceOfCurve_swiginit(self, _TColGeom.new_TColGeom_HSequenceOfCurve(*args))

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_IsEmpty(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_Length(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_Clear(self, *args)


    def Append(self, *args):
        """
        :param anItem:
        :type anItem: Handle_Geom_Curve &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_Append(self, *args)


    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: Handle_Geom_Curve &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_Prepend(self, *args)


    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_Reverse(self, *args)


    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Geom_Curve &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Geom_Curve &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_InsertAfter(self, *args)


    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_Exchange(self, *args)


    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColGeom_HSequenceOfCurve

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_Split(self, *args)


    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Geom_Curve &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_SetValue(self, *args)


    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_Geom_Curve

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_Geom_Curve

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_Remove(self, *args)


    def Sequence(self, *args):
        """
        :rtype: TColGeom_SequenceOfCurve

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_Sequence(self, *args)


    def ChangeSequence(self, *args):
        """
        :rtype: TColGeom_SequenceOfCurve

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_ChangeSequence(self, *args)


    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColGeom_HSequenceOfCurve

        """
        return _TColGeom.TColGeom_HSequenceOfCurve_ShallowCopy(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HSequenceOfCurve self)"""
        return _TColGeom.TColGeom_HSequenceOfCurve__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HSequenceOfCurve self) -> Handle_TColGeom_HSequenceOfCurve"""
        return _TColGeom.TColGeom_HSequenceOfCurve_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HSequenceOfCurve.IsEmpty = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_IsEmpty, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.Length = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_Length, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.Clear = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_Clear, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.Append = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_Append, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.Prepend = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_Prepend, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.Reverse = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_Reverse, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.InsertBefore = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_InsertBefore, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.InsertAfter = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_InsertAfter, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.Exchange = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_Exchange, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.Split = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_Split, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.SetValue = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_SetValue, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.Value = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_Value, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_ChangeValue, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.Remove = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_Remove, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.Sequence = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_Sequence, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.ChangeSequence = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_ChangeSequence, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.ShallowCopy = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_ShallowCopy, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve__kill_pointed, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve.GetHandle = new_instancemethod(_TColGeom.TColGeom_HSequenceOfCurve_GetHandle, None, TColGeom_HSequenceOfCurve)
TColGeom_HSequenceOfCurve_swigregister = _TColGeom.TColGeom_HSequenceOfCurve_swigregister
TColGeom_HSequenceOfCurve_swigregister(TColGeom_HSequenceOfCurve)

class Handle_TColGeom_HSequenceOfCurve(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HSequenceOfCurve_swiginit(self, _TColGeom.new_Handle_TColGeom_HSequenceOfCurve(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HSequenceOfCurve_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HSequenceOfCurve.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfCurve_Nullify, None, Handle_TColGeom_HSequenceOfCurve)
Handle_TColGeom_HSequenceOfCurve.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfCurve_IsNull, None, Handle_TColGeom_HSequenceOfCurve)
Handle_TColGeom_HSequenceOfCurve.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfCurve_GetObject, None, Handle_TColGeom_HSequenceOfCurve)
Handle_TColGeom_HSequenceOfCurve._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfCurve__kill_pointed, None, Handle_TColGeom_HSequenceOfCurve)
Handle_TColGeom_HSequenceOfCurve_swigregister = _TColGeom.Handle_TColGeom_HSequenceOfCurve_swigregister
Handle_TColGeom_HSequenceOfCurve_swigregister(Handle_TColGeom_HSequenceOfCurve)

def Handle_TColGeom_HSequenceOfCurve_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HSequenceOfCurve_DownCast(AnObject)
Handle_TColGeom_HSequenceOfCurve_DownCast = _TColGeom.Handle_TColGeom_HSequenceOfCurve_DownCast

class TColGeom_HSequenceOfSurface(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TColGeom.TColGeom_HSequenceOfSurface_swiginit(self, _TColGeom.new_TColGeom_HSequenceOfSurface(*args))

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_IsEmpty(self, *args)


    def Length(self, *args):
        """
        :rtype: int

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_Length(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_Clear(self, *args)


    def Append(self, *args):
        """
        :param anItem:
        :type anItem: Handle_Geom_Surface &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_Append(self, *args)


    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: Handle_Geom_Surface &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_Prepend(self, *args)


    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_Reverse(self, *args)


    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Geom_Surface &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Geom_Surface &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TColGeom_HSequenceOfSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_InsertAfter(self, *args)


    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_Exchange(self, *args)


    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TColGeom_HSequenceOfSurface

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_Split(self, *args)


    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Handle_Geom_Surface &
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_SetValue(self, *args)


    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_Value(self, *args)


    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_Remove(self, *args)


    def Sequence(self, *args):
        """
        :rtype: TColGeom_SequenceOfSurface

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_Sequence(self, *args)


    def ChangeSequence(self, *args):
        """
        :rtype: TColGeom_SequenceOfSurface

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_ChangeSequence(self, *args)


    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TColGeom_HSequenceOfSurface

        """
        return _TColGeom.TColGeom_HSequenceOfSurface_ShallowCopy(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_HSequenceOfSurface self)"""
        return _TColGeom.TColGeom_HSequenceOfSurface__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_HSequenceOfSurface self) -> Handle_TColGeom_HSequenceOfSurface"""
        return _TColGeom.TColGeom_HSequenceOfSurface_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_HSequenceOfSurface.IsEmpty = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_IsEmpty, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.Length = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_Length, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.Clear = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_Clear, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.Append = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_Append, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.Prepend = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_Prepend, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.Reverse = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_Reverse, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.InsertBefore = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_InsertBefore, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.InsertAfter = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_InsertAfter, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.Exchange = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_Exchange, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.Split = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_Split, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_SetValue, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.Value = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_Value, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_ChangeValue, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.Remove = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_Remove, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.Sequence = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_Sequence, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.ChangeSequence = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_ChangeSequence, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.ShallowCopy = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_ShallowCopy, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface__kill_pointed, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface.GetHandle = new_instancemethod(_TColGeom.TColGeom_HSequenceOfSurface_GetHandle, None, TColGeom_HSequenceOfSurface)
TColGeom_HSequenceOfSurface_swigregister = _TColGeom.TColGeom_HSequenceOfSurface_swigregister
TColGeom_HSequenceOfSurface_swigregister(TColGeom_HSequenceOfSurface)

class Handle_TColGeom_HSequenceOfSurface(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_HSequenceOfSurface_swiginit(self, _TColGeom.new_Handle_TColGeom_HSequenceOfSurface(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_HSequenceOfSurface_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_HSequenceOfSurface.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfSurface_Nullify, None, Handle_TColGeom_HSequenceOfSurface)
Handle_TColGeom_HSequenceOfSurface.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfSurface_IsNull, None, Handle_TColGeom_HSequenceOfSurface)
Handle_TColGeom_HSequenceOfSurface.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfSurface_GetObject, None, Handle_TColGeom_HSequenceOfSurface)
Handle_TColGeom_HSequenceOfSurface._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_HSequenceOfSurface__kill_pointed, None, Handle_TColGeom_HSequenceOfSurface)
Handle_TColGeom_HSequenceOfSurface_swigregister = _TColGeom.Handle_TColGeom_HSequenceOfSurface_swigregister
Handle_TColGeom_HSequenceOfSurface_swigregister(Handle_TColGeom_HSequenceOfSurface)

def Handle_TColGeom_HSequenceOfSurface_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_HSequenceOfSurface_DownCast(AnObject)
Handle_TColGeom_HSequenceOfSurface_DownCast = _TColGeom.Handle_TColGeom_HSequenceOfSurface_DownCast

class TColGeom_SequenceNodeOfSequenceOfBoundedCurve(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Handle_Geom_BoundedCurve &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedCurve_swiginit(self, _TColGeom.new_TColGeom_SequenceNodeOfSequenceOfBoundedCurve(*args))

    def Value(self, *args):
        """
        :rtype: Handle_Geom_BoundedCurve

        """
        return _TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedCurve_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_SequenceNodeOfSequenceOfBoundedCurve self)"""
        return _TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedCurve__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_SequenceNodeOfSequenceOfBoundedCurve self) -> Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve"""
        return _TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedCurve_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_SequenceNodeOfSequenceOfBoundedCurve.Value = new_instancemethod(_TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedCurve_Value, None, TColGeom_SequenceNodeOfSequenceOfBoundedCurve)
TColGeom_SequenceNodeOfSequenceOfBoundedCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedCurve__kill_pointed, None, TColGeom_SequenceNodeOfSequenceOfBoundedCurve)
TColGeom_SequenceNodeOfSequenceOfBoundedCurve.GetHandle = new_instancemethod(_TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedCurve_GetHandle, None, TColGeom_SequenceNodeOfSequenceOfBoundedCurve)
TColGeom_SequenceNodeOfSequenceOfBoundedCurve_swigregister = _TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedCurve_swigregister
TColGeom_SequenceNodeOfSequenceOfBoundedCurve_swigregister(TColGeom_SequenceNodeOfSequenceOfBoundedCurve)

class Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve_swiginit(self, _TColGeom.new_Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve_Nullify, None, Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve)
Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve_IsNull, None, Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve)
Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve_GetObject, None, Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve)
Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve__kill_pointed, None, Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve)
Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve_swigregister = _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve_swigregister
Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve_swigregister(Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve)

def Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve_DownCast(AnObject)
Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve_DownCast = _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedCurve_DownCast

class TColGeom_SequenceNodeOfSequenceOfBoundedSurface(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Handle_Geom_BoundedSurface &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedSurface_swiginit(self, _TColGeom.new_TColGeom_SequenceNodeOfSequenceOfBoundedSurface(*args))

    def Value(self, *args):
        """
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedSurface_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_SequenceNodeOfSequenceOfBoundedSurface self)"""
        return _TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedSurface__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_SequenceNodeOfSequenceOfBoundedSurface self) -> Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface"""
        return _TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedSurface_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_SequenceNodeOfSequenceOfBoundedSurface.Value = new_instancemethod(_TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedSurface_Value, None, TColGeom_SequenceNodeOfSequenceOfBoundedSurface)
TColGeom_SequenceNodeOfSequenceOfBoundedSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedSurface__kill_pointed, None, TColGeom_SequenceNodeOfSequenceOfBoundedSurface)
TColGeom_SequenceNodeOfSequenceOfBoundedSurface.GetHandle = new_instancemethod(_TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedSurface_GetHandle, None, TColGeom_SequenceNodeOfSequenceOfBoundedSurface)
TColGeom_SequenceNodeOfSequenceOfBoundedSurface_swigregister = _TColGeom.TColGeom_SequenceNodeOfSequenceOfBoundedSurface_swigregister
TColGeom_SequenceNodeOfSequenceOfBoundedSurface_swigregister(TColGeom_SequenceNodeOfSequenceOfBoundedSurface)

class Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface_swiginit(self, _TColGeom.new_Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface_Nullify, None, Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface)
Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface_IsNull, None, Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface)
Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface_GetObject, None, Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface)
Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface__kill_pointed, None, Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface)
Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface_swigregister = _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface_swigregister
Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface_swigregister(Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface)

def Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface_DownCast(AnObject)
Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface_DownCast = _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfBoundedSurface_DownCast

class TColGeom_SequenceNodeOfSequenceOfCurve(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Handle_Geom_Curve &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColGeom.TColGeom_SequenceNodeOfSequenceOfCurve_swiginit(self, _TColGeom.new_TColGeom_SequenceNodeOfSequenceOfCurve(*args))

    def Value(self, *args):
        """
        :rtype: Handle_Geom_Curve

        """
        return _TColGeom.TColGeom_SequenceNodeOfSequenceOfCurve_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_SequenceNodeOfSequenceOfCurve self)"""
        return _TColGeom.TColGeom_SequenceNodeOfSequenceOfCurve__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_SequenceNodeOfSequenceOfCurve self) -> Handle_TColGeom_SequenceNodeOfSequenceOfCurve"""
        return _TColGeom.TColGeom_SequenceNodeOfSequenceOfCurve_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_SequenceNodeOfSequenceOfCurve.Value = new_instancemethod(_TColGeom.TColGeom_SequenceNodeOfSequenceOfCurve_Value, None, TColGeom_SequenceNodeOfSequenceOfCurve)
TColGeom_SequenceNodeOfSequenceOfCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_SequenceNodeOfSequenceOfCurve__kill_pointed, None, TColGeom_SequenceNodeOfSequenceOfCurve)
TColGeom_SequenceNodeOfSequenceOfCurve.GetHandle = new_instancemethod(_TColGeom.TColGeom_SequenceNodeOfSequenceOfCurve_GetHandle, None, TColGeom_SequenceNodeOfSequenceOfCurve)
TColGeom_SequenceNodeOfSequenceOfCurve_swigregister = _TColGeom.TColGeom_SequenceNodeOfSequenceOfCurve_swigregister
TColGeom_SequenceNodeOfSequenceOfCurve_swigregister(TColGeom_SequenceNodeOfSequenceOfCurve)

class Handle_TColGeom_SequenceNodeOfSequenceOfCurve(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfCurve_swiginit(self, _TColGeom.new_Handle_TColGeom_SequenceNodeOfSequenceOfCurve(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfCurve_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_SequenceNodeOfSequenceOfCurve.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfCurve_Nullify, None, Handle_TColGeom_SequenceNodeOfSequenceOfCurve)
Handle_TColGeom_SequenceNodeOfSequenceOfCurve.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfCurve_IsNull, None, Handle_TColGeom_SequenceNodeOfSequenceOfCurve)
Handle_TColGeom_SequenceNodeOfSequenceOfCurve.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfCurve_GetObject, None, Handle_TColGeom_SequenceNodeOfSequenceOfCurve)
Handle_TColGeom_SequenceNodeOfSequenceOfCurve._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfCurve__kill_pointed, None, Handle_TColGeom_SequenceNodeOfSequenceOfCurve)
Handle_TColGeom_SequenceNodeOfSequenceOfCurve_swigregister = _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfCurve_swigregister
Handle_TColGeom_SequenceNodeOfSequenceOfCurve_swigregister(Handle_TColGeom_SequenceNodeOfSequenceOfCurve)

def Handle_TColGeom_SequenceNodeOfSequenceOfCurve_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfCurve_DownCast(AnObject)
Handle_TColGeom_SequenceNodeOfSequenceOfCurve_DownCast = _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfCurve_DownCast

class TColGeom_SequenceNodeOfSequenceOfSurface(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Handle_Geom_Surface &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TColGeom.TColGeom_SequenceNodeOfSequenceOfSurface_swiginit(self, _TColGeom.new_TColGeom_SequenceNodeOfSequenceOfSurface(*args))

    def Value(self, *args):
        """
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_SequenceNodeOfSequenceOfSurface_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(TColGeom_SequenceNodeOfSequenceOfSurface self)"""
        return _TColGeom.TColGeom_SequenceNodeOfSequenceOfSurface__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(TColGeom_SequenceNodeOfSequenceOfSurface self) -> Handle_TColGeom_SequenceNodeOfSequenceOfSurface"""
        return _TColGeom.TColGeom_SequenceNodeOfSequenceOfSurface_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_SequenceNodeOfSequenceOfSurface.Value = new_instancemethod(_TColGeom.TColGeom_SequenceNodeOfSequenceOfSurface_Value, None, TColGeom_SequenceNodeOfSequenceOfSurface)
TColGeom_SequenceNodeOfSequenceOfSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_SequenceNodeOfSequenceOfSurface__kill_pointed, None, TColGeom_SequenceNodeOfSequenceOfSurface)
TColGeom_SequenceNodeOfSequenceOfSurface.GetHandle = new_instancemethod(_TColGeom.TColGeom_SequenceNodeOfSequenceOfSurface_GetHandle, None, TColGeom_SequenceNodeOfSequenceOfSurface)
TColGeom_SequenceNodeOfSequenceOfSurface_swigregister = _TColGeom.TColGeom_SequenceNodeOfSequenceOfSurface_swigregister
TColGeom_SequenceNodeOfSequenceOfSurface_swigregister(TColGeom_SequenceNodeOfSequenceOfSurface)

class Handle_TColGeom_SequenceNodeOfSequenceOfSurface(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfSurface_swiginit(self, _TColGeom.new_Handle_TColGeom_SequenceNodeOfSequenceOfSurface(*args))
    DownCast = staticmethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfSurface_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TColGeom_SequenceNodeOfSequenceOfSurface.Nullify = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfSurface_Nullify, None, Handle_TColGeom_SequenceNodeOfSequenceOfSurface)
Handle_TColGeom_SequenceNodeOfSequenceOfSurface.IsNull = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfSurface_IsNull, None, Handle_TColGeom_SequenceNodeOfSequenceOfSurface)
Handle_TColGeom_SequenceNodeOfSequenceOfSurface.GetObject = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfSurface_GetObject, None, Handle_TColGeom_SequenceNodeOfSequenceOfSurface)
Handle_TColGeom_SequenceNodeOfSequenceOfSurface._kill_pointed = new_instancemethod(_TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfSurface__kill_pointed, None, Handle_TColGeom_SequenceNodeOfSequenceOfSurface)
Handle_TColGeom_SequenceNodeOfSequenceOfSurface_swigregister = _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfSurface_swigregister
Handle_TColGeom_SequenceNodeOfSequenceOfSurface_swigregister(Handle_TColGeom_SequenceNodeOfSequenceOfSurface)

def Handle_TColGeom_SequenceNodeOfSequenceOfSurface_DownCast(AnObject):
    return _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfSurface_DownCast(AnObject)
Handle_TColGeom_SequenceNodeOfSequenceOfSurface_DownCast = _TColGeom.Handle_TColGeom_SequenceNodeOfSequenceOfSurface_DownCast

class TColGeom_SequenceOfBoundedCurve(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TColGeom.TColGeom_SequenceOfBoundedCurve_swiginit(self, _TColGeom.new_TColGeom_SequenceOfBoundedCurve(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_SequenceOfBoundedCurve &
        :rtype: TColGeom_SequenceOfBoundedCurve

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_SequenceOfBoundedCurve &
        :rtype: TColGeom_SequenceOfBoundedCurve

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Handle_Geom_BoundedCurve &
        :rtype: None

        :param S:
        :type S: TColGeom_SequenceOfBoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Handle_Geom_BoundedCurve &
        :rtype: None

        :param S:
        :type S: TColGeom_SequenceOfBoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_Geom_BoundedCurve &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColGeom_SequenceOfBoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_Geom_BoundedCurve &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColGeom_SequenceOfBoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Handle_Geom_BoundedCurve

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Handle_Geom_BoundedCurve

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColGeom_SequenceOfBoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BoundedCurve

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Handle_Geom_BoundedCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BoundedCurve

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedCurve_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_SequenceOfBoundedCurve.Clear = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_Clear, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.Assign = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_Assign, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.Set = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_Set, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.Append = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_Append, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.Prepend = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_Prepend, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.InsertBefore = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_InsertBefore, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.InsertAfter = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_InsertAfter, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.First = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_First, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.Last = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_Last, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.Split = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_Split, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.Value = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_Value, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.SetValue = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_SetValue, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.ChangeValue = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_ChangeValue, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve.Remove = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve_Remove, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedCurve__kill_pointed, None, TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve_swigregister = _TColGeom.TColGeom_SequenceOfBoundedCurve_swigregister
TColGeom_SequenceOfBoundedCurve_swigregister(TColGeom_SequenceOfBoundedCurve)

class TColGeom_SequenceOfBoundedSurface(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TColGeom.TColGeom_SequenceOfBoundedSurface_swiginit(self, _TColGeom.new_TColGeom_SequenceOfBoundedSurface(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_SequenceOfBoundedSurface &
        :rtype: TColGeom_SequenceOfBoundedSurface

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_SequenceOfBoundedSurface &
        :rtype: TColGeom_SequenceOfBoundedSurface

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Handle_Geom_BoundedSurface &
        :rtype: None

        :param S:
        :type S: TColGeom_SequenceOfBoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Handle_Geom_BoundedSurface &
        :rtype: None

        :param S:
        :type S: TColGeom_SequenceOfBoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_Geom_BoundedSurface &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColGeom_SequenceOfBoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_Geom_BoundedSurface &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColGeom_SequenceOfBoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColGeom_SequenceOfBoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Handle_Geom_BoundedSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_BoundedSurface

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfBoundedSurface_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_SequenceOfBoundedSurface.Clear = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_Clear, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.Assign = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_Assign, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.Set = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_Set, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.Append = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_Append, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.Prepend = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_Prepend, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.InsertBefore = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_InsertBefore, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.InsertAfter = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_InsertAfter, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.First = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_First, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.Last = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_Last, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.Split = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_Split, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.Value = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_Value, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_SetValue, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_ChangeValue, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface.Remove = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface_Remove, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_SequenceOfBoundedSurface__kill_pointed, None, TColGeom_SequenceOfBoundedSurface)
TColGeom_SequenceOfBoundedSurface_swigregister = _TColGeom.TColGeom_SequenceOfBoundedSurface_swigregister
TColGeom_SequenceOfBoundedSurface_swigregister(TColGeom_SequenceOfBoundedSurface)

class TColGeom_SequenceOfCurve(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TColGeom.TColGeom_SequenceOfCurve_swiginit(self, _TColGeom.new_TColGeom_SequenceOfCurve(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfCurve_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_SequenceOfCurve &
        :rtype: TColGeom_SequenceOfCurve

        """
        return _TColGeom.TColGeom_SequenceOfCurve_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_SequenceOfCurve &
        :rtype: TColGeom_SequenceOfCurve

        """
        return _TColGeom.TColGeom_SequenceOfCurve_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Handle_Geom_Curve &
        :rtype: None

        :param S:
        :type S: TColGeom_SequenceOfCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfCurve_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Handle_Geom_Curve &
        :rtype: None

        :param S:
        :type S: TColGeom_SequenceOfCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfCurve_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_Geom_Curve &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColGeom_SequenceOfCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfCurve_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_Geom_Curve &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColGeom_SequenceOfCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfCurve_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Handle_Geom_Curve

        """
        return _TColGeom.TColGeom_SequenceOfCurve_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Handle_Geom_Curve

        """
        return _TColGeom.TColGeom_SequenceOfCurve_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColGeom_SequenceOfCurve &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfCurve_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_Curve

        """
        return _TColGeom.TColGeom_SequenceOfCurve_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Handle_Geom_Curve &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfCurve_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_Curve

        """
        return _TColGeom.TColGeom_SequenceOfCurve_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfCurve_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_SequenceOfCurve.Clear = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_Clear, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.Assign = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_Assign, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.Set = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_Set, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.Append = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_Append, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.Prepend = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_Prepend, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.InsertBefore = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_InsertBefore, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.InsertAfter = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_InsertAfter, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.First = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_First, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.Last = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_Last, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.Split = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_Split, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.Value = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_Value, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.SetValue = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_SetValue, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.ChangeValue = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_ChangeValue, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve.Remove = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve_Remove, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve._kill_pointed = new_instancemethod(_TColGeom.TColGeom_SequenceOfCurve__kill_pointed, None, TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve_swigregister = _TColGeom.TColGeom_SequenceOfCurve_swigregister
TColGeom_SequenceOfCurve_swigregister(TColGeom_SequenceOfCurve)

class TColGeom_SequenceOfSurface(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _TColGeom.TColGeom_SequenceOfSurface_swiginit(self, _TColGeom.new_TColGeom_SequenceOfSurface(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfSurface_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: TColGeom_SequenceOfSurface &
        :rtype: TColGeom_SequenceOfSurface

        """
        return _TColGeom.TColGeom_SequenceOfSurface_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: TColGeom_SequenceOfSurface &
        :rtype: TColGeom_SequenceOfSurface

        """
        return _TColGeom.TColGeom_SequenceOfSurface_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Handle_Geom_Surface &
        :rtype: None

        :param S:
        :type S: TColGeom_SequenceOfSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfSurface_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Handle_Geom_Surface &
        :rtype: None

        :param S:
        :type S: TColGeom_SequenceOfSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfSurface_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_Geom_Surface &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColGeom_SequenceOfSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfSurface_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_Geom_Surface &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TColGeom_SequenceOfSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfSurface_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_SequenceOfSurface_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_SequenceOfSurface_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TColGeom_SequenceOfSurface &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfSurface_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_SequenceOfSurface_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Handle_Geom_Surface &
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfSurface_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_Geom_Surface

        """
        return _TColGeom.TColGeom_SequenceOfSurface_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TColGeom.TColGeom_SequenceOfSurface_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TColGeom_SequenceOfSurface.Clear = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_Clear, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.Assign = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_Assign, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.Set = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_Set, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.Append = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_Append, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.Prepend = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_Prepend, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.InsertBefore = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_InsertBefore, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.InsertAfter = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_InsertAfter, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.First = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_First, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.Last = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_Last, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.Split = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_Split, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.Value = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_Value, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.SetValue = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_SetValue, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.ChangeValue = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_ChangeValue, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface.Remove = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface_Remove, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface._kill_pointed = new_instancemethod(_TColGeom.TColGeom_SequenceOfSurface__kill_pointed, None, TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface_swigregister = _TColGeom.TColGeom_SequenceOfSurface_swigregister
TColGeom_SequenceOfSurface_swigregister(TColGeom_SequenceOfSurface)



