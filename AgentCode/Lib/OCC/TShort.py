# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _TShort.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_TShort', [dirname(__file__)])
        except ImportError:
            import _TShort
            return _TShort
        if fp is not None:
            try:
                _mod = imp.load_module('_TShort', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _TShort = swig_import_helper()
    del swig_import_helper
else:
    import _TShort
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TShort.delete_SwigPyIterator
    def __iter__(self): return self
SwigPyIterator.value = new_instancemethod(_TShort.SwigPyIterator_value,None,SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_TShort.SwigPyIterator_incr,None,SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_TShort.SwigPyIterator_decr,None,SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_TShort.SwigPyIterator_distance,None,SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_TShort.SwigPyIterator_equal,None,SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_TShort.SwigPyIterator_copy,None,SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_TShort.SwigPyIterator_next,None,SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_TShort.SwigPyIterator___next__,None,SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_TShort.SwigPyIterator_previous,None,SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_TShort.SwigPyIterator_advance,None,SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_TShort.SwigPyIterator___eq__,None,SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_TShort.SwigPyIterator___ne__,None,SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_TShort.SwigPyIterator___iadd__,None,SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_TShort.SwigPyIterator___isub__,None,SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_TShort.SwigPyIterator___add__,None,SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_TShort.SwigPyIterator___sub__,None,SwigPyIterator)
SwigPyIterator_swigregister = _TShort.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

import OCC.Standard
import OCC.MMgt
import OCC.TCollection
class TShort_Array1OfShortReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: Standard_ShortReal &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TShort.TShort_Array1OfShortReal_swiginit(self,_TShort.new_TShort_Array1OfShortReal(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Standard_ShortReal &
        :rtype: None

        """
        return _TShort.TShort_Array1OfShortReal_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TShort.TShort_Array1OfShortReal_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TShort.TShort_Array1OfShortReal_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TShort_Array1OfShortReal &
        :rtype: TShort_Array1OfShortReal

        """
        return _TShort.TShort_Array1OfShortReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TShort_Array1OfShortReal &
        :rtype: TShort_Array1OfShortReal

        """
        return _TShort.TShort_Array1OfShortReal_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_Array1OfShortReal_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_Array1OfShortReal_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_Array1OfShortReal_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Standard_ShortReal &
        :rtype: None

        """
        return _TShort.TShort_Array1OfShortReal_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_Array1OfShortReal_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_Array1OfShortReal_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TShort_Array1OfShortReal.Init = new_instancemethod(_TShort.TShort_Array1OfShortReal_Init,None,TShort_Array1OfShortReal)
TShort_Array1OfShortReal.Destroy = new_instancemethod(_TShort.TShort_Array1OfShortReal_Destroy,None,TShort_Array1OfShortReal)
TShort_Array1OfShortReal.IsAllocated = new_instancemethod(_TShort.TShort_Array1OfShortReal_IsAllocated,None,TShort_Array1OfShortReal)
TShort_Array1OfShortReal.Assign = new_instancemethod(_TShort.TShort_Array1OfShortReal_Assign,None,TShort_Array1OfShortReal)
TShort_Array1OfShortReal.Set = new_instancemethod(_TShort.TShort_Array1OfShortReal_Set,None,TShort_Array1OfShortReal)
TShort_Array1OfShortReal.Length = new_instancemethod(_TShort.TShort_Array1OfShortReal_Length,None,TShort_Array1OfShortReal)
TShort_Array1OfShortReal.Lower = new_instancemethod(_TShort.TShort_Array1OfShortReal_Lower,None,TShort_Array1OfShortReal)
TShort_Array1OfShortReal.Upper = new_instancemethod(_TShort.TShort_Array1OfShortReal_Upper,None,TShort_Array1OfShortReal)
TShort_Array1OfShortReal.SetValue = new_instancemethod(_TShort.TShort_Array1OfShortReal_SetValue,None,TShort_Array1OfShortReal)
TShort_Array1OfShortReal.Value = new_instancemethod(_TShort.TShort_Array1OfShortReal_Value,None,TShort_Array1OfShortReal)
TShort_Array1OfShortReal.ChangeValue = new_instancemethod(_TShort.TShort_Array1OfShortReal_ChangeValue,None,TShort_Array1OfShortReal)
TShort_Array1OfShortReal._kill_pointed = new_instancemethod(_TShort.TShort_Array1OfShortReal__kill_pointed,None,TShort_Array1OfShortReal)
TShort_Array1OfShortReal_swigregister = _TShort.TShort_Array1OfShortReal_swigregister
TShort_Array1OfShortReal_swigregister(TShort_Array1OfShortReal)

class TShort_Array2OfShortReal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: Standard_ShortReal &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TShort.TShort_Array2OfShortReal_swiginit(self,_TShort.new_TShort_Array2OfShortReal(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Standard_ShortReal &
        :rtype: None

        """
        return _TShort.TShort_Array2OfShortReal_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TShort.TShort_Array2OfShortReal_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TShort_Array2OfShortReal &
        :rtype: TShort_Array2OfShortReal

        """
        return _TShort.TShort_Array2OfShortReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TShort_Array2OfShortReal &
        :rtype: TShort_Array2OfShortReal

        """
        return _TShort.TShort_Array2OfShortReal_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_Array2OfShortReal_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_Array2OfShortReal_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_Array2OfShortReal_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_Array2OfShortReal_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_Array2OfShortReal_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_Array2OfShortReal_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Standard_ShortReal &
        :rtype: None

        """
        return _TShort.TShort_Array2OfShortReal_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_Array2OfShortReal_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_Array2OfShortReal_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TShort_Array2OfShortReal.Init = new_instancemethod(_TShort.TShort_Array2OfShortReal_Init,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal.Destroy = new_instancemethod(_TShort.TShort_Array2OfShortReal_Destroy,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal.Assign = new_instancemethod(_TShort.TShort_Array2OfShortReal_Assign,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal.Set = new_instancemethod(_TShort.TShort_Array2OfShortReal_Set,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal.ColLength = new_instancemethod(_TShort.TShort_Array2OfShortReal_ColLength,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal.RowLength = new_instancemethod(_TShort.TShort_Array2OfShortReal_RowLength,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal.LowerCol = new_instancemethod(_TShort.TShort_Array2OfShortReal_LowerCol,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal.LowerRow = new_instancemethod(_TShort.TShort_Array2OfShortReal_LowerRow,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal.UpperCol = new_instancemethod(_TShort.TShort_Array2OfShortReal_UpperCol,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal.UpperRow = new_instancemethod(_TShort.TShort_Array2OfShortReal_UpperRow,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal.SetValue = new_instancemethod(_TShort.TShort_Array2OfShortReal_SetValue,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal.Value = new_instancemethod(_TShort.TShort_Array2OfShortReal_Value,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal.ChangeValue = new_instancemethod(_TShort.TShort_Array2OfShortReal_ChangeValue,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal._kill_pointed = new_instancemethod(_TShort.TShort_Array2OfShortReal__kill_pointed,None,TShort_Array2OfShortReal)
TShort_Array2OfShortReal_swigregister = _TShort.TShort_Array2OfShortReal_swigregister
TShort_Array2OfShortReal_swigregister(TShort_Array2OfShortReal)

class TShort_HArray1OfShortReal(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: Standard_ShortReal &
        :rtype: None

        """
        _TShort.TShort_HArray1OfShortReal_swiginit(self,_TShort.new_TShort_HArray1OfShortReal(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Standard_ShortReal &
        :rtype: None

        """
        return _TShort.TShort_HArray1OfShortReal_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_HArray1OfShortReal_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_HArray1OfShortReal_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_HArray1OfShortReal_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: Standard_ShortReal &
        :rtype: None

        """
        return _TShort.TShort_HArray1OfShortReal_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_HArray1OfShortReal_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_HArray1OfShortReal_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TShort_Array1OfShortReal

        """
        return _TShort.TShort_HArray1OfShortReal_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TShort_Array1OfShortReal

        """
        return _TShort.TShort_HArray1OfShortReal_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TShort_HArray1OfShortReal self)"""
        return _TShort.TShort_HArray1OfShortReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TShort_HArray1OfShortReal self) -> Handle_TShort_HArray1OfShortReal"""
        return _TShort.TShort_HArray1OfShortReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TShort_HArray1OfShortReal.Init = new_instancemethod(_TShort.TShort_HArray1OfShortReal_Init,None,TShort_HArray1OfShortReal)
TShort_HArray1OfShortReal.Length = new_instancemethod(_TShort.TShort_HArray1OfShortReal_Length,None,TShort_HArray1OfShortReal)
TShort_HArray1OfShortReal.Lower = new_instancemethod(_TShort.TShort_HArray1OfShortReal_Lower,None,TShort_HArray1OfShortReal)
TShort_HArray1OfShortReal.Upper = new_instancemethod(_TShort.TShort_HArray1OfShortReal_Upper,None,TShort_HArray1OfShortReal)
TShort_HArray1OfShortReal.SetValue = new_instancemethod(_TShort.TShort_HArray1OfShortReal_SetValue,None,TShort_HArray1OfShortReal)
TShort_HArray1OfShortReal.Value = new_instancemethod(_TShort.TShort_HArray1OfShortReal_Value,None,TShort_HArray1OfShortReal)
TShort_HArray1OfShortReal.ChangeValue = new_instancemethod(_TShort.TShort_HArray1OfShortReal_ChangeValue,None,TShort_HArray1OfShortReal)
TShort_HArray1OfShortReal.Array1 = new_instancemethod(_TShort.TShort_HArray1OfShortReal_Array1,None,TShort_HArray1OfShortReal)
TShort_HArray1OfShortReal.ChangeArray1 = new_instancemethod(_TShort.TShort_HArray1OfShortReal_ChangeArray1,None,TShort_HArray1OfShortReal)
TShort_HArray1OfShortReal._kill_pointed = new_instancemethod(_TShort.TShort_HArray1OfShortReal__kill_pointed,None,TShort_HArray1OfShortReal)
TShort_HArray1OfShortReal.GetHandle = new_instancemethod(_TShort.TShort_HArray1OfShortReal_GetHandle,None,TShort_HArray1OfShortReal)
TShort_HArray1OfShortReal_swigregister = _TShort.TShort_HArray1OfShortReal_swigregister
TShort_HArray1OfShortReal_swigregister(TShort_HArray1OfShortReal)

class Handle_TShort_HArray1OfShortReal(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TShort.Handle_TShort_HArray1OfShortReal_swiginit(self,_TShort.new_Handle_TShort_HArray1OfShortReal(*args))
    DownCast = staticmethod(_TShort.Handle_TShort_HArray1OfShortReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TShort_HArray1OfShortReal.Nullify = new_instancemethod(_TShort.Handle_TShort_HArray1OfShortReal_Nullify,None,Handle_TShort_HArray1OfShortReal)
Handle_TShort_HArray1OfShortReal.IsNull = new_instancemethod(_TShort.Handle_TShort_HArray1OfShortReal_IsNull,None,Handle_TShort_HArray1OfShortReal)
Handle_TShort_HArray1OfShortReal.GetObject = new_instancemethod(_TShort.Handle_TShort_HArray1OfShortReal_GetObject,None,Handle_TShort_HArray1OfShortReal)
Handle_TShort_HArray1OfShortReal._kill_pointed = new_instancemethod(_TShort.Handle_TShort_HArray1OfShortReal__kill_pointed,None,Handle_TShort_HArray1OfShortReal)
Handle_TShort_HArray1OfShortReal_swigregister = _TShort.Handle_TShort_HArray1OfShortReal_swigregister
Handle_TShort_HArray1OfShortReal_swigregister(Handle_TShort_HArray1OfShortReal)

def Handle_TShort_HArray1OfShortReal_DownCast(*args):
  return _TShort.Handle_TShort_HArray1OfShortReal_DownCast(*args)
Handle_TShort_HArray1OfShortReal_DownCast = _TShort.Handle_TShort_HArray1OfShortReal_DownCast

class TShort_HArray2OfShortReal(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: Standard_ShortReal &
        :rtype: None

        """
        _TShort.TShort_HArray2OfShortReal_swiginit(self,_TShort.new_TShort_HArray2OfShortReal(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: Standard_ShortReal &
        :rtype: None

        """
        return _TShort.TShort_HArray2OfShortReal_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_HArray2OfShortReal_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_HArray2OfShortReal_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_HArray2OfShortReal_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_HArray2OfShortReal_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_HArray2OfShortReal_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_HArray2OfShortReal_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: Standard_ShortReal &
        :rtype: None

        """
        return _TShort.TShort_HArray2OfShortReal_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_HArray2OfShortReal_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_HArray2OfShortReal_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TShort_Array2OfShortReal

        """
        return _TShort.TShort_HArray2OfShortReal_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TShort_Array2OfShortReal

        """
        return _TShort.TShort_HArray2OfShortReal_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TShort_HArray2OfShortReal self)"""
        return _TShort.TShort_HArray2OfShortReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TShort_HArray2OfShortReal self) -> Handle_TShort_HArray2OfShortReal"""
        return _TShort.TShort_HArray2OfShortReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TShort_HArray2OfShortReal.Init = new_instancemethod(_TShort.TShort_HArray2OfShortReal_Init,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal.ColLength = new_instancemethod(_TShort.TShort_HArray2OfShortReal_ColLength,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal.RowLength = new_instancemethod(_TShort.TShort_HArray2OfShortReal_RowLength,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal.LowerCol = new_instancemethod(_TShort.TShort_HArray2OfShortReal_LowerCol,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal.LowerRow = new_instancemethod(_TShort.TShort_HArray2OfShortReal_LowerRow,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal.UpperCol = new_instancemethod(_TShort.TShort_HArray2OfShortReal_UpperCol,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal.UpperRow = new_instancemethod(_TShort.TShort_HArray2OfShortReal_UpperRow,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal.SetValue = new_instancemethod(_TShort.TShort_HArray2OfShortReal_SetValue,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal.Value = new_instancemethod(_TShort.TShort_HArray2OfShortReal_Value,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal.ChangeValue = new_instancemethod(_TShort.TShort_HArray2OfShortReal_ChangeValue,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal.Array2 = new_instancemethod(_TShort.TShort_HArray2OfShortReal_Array2,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal.ChangeArray2 = new_instancemethod(_TShort.TShort_HArray2OfShortReal_ChangeArray2,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal._kill_pointed = new_instancemethod(_TShort.TShort_HArray2OfShortReal__kill_pointed,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal.GetHandle = new_instancemethod(_TShort.TShort_HArray2OfShortReal_GetHandle,None,TShort_HArray2OfShortReal)
TShort_HArray2OfShortReal_swigregister = _TShort.TShort_HArray2OfShortReal_swigregister
TShort_HArray2OfShortReal_swigregister(TShort_HArray2OfShortReal)

class Handle_TShort_HArray2OfShortReal(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TShort.Handle_TShort_HArray2OfShortReal_swiginit(self,_TShort.new_Handle_TShort_HArray2OfShortReal(*args))
    DownCast = staticmethod(_TShort.Handle_TShort_HArray2OfShortReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TShort_HArray2OfShortReal.Nullify = new_instancemethod(_TShort.Handle_TShort_HArray2OfShortReal_Nullify,None,Handle_TShort_HArray2OfShortReal)
Handle_TShort_HArray2OfShortReal.IsNull = new_instancemethod(_TShort.Handle_TShort_HArray2OfShortReal_IsNull,None,Handle_TShort_HArray2OfShortReal)
Handle_TShort_HArray2OfShortReal.GetObject = new_instancemethod(_TShort.Handle_TShort_HArray2OfShortReal_GetObject,None,Handle_TShort_HArray2OfShortReal)
Handle_TShort_HArray2OfShortReal._kill_pointed = new_instancemethod(_TShort.Handle_TShort_HArray2OfShortReal__kill_pointed,None,Handle_TShort_HArray2OfShortReal)
Handle_TShort_HArray2OfShortReal_swigregister = _TShort.Handle_TShort_HArray2OfShortReal_swigregister
Handle_TShort_HArray2OfShortReal_swigregister(Handle_TShort_HArray2OfShortReal)

def Handle_TShort_HArray2OfShortReal_DownCast(*args):
  return _TShort.Handle_TShort_HArray2OfShortReal_DownCast(*args)
Handle_TShort_HArray2OfShortReal_DownCast = _TShort.Handle_TShort_HArray2OfShortReal_DownCast

class TShort_HSequenceOfShortReal(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TShort.TShort_HSequenceOfShortReal_swiginit(self,_TShort.new_TShort_HSequenceOfShortReal(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TShort.TShort_HSequenceOfShortReal_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TShort.TShort_HSequenceOfShortReal_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TShort.TShort_HSequenceOfShortReal_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: Standard_ShortReal &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TShort_HSequenceOfShortReal &
        :rtype: None

        """
        return _TShort.TShort_HSequenceOfShortReal_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: Standard_ShortReal &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TShort_HSequenceOfShortReal &
        :rtype: None

        """
        return _TShort.TShort_HSequenceOfShortReal_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TShort.TShort_HSequenceOfShortReal_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Standard_ShortReal &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TShort_HSequenceOfShortReal &
        :rtype: None

        """
        return _TShort.TShort_HSequenceOfShortReal_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Standard_ShortReal &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TShort_HSequenceOfShortReal &
        :rtype: None

        """
        return _TShort.TShort_HSequenceOfShortReal_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TShort.TShort_HSequenceOfShortReal_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TShort_HSequenceOfShortReal

        """
        return _TShort.TShort_HSequenceOfShortReal_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: Standard_ShortReal &
        :rtype: None

        """
        return _TShort.TShort_HSequenceOfShortReal_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_HSequenceOfShortReal_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_HSequenceOfShortReal_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TShort.TShort_HSequenceOfShortReal_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TShort_SequenceOfShortReal

        """
        return _TShort.TShort_HSequenceOfShortReal_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TShort_SequenceOfShortReal

        """
        return _TShort.TShort_HSequenceOfShortReal_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TShort_HSequenceOfShortReal

        """
        return _TShort.TShort_HSequenceOfShortReal_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TShort_HSequenceOfShortReal self)"""
        return _TShort.TShort_HSequenceOfShortReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TShort_HSequenceOfShortReal self) -> Handle_TShort_HSequenceOfShortReal"""
        return _TShort.TShort_HSequenceOfShortReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TShort_HSequenceOfShortReal.IsEmpty = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_IsEmpty,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.Length = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_Length,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.Clear = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_Clear,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.Append = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_Append,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.Prepend = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_Prepend,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.Reverse = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_Reverse,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.InsertBefore = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_InsertBefore,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.InsertAfter = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_InsertAfter,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.Exchange = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_Exchange,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.Split = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_Split,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.SetValue = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_SetValue,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.Value = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_Value,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.ChangeValue = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_ChangeValue,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.Remove = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_Remove,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.Sequence = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_Sequence,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.ChangeSequence = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_ChangeSequence,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.ShallowCopy = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_ShallowCopy,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal._kill_pointed = new_instancemethod(_TShort.TShort_HSequenceOfShortReal__kill_pointed,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal.GetHandle = new_instancemethod(_TShort.TShort_HSequenceOfShortReal_GetHandle,None,TShort_HSequenceOfShortReal)
TShort_HSequenceOfShortReal_swigregister = _TShort.TShort_HSequenceOfShortReal_swigregister
TShort_HSequenceOfShortReal_swigregister(TShort_HSequenceOfShortReal)

class Handle_TShort_HSequenceOfShortReal(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TShort.Handle_TShort_HSequenceOfShortReal_swiginit(self,_TShort.new_Handle_TShort_HSequenceOfShortReal(*args))
    DownCast = staticmethod(_TShort.Handle_TShort_HSequenceOfShortReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TShort_HSequenceOfShortReal.Nullify = new_instancemethod(_TShort.Handle_TShort_HSequenceOfShortReal_Nullify,None,Handle_TShort_HSequenceOfShortReal)
Handle_TShort_HSequenceOfShortReal.IsNull = new_instancemethod(_TShort.Handle_TShort_HSequenceOfShortReal_IsNull,None,Handle_TShort_HSequenceOfShortReal)
Handle_TShort_HSequenceOfShortReal.GetObject = new_instancemethod(_TShort.Handle_TShort_HSequenceOfShortReal_GetObject,None,Handle_TShort_HSequenceOfShortReal)
Handle_TShort_HSequenceOfShortReal._kill_pointed = new_instancemethod(_TShort.Handle_TShort_HSequenceOfShortReal__kill_pointed,None,Handle_TShort_HSequenceOfShortReal)
Handle_TShort_HSequenceOfShortReal_swigregister = _TShort.Handle_TShort_HSequenceOfShortReal_swigregister
Handle_TShort_HSequenceOfShortReal_swigregister(Handle_TShort_HSequenceOfShortReal)

def Handle_TShort_HSequenceOfShortReal_DownCast(*args):
  return _TShort.Handle_TShort_HSequenceOfShortReal_DownCast(*args)
Handle_TShort_HSequenceOfShortReal_DownCast = _TShort.Handle_TShort_HSequenceOfShortReal_DownCast

class TShort_SequenceNodeOfSequenceOfShortReal(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: Standard_ShortReal &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TShort.TShort_SequenceNodeOfSequenceOfShortReal_swiginit(self,_TShort.new_TShort_SequenceNodeOfSequenceOfShortReal(*args))
    def Value(self, *args):
        """
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_SequenceNodeOfSequenceOfShortReal_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TShort_SequenceNodeOfSequenceOfShortReal self)"""
        return _TShort.TShort_SequenceNodeOfSequenceOfShortReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TShort_SequenceNodeOfSequenceOfShortReal self) -> Handle_TShort_SequenceNodeOfSequenceOfShortReal"""
        return _TShort.TShort_SequenceNodeOfSequenceOfShortReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TShort_SequenceNodeOfSequenceOfShortReal.Value = new_instancemethod(_TShort.TShort_SequenceNodeOfSequenceOfShortReal_Value,None,TShort_SequenceNodeOfSequenceOfShortReal)
TShort_SequenceNodeOfSequenceOfShortReal._kill_pointed = new_instancemethod(_TShort.TShort_SequenceNodeOfSequenceOfShortReal__kill_pointed,None,TShort_SequenceNodeOfSequenceOfShortReal)
TShort_SequenceNodeOfSequenceOfShortReal.GetHandle = new_instancemethod(_TShort.TShort_SequenceNodeOfSequenceOfShortReal_GetHandle,None,TShort_SequenceNodeOfSequenceOfShortReal)
TShort_SequenceNodeOfSequenceOfShortReal_swigregister = _TShort.TShort_SequenceNodeOfSequenceOfShortReal_swigregister
TShort_SequenceNodeOfSequenceOfShortReal_swigregister(TShort_SequenceNodeOfSequenceOfShortReal)

class Handle_TShort_SequenceNodeOfSequenceOfShortReal(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TShort.Handle_TShort_SequenceNodeOfSequenceOfShortReal_swiginit(self,_TShort.new_Handle_TShort_SequenceNodeOfSequenceOfShortReal(*args))
    DownCast = staticmethod(_TShort.Handle_TShort_SequenceNodeOfSequenceOfShortReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TShort_SequenceNodeOfSequenceOfShortReal.Nullify = new_instancemethod(_TShort.Handle_TShort_SequenceNodeOfSequenceOfShortReal_Nullify,None,Handle_TShort_SequenceNodeOfSequenceOfShortReal)
Handle_TShort_SequenceNodeOfSequenceOfShortReal.IsNull = new_instancemethod(_TShort.Handle_TShort_SequenceNodeOfSequenceOfShortReal_IsNull,None,Handle_TShort_SequenceNodeOfSequenceOfShortReal)
Handle_TShort_SequenceNodeOfSequenceOfShortReal.GetObject = new_instancemethod(_TShort.Handle_TShort_SequenceNodeOfSequenceOfShortReal_GetObject,None,Handle_TShort_SequenceNodeOfSequenceOfShortReal)
Handle_TShort_SequenceNodeOfSequenceOfShortReal._kill_pointed = new_instancemethod(_TShort.Handle_TShort_SequenceNodeOfSequenceOfShortReal__kill_pointed,None,Handle_TShort_SequenceNodeOfSequenceOfShortReal)
Handle_TShort_SequenceNodeOfSequenceOfShortReal_swigregister = _TShort.Handle_TShort_SequenceNodeOfSequenceOfShortReal_swigregister
Handle_TShort_SequenceNodeOfSequenceOfShortReal_swigregister(Handle_TShort_SequenceNodeOfSequenceOfShortReal)

def Handle_TShort_SequenceNodeOfSequenceOfShortReal_DownCast(*args):
  return _TShort.Handle_TShort_SequenceNodeOfSequenceOfShortReal_DownCast(*args)
Handle_TShort_SequenceNodeOfSequenceOfShortReal_DownCast = _TShort.Handle_TShort_SequenceNodeOfSequenceOfShortReal_DownCast

class TShort_SequenceOfShortReal(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TShort.TShort_SequenceOfShortReal_swiginit(self,_TShort.new_TShort_SequenceOfShortReal(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TShort.TShort_SequenceOfShortReal_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TShort_SequenceOfShortReal &
        :rtype: TShort_SequenceOfShortReal

        """
        return _TShort.TShort_SequenceOfShortReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TShort_SequenceOfShortReal &
        :rtype: TShort_SequenceOfShortReal

        """
        return _TShort.TShort_SequenceOfShortReal_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: Standard_ShortReal &
        :rtype: None

        :param S:
        :type S: TShort_SequenceOfShortReal &
        :rtype: None

        """
        return _TShort.TShort_SequenceOfShortReal_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: Standard_ShortReal &
        :rtype: None

        :param S:
        :type S: TShort_SequenceOfShortReal &
        :rtype: None

        """
        return _TShort.TShort_SequenceOfShortReal_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Standard_ShortReal &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TShort_SequenceOfShortReal &
        :rtype: None

        """
        return _TShort.TShort_SequenceOfShortReal_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Standard_ShortReal &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TShort_SequenceOfShortReal &
        :rtype: None

        """
        return _TShort.TShort_SequenceOfShortReal_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_SequenceOfShortReal_First(self, *args)

    def Last(self, *args):
        """
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_SequenceOfShortReal_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TShort_SequenceOfShortReal &
        :rtype: None

        """
        return _TShort.TShort_SequenceOfShortReal_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_SequenceOfShortReal_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Standard_ShortReal &
        :rtype: None

        """
        return _TShort.TShort_SequenceOfShortReal_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Standard_ShortReal

        """
        return _TShort.TShort_SequenceOfShortReal_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TShort.TShort_SequenceOfShortReal_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TShort_SequenceOfShortReal.Clear = new_instancemethod(_TShort.TShort_SequenceOfShortReal_Clear,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.Assign = new_instancemethod(_TShort.TShort_SequenceOfShortReal_Assign,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.Set = new_instancemethod(_TShort.TShort_SequenceOfShortReal_Set,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.Append = new_instancemethod(_TShort.TShort_SequenceOfShortReal_Append,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.Prepend = new_instancemethod(_TShort.TShort_SequenceOfShortReal_Prepend,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.InsertBefore = new_instancemethod(_TShort.TShort_SequenceOfShortReal_InsertBefore,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.InsertAfter = new_instancemethod(_TShort.TShort_SequenceOfShortReal_InsertAfter,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.First = new_instancemethod(_TShort.TShort_SequenceOfShortReal_First,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.Last = new_instancemethod(_TShort.TShort_SequenceOfShortReal_Last,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.Split = new_instancemethod(_TShort.TShort_SequenceOfShortReal_Split,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.Value = new_instancemethod(_TShort.TShort_SequenceOfShortReal_Value,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.SetValue = new_instancemethod(_TShort.TShort_SequenceOfShortReal_SetValue,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.ChangeValue = new_instancemethod(_TShort.TShort_SequenceOfShortReal_ChangeValue,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal.Remove = new_instancemethod(_TShort.TShort_SequenceOfShortReal_Remove,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal._kill_pointed = new_instancemethod(_TShort.TShort_SequenceOfShortReal__kill_pointed,None,TShort_SequenceOfShortReal)
TShort_SequenceOfShortReal_swigregister = _TShort.TShort_SequenceOfShortReal_swigregister
TShort_SequenceOfShortReal_swigregister(TShort_SequenceOfShortReal)



