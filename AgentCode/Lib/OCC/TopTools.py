# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _TopTools.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_TopTools', [dirname(__file__)])
        except ImportError:
            import _TopTools
            return _TopTools
        if fp is not None:
            try:
                _mod = imp.load_module('_TopTools', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _TopTools = swig_import_helper()
    del swig_import_helper
else:
    import _TopTools
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TopTools.delete_SwigPyIterator
    def __iter__(self): return self
SwigPyIterator.value = new_instancemethod(_TopTools.SwigPyIterator_value,None,SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_TopTools.SwigPyIterator_incr,None,SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_TopTools.SwigPyIterator_decr,None,SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_TopTools.SwigPyIterator_distance,None,SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_TopTools.SwigPyIterator_equal,None,SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_TopTools.SwigPyIterator_copy,None,SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_TopTools.SwigPyIterator_next,None,SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_TopTools.SwigPyIterator___next__,None,SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_TopTools.SwigPyIterator_previous,None,SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_TopTools.SwigPyIterator_advance,None,SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_TopTools.SwigPyIterator___eq__,None,SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_TopTools.SwigPyIterator___ne__,None,SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_TopTools.SwigPyIterator___iadd__,None,SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_TopTools.SwigPyIterator___isub__,None,SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_TopTools.SwigPyIterator___add__,None,SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_TopTools.SwigPyIterator___sub__,None,SwigPyIterator)
SwigPyIterator_swigregister = _TopTools.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

import OCC.TopoDS
import OCC.MMgt
import OCC.Standard
import OCC.TCollection
import OCC.TopLoc
import OCC.gp
import OCC.TopAbs
import OCC.TColStd
import OCC.Message
class toptools(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def Dump(*args):
        """
        * A set of Shapes. Can be dump, wrote or read. Dumps the topological structure of <Sh> on the stream <S>.

        :param Sh:
        :type Sh: TopoDS_Shape &
        :param S:
        :type S: Standard_OStream &
        :rtype: void

        """
        return _TopTools.toptools_Dump(*args)

    Dump = staticmethod(Dump)
    def Dummy(*args):
        """
        * This is to bypass an extraction bug. It will force the inclusion of Standard_Integer.hxx itself including Standard_OStream.hxx at the correct position.

        :param I:
        :type I: int
        :rtype: void

        """
        return _TopTools.toptools_Dummy(*args)

    Dummy = staticmethod(Dummy)
    def __init__(self): 
        _TopTools.toptools_swiginit(self,_TopTools.new_toptools())
    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


toptools._kill_pointed = new_instancemethod(_TopTools.toptools__kill_pointed,None,toptools)
toptools_swigregister = _TopTools.toptools_swigregister
toptools_swigregister(toptools)

def toptools_Dump(*args):
  """
    * A set of Shapes. Can be dump, wrote or read. Dumps the topological structure of <Sh> on the stream <S>.

    :param Sh:
    :type Sh: TopoDS_Shape &
    :param S:
    :type S: Standard_OStream &
    :rtype: void

    """
  return _TopTools.toptools_Dump(*args)

def toptools_Dummy(*args):
  """
    * This is to bypass an extraction bug. It will force the inclusion of Standard_Integer.hxx itself including Standard_OStream.hxx at the correct position.

    :param I:
    :type I: int
    :rtype: void

    """
  return _TopTools.toptools_Dummy(*args)

class TopTools_Array1OfListOfShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: TopTools_ListOfShape &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TopTools.TopTools_Array1OfListOfShape_swiginit(self,_TopTools.new_TopTools_Array1OfListOfShape(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_Array1OfListOfShape_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_Array1OfListOfShape_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TopTools.TopTools_Array1OfListOfShape_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_Array1OfListOfShape &
        :rtype: TopTools_Array1OfListOfShape

        """
        return _TopTools.TopTools_Array1OfListOfShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_Array1OfListOfShape &
        :rtype: TopTools_Array1OfListOfShape

        """
        return _TopTools.TopTools_Array1OfListOfShape_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_Array1OfListOfShape_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_Array1OfListOfShape_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_Array1OfListOfShape_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_Array1OfListOfShape_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_Array1OfListOfShape_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_Array1OfListOfShape_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_Array1OfListOfShape.Init = new_instancemethod(_TopTools.TopTools_Array1OfListOfShape_Init,None,TopTools_Array1OfListOfShape)
TopTools_Array1OfListOfShape.Destroy = new_instancemethod(_TopTools.TopTools_Array1OfListOfShape_Destroy,None,TopTools_Array1OfListOfShape)
TopTools_Array1OfListOfShape.IsAllocated = new_instancemethod(_TopTools.TopTools_Array1OfListOfShape_IsAllocated,None,TopTools_Array1OfListOfShape)
TopTools_Array1OfListOfShape.Assign = new_instancemethod(_TopTools.TopTools_Array1OfListOfShape_Assign,None,TopTools_Array1OfListOfShape)
TopTools_Array1OfListOfShape.Set = new_instancemethod(_TopTools.TopTools_Array1OfListOfShape_Set,None,TopTools_Array1OfListOfShape)
TopTools_Array1OfListOfShape.Length = new_instancemethod(_TopTools.TopTools_Array1OfListOfShape_Length,None,TopTools_Array1OfListOfShape)
TopTools_Array1OfListOfShape.Lower = new_instancemethod(_TopTools.TopTools_Array1OfListOfShape_Lower,None,TopTools_Array1OfListOfShape)
TopTools_Array1OfListOfShape.Upper = new_instancemethod(_TopTools.TopTools_Array1OfListOfShape_Upper,None,TopTools_Array1OfListOfShape)
TopTools_Array1OfListOfShape.SetValue = new_instancemethod(_TopTools.TopTools_Array1OfListOfShape_SetValue,None,TopTools_Array1OfListOfShape)
TopTools_Array1OfListOfShape.Value = new_instancemethod(_TopTools.TopTools_Array1OfListOfShape_Value,None,TopTools_Array1OfListOfShape)
TopTools_Array1OfListOfShape.ChangeValue = new_instancemethod(_TopTools.TopTools_Array1OfListOfShape_ChangeValue,None,TopTools_Array1OfListOfShape)
TopTools_Array1OfListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_Array1OfListOfShape__kill_pointed,None,TopTools_Array1OfListOfShape)
TopTools_Array1OfListOfShape_swigregister = _TopTools.TopTools_Array1OfListOfShape_swigregister
TopTools_Array1OfListOfShape_swigregister(TopTools_Array1OfListOfShape)

class TopTools_Array1OfShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Item:
        :type Item: TopoDS_Shape &
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        """
        _TopTools.TopTools_Array1OfShape_swiginit(self,_TopTools.new_TopTools_Array1OfShape(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_Array1OfShape_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_Array1OfShape_Destroy(self, *args)

    def IsAllocated(self, *args):
        """
        :rtype: bool

        """
        return _TopTools.TopTools_Array1OfShape_IsAllocated(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_Array1OfShape &
        :rtype: TopTools_Array1OfShape

        """
        return _TopTools.TopTools_Array1OfShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_Array1OfShape &
        :rtype: TopTools_Array1OfShape

        """
        return _TopTools.TopTools_Array1OfShape_Set(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_Array1OfShape_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_Array1OfShape_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_Array1OfShape_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_Array1OfShape_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_Array1OfShape_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_Array1OfShape_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_Array1OfShape.Init = new_instancemethod(_TopTools.TopTools_Array1OfShape_Init,None,TopTools_Array1OfShape)
TopTools_Array1OfShape.Destroy = new_instancemethod(_TopTools.TopTools_Array1OfShape_Destroy,None,TopTools_Array1OfShape)
TopTools_Array1OfShape.IsAllocated = new_instancemethod(_TopTools.TopTools_Array1OfShape_IsAllocated,None,TopTools_Array1OfShape)
TopTools_Array1OfShape.Assign = new_instancemethod(_TopTools.TopTools_Array1OfShape_Assign,None,TopTools_Array1OfShape)
TopTools_Array1OfShape.Set = new_instancemethod(_TopTools.TopTools_Array1OfShape_Set,None,TopTools_Array1OfShape)
TopTools_Array1OfShape.Length = new_instancemethod(_TopTools.TopTools_Array1OfShape_Length,None,TopTools_Array1OfShape)
TopTools_Array1OfShape.Lower = new_instancemethod(_TopTools.TopTools_Array1OfShape_Lower,None,TopTools_Array1OfShape)
TopTools_Array1OfShape.Upper = new_instancemethod(_TopTools.TopTools_Array1OfShape_Upper,None,TopTools_Array1OfShape)
TopTools_Array1OfShape.SetValue = new_instancemethod(_TopTools.TopTools_Array1OfShape_SetValue,None,TopTools_Array1OfShape)
TopTools_Array1OfShape.Value = new_instancemethod(_TopTools.TopTools_Array1OfShape_Value,None,TopTools_Array1OfShape)
TopTools_Array1OfShape.ChangeValue = new_instancemethod(_TopTools.TopTools_Array1OfShape_ChangeValue,None,TopTools_Array1OfShape)
TopTools_Array1OfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_Array1OfShape__kill_pointed,None,TopTools_Array1OfShape)
TopTools_Array1OfShape_swigregister = _TopTools.TopTools_Array1OfShape_swigregister
TopTools_Array1OfShape_swigregister(TopTools_Array1OfShape)

class TopTools_Array2OfShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param Item:
        :type Item: TopoDS_Shape &
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        """
        _TopTools.TopTools_Array2OfShape_swiginit(self,_TopTools.new_TopTools_Array2OfShape(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_Array2OfShape_Init(self, *args)

    def Destroy(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_Array2OfShape_Destroy(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_Array2OfShape &
        :rtype: TopTools_Array2OfShape

        """
        return _TopTools.TopTools_Array2OfShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_Array2OfShape &
        :rtype: TopTools_Array2OfShape

        """
        return _TopTools.TopTools_Array2OfShape_Set(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_Array2OfShape_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_Array2OfShape_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_Array2OfShape_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_Array2OfShape_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_Array2OfShape_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_Array2OfShape_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_Array2OfShape_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_Array2OfShape_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_Array2OfShape_ChangeValue(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_Array2OfShape.Init = new_instancemethod(_TopTools.TopTools_Array2OfShape_Init,None,TopTools_Array2OfShape)
TopTools_Array2OfShape.Destroy = new_instancemethod(_TopTools.TopTools_Array2OfShape_Destroy,None,TopTools_Array2OfShape)
TopTools_Array2OfShape.Assign = new_instancemethod(_TopTools.TopTools_Array2OfShape_Assign,None,TopTools_Array2OfShape)
TopTools_Array2OfShape.Set = new_instancemethod(_TopTools.TopTools_Array2OfShape_Set,None,TopTools_Array2OfShape)
TopTools_Array2OfShape.ColLength = new_instancemethod(_TopTools.TopTools_Array2OfShape_ColLength,None,TopTools_Array2OfShape)
TopTools_Array2OfShape.RowLength = new_instancemethod(_TopTools.TopTools_Array2OfShape_RowLength,None,TopTools_Array2OfShape)
TopTools_Array2OfShape.LowerCol = new_instancemethod(_TopTools.TopTools_Array2OfShape_LowerCol,None,TopTools_Array2OfShape)
TopTools_Array2OfShape.LowerRow = new_instancemethod(_TopTools.TopTools_Array2OfShape_LowerRow,None,TopTools_Array2OfShape)
TopTools_Array2OfShape.UpperCol = new_instancemethod(_TopTools.TopTools_Array2OfShape_UpperCol,None,TopTools_Array2OfShape)
TopTools_Array2OfShape.UpperRow = new_instancemethod(_TopTools.TopTools_Array2OfShape_UpperRow,None,TopTools_Array2OfShape)
TopTools_Array2OfShape.SetValue = new_instancemethod(_TopTools.TopTools_Array2OfShape_SetValue,None,TopTools_Array2OfShape)
TopTools_Array2OfShape.Value = new_instancemethod(_TopTools.TopTools_Array2OfShape_Value,None,TopTools_Array2OfShape)
TopTools_Array2OfShape.ChangeValue = new_instancemethod(_TopTools.TopTools_Array2OfShape_ChangeValue,None,TopTools_Array2OfShape)
TopTools_Array2OfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_Array2OfShape__kill_pointed,None,TopTools_Array2OfShape)
TopTools_Array2OfShape_swigregister = _TopTools.TopTools_Array2OfShape_swigregister
TopTools_Array2OfShape_swigregister(TopTools_Array2OfShape)

class TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TopTools_DataMapOfIntegerListOfShape &
        :rtype: None

        """
        _TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape_swiginit(self,_TopTools.new_TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_DataMapOfIntegerListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape.Initialize = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape_Initialize,None,TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape)
TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape.Key = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape_Key,None,TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape)
TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape.Value = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape_Value,None,TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape)
TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape__kill_pointed,None,TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape)
TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape_swigregister = _TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape_swigregister
TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape_swigregister(TopTools_DataMapIteratorOfDataMapOfIntegerListOfShape)

class TopTools_DataMapIteratorOfDataMapOfIntegerShape(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TopTools_DataMapOfIntegerShape &
        :rtype: None

        """
        _TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerShape_swiginit(self,_TopTools.new_TopTools_DataMapIteratorOfDataMapOfIntegerShape(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_DataMapOfIntegerShape &
        :rtype: None

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerShape_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerShape_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerShape_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapIteratorOfDataMapOfIntegerShape.Initialize = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerShape_Initialize,None,TopTools_DataMapIteratorOfDataMapOfIntegerShape)
TopTools_DataMapIteratorOfDataMapOfIntegerShape.Key = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerShape_Key,None,TopTools_DataMapIteratorOfDataMapOfIntegerShape)
TopTools_DataMapIteratorOfDataMapOfIntegerShape.Value = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerShape_Value,None,TopTools_DataMapIteratorOfDataMapOfIntegerShape)
TopTools_DataMapIteratorOfDataMapOfIntegerShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerShape__kill_pointed,None,TopTools_DataMapIteratorOfDataMapOfIntegerShape)
TopTools_DataMapIteratorOfDataMapOfIntegerShape_swigregister = _TopTools.TopTools_DataMapIteratorOfDataMapOfIntegerShape_swigregister
TopTools_DataMapIteratorOfDataMapOfIntegerShape_swigregister(TopTools_DataMapIteratorOfDataMapOfIntegerShape)

class TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TopTools_DataMapOfOrientedShapeInteger &
        :rtype: None

        """
        _TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger_swiginit(self,_TopTools.new_TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_DataMapOfOrientedShapeInteger &
        :rtype: None

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger.Initialize = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger_Initialize,None,TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger)
TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger.Key = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger_Key,None,TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger)
TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger.Value = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger_Value,None,TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger)
TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger__kill_pointed,None,TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger)
TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger_swigregister = _TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger_swigregister
TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger_swigregister(TopTools_DataMapIteratorOfDataMapOfOrientedShapeInteger)

class TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TopTools_DataMapOfOrientedShapeShape &
        :rtype: None

        """
        _TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape_swiginit(self,_TopTools.new_TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_DataMapOfOrientedShapeShape &
        :rtype: None

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape.Initialize = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape_Initialize,None,TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape)
TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape.Key = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape_Key,None,TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape)
TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape.Value = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape_Value,None,TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape)
TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape__kill_pointed,None,TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape)
TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape_swigregister = _TopTools.TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape_swigregister
TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape_swigregister(TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape)

class TopTools_DataMapIteratorOfDataMapOfShapeInteger(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TopTools_DataMapOfShapeInteger &
        :rtype: None

        """
        _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeInteger_swiginit(self,_TopTools.new_TopTools_DataMapIteratorOfDataMapOfShapeInteger(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_DataMapOfShapeInteger &
        :rtype: None

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeInteger_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeInteger_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeInteger_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapIteratorOfDataMapOfShapeInteger.Initialize = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeInteger_Initialize,None,TopTools_DataMapIteratorOfDataMapOfShapeInteger)
TopTools_DataMapIteratorOfDataMapOfShapeInteger.Key = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeInteger_Key,None,TopTools_DataMapIteratorOfDataMapOfShapeInteger)
TopTools_DataMapIteratorOfDataMapOfShapeInteger.Value = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeInteger_Value,None,TopTools_DataMapIteratorOfDataMapOfShapeInteger)
TopTools_DataMapIteratorOfDataMapOfShapeInteger._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeInteger__kill_pointed,None,TopTools_DataMapIteratorOfDataMapOfShapeInteger)
TopTools_DataMapIteratorOfDataMapOfShapeInteger_swigregister = _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeInteger_swigregister
TopTools_DataMapIteratorOfDataMapOfShapeInteger_swigregister(TopTools_DataMapIteratorOfDataMapOfShapeInteger)

class TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TopTools_DataMapOfShapeListOfInteger &
        :rtype: None

        """
        _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger_swiginit(self,_TopTools.new_TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_DataMapOfShapeListOfInteger &
        :rtype: None

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TColStd_ListOfInteger

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger.Initialize = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger_Initialize,None,TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger)
TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger.Key = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger_Key,None,TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger)
TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger.Value = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger_Value,None,TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger)
TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger__kill_pointed,None,TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger)
TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger_swigregister = _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger_swigregister
TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger_swigregister(TopTools_DataMapIteratorOfDataMapOfShapeListOfInteger)

class TopTools_DataMapIteratorOfDataMapOfShapeListOfShape(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TopTools_DataMapOfShapeListOfShape &
        :rtype: None

        """
        _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfShape_swiginit(self,_TopTools.new_TopTools_DataMapIteratorOfDataMapOfShapeListOfShape(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_DataMapOfShapeListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfShape_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfShape_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfShape_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapIteratorOfDataMapOfShapeListOfShape.Initialize = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfShape_Initialize,None,TopTools_DataMapIteratorOfDataMapOfShapeListOfShape)
TopTools_DataMapIteratorOfDataMapOfShapeListOfShape.Key = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfShape_Key,None,TopTools_DataMapIteratorOfDataMapOfShapeListOfShape)
TopTools_DataMapIteratorOfDataMapOfShapeListOfShape.Value = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfShape_Value,None,TopTools_DataMapIteratorOfDataMapOfShapeListOfShape)
TopTools_DataMapIteratorOfDataMapOfShapeListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfShape__kill_pointed,None,TopTools_DataMapIteratorOfDataMapOfShapeListOfShape)
TopTools_DataMapIteratorOfDataMapOfShapeListOfShape_swigregister = _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeListOfShape_swigregister
TopTools_DataMapIteratorOfDataMapOfShapeListOfShape_swigregister(TopTools_DataMapIteratorOfDataMapOfShapeListOfShape)

class TopTools_DataMapIteratorOfDataMapOfShapeReal(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TopTools_DataMapOfShapeReal &
        :rtype: None

        """
        _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeReal_swiginit(self,_TopTools.new_TopTools_DataMapIteratorOfDataMapOfShapeReal(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_DataMapOfShapeReal &
        :rtype: None

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeReal_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeReal_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: float

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeReal_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapIteratorOfDataMapOfShapeReal.Initialize = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeReal_Initialize,None,TopTools_DataMapIteratorOfDataMapOfShapeReal)
TopTools_DataMapIteratorOfDataMapOfShapeReal.Key = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeReal_Key,None,TopTools_DataMapIteratorOfDataMapOfShapeReal)
TopTools_DataMapIteratorOfDataMapOfShapeReal.Value = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeReal_Value,None,TopTools_DataMapIteratorOfDataMapOfShapeReal)
TopTools_DataMapIteratorOfDataMapOfShapeReal._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeReal__kill_pointed,None,TopTools_DataMapIteratorOfDataMapOfShapeReal)
TopTools_DataMapIteratorOfDataMapOfShapeReal_swigregister = _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeReal_swigregister
TopTools_DataMapIteratorOfDataMapOfShapeReal_swigregister(TopTools_DataMapIteratorOfDataMapOfShapeReal)

class TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TopTools_DataMapOfShapeSequenceOfShape &
        :rtype: None

        """
        _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape_swiginit(self,_TopTools.new_TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_DataMapOfShapeSequenceOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TopTools_SequenceOfShape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape.Initialize = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape_Initialize,None,TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape)
TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape.Key = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape_Key,None,TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape)
TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape.Value = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape_Value,None,TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape)
TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape__kill_pointed,None,TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape)
TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape_swigregister = _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape_swigregister
TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape_swigregister(TopTools_DataMapIteratorOfDataMapOfShapeSequenceOfShape)

class TopTools_DataMapIteratorOfDataMapOfShapeShape(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TopTools_DataMapOfShapeShape &
        :rtype: None

        """
        _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeShape_swiginit(self,_TopTools.new_TopTools_DataMapIteratorOfDataMapOfShapeShape(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_DataMapOfShapeShape &
        :rtype: None

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeShape_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeShape_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeShape_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapIteratorOfDataMapOfShapeShape.Initialize = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeShape_Initialize,None,TopTools_DataMapIteratorOfDataMapOfShapeShape)
TopTools_DataMapIteratorOfDataMapOfShapeShape.Key = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeShape_Key,None,TopTools_DataMapIteratorOfDataMapOfShapeShape)
TopTools_DataMapIteratorOfDataMapOfShapeShape.Value = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeShape_Value,None,TopTools_DataMapIteratorOfDataMapOfShapeShape)
TopTools_DataMapIteratorOfDataMapOfShapeShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapIteratorOfDataMapOfShapeShape__kill_pointed,None,TopTools_DataMapIteratorOfDataMapOfShapeShape)
TopTools_DataMapIteratorOfDataMapOfShapeShape_swigregister = _TopTools.TopTools_DataMapIteratorOfDataMapOfShapeShape_swigregister
TopTools_DataMapIteratorOfDataMapOfShapeShape_swigregister(TopTools_DataMapIteratorOfDataMapOfShapeShape)

class TopTools_DataMapNodeOfDataMapOfIntegerListOfShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopTools_ListOfShape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_swiginit(self,_TopTools.new_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape(*args))
    def GetKey(self):
        """GetKey(TopTools_DataMapNodeOfDataMapOfIntegerListOfShape self) -> Standard_Integer"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_GetKey(self)

    def SetKey(self, *args):
        """SetKey(TopTools_DataMapNodeOfDataMapOfIntegerListOfShape self, Standard_Integer value)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_SetKey(self, *args)

    def Value(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapNodeOfDataMapOfIntegerListOfShape self)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerListOfShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_DataMapNodeOfDataMapOfIntegerListOfShape self) -> Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapNodeOfDataMapOfIntegerListOfShape.GetKey = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_GetKey,None,TopTools_DataMapNodeOfDataMapOfIntegerListOfShape)
TopTools_DataMapNodeOfDataMapOfIntegerListOfShape.SetKey = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_SetKey,None,TopTools_DataMapNodeOfDataMapOfIntegerListOfShape)
TopTools_DataMapNodeOfDataMapOfIntegerListOfShape.Value = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_Value,None,TopTools_DataMapNodeOfDataMapOfIntegerListOfShape)
TopTools_DataMapNodeOfDataMapOfIntegerListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfIntegerListOfShape__kill_pointed,None,TopTools_DataMapNodeOfDataMapOfIntegerListOfShape)
TopTools_DataMapNodeOfDataMapOfIntegerListOfShape.GetHandle = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_GetHandle,None,TopTools_DataMapNodeOfDataMapOfIntegerListOfShape)
TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_swigregister = _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_swigregister
TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_swigregister(TopTools_DataMapNodeOfDataMapOfIntegerListOfShape)

class Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_swiginit(self,_TopTools.new_Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_Nullify,None,Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape)
Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_IsNull,None,Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape)
Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_GetObject,None,Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape)
Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape__kill_pointed,None,Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape)
Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_swigregister = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_swigregister
Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_swigregister(Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape)

def Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_DownCast(*args):
  return _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_DownCast(*args)
Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_DownCast = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerListOfShape_DownCast

class TopTools_DataMapNodeOfDataMapOfIntegerShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopoDS_Shape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerShape_swiginit(self,_TopTools.new_TopTools_DataMapNodeOfDataMapOfIntegerShape(*args))
    def GetKey(self):
        """GetKey(TopTools_DataMapNodeOfDataMapOfIntegerShape self) -> Standard_Integer"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerShape_GetKey(self)

    def SetKey(self, *args):
        """SetKey(TopTools_DataMapNodeOfDataMapOfIntegerShape self, Standard_Integer value)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerShape_SetKey(self, *args)

    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerShape_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapNodeOfDataMapOfIntegerShape self)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_DataMapNodeOfDataMapOfIntegerShape self) -> Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapNodeOfDataMapOfIntegerShape.GetKey = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfIntegerShape_GetKey,None,TopTools_DataMapNodeOfDataMapOfIntegerShape)
TopTools_DataMapNodeOfDataMapOfIntegerShape.SetKey = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfIntegerShape_SetKey,None,TopTools_DataMapNodeOfDataMapOfIntegerShape)
TopTools_DataMapNodeOfDataMapOfIntegerShape.Value = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfIntegerShape_Value,None,TopTools_DataMapNodeOfDataMapOfIntegerShape)
TopTools_DataMapNodeOfDataMapOfIntegerShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfIntegerShape__kill_pointed,None,TopTools_DataMapNodeOfDataMapOfIntegerShape)
TopTools_DataMapNodeOfDataMapOfIntegerShape.GetHandle = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfIntegerShape_GetHandle,None,TopTools_DataMapNodeOfDataMapOfIntegerShape)
TopTools_DataMapNodeOfDataMapOfIntegerShape_swigregister = _TopTools.TopTools_DataMapNodeOfDataMapOfIntegerShape_swigregister
TopTools_DataMapNodeOfDataMapOfIntegerShape_swigregister(TopTools_DataMapNodeOfDataMapOfIntegerShape)

class Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape_swiginit(self,_TopTools.new_Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape_Nullify,None,Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape)
Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape_IsNull,None,Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape)
Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape_GetObject,None,Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape)
Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape__kill_pointed,None,Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape)
Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape_swigregister = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape_swigregister
Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape_swigregister(Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape)

def Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape_DownCast(*args):
  return _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape_DownCast(*args)
Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape_DownCast = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfIntegerShape_DownCast

class TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: int &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_swiginit(self,_TopTools.new_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger(*args))
    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_Key(self, *args)

    def GetValue(self):
        """GetValue(TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger self) -> Standard_Integer"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger self, Standard_Integer value)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger self)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger self) -> Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger.Key = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_Key,None,TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger)
TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger.GetValue = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_GetValue,None,TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger)
TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger.SetValue = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_SetValue,None,TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger)
TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger__kill_pointed,None,TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger)
TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger.GetHandle = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_GetHandle,None,TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger)
TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_swigregister = _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_swigregister
TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_swigregister(TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger)

class Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_swiginit(self,_TopTools.new_Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger.Nullify = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_Nullify,None,Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger)
Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger.IsNull = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_IsNull,None,Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger)
Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger.GetObject = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_GetObject,None,Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger)
Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger__kill_pointed,None,Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger)
Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_swigregister = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_swigregister
Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_swigregister(Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger)

def Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_DownCast(*args):
  return _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_DownCast(*args)
Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_DownCast = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeInteger_DownCast

class TopTools_DataMapNodeOfDataMapOfOrientedShapeShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopoDS_Shape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_swiginit(self,_TopTools.new_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape(*args))
    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapNodeOfDataMapOfOrientedShapeShape self)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_DataMapNodeOfDataMapOfOrientedShapeShape self) -> Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapNodeOfDataMapOfOrientedShapeShape.Key = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_Key,None,TopTools_DataMapNodeOfDataMapOfOrientedShapeShape)
TopTools_DataMapNodeOfDataMapOfOrientedShapeShape.Value = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_Value,None,TopTools_DataMapNodeOfDataMapOfOrientedShapeShape)
TopTools_DataMapNodeOfDataMapOfOrientedShapeShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeShape__kill_pointed,None,TopTools_DataMapNodeOfDataMapOfOrientedShapeShape)
TopTools_DataMapNodeOfDataMapOfOrientedShapeShape.GetHandle = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_GetHandle,None,TopTools_DataMapNodeOfDataMapOfOrientedShapeShape)
TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_swigregister = _TopTools.TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_swigregister
TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_swigregister(TopTools_DataMapNodeOfDataMapOfOrientedShapeShape)

class Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_swiginit(self,_TopTools.new_Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_Nullify,None,Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape)
Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_IsNull,None,Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape)
Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_GetObject,None,Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape)
Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape__kill_pointed,None,Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape)
Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_swigregister = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_swigregister
Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_swigregister(Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape)

def Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_DownCast(*args):
  return _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_DownCast(*args)
Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_DownCast = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfOrientedShapeShape_DownCast

class TopTools_DataMapNodeOfDataMapOfShapeInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: int &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_DataMapNodeOfDataMapOfShapeInteger_swiginit(self,_TopTools.new_TopTools_DataMapNodeOfDataMapOfShapeInteger(*args))
    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeInteger_Key(self, *args)

    def GetValue(self):
        """GetValue(TopTools_DataMapNodeOfDataMapOfShapeInteger self) -> Standard_Integer"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeInteger_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TopTools_DataMapNodeOfDataMapOfShapeInteger self, Standard_Integer value)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeInteger_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapNodeOfDataMapOfShapeInteger self)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_DataMapNodeOfDataMapOfShapeInteger self) -> Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapNodeOfDataMapOfShapeInteger.Key = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeInteger_Key,None,TopTools_DataMapNodeOfDataMapOfShapeInteger)
TopTools_DataMapNodeOfDataMapOfShapeInteger.GetValue = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeInteger_GetValue,None,TopTools_DataMapNodeOfDataMapOfShapeInteger)
TopTools_DataMapNodeOfDataMapOfShapeInteger.SetValue = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeInteger_SetValue,None,TopTools_DataMapNodeOfDataMapOfShapeInteger)
TopTools_DataMapNodeOfDataMapOfShapeInteger._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeInteger__kill_pointed,None,TopTools_DataMapNodeOfDataMapOfShapeInteger)
TopTools_DataMapNodeOfDataMapOfShapeInteger.GetHandle = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeInteger_GetHandle,None,TopTools_DataMapNodeOfDataMapOfShapeInteger)
TopTools_DataMapNodeOfDataMapOfShapeInteger_swigregister = _TopTools.TopTools_DataMapNodeOfDataMapOfShapeInteger_swigregister
TopTools_DataMapNodeOfDataMapOfShapeInteger_swigregister(TopTools_DataMapNodeOfDataMapOfShapeInteger)

class Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger_swiginit(self,_TopTools.new_Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger.Nullify = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger_Nullify,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger)
Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger.IsNull = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger_IsNull,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger)
Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger.GetObject = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger_GetObject,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger)
Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger__kill_pointed,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger)
Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger_swigregister = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger_swigregister
Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger_swigregister(Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger)

def Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger_DownCast(*args):
  return _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger_DownCast(*args)
Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger_DownCast = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeInteger_DownCast

class TopTools_DataMapNodeOfDataMapOfShapeListOfInteger(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TColStd_ListOfInteger &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_swiginit(self,_TopTools.new_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger(*args))
    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TColStd_ListOfInteger

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapNodeOfDataMapOfShapeListOfInteger self)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfInteger__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_DataMapNodeOfDataMapOfShapeListOfInteger self) -> Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapNodeOfDataMapOfShapeListOfInteger.Key = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_Key,None,TopTools_DataMapNodeOfDataMapOfShapeListOfInteger)
TopTools_DataMapNodeOfDataMapOfShapeListOfInteger.Value = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_Value,None,TopTools_DataMapNodeOfDataMapOfShapeListOfInteger)
TopTools_DataMapNodeOfDataMapOfShapeListOfInteger._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfInteger__kill_pointed,None,TopTools_DataMapNodeOfDataMapOfShapeListOfInteger)
TopTools_DataMapNodeOfDataMapOfShapeListOfInteger.GetHandle = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_GetHandle,None,TopTools_DataMapNodeOfDataMapOfShapeListOfInteger)
TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_swigregister = _TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_swigregister
TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_swigregister(TopTools_DataMapNodeOfDataMapOfShapeListOfInteger)

class Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_swiginit(self,_TopTools.new_Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger.Nullify = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_Nullify,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger)
Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger.IsNull = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_IsNull,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger)
Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger.GetObject = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_GetObject,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger)
Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger__kill_pointed,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger)
Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_swigregister = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_swigregister
Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_swigregister(Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger)

def Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_DownCast(*args):
  return _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_DownCast(*args)
Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_DownCast = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfInteger_DownCast

class TopTools_DataMapNodeOfDataMapOfShapeListOfShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopTools_ListOfShape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfShape_swiginit(self,_TopTools.new_TopTools_DataMapNodeOfDataMapOfShapeListOfShape(*args))
    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfShape_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfShape_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapNodeOfDataMapOfShapeListOfShape self)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_DataMapNodeOfDataMapOfShapeListOfShape self) -> Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapNodeOfDataMapOfShapeListOfShape.Key = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfShape_Key,None,TopTools_DataMapNodeOfDataMapOfShapeListOfShape)
TopTools_DataMapNodeOfDataMapOfShapeListOfShape.Value = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfShape_Value,None,TopTools_DataMapNodeOfDataMapOfShapeListOfShape)
TopTools_DataMapNodeOfDataMapOfShapeListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfShape__kill_pointed,None,TopTools_DataMapNodeOfDataMapOfShapeListOfShape)
TopTools_DataMapNodeOfDataMapOfShapeListOfShape.GetHandle = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfShape_GetHandle,None,TopTools_DataMapNodeOfDataMapOfShapeListOfShape)
TopTools_DataMapNodeOfDataMapOfShapeListOfShape_swigregister = _TopTools.TopTools_DataMapNodeOfDataMapOfShapeListOfShape_swigregister
TopTools_DataMapNodeOfDataMapOfShapeListOfShape_swigregister(TopTools_DataMapNodeOfDataMapOfShapeListOfShape)

class Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape_swiginit(self,_TopTools.new_Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape_Nullify,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape)
Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape_IsNull,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape)
Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape_GetObject,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape)
Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape__kill_pointed,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape)
Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape_swigregister = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape_swigregister
Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape_swigregister(Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape)

def Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape_DownCast(*args):
  return _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape_DownCast(*args)
Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape_DownCast = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeListOfShape_DownCast

class TopTools_DataMapNodeOfDataMapOfShapeReal(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: float &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_DataMapNodeOfDataMapOfShapeReal_swiginit(self,_TopTools.new_TopTools_DataMapNodeOfDataMapOfShapeReal(*args))
    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeReal_Key(self, *args)

    def GetValue(self):
        """GetValue(TopTools_DataMapNodeOfDataMapOfShapeReal self) -> Standard_Real"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeReal_GetValue(self)

    def SetValue(self, *args):
        """SetValue(TopTools_DataMapNodeOfDataMapOfShapeReal self, Standard_Real value)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeReal_SetValue(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapNodeOfDataMapOfShapeReal self)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeReal__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_DataMapNodeOfDataMapOfShapeReal self) -> Handle_TopTools_DataMapNodeOfDataMapOfShapeReal"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeReal_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapNodeOfDataMapOfShapeReal.Key = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeReal_Key,None,TopTools_DataMapNodeOfDataMapOfShapeReal)
TopTools_DataMapNodeOfDataMapOfShapeReal.GetValue = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeReal_GetValue,None,TopTools_DataMapNodeOfDataMapOfShapeReal)
TopTools_DataMapNodeOfDataMapOfShapeReal.SetValue = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeReal_SetValue,None,TopTools_DataMapNodeOfDataMapOfShapeReal)
TopTools_DataMapNodeOfDataMapOfShapeReal._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeReal__kill_pointed,None,TopTools_DataMapNodeOfDataMapOfShapeReal)
TopTools_DataMapNodeOfDataMapOfShapeReal.GetHandle = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeReal_GetHandle,None,TopTools_DataMapNodeOfDataMapOfShapeReal)
TopTools_DataMapNodeOfDataMapOfShapeReal_swigregister = _TopTools.TopTools_DataMapNodeOfDataMapOfShapeReal_swigregister
TopTools_DataMapNodeOfDataMapOfShapeReal_swigregister(TopTools_DataMapNodeOfDataMapOfShapeReal)

class Handle_TopTools_DataMapNodeOfDataMapOfShapeReal(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeReal_swiginit(self,_TopTools.new_Handle_TopTools_DataMapNodeOfDataMapOfShapeReal(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeReal_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_DataMapNodeOfDataMapOfShapeReal.Nullify = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeReal_Nullify,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeReal)
Handle_TopTools_DataMapNodeOfDataMapOfShapeReal.IsNull = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeReal_IsNull,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeReal)
Handle_TopTools_DataMapNodeOfDataMapOfShapeReal.GetObject = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeReal_GetObject,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeReal)
Handle_TopTools_DataMapNodeOfDataMapOfShapeReal._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeReal__kill_pointed,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeReal)
Handle_TopTools_DataMapNodeOfDataMapOfShapeReal_swigregister = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeReal_swigregister
Handle_TopTools_DataMapNodeOfDataMapOfShapeReal_swigregister(Handle_TopTools_DataMapNodeOfDataMapOfShapeReal)

def Handle_TopTools_DataMapNodeOfDataMapOfShapeReal_DownCast(*args):
  return _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeReal_DownCast(*args)
Handle_TopTools_DataMapNodeOfDataMapOfShapeReal_DownCast = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeReal_DownCast

class TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopTools_SequenceOfShape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_swiginit(self,_TopTools.new_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape(*args))
    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TopTools_SequenceOfShape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape self)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape self) -> Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape.Key = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_Key,None,TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape)
TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape.Value = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_Value,None,TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape)
TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape__kill_pointed,None,TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape)
TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape.GetHandle = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_GetHandle,None,TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape)
TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_swigregister = _TopTools.TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_swigregister
TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_swigregister(TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape)

class Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_swiginit(self,_TopTools.new_Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_Nullify,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape)
Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_IsNull,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape)
Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_GetObject,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape)
Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape__kill_pointed,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape)
Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_swigregister = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_swigregister
Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_swigregister(Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape)

def Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_DownCast(*args):
  return _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_DownCast(*args)
Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_DownCast = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeSequenceOfShape_DownCast

class TopTools_DataMapNodeOfDataMapOfShapeShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopoDS_Shape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_DataMapNodeOfDataMapOfShapeShape_swiginit(self,_TopTools.new_TopTools_DataMapNodeOfDataMapOfShapeShape(*args))
    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeShape_Key(self, *args)

    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeShape_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapNodeOfDataMapOfShapeShape self)"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_DataMapNodeOfDataMapOfShapeShape self) -> Handle_TopTools_DataMapNodeOfDataMapOfShapeShape"""
        return _TopTools.TopTools_DataMapNodeOfDataMapOfShapeShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapNodeOfDataMapOfShapeShape.Key = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeShape_Key,None,TopTools_DataMapNodeOfDataMapOfShapeShape)
TopTools_DataMapNodeOfDataMapOfShapeShape.Value = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeShape_Value,None,TopTools_DataMapNodeOfDataMapOfShapeShape)
TopTools_DataMapNodeOfDataMapOfShapeShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeShape__kill_pointed,None,TopTools_DataMapNodeOfDataMapOfShapeShape)
TopTools_DataMapNodeOfDataMapOfShapeShape.GetHandle = new_instancemethod(_TopTools.TopTools_DataMapNodeOfDataMapOfShapeShape_GetHandle,None,TopTools_DataMapNodeOfDataMapOfShapeShape)
TopTools_DataMapNodeOfDataMapOfShapeShape_swigregister = _TopTools.TopTools_DataMapNodeOfDataMapOfShapeShape_swigregister
TopTools_DataMapNodeOfDataMapOfShapeShape_swigregister(TopTools_DataMapNodeOfDataMapOfShapeShape)

class Handle_TopTools_DataMapNodeOfDataMapOfShapeShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeShape_swiginit(self,_TopTools.new_Handle_TopTools_DataMapNodeOfDataMapOfShapeShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_DataMapNodeOfDataMapOfShapeShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeShape_Nullify,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeShape)
Handle_TopTools_DataMapNodeOfDataMapOfShapeShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeShape_IsNull,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeShape)
Handle_TopTools_DataMapNodeOfDataMapOfShapeShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeShape_GetObject,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeShape)
Handle_TopTools_DataMapNodeOfDataMapOfShapeShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeShape__kill_pointed,None,Handle_TopTools_DataMapNodeOfDataMapOfShapeShape)
Handle_TopTools_DataMapNodeOfDataMapOfShapeShape_swigregister = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeShape_swigregister
Handle_TopTools_DataMapNodeOfDataMapOfShapeShape_swigregister(Handle_TopTools_DataMapNodeOfDataMapOfShapeShape)

def Handle_TopTools_DataMapNodeOfDataMapOfShapeShape_DownCast(*args):
  return _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeShape_DownCast(*args)
Handle_TopTools_DataMapNodeOfDataMapOfShapeShape_DownCast = _TopTools.Handle_TopTools_DataMapNodeOfDataMapOfShapeShape_DownCast

class TopTools_DataMapOfIntegerListOfShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_DataMapOfIntegerListOfShape_swiginit(self,_TopTools.new_TopTools_DataMapOfIntegerListOfShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfIntegerListOfShape &
        :rtype: TopTools_DataMapOfIntegerListOfShape

        """
        return _TopTools.TopTools_DataMapOfIntegerListOfShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfIntegerListOfShape &
        :rtype: TopTools_DataMapOfIntegerListOfShape

        """
        return _TopTools.TopTools_DataMapOfIntegerListOfShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfIntegerListOfShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfIntegerListOfShape_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopTools_ListOfShape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfIntegerListOfShape_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfIntegerListOfShape_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfIntegerListOfShape_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_DataMapOfIntegerListOfShape_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_DataMapOfIntegerListOfShape_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfIntegerListOfShape_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfIntegerListOfShape_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapOfIntegerListOfShape self)"""
        return _TopTools.TopTools_DataMapOfIntegerListOfShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapOfIntegerListOfShape.Assign = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerListOfShape_Assign,None,TopTools_DataMapOfIntegerListOfShape)
TopTools_DataMapOfIntegerListOfShape.Set = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerListOfShape_Set,None,TopTools_DataMapOfIntegerListOfShape)
TopTools_DataMapOfIntegerListOfShape.ReSize = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerListOfShape_ReSize,None,TopTools_DataMapOfIntegerListOfShape)
TopTools_DataMapOfIntegerListOfShape.Clear = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerListOfShape_Clear,None,TopTools_DataMapOfIntegerListOfShape)
TopTools_DataMapOfIntegerListOfShape.Bind = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerListOfShape_Bind,None,TopTools_DataMapOfIntegerListOfShape)
TopTools_DataMapOfIntegerListOfShape.IsBound = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerListOfShape_IsBound,None,TopTools_DataMapOfIntegerListOfShape)
TopTools_DataMapOfIntegerListOfShape.UnBind = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerListOfShape_UnBind,None,TopTools_DataMapOfIntegerListOfShape)
TopTools_DataMapOfIntegerListOfShape.Find = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerListOfShape_Find,None,TopTools_DataMapOfIntegerListOfShape)
TopTools_DataMapOfIntegerListOfShape.ChangeFind = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerListOfShape_ChangeFind,None,TopTools_DataMapOfIntegerListOfShape)
TopTools_DataMapOfIntegerListOfShape.Find1 = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerListOfShape_Find1,None,TopTools_DataMapOfIntegerListOfShape)
TopTools_DataMapOfIntegerListOfShape.ChangeFind1 = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerListOfShape_ChangeFind1,None,TopTools_DataMapOfIntegerListOfShape)
TopTools_DataMapOfIntegerListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerListOfShape__kill_pointed,None,TopTools_DataMapOfIntegerListOfShape)
TopTools_DataMapOfIntegerListOfShape_swigregister = _TopTools.TopTools_DataMapOfIntegerListOfShape_swigregister
TopTools_DataMapOfIntegerListOfShape_swigregister(TopTools_DataMapOfIntegerListOfShape)

class TopTools_DataMapOfIntegerShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_DataMapOfIntegerShape_swiginit(self,_TopTools.new_TopTools_DataMapOfIntegerShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfIntegerShape &
        :rtype: TopTools_DataMapOfIntegerShape

        """
        return _TopTools.TopTools_DataMapOfIntegerShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfIntegerShape &
        :rtype: TopTools_DataMapOfIntegerShape

        """
        return _TopTools.TopTools_DataMapOfIntegerShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfIntegerShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfIntegerShape_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: int &
        :param I:
        :type I: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfIntegerShape_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfIntegerShape_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfIntegerShape_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapOfIntegerShape_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapOfIntegerShape_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfIntegerShape_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: int &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfIntegerShape_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapOfIntegerShape self)"""
        return _TopTools.TopTools_DataMapOfIntegerShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapOfIntegerShape.Assign = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerShape_Assign,None,TopTools_DataMapOfIntegerShape)
TopTools_DataMapOfIntegerShape.Set = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerShape_Set,None,TopTools_DataMapOfIntegerShape)
TopTools_DataMapOfIntegerShape.ReSize = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerShape_ReSize,None,TopTools_DataMapOfIntegerShape)
TopTools_DataMapOfIntegerShape.Clear = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerShape_Clear,None,TopTools_DataMapOfIntegerShape)
TopTools_DataMapOfIntegerShape.Bind = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerShape_Bind,None,TopTools_DataMapOfIntegerShape)
TopTools_DataMapOfIntegerShape.IsBound = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerShape_IsBound,None,TopTools_DataMapOfIntegerShape)
TopTools_DataMapOfIntegerShape.UnBind = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerShape_UnBind,None,TopTools_DataMapOfIntegerShape)
TopTools_DataMapOfIntegerShape.Find = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerShape_Find,None,TopTools_DataMapOfIntegerShape)
TopTools_DataMapOfIntegerShape.ChangeFind = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerShape_ChangeFind,None,TopTools_DataMapOfIntegerShape)
TopTools_DataMapOfIntegerShape.Find1 = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerShape_Find1,None,TopTools_DataMapOfIntegerShape)
TopTools_DataMapOfIntegerShape.ChangeFind1 = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerShape_ChangeFind1,None,TopTools_DataMapOfIntegerShape)
TopTools_DataMapOfIntegerShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapOfIntegerShape__kill_pointed,None,TopTools_DataMapOfIntegerShape)
TopTools_DataMapOfIntegerShape_swigregister = _TopTools.TopTools_DataMapOfIntegerShape_swigregister
TopTools_DataMapOfIntegerShape_swigregister(TopTools_DataMapOfIntegerShape)

class TopTools_DataMapOfOrientedShapeInteger(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_DataMapOfOrientedShapeInteger_swiginit(self,_TopTools.new_TopTools_DataMapOfOrientedShapeInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfOrientedShapeInteger &
        :rtype: TopTools_DataMapOfOrientedShapeInteger

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfOrientedShapeInteger &
        :rtype: TopTools_DataMapOfOrientedShapeInteger

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeInteger_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeInteger_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeInteger_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: int &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeInteger_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeInteger_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeInteger_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeInteger_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeInteger_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeInteger_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeInteger_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapOfOrientedShapeInteger self)"""
        return _TopTools.TopTools_DataMapOfOrientedShapeInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapOfOrientedShapeInteger.Assign = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeInteger_Assign,None,TopTools_DataMapOfOrientedShapeInteger)
TopTools_DataMapOfOrientedShapeInteger.Set = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeInteger_Set,None,TopTools_DataMapOfOrientedShapeInteger)
TopTools_DataMapOfOrientedShapeInteger.ReSize = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeInteger_ReSize,None,TopTools_DataMapOfOrientedShapeInteger)
TopTools_DataMapOfOrientedShapeInteger.Clear = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeInteger_Clear,None,TopTools_DataMapOfOrientedShapeInteger)
TopTools_DataMapOfOrientedShapeInteger.Bind = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeInteger_Bind,None,TopTools_DataMapOfOrientedShapeInteger)
TopTools_DataMapOfOrientedShapeInteger.IsBound = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeInteger_IsBound,None,TopTools_DataMapOfOrientedShapeInteger)
TopTools_DataMapOfOrientedShapeInteger.UnBind = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeInteger_UnBind,None,TopTools_DataMapOfOrientedShapeInteger)
TopTools_DataMapOfOrientedShapeInteger.Find = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeInteger_Find,None,TopTools_DataMapOfOrientedShapeInteger)
TopTools_DataMapOfOrientedShapeInteger.ChangeFind = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeInteger_ChangeFind,None,TopTools_DataMapOfOrientedShapeInteger)
TopTools_DataMapOfOrientedShapeInteger.Find1 = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeInteger_Find1,None,TopTools_DataMapOfOrientedShapeInteger)
TopTools_DataMapOfOrientedShapeInteger.ChangeFind1 = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeInteger_ChangeFind1,None,TopTools_DataMapOfOrientedShapeInteger)
TopTools_DataMapOfOrientedShapeInteger._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeInteger__kill_pointed,None,TopTools_DataMapOfOrientedShapeInteger)
TopTools_DataMapOfOrientedShapeInteger_swigregister = _TopTools.TopTools_DataMapOfOrientedShapeInteger_swigregister
TopTools_DataMapOfOrientedShapeInteger_swigregister(TopTools_DataMapOfOrientedShapeInteger)

class TopTools_DataMapOfOrientedShapeShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_DataMapOfOrientedShapeShape_swiginit(self,_TopTools.new_TopTools_DataMapOfOrientedShapeShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfOrientedShapeShape &
        :rtype: TopTools_DataMapOfOrientedShapeShape

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfOrientedShapeShape &
        :rtype: TopTools_DataMapOfOrientedShapeShape

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeShape_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeShape_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeShape_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeShape_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeShape_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeShape_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeShape_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfOrientedShapeShape_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapOfOrientedShapeShape self)"""
        return _TopTools.TopTools_DataMapOfOrientedShapeShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapOfOrientedShapeShape.Assign = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeShape_Assign,None,TopTools_DataMapOfOrientedShapeShape)
TopTools_DataMapOfOrientedShapeShape.Set = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeShape_Set,None,TopTools_DataMapOfOrientedShapeShape)
TopTools_DataMapOfOrientedShapeShape.ReSize = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeShape_ReSize,None,TopTools_DataMapOfOrientedShapeShape)
TopTools_DataMapOfOrientedShapeShape.Clear = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeShape_Clear,None,TopTools_DataMapOfOrientedShapeShape)
TopTools_DataMapOfOrientedShapeShape.Bind = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeShape_Bind,None,TopTools_DataMapOfOrientedShapeShape)
TopTools_DataMapOfOrientedShapeShape.IsBound = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeShape_IsBound,None,TopTools_DataMapOfOrientedShapeShape)
TopTools_DataMapOfOrientedShapeShape.UnBind = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeShape_UnBind,None,TopTools_DataMapOfOrientedShapeShape)
TopTools_DataMapOfOrientedShapeShape.Find = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeShape_Find,None,TopTools_DataMapOfOrientedShapeShape)
TopTools_DataMapOfOrientedShapeShape.ChangeFind = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeShape_ChangeFind,None,TopTools_DataMapOfOrientedShapeShape)
TopTools_DataMapOfOrientedShapeShape.Find1 = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeShape_Find1,None,TopTools_DataMapOfOrientedShapeShape)
TopTools_DataMapOfOrientedShapeShape.ChangeFind1 = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeShape_ChangeFind1,None,TopTools_DataMapOfOrientedShapeShape)
TopTools_DataMapOfOrientedShapeShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapOfOrientedShapeShape__kill_pointed,None,TopTools_DataMapOfOrientedShapeShape)
TopTools_DataMapOfOrientedShapeShape_swigregister = _TopTools.TopTools_DataMapOfOrientedShapeShape_swigregister
TopTools_DataMapOfOrientedShapeShape_swigregister(TopTools_DataMapOfOrientedShapeShape)

class TopTools_DataMapOfShapeInteger(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_DataMapOfShapeInteger_swiginit(self,_TopTools.new_TopTools_DataMapOfShapeInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfShapeInteger &
        :rtype: TopTools_DataMapOfShapeInteger

        """
        return _TopTools.TopTools_DataMapOfShapeInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfShapeInteger &
        :rtype: TopTools_DataMapOfShapeInteger

        """
        return _TopTools.TopTools_DataMapOfShapeInteger_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfShapeInteger_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfShapeInteger_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: int &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeInteger_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeInteger_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeInteger_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_DataMapOfShapeInteger_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_DataMapOfShapeInteger_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfShapeInteger_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfShapeInteger_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapOfShapeInteger self)"""
        return _TopTools.TopTools_DataMapOfShapeInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapOfShapeInteger.Assign = new_instancemethod(_TopTools.TopTools_DataMapOfShapeInteger_Assign,None,TopTools_DataMapOfShapeInteger)
TopTools_DataMapOfShapeInteger.Set = new_instancemethod(_TopTools.TopTools_DataMapOfShapeInteger_Set,None,TopTools_DataMapOfShapeInteger)
TopTools_DataMapOfShapeInteger.ReSize = new_instancemethod(_TopTools.TopTools_DataMapOfShapeInteger_ReSize,None,TopTools_DataMapOfShapeInteger)
TopTools_DataMapOfShapeInteger.Clear = new_instancemethod(_TopTools.TopTools_DataMapOfShapeInteger_Clear,None,TopTools_DataMapOfShapeInteger)
TopTools_DataMapOfShapeInteger.Bind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeInteger_Bind,None,TopTools_DataMapOfShapeInteger)
TopTools_DataMapOfShapeInteger.IsBound = new_instancemethod(_TopTools.TopTools_DataMapOfShapeInteger_IsBound,None,TopTools_DataMapOfShapeInteger)
TopTools_DataMapOfShapeInteger.UnBind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeInteger_UnBind,None,TopTools_DataMapOfShapeInteger)
TopTools_DataMapOfShapeInteger.Find = new_instancemethod(_TopTools.TopTools_DataMapOfShapeInteger_Find,None,TopTools_DataMapOfShapeInteger)
TopTools_DataMapOfShapeInteger.ChangeFind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeInteger_ChangeFind,None,TopTools_DataMapOfShapeInteger)
TopTools_DataMapOfShapeInteger.Find1 = new_instancemethod(_TopTools.TopTools_DataMapOfShapeInteger_Find1,None,TopTools_DataMapOfShapeInteger)
TopTools_DataMapOfShapeInteger.ChangeFind1 = new_instancemethod(_TopTools.TopTools_DataMapOfShapeInteger_ChangeFind1,None,TopTools_DataMapOfShapeInteger)
TopTools_DataMapOfShapeInteger._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapOfShapeInteger__kill_pointed,None,TopTools_DataMapOfShapeInteger)
TopTools_DataMapOfShapeInteger_swigregister = _TopTools.TopTools_DataMapOfShapeInteger_swigregister
TopTools_DataMapOfShapeInteger_swigregister(TopTools_DataMapOfShapeInteger)

class TopTools_DataMapOfShapeListOfInteger(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_DataMapOfShapeListOfInteger_swiginit(self,_TopTools.new_TopTools_DataMapOfShapeListOfInteger(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfShapeListOfInteger &
        :rtype: TopTools_DataMapOfShapeListOfInteger

        """
        return _TopTools.TopTools_DataMapOfShapeListOfInteger_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfShapeListOfInteger &
        :rtype: TopTools_DataMapOfShapeListOfInteger

        """
        return _TopTools.TopTools_DataMapOfShapeListOfInteger_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfShapeListOfInteger_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfShapeListOfInteger_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TColStd_ListOfInteger &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeListOfInteger_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeListOfInteger_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeListOfInteger_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TColStd_ListOfInteger

        """
        return _TopTools.TopTools_DataMapOfShapeListOfInteger_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TColStd_ListOfInteger

        """
        return _TopTools.TopTools_DataMapOfShapeListOfInteger_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfShapeListOfInteger_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfShapeListOfInteger_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapOfShapeListOfInteger self)"""
        return _TopTools.TopTools_DataMapOfShapeListOfInteger__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapOfShapeListOfInteger.Assign = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfInteger_Assign,None,TopTools_DataMapOfShapeListOfInteger)
TopTools_DataMapOfShapeListOfInteger.Set = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfInteger_Set,None,TopTools_DataMapOfShapeListOfInteger)
TopTools_DataMapOfShapeListOfInteger.ReSize = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfInteger_ReSize,None,TopTools_DataMapOfShapeListOfInteger)
TopTools_DataMapOfShapeListOfInteger.Clear = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfInteger_Clear,None,TopTools_DataMapOfShapeListOfInteger)
TopTools_DataMapOfShapeListOfInteger.Bind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfInteger_Bind,None,TopTools_DataMapOfShapeListOfInteger)
TopTools_DataMapOfShapeListOfInteger.IsBound = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfInteger_IsBound,None,TopTools_DataMapOfShapeListOfInteger)
TopTools_DataMapOfShapeListOfInteger.UnBind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfInteger_UnBind,None,TopTools_DataMapOfShapeListOfInteger)
TopTools_DataMapOfShapeListOfInteger.Find = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfInteger_Find,None,TopTools_DataMapOfShapeListOfInteger)
TopTools_DataMapOfShapeListOfInteger.ChangeFind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfInteger_ChangeFind,None,TopTools_DataMapOfShapeListOfInteger)
TopTools_DataMapOfShapeListOfInteger.Find1 = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfInteger_Find1,None,TopTools_DataMapOfShapeListOfInteger)
TopTools_DataMapOfShapeListOfInteger.ChangeFind1 = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfInteger_ChangeFind1,None,TopTools_DataMapOfShapeListOfInteger)
TopTools_DataMapOfShapeListOfInteger._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfInteger__kill_pointed,None,TopTools_DataMapOfShapeListOfInteger)
TopTools_DataMapOfShapeListOfInteger_swigregister = _TopTools.TopTools_DataMapOfShapeListOfInteger_swigregister
TopTools_DataMapOfShapeListOfInteger_swigregister(TopTools_DataMapOfShapeListOfInteger)

class TopTools_DataMapOfShapeListOfShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_DataMapOfShapeListOfShape_swiginit(self,_TopTools.new_TopTools_DataMapOfShapeListOfShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfShapeListOfShape &
        :rtype: TopTools_DataMapOfShapeListOfShape

        """
        return _TopTools.TopTools_DataMapOfShapeListOfShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfShapeListOfShape &
        :rtype: TopTools_DataMapOfShapeListOfShape

        """
        return _TopTools.TopTools_DataMapOfShapeListOfShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfShapeListOfShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfShapeListOfShape_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopTools_ListOfShape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeListOfShape_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeListOfShape_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeListOfShape_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_DataMapOfShapeListOfShape_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_DataMapOfShapeListOfShape_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfShapeListOfShape_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfShapeListOfShape_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapOfShapeListOfShape self)"""
        return _TopTools.TopTools_DataMapOfShapeListOfShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapOfShapeListOfShape.Assign = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfShape_Assign,None,TopTools_DataMapOfShapeListOfShape)
TopTools_DataMapOfShapeListOfShape.Set = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfShape_Set,None,TopTools_DataMapOfShapeListOfShape)
TopTools_DataMapOfShapeListOfShape.ReSize = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfShape_ReSize,None,TopTools_DataMapOfShapeListOfShape)
TopTools_DataMapOfShapeListOfShape.Clear = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfShape_Clear,None,TopTools_DataMapOfShapeListOfShape)
TopTools_DataMapOfShapeListOfShape.Bind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfShape_Bind,None,TopTools_DataMapOfShapeListOfShape)
TopTools_DataMapOfShapeListOfShape.IsBound = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfShape_IsBound,None,TopTools_DataMapOfShapeListOfShape)
TopTools_DataMapOfShapeListOfShape.UnBind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfShape_UnBind,None,TopTools_DataMapOfShapeListOfShape)
TopTools_DataMapOfShapeListOfShape.Find = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfShape_Find,None,TopTools_DataMapOfShapeListOfShape)
TopTools_DataMapOfShapeListOfShape.ChangeFind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfShape_ChangeFind,None,TopTools_DataMapOfShapeListOfShape)
TopTools_DataMapOfShapeListOfShape.Find1 = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfShape_Find1,None,TopTools_DataMapOfShapeListOfShape)
TopTools_DataMapOfShapeListOfShape.ChangeFind1 = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfShape_ChangeFind1,None,TopTools_DataMapOfShapeListOfShape)
TopTools_DataMapOfShapeListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapOfShapeListOfShape__kill_pointed,None,TopTools_DataMapOfShapeListOfShape)
TopTools_DataMapOfShapeListOfShape_swigregister = _TopTools.TopTools_DataMapOfShapeListOfShape_swigregister
TopTools_DataMapOfShapeListOfShape_swigregister(TopTools_DataMapOfShapeListOfShape)

class TopTools_DataMapOfShapeReal(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_DataMapOfShapeReal_swiginit(self,_TopTools.new_TopTools_DataMapOfShapeReal(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfShapeReal &
        :rtype: TopTools_DataMapOfShapeReal

        """
        return _TopTools.TopTools_DataMapOfShapeReal_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfShapeReal &
        :rtype: TopTools_DataMapOfShapeReal

        """
        return _TopTools.TopTools_DataMapOfShapeReal_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfShapeReal_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfShapeReal_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: float &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeReal_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeReal_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeReal_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: float

        """
        return _TopTools.TopTools_DataMapOfShapeReal_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: float

        """
        return _TopTools.TopTools_DataMapOfShapeReal_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfShapeReal_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfShapeReal_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapOfShapeReal self)"""
        return _TopTools.TopTools_DataMapOfShapeReal__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapOfShapeReal.Assign = new_instancemethod(_TopTools.TopTools_DataMapOfShapeReal_Assign,None,TopTools_DataMapOfShapeReal)
TopTools_DataMapOfShapeReal.Set = new_instancemethod(_TopTools.TopTools_DataMapOfShapeReal_Set,None,TopTools_DataMapOfShapeReal)
TopTools_DataMapOfShapeReal.ReSize = new_instancemethod(_TopTools.TopTools_DataMapOfShapeReal_ReSize,None,TopTools_DataMapOfShapeReal)
TopTools_DataMapOfShapeReal.Clear = new_instancemethod(_TopTools.TopTools_DataMapOfShapeReal_Clear,None,TopTools_DataMapOfShapeReal)
TopTools_DataMapOfShapeReal.Bind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeReal_Bind,None,TopTools_DataMapOfShapeReal)
TopTools_DataMapOfShapeReal.IsBound = new_instancemethod(_TopTools.TopTools_DataMapOfShapeReal_IsBound,None,TopTools_DataMapOfShapeReal)
TopTools_DataMapOfShapeReal.UnBind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeReal_UnBind,None,TopTools_DataMapOfShapeReal)
TopTools_DataMapOfShapeReal.Find = new_instancemethod(_TopTools.TopTools_DataMapOfShapeReal_Find,None,TopTools_DataMapOfShapeReal)
TopTools_DataMapOfShapeReal.ChangeFind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeReal_ChangeFind,None,TopTools_DataMapOfShapeReal)
TopTools_DataMapOfShapeReal.Find1 = new_instancemethod(_TopTools.TopTools_DataMapOfShapeReal_Find1,None,TopTools_DataMapOfShapeReal)
TopTools_DataMapOfShapeReal.ChangeFind1 = new_instancemethod(_TopTools.TopTools_DataMapOfShapeReal_ChangeFind1,None,TopTools_DataMapOfShapeReal)
TopTools_DataMapOfShapeReal._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapOfShapeReal__kill_pointed,None,TopTools_DataMapOfShapeReal)
TopTools_DataMapOfShapeReal_swigregister = _TopTools.TopTools_DataMapOfShapeReal_swigregister
TopTools_DataMapOfShapeReal_swigregister(TopTools_DataMapOfShapeReal)

class TopTools_DataMapOfShapeSequenceOfShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_DataMapOfShapeSequenceOfShape_swiginit(self,_TopTools.new_TopTools_DataMapOfShapeSequenceOfShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfShapeSequenceOfShape &
        :rtype: TopTools_DataMapOfShapeSequenceOfShape

        """
        return _TopTools.TopTools_DataMapOfShapeSequenceOfShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfShapeSequenceOfShape &
        :rtype: TopTools_DataMapOfShapeSequenceOfShape

        """
        return _TopTools.TopTools_DataMapOfShapeSequenceOfShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfShapeSequenceOfShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfShapeSequenceOfShape_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopTools_SequenceOfShape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeSequenceOfShape_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeSequenceOfShape_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeSequenceOfShape_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopTools_SequenceOfShape

        """
        return _TopTools.TopTools_DataMapOfShapeSequenceOfShape_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopTools_SequenceOfShape

        """
        return _TopTools.TopTools_DataMapOfShapeSequenceOfShape_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfShapeSequenceOfShape_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfShapeSequenceOfShape_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapOfShapeSequenceOfShape self)"""
        return _TopTools.TopTools_DataMapOfShapeSequenceOfShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapOfShapeSequenceOfShape.Assign = new_instancemethod(_TopTools.TopTools_DataMapOfShapeSequenceOfShape_Assign,None,TopTools_DataMapOfShapeSequenceOfShape)
TopTools_DataMapOfShapeSequenceOfShape.Set = new_instancemethod(_TopTools.TopTools_DataMapOfShapeSequenceOfShape_Set,None,TopTools_DataMapOfShapeSequenceOfShape)
TopTools_DataMapOfShapeSequenceOfShape.ReSize = new_instancemethod(_TopTools.TopTools_DataMapOfShapeSequenceOfShape_ReSize,None,TopTools_DataMapOfShapeSequenceOfShape)
TopTools_DataMapOfShapeSequenceOfShape.Clear = new_instancemethod(_TopTools.TopTools_DataMapOfShapeSequenceOfShape_Clear,None,TopTools_DataMapOfShapeSequenceOfShape)
TopTools_DataMapOfShapeSequenceOfShape.Bind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeSequenceOfShape_Bind,None,TopTools_DataMapOfShapeSequenceOfShape)
TopTools_DataMapOfShapeSequenceOfShape.IsBound = new_instancemethod(_TopTools.TopTools_DataMapOfShapeSequenceOfShape_IsBound,None,TopTools_DataMapOfShapeSequenceOfShape)
TopTools_DataMapOfShapeSequenceOfShape.UnBind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeSequenceOfShape_UnBind,None,TopTools_DataMapOfShapeSequenceOfShape)
TopTools_DataMapOfShapeSequenceOfShape.Find = new_instancemethod(_TopTools.TopTools_DataMapOfShapeSequenceOfShape_Find,None,TopTools_DataMapOfShapeSequenceOfShape)
TopTools_DataMapOfShapeSequenceOfShape.ChangeFind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeSequenceOfShape_ChangeFind,None,TopTools_DataMapOfShapeSequenceOfShape)
TopTools_DataMapOfShapeSequenceOfShape.Find1 = new_instancemethod(_TopTools.TopTools_DataMapOfShapeSequenceOfShape_Find1,None,TopTools_DataMapOfShapeSequenceOfShape)
TopTools_DataMapOfShapeSequenceOfShape.ChangeFind1 = new_instancemethod(_TopTools.TopTools_DataMapOfShapeSequenceOfShape_ChangeFind1,None,TopTools_DataMapOfShapeSequenceOfShape)
TopTools_DataMapOfShapeSequenceOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapOfShapeSequenceOfShape__kill_pointed,None,TopTools_DataMapOfShapeSequenceOfShape)
TopTools_DataMapOfShapeSequenceOfShape_swigregister = _TopTools.TopTools_DataMapOfShapeSequenceOfShape_swigregister
TopTools_DataMapOfShapeSequenceOfShape_swigregister(TopTools_DataMapOfShapeSequenceOfShape)

class TopTools_DataMapOfShapeShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_DataMapOfShapeShape_swiginit(self,_TopTools.new_TopTools_DataMapOfShapeShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfShapeShape &
        :rtype: TopTools_DataMapOfShapeShape

        """
        return _TopTools.TopTools_DataMapOfShapeShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_DataMapOfShapeShape &
        :rtype: TopTools_DataMapOfShapeShape

        """
        return _TopTools.TopTools_DataMapOfShapeShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfShapeShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_DataMapOfShapeShape_Clear(self, *args)

    def Bind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeShape_Bind(self, *args)

    def IsBound(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeShape_IsBound(self, *args)

    def UnBind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_DataMapOfShapeShape_UnBind(self, *args)

    def Find(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapOfShapeShape_Find(self, *args)

    def ChangeFind(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_DataMapOfShapeShape_ChangeFind(self, *args)

    def Find1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfShapeShape_Find1(self, *args)

    def ChangeFind1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_DataMapOfShapeShape_ChangeFind1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_DataMapOfShapeShape self)"""
        return _TopTools.TopTools_DataMapOfShapeShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_DataMapOfShapeShape.Assign = new_instancemethod(_TopTools.TopTools_DataMapOfShapeShape_Assign,None,TopTools_DataMapOfShapeShape)
TopTools_DataMapOfShapeShape.Set = new_instancemethod(_TopTools.TopTools_DataMapOfShapeShape_Set,None,TopTools_DataMapOfShapeShape)
TopTools_DataMapOfShapeShape.ReSize = new_instancemethod(_TopTools.TopTools_DataMapOfShapeShape_ReSize,None,TopTools_DataMapOfShapeShape)
TopTools_DataMapOfShapeShape.Clear = new_instancemethod(_TopTools.TopTools_DataMapOfShapeShape_Clear,None,TopTools_DataMapOfShapeShape)
TopTools_DataMapOfShapeShape.Bind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeShape_Bind,None,TopTools_DataMapOfShapeShape)
TopTools_DataMapOfShapeShape.IsBound = new_instancemethod(_TopTools.TopTools_DataMapOfShapeShape_IsBound,None,TopTools_DataMapOfShapeShape)
TopTools_DataMapOfShapeShape.UnBind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeShape_UnBind,None,TopTools_DataMapOfShapeShape)
TopTools_DataMapOfShapeShape.Find = new_instancemethod(_TopTools.TopTools_DataMapOfShapeShape_Find,None,TopTools_DataMapOfShapeShape)
TopTools_DataMapOfShapeShape.ChangeFind = new_instancemethod(_TopTools.TopTools_DataMapOfShapeShape_ChangeFind,None,TopTools_DataMapOfShapeShape)
TopTools_DataMapOfShapeShape.Find1 = new_instancemethod(_TopTools.TopTools_DataMapOfShapeShape_Find1,None,TopTools_DataMapOfShapeShape)
TopTools_DataMapOfShapeShape.ChangeFind1 = new_instancemethod(_TopTools.TopTools_DataMapOfShapeShape_ChangeFind1,None,TopTools_DataMapOfShapeShape)
TopTools_DataMapOfShapeShape._kill_pointed = new_instancemethod(_TopTools.TopTools_DataMapOfShapeShape__kill_pointed,None,TopTools_DataMapOfShapeShape)
TopTools_DataMapOfShapeShape_swigregister = _TopTools.TopTools_DataMapOfShapeShape_swigregister
TopTools_DataMapOfShapeShape_swigregister(TopTools_DataMapOfShapeShape)

class TopTools_HArray1OfListOfShape(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: TopTools_ListOfShape &
        :rtype: None

        """
        _TopTools.TopTools_HArray1OfListOfShape_swiginit(self,_TopTools.new_TopTools_HArray1OfListOfShape(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_HArray1OfListOfShape_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HArray1OfListOfShape_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HArray1OfListOfShape_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HArray1OfListOfShape_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_HArray1OfListOfShape_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_HArray1OfListOfShape_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_HArray1OfListOfShape_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TopTools_Array1OfListOfShape

        """
        return _TopTools.TopTools_HArray1OfListOfShape_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TopTools_Array1OfListOfShape

        """
        return _TopTools.TopTools_HArray1OfListOfShape_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_HArray1OfListOfShape self)"""
        return _TopTools.TopTools_HArray1OfListOfShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_HArray1OfListOfShape self) -> Handle_TopTools_HArray1OfListOfShape"""
        return _TopTools.TopTools_HArray1OfListOfShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_HArray1OfListOfShape.Init = new_instancemethod(_TopTools.TopTools_HArray1OfListOfShape_Init,None,TopTools_HArray1OfListOfShape)
TopTools_HArray1OfListOfShape.Length = new_instancemethod(_TopTools.TopTools_HArray1OfListOfShape_Length,None,TopTools_HArray1OfListOfShape)
TopTools_HArray1OfListOfShape.Lower = new_instancemethod(_TopTools.TopTools_HArray1OfListOfShape_Lower,None,TopTools_HArray1OfListOfShape)
TopTools_HArray1OfListOfShape.Upper = new_instancemethod(_TopTools.TopTools_HArray1OfListOfShape_Upper,None,TopTools_HArray1OfListOfShape)
TopTools_HArray1OfListOfShape.SetValue = new_instancemethod(_TopTools.TopTools_HArray1OfListOfShape_SetValue,None,TopTools_HArray1OfListOfShape)
TopTools_HArray1OfListOfShape.Value = new_instancemethod(_TopTools.TopTools_HArray1OfListOfShape_Value,None,TopTools_HArray1OfListOfShape)
TopTools_HArray1OfListOfShape.ChangeValue = new_instancemethod(_TopTools.TopTools_HArray1OfListOfShape_ChangeValue,None,TopTools_HArray1OfListOfShape)
TopTools_HArray1OfListOfShape.Array1 = new_instancemethod(_TopTools.TopTools_HArray1OfListOfShape_Array1,None,TopTools_HArray1OfListOfShape)
TopTools_HArray1OfListOfShape.ChangeArray1 = new_instancemethod(_TopTools.TopTools_HArray1OfListOfShape_ChangeArray1,None,TopTools_HArray1OfListOfShape)
TopTools_HArray1OfListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_HArray1OfListOfShape__kill_pointed,None,TopTools_HArray1OfListOfShape)
TopTools_HArray1OfListOfShape.GetHandle = new_instancemethod(_TopTools.TopTools_HArray1OfListOfShape_GetHandle,None,TopTools_HArray1OfListOfShape)
TopTools_HArray1OfListOfShape_swigregister = _TopTools.TopTools_HArray1OfListOfShape_swigregister
TopTools_HArray1OfListOfShape_swigregister(TopTools_HArray1OfListOfShape)

class Handle_TopTools_HArray1OfListOfShape(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_HArray1OfListOfShape_swiginit(self,_TopTools.new_Handle_TopTools_HArray1OfListOfShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_HArray1OfListOfShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_HArray1OfListOfShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_HArray1OfListOfShape_Nullify,None,Handle_TopTools_HArray1OfListOfShape)
Handle_TopTools_HArray1OfListOfShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_HArray1OfListOfShape_IsNull,None,Handle_TopTools_HArray1OfListOfShape)
Handle_TopTools_HArray1OfListOfShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_HArray1OfListOfShape_GetObject,None,Handle_TopTools_HArray1OfListOfShape)
Handle_TopTools_HArray1OfListOfShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_HArray1OfListOfShape__kill_pointed,None,Handle_TopTools_HArray1OfListOfShape)
Handle_TopTools_HArray1OfListOfShape_swigregister = _TopTools.Handle_TopTools_HArray1OfListOfShape_swigregister
Handle_TopTools_HArray1OfListOfShape_swigregister(Handle_TopTools_HArray1OfListOfShape)

def Handle_TopTools_HArray1OfListOfShape_DownCast(*args):
  return _TopTools.Handle_TopTools_HArray1OfListOfShape_DownCast(*args)
Handle_TopTools_HArray1OfListOfShape_DownCast = _TopTools.Handle_TopTools_HArray1OfListOfShape_DownCast

class TopTools_HArray1OfShape(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :rtype: None

        :param Low:
        :type Low: int
        :param Up:
        :type Up: int
        :param V:
        :type V: TopoDS_Shape &
        :rtype: None

        """
        _TopTools.TopTools_HArray1OfShape_swiginit(self,_TopTools.new_TopTools_HArray1OfShape(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_HArray1OfShape_Init(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HArray1OfShape_Length(self, *args)

    def Lower(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HArray1OfShape_Lower(self, *args)

    def Upper(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HArray1OfShape_Upper(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param Value:
        :type Value: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_HArray1OfShape_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_HArray1OfShape_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_HArray1OfShape_ChangeValue(self, *args)

    def Array1(self, *args):
        """
        :rtype: TopTools_Array1OfShape

        """
        return _TopTools.TopTools_HArray1OfShape_Array1(self, *args)

    def ChangeArray1(self, *args):
        """
        :rtype: TopTools_Array1OfShape

        """
        return _TopTools.TopTools_HArray1OfShape_ChangeArray1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_HArray1OfShape self)"""
        return _TopTools.TopTools_HArray1OfShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_HArray1OfShape self) -> Handle_TopTools_HArray1OfShape"""
        return _TopTools.TopTools_HArray1OfShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_HArray1OfShape.Init = new_instancemethod(_TopTools.TopTools_HArray1OfShape_Init,None,TopTools_HArray1OfShape)
TopTools_HArray1OfShape.Length = new_instancemethod(_TopTools.TopTools_HArray1OfShape_Length,None,TopTools_HArray1OfShape)
TopTools_HArray1OfShape.Lower = new_instancemethod(_TopTools.TopTools_HArray1OfShape_Lower,None,TopTools_HArray1OfShape)
TopTools_HArray1OfShape.Upper = new_instancemethod(_TopTools.TopTools_HArray1OfShape_Upper,None,TopTools_HArray1OfShape)
TopTools_HArray1OfShape.SetValue = new_instancemethod(_TopTools.TopTools_HArray1OfShape_SetValue,None,TopTools_HArray1OfShape)
TopTools_HArray1OfShape.Value = new_instancemethod(_TopTools.TopTools_HArray1OfShape_Value,None,TopTools_HArray1OfShape)
TopTools_HArray1OfShape.ChangeValue = new_instancemethod(_TopTools.TopTools_HArray1OfShape_ChangeValue,None,TopTools_HArray1OfShape)
TopTools_HArray1OfShape.Array1 = new_instancemethod(_TopTools.TopTools_HArray1OfShape_Array1,None,TopTools_HArray1OfShape)
TopTools_HArray1OfShape.ChangeArray1 = new_instancemethod(_TopTools.TopTools_HArray1OfShape_ChangeArray1,None,TopTools_HArray1OfShape)
TopTools_HArray1OfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_HArray1OfShape__kill_pointed,None,TopTools_HArray1OfShape)
TopTools_HArray1OfShape.GetHandle = new_instancemethod(_TopTools.TopTools_HArray1OfShape_GetHandle,None,TopTools_HArray1OfShape)
TopTools_HArray1OfShape_swigregister = _TopTools.TopTools_HArray1OfShape_swigregister
TopTools_HArray1OfShape_swigregister(TopTools_HArray1OfShape)

class Handle_TopTools_HArray1OfShape(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_HArray1OfShape_swiginit(self,_TopTools.new_Handle_TopTools_HArray1OfShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_HArray1OfShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_HArray1OfShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_HArray1OfShape_Nullify,None,Handle_TopTools_HArray1OfShape)
Handle_TopTools_HArray1OfShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_HArray1OfShape_IsNull,None,Handle_TopTools_HArray1OfShape)
Handle_TopTools_HArray1OfShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_HArray1OfShape_GetObject,None,Handle_TopTools_HArray1OfShape)
Handle_TopTools_HArray1OfShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_HArray1OfShape__kill_pointed,None,Handle_TopTools_HArray1OfShape)
Handle_TopTools_HArray1OfShape_swigregister = _TopTools.Handle_TopTools_HArray1OfShape_swigregister
Handle_TopTools_HArray1OfShape_swigregister(Handle_TopTools_HArray1OfShape)

def Handle_TopTools_HArray1OfShape_DownCast(*args):
  return _TopTools.Handle_TopTools_HArray1OfShape_DownCast(*args)
Handle_TopTools_HArray1OfShape_DownCast = _TopTools.Handle_TopTools_HArray1OfShape_DownCast

class TopTools_HArray2OfShape(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :rtype: None

        :param R1:
        :type R1: int
        :param R2:
        :type R2: int
        :param C1:
        :type C1: int
        :param C2:
        :type C2: int
        :param V:
        :type V: TopoDS_Shape &
        :rtype: None

        """
        _TopTools.TopTools_HArray2OfShape_swiginit(self,_TopTools.new_TopTools_HArray2OfShape(*args))
    def Init(self, *args):
        """
        :param V:
        :type V: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_HArray2OfShape_Init(self, *args)

    def ColLength(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HArray2OfShape_ColLength(self, *args)

    def RowLength(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HArray2OfShape_RowLength(self, *args)

    def LowerCol(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HArray2OfShape_LowerCol(self, *args)

    def LowerRow(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HArray2OfShape_LowerRow(self, *args)

    def UpperCol(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HArray2OfShape_UpperCol(self, *args)

    def UpperRow(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HArray2OfShape_UpperRow(self, *args)

    def SetValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :param Value:
        :type Value: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_HArray2OfShape_SetValue(self, *args)

    def Value(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_HArray2OfShape_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param Row:
        :type Row: int
        :param Col:
        :type Col: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_HArray2OfShape_ChangeValue(self, *args)

    def Array2(self, *args):
        """
        :rtype: TopTools_Array2OfShape

        """
        return _TopTools.TopTools_HArray2OfShape_Array2(self, *args)

    def ChangeArray2(self, *args):
        """
        :rtype: TopTools_Array2OfShape

        """
        return _TopTools.TopTools_HArray2OfShape_ChangeArray2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_HArray2OfShape self)"""
        return _TopTools.TopTools_HArray2OfShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_HArray2OfShape self) -> Handle_TopTools_HArray2OfShape"""
        return _TopTools.TopTools_HArray2OfShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_HArray2OfShape.Init = new_instancemethod(_TopTools.TopTools_HArray2OfShape_Init,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape.ColLength = new_instancemethod(_TopTools.TopTools_HArray2OfShape_ColLength,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape.RowLength = new_instancemethod(_TopTools.TopTools_HArray2OfShape_RowLength,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape.LowerCol = new_instancemethod(_TopTools.TopTools_HArray2OfShape_LowerCol,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape.LowerRow = new_instancemethod(_TopTools.TopTools_HArray2OfShape_LowerRow,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape.UpperCol = new_instancemethod(_TopTools.TopTools_HArray2OfShape_UpperCol,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape.UpperRow = new_instancemethod(_TopTools.TopTools_HArray2OfShape_UpperRow,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape.SetValue = new_instancemethod(_TopTools.TopTools_HArray2OfShape_SetValue,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape.Value = new_instancemethod(_TopTools.TopTools_HArray2OfShape_Value,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape.ChangeValue = new_instancemethod(_TopTools.TopTools_HArray2OfShape_ChangeValue,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape.Array2 = new_instancemethod(_TopTools.TopTools_HArray2OfShape_Array2,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape.ChangeArray2 = new_instancemethod(_TopTools.TopTools_HArray2OfShape_ChangeArray2,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_HArray2OfShape__kill_pointed,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape.GetHandle = new_instancemethod(_TopTools.TopTools_HArray2OfShape_GetHandle,None,TopTools_HArray2OfShape)
TopTools_HArray2OfShape_swigregister = _TopTools.TopTools_HArray2OfShape_swigregister
TopTools_HArray2OfShape_swigregister(TopTools_HArray2OfShape)

class Handle_TopTools_HArray2OfShape(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_HArray2OfShape_swiginit(self,_TopTools.new_Handle_TopTools_HArray2OfShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_HArray2OfShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_HArray2OfShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_HArray2OfShape_Nullify,None,Handle_TopTools_HArray2OfShape)
Handle_TopTools_HArray2OfShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_HArray2OfShape_IsNull,None,Handle_TopTools_HArray2OfShape)
Handle_TopTools_HArray2OfShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_HArray2OfShape_GetObject,None,Handle_TopTools_HArray2OfShape)
Handle_TopTools_HArray2OfShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_HArray2OfShape__kill_pointed,None,Handle_TopTools_HArray2OfShape)
Handle_TopTools_HArray2OfShape_swigregister = _TopTools.Handle_TopTools_HArray2OfShape_swigregister
Handle_TopTools_HArray2OfShape_swigregister(Handle_TopTools_HArray2OfShape)

def Handle_TopTools_HArray2OfShape_DownCast(*args):
  return _TopTools.Handle_TopTools_HArray2OfShape_DownCast(*args)
Handle_TopTools_HArray2OfShape_DownCast = _TopTools.Handle_TopTools_HArray2OfShape_DownCast

class TopTools_HSequenceOfShape(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TopTools.TopTools_HSequenceOfShape_swiginit(self,_TopTools.new_TopTools_HSequenceOfShape(*args))
    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TopTools.TopTools_HSequenceOfShape_IsEmpty(self, *args)

    def Length(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_HSequenceOfShape_Length(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_HSequenceOfShape_Clear(self, *args)

    def Append(self, *args):
        """
        :param anItem:
        :type anItem: TopoDS_Shape &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TopTools_HSequenceOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_HSequenceOfShape_Append(self, *args)

    def Prepend(self, *args):
        """
        :param anItem:
        :type anItem: TopoDS_Shape &
        :rtype: None

        :param aSequence:
        :type aSequence: Handle_TopTools_HSequenceOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_HSequenceOfShape_Prepend(self, *args)

    def Reverse(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_HSequenceOfShape_Reverse(self, *args)

    def InsertBefore(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: TopoDS_Shape &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TopTools_HSequenceOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_HSequenceOfShape_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: TopoDS_Shape &
        :rtype: None

        :param anIndex:
        :type anIndex: int
        :param aSequence:
        :type aSequence: Handle_TopTools_HSequenceOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_HSequenceOfShape_InsertAfter(self, *args)

    def Exchange(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anOtherIndex:
        :type anOtherIndex: int
        :rtype: None

        """
        return _TopTools.TopTools_HSequenceOfShape_Exchange(self, *args)

    def Split(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: Handle_TopTools_HSequenceOfShape

        """
        return _TopTools.TopTools_HSequenceOfShape_Split(self, *args)

    def SetValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :param anItem:
        :type anItem: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_HSequenceOfShape_SetValue(self, *args)

    def Value(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_HSequenceOfShape_Value(self, *args)

    def ChangeValue(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_HSequenceOfShape_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param anIndex:
        :type anIndex: int
        :rtype: None

        :param fromIndex:
        :type fromIndex: int
        :param toIndex:
        :type toIndex: int
        :rtype: None

        """
        return _TopTools.TopTools_HSequenceOfShape_Remove(self, *args)

    def Sequence(self, *args):
        """
        :rtype: TopTools_SequenceOfShape

        """
        return _TopTools.TopTools_HSequenceOfShape_Sequence(self, *args)

    def ChangeSequence(self, *args):
        """
        :rtype: TopTools_SequenceOfShape

        """
        return _TopTools.TopTools_HSequenceOfShape_ChangeSequence(self, *args)

    def ShallowCopy(self, *args):
        """
        :rtype: Handle_TopTools_HSequenceOfShape

        """
        return _TopTools.TopTools_HSequenceOfShape_ShallowCopy(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_HSequenceOfShape self)"""
        return _TopTools.TopTools_HSequenceOfShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_HSequenceOfShape self) -> Handle_TopTools_HSequenceOfShape"""
        return _TopTools.TopTools_HSequenceOfShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_HSequenceOfShape.IsEmpty = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_IsEmpty,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.Length = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_Length,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.Clear = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_Clear,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.Append = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_Append,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.Prepend = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_Prepend,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.Reverse = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_Reverse,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.InsertBefore = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_InsertBefore,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.InsertAfter = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_InsertAfter,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.Exchange = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_Exchange,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.Split = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_Split,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.SetValue = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_SetValue,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.Value = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_Value,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.ChangeValue = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_ChangeValue,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.Remove = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_Remove,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.Sequence = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_Sequence,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.ChangeSequence = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_ChangeSequence,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.ShallowCopy = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_ShallowCopy,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_HSequenceOfShape__kill_pointed,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape.GetHandle = new_instancemethod(_TopTools.TopTools_HSequenceOfShape_GetHandle,None,TopTools_HSequenceOfShape)
TopTools_HSequenceOfShape_swigregister = _TopTools.TopTools_HSequenceOfShape_swigregister
TopTools_HSequenceOfShape_swigregister(TopTools_HSequenceOfShape)

class Handle_TopTools_HSequenceOfShape(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_HSequenceOfShape_swiginit(self,_TopTools.new_Handle_TopTools_HSequenceOfShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_HSequenceOfShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_HSequenceOfShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_HSequenceOfShape_Nullify,None,Handle_TopTools_HSequenceOfShape)
Handle_TopTools_HSequenceOfShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_HSequenceOfShape_IsNull,None,Handle_TopTools_HSequenceOfShape)
Handle_TopTools_HSequenceOfShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_HSequenceOfShape_GetObject,None,Handle_TopTools_HSequenceOfShape)
Handle_TopTools_HSequenceOfShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_HSequenceOfShape__kill_pointed,None,Handle_TopTools_HSequenceOfShape)
Handle_TopTools_HSequenceOfShape_swigregister = _TopTools.Handle_TopTools_HSequenceOfShape_swigregister
Handle_TopTools_HSequenceOfShape_swigregister(Handle_TopTools_HSequenceOfShape)

def Handle_TopTools_HSequenceOfShape_DownCast(*args):
  return _TopTools.Handle_TopTools_HSequenceOfShape_DownCast(*args)
Handle_TopTools_HSequenceOfShape_DownCast = _TopTools.Handle_TopTools_HSequenceOfShape_DownCast

class TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K1:
        :type K1: TopoDS_Shape &
        :param K2:
        :type K2: int
        :param I:
        :type I: Standard_Address &
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_swiginit(self,_TopTools.new_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress(*args))
    def Key1(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_Key1(self, *args)

    def GetKey2(self):
        """GetKey2(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress self) -> Standard_Integer"""
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_GetKey2(self)

    def SetKey2(self, *args):
        """SetKey2(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress self, Standard_Integer value)"""
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_SetKey2(self, *args)

    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_Next2(self, *args)

    def Value(self, *args):
        """
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress self)"""
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress self) -> Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress"""
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress.Key1 = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_Key1,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress.GetKey2 = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_GetKey2,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress.SetKey2 = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_SetKey2,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress.Next2 = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_Next2,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress.Value = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_Value,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress._kill_pointed = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress__kill_pointed,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress.GetHandle = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_GetHandle,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_swigregister = _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_swigregister
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_swigregister(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)

class Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_swiginit(self,_TopTools.new_Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress.Nullify = new_instancemethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_Nullify,None,Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress.IsNull = new_instancemethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_IsNull,None,Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress.GetObject = new_instancemethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_GetObject,None,Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress__kill_pointed,None,Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_swigregister = _TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_swigregister
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_swigregister(Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress)

def Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_DownCast(*args):
  return _TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_DownCast(*args)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_DownCast = _TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeAddress_DownCast

class TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K1:
        :type K1: TopoDS_Shape &
        :param K2:
        :type K2: int
        :param I:
        :type I: TopTools_ListOfShape &
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_swiginit(self,_TopTools.new_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape(*args))
    def Key1(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_Key1(self, *args)

    def GetKey2(self):
        """GetKey2(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape self) -> Standard_Integer"""
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_GetKey2(self)

    def SetKey2(self, *args):
        """SetKey2(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape self, Standard_Integer value)"""
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_SetKey2(self, *args)

    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_Next2(self, *args)

    def Value(self, *args):
        """
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape self)"""
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape self) -> Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape"""
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape.Key1 = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_Key1,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape.GetKey2 = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_GetKey2,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape.SetKey2 = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_SetKey2,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape.Next2 = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_Next2,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape.Value = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_Value,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape__kill_pointed,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape.GetHandle = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_GetHandle,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_swigregister = _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_swigregister
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_swigregister(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)

class Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_swiginit(self,_TopTools.new_Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_Nullify,None,Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_IsNull,None,Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_GetObject,None,Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape__kill_pointed,None,Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_swigregister = _TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_swigregister
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_swigregister(Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape)

def Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_DownCast(*args):
  return _TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_DownCast(*args)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_DownCast = _TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeListOfShape_DownCast

class TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K1:
        :type K1: TopoDS_Shape &
        :param K2:
        :type K2: int
        :param I:
        :type I: TopoDS_Shape &
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_swiginit(self,_TopTools.new_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape(*args))
    def Key1(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_Key1(self, *args)

    def GetKey2(self):
        """GetKey2(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape self) -> Standard_Integer"""
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_GetKey2(self)

    def SetKey2(self, *args):
        """SetKey2(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape self, Standard_Integer value)"""
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_SetKey2(self, *args)

    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_Next2(self, *args)

    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape self)"""
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape self) -> Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape"""
        return _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape.Key1 = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_Key1,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape.GetKey2 = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_GetKey2,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape.SetKey2 = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_SetKey2,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape.Next2 = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_Next2,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape.Value = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_Value,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape._kill_pointed = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape__kill_pointed,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape.GetHandle = new_instancemethod(_TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_GetHandle,None,TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_swigregister = _TopTools.TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_swigregister
TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_swigregister(TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)

class Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_swiginit(self,_TopTools.new_Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_Nullify,None,Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_IsNull,None,Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_GetObject,None,Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape__kill_pointed,None,Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_swigregister = _TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_swigregister
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_swigregister(Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape)

def Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_DownCast(*args):
  return _TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_DownCast(*args)
Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_DownCast = _TopTools.Handle_TopTools_IndexedDataMapNodeOfIndexedDataMapOfShapeShape_DownCast

class TopTools_IndexedDataMapOfShapeAddress(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_IndexedDataMapOfShapeAddress_swiginit(self,_TopTools.new_TopTools_IndexedDataMapOfShapeAddress(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_IndexedDataMapOfShapeAddress &
        :rtype: TopTools_IndexedDataMapOfShapeAddress

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_IndexedDataMapOfShapeAddress &
        :rtype: TopTools_IndexedDataMapOfShapeAddress

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_Clear(self, *args)

    def Add(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: Standard_Address &
        :rtype: int

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_Add(self, *args)

    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: TopoDS_Shape &
        :param T:
        :type T: Standard_Address &
        :rtype: None

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_Substitute(self, *args)

    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_RemoveLast(self, *args)

    def Contains(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_Contains(self, *args)

    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_FindKey(self, *args)

    def FindFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_FindFromIndex(self, *args)

    def ChangeFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_ChangeFromIndex(self, *args)

    def FindIndex(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_FindIndex(self, *args)

    def FindFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_FindFromKey(self, *args)

    def ChangeFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_ChangeFromKey(self, *args)

    def FindFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_FindFromKey1(self, *args)

    def ChangeFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress_ChangeFromKey1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_IndexedDataMapOfShapeAddress self)"""
        return _TopTools.TopTools_IndexedDataMapOfShapeAddress__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_IndexedDataMapOfShapeAddress.Assign = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_Assign,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.Set = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_Set,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.ReSize = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_ReSize,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.Clear = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_Clear,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.Add = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_Add,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.Substitute = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_Substitute,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.RemoveLast = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_RemoveLast,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.Contains = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_Contains,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.FindKey = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_FindKey,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.FindFromIndex = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_FindFromIndex,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.ChangeFromIndex = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_ChangeFromIndex,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.FindIndex = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_FindIndex,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.FindFromKey = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_FindFromKey,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.ChangeFromKey = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_ChangeFromKey,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.FindFromKey1 = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_FindFromKey1,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress.ChangeFromKey1 = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress_ChangeFromKey1,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress._kill_pointed = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeAddress__kill_pointed,None,TopTools_IndexedDataMapOfShapeAddress)
TopTools_IndexedDataMapOfShapeAddress_swigregister = _TopTools.TopTools_IndexedDataMapOfShapeAddress_swigregister
TopTools_IndexedDataMapOfShapeAddress_swigregister(TopTools_IndexedDataMapOfShapeAddress)

class TopTools_IndexedDataMapOfShapeListOfShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_swiginit(self,_TopTools.new_TopTools_IndexedDataMapOfShapeListOfShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_IndexedDataMapOfShapeListOfShape &
        :rtype: TopTools_IndexedDataMapOfShapeListOfShape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_IndexedDataMapOfShapeListOfShape &
        :rtype: TopTools_IndexedDataMapOfShapeListOfShape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_Clear(self, *args)

    def Add(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopTools_ListOfShape &
        :rtype: int

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_Add(self, *args)

    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: TopoDS_Shape &
        :param T:
        :type T: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_Substitute(self, *args)

    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_RemoveLast(self, *args)

    def Contains(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_Contains(self, *args)

    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_FindKey(self, *args)

    def FindFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_FindFromIndex(self, *args)

    def ChangeFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_ChangeFromIndex(self, *args)

    def FindIndex(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_FindIndex(self, *args)

    def FindFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_FindFromKey(self, *args)

    def ChangeFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopTools_ListOfShape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_ChangeFromKey(self, *args)

    def FindFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_FindFromKey1(self, *args)

    def ChangeFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_ChangeFromKey1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_IndexedDataMapOfShapeListOfShape self)"""
        return _TopTools.TopTools_IndexedDataMapOfShapeListOfShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_IndexedDataMapOfShapeListOfShape.Assign = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_Assign,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.Set = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_Set,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.ReSize = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_ReSize,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.Clear = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_Clear,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.Add = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_Add,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.Substitute = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_Substitute,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.RemoveLast = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_RemoveLast,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.Contains = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_Contains,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.FindKey = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_FindKey,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.FindFromIndex = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_FindFromIndex,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.ChangeFromIndex = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_ChangeFromIndex,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.FindIndex = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_FindIndex,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.FindFromKey = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_FindFromKey,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.ChangeFromKey = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_ChangeFromKey,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.FindFromKey1 = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_FindFromKey1,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape.ChangeFromKey1 = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape_ChangeFromKey1,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeListOfShape__kill_pointed,None,TopTools_IndexedDataMapOfShapeListOfShape)
TopTools_IndexedDataMapOfShapeListOfShape_swigregister = _TopTools.TopTools_IndexedDataMapOfShapeListOfShape_swigregister
TopTools_IndexedDataMapOfShapeListOfShape_swigregister(TopTools_IndexedDataMapOfShapeListOfShape)

class TopTools_IndexedDataMapOfShapeShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_IndexedDataMapOfShapeShape_swiginit(self,_TopTools.new_TopTools_IndexedDataMapOfShapeShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_IndexedDataMapOfShapeShape &
        :rtype: TopTools_IndexedDataMapOfShapeShape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_IndexedDataMapOfShapeShape &
        :rtype: TopTools_IndexedDataMapOfShapeShape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_Clear(self, *args)

    def Add(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :param I:
        :type I: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_Add(self, *args)

    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: TopoDS_Shape &
        :param T:
        :type T: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_Substitute(self, *args)

    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_RemoveLast(self, *args)

    def Contains(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_Contains(self, *args)

    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_FindKey(self, *args)

    def FindFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_FindFromIndex(self, *args)

    def ChangeFromIndex(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_ChangeFromIndex(self, *args)

    def FindIndex(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_FindIndex(self, *args)

    def FindFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_FindFromKey(self, *args)

    def ChangeFromKey(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_ChangeFromKey(self, *args)

    def FindFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_FindFromKey1(self, *args)

    def ChangeFromKey1(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: Standard_Address

        """
        return _TopTools.TopTools_IndexedDataMapOfShapeShape_ChangeFromKey1(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_IndexedDataMapOfShapeShape self)"""
        return _TopTools.TopTools_IndexedDataMapOfShapeShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_IndexedDataMapOfShapeShape.Assign = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_Assign,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.Set = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_Set,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.ReSize = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_ReSize,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.Clear = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_Clear,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.Add = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_Add,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.Substitute = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_Substitute,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.RemoveLast = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_RemoveLast,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.Contains = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_Contains,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.FindKey = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_FindKey,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.FindFromIndex = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_FindFromIndex,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.ChangeFromIndex = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_ChangeFromIndex,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.FindIndex = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_FindIndex,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.FindFromKey = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_FindFromKey,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.ChangeFromKey = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_ChangeFromKey,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.FindFromKey1 = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_FindFromKey1,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape.ChangeFromKey1 = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape_ChangeFromKey1,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape._kill_pointed = new_instancemethod(_TopTools.TopTools_IndexedDataMapOfShapeShape__kill_pointed,None,TopTools_IndexedDataMapOfShapeShape)
TopTools_IndexedDataMapOfShapeShape_swigregister = _TopTools.TopTools_IndexedDataMapOfShapeShape_swigregister
TopTools_IndexedDataMapOfShapeShape_swigregister(TopTools_IndexedDataMapOfShapeShape)

class TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K1:
        :type K1: TopoDS_Shape &
        :param K2:
        :type K2: int
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_swiginit(self,_TopTools.new_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape(*args))
    def Key1(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_Key1(self, *args)

    def GetKey2(self):
        """GetKey2(TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape self) -> Standard_Integer"""
        return _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_GetKey2(self)

    def SetKey2(self, *args):
        """SetKey2(TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape self, Standard_Integer value)"""
        return _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_SetKey2(self, *args)

    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_Next2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape self)"""
        return _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape self) -> Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape"""
        return _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape.Key1 = new_instancemethod(_TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_Key1,None,TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape)
TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape.GetKey2 = new_instancemethod(_TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_GetKey2,None,TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape)
TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape.SetKey2 = new_instancemethod(_TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_SetKey2,None,TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape)
TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape.Next2 = new_instancemethod(_TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_Next2,None,TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape)
TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape._kill_pointed = new_instancemethod(_TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape__kill_pointed,None,TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape)
TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape.GetHandle = new_instancemethod(_TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_GetHandle,None,TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape)
TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_swigregister = _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_swigregister
TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_swigregister(TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape)

class Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_swiginit(self,_TopTools.new_Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_Nullify,None,Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape)
Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_IsNull,None,Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape)
Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_GetObject,None,Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape)
Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape__kill_pointed,None,Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape)
Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_swigregister = _TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_swigregister
Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_swigregister(Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape)

def Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_DownCast(*args):
  return _TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_DownCast(*args)
Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_DownCast = _TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfOrientedShape_DownCast

class TopTools_IndexedMapNodeOfIndexedMapOfShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K1:
        :type K1: TopoDS_Shape &
        :param K2:
        :type K2: int
        :param n1:
        :type n1: TCollection_MapNodePtr &
        :param n2:
        :type n2: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape_swiginit(self,_TopTools.new_TopTools_IndexedMapNodeOfIndexedMapOfShape(*args))
    def Key1(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape_Key1(self, *args)

    def GetKey2(self):
        """GetKey2(TopTools_IndexedMapNodeOfIndexedMapOfShape self) -> Standard_Integer"""
        return _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape_GetKey2(self)

    def SetKey2(self, *args):
        """SetKey2(TopTools_IndexedMapNodeOfIndexedMapOfShape self, Standard_Integer value)"""
        return _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape_SetKey2(self, *args)

    def Next2(self, *args):
        """
        :rtype: TCollection_MapNodePtr

        """
        return _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape_Next2(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_IndexedMapNodeOfIndexedMapOfShape self)"""
        return _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_IndexedMapNodeOfIndexedMapOfShape self) -> Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape"""
        return _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_IndexedMapNodeOfIndexedMapOfShape.Key1 = new_instancemethod(_TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape_Key1,None,TopTools_IndexedMapNodeOfIndexedMapOfShape)
TopTools_IndexedMapNodeOfIndexedMapOfShape.GetKey2 = new_instancemethod(_TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape_GetKey2,None,TopTools_IndexedMapNodeOfIndexedMapOfShape)
TopTools_IndexedMapNodeOfIndexedMapOfShape.SetKey2 = new_instancemethod(_TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape_SetKey2,None,TopTools_IndexedMapNodeOfIndexedMapOfShape)
TopTools_IndexedMapNodeOfIndexedMapOfShape.Next2 = new_instancemethod(_TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape_Next2,None,TopTools_IndexedMapNodeOfIndexedMapOfShape)
TopTools_IndexedMapNodeOfIndexedMapOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape__kill_pointed,None,TopTools_IndexedMapNodeOfIndexedMapOfShape)
TopTools_IndexedMapNodeOfIndexedMapOfShape.GetHandle = new_instancemethod(_TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape_GetHandle,None,TopTools_IndexedMapNodeOfIndexedMapOfShape)
TopTools_IndexedMapNodeOfIndexedMapOfShape_swigregister = _TopTools.TopTools_IndexedMapNodeOfIndexedMapOfShape_swigregister
TopTools_IndexedMapNodeOfIndexedMapOfShape_swigregister(TopTools_IndexedMapNodeOfIndexedMapOfShape)

class Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape_swiginit(self,_TopTools.new_Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape_Nullify,None,Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape)
Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape_IsNull,None,Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape)
Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape_GetObject,None,Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape)
Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape__kill_pointed,None,Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape)
Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape_swigregister = _TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape_swigregister
Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape_swigregister(Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape)

def Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape_DownCast(*args):
  return _TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape_DownCast(*args)
Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape_DownCast = _TopTools.Handle_TopTools_IndexedMapNodeOfIndexedMapOfShape_DownCast

class TopTools_IndexedMapOfOrientedShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_IndexedMapOfOrientedShape_swiginit(self,_TopTools.new_TopTools_IndexedMapOfOrientedShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_IndexedMapOfOrientedShape &
        :rtype: TopTools_IndexedMapOfOrientedShape

        """
        return _TopTools.TopTools_IndexedMapOfOrientedShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_IndexedMapOfOrientedShape &
        :rtype: TopTools_IndexedMapOfOrientedShape

        """
        return _TopTools.TopTools_IndexedMapOfOrientedShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_IndexedMapOfOrientedShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_IndexedMapOfOrientedShape_Clear(self, *args)

    def Add(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_IndexedMapOfOrientedShape_Add(self, *args)

    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_IndexedMapOfOrientedShape_Substitute(self, *args)

    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_IndexedMapOfOrientedShape_RemoveLast(self, *args)

    def Contains(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_IndexedMapOfOrientedShape_Contains(self, *args)

    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedMapOfOrientedShape_FindKey(self, *args)

    def FindIndex(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_IndexedMapOfOrientedShape_FindIndex(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_IndexedMapOfOrientedShape self)"""
        return _TopTools.TopTools_IndexedMapOfOrientedShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_IndexedMapOfOrientedShape.Assign = new_instancemethod(_TopTools.TopTools_IndexedMapOfOrientedShape_Assign,None,TopTools_IndexedMapOfOrientedShape)
TopTools_IndexedMapOfOrientedShape.Set = new_instancemethod(_TopTools.TopTools_IndexedMapOfOrientedShape_Set,None,TopTools_IndexedMapOfOrientedShape)
TopTools_IndexedMapOfOrientedShape.ReSize = new_instancemethod(_TopTools.TopTools_IndexedMapOfOrientedShape_ReSize,None,TopTools_IndexedMapOfOrientedShape)
TopTools_IndexedMapOfOrientedShape.Clear = new_instancemethod(_TopTools.TopTools_IndexedMapOfOrientedShape_Clear,None,TopTools_IndexedMapOfOrientedShape)
TopTools_IndexedMapOfOrientedShape.Add = new_instancemethod(_TopTools.TopTools_IndexedMapOfOrientedShape_Add,None,TopTools_IndexedMapOfOrientedShape)
TopTools_IndexedMapOfOrientedShape.Substitute = new_instancemethod(_TopTools.TopTools_IndexedMapOfOrientedShape_Substitute,None,TopTools_IndexedMapOfOrientedShape)
TopTools_IndexedMapOfOrientedShape.RemoveLast = new_instancemethod(_TopTools.TopTools_IndexedMapOfOrientedShape_RemoveLast,None,TopTools_IndexedMapOfOrientedShape)
TopTools_IndexedMapOfOrientedShape.Contains = new_instancemethod(_TopTools.TopTools_IndexedMapOfOrientedShape_Contains,None,TopTools_IndexedMapOfOrientedShape)
TopTools_IndexedMapOfOrientedShape.FindKey = new_instancemethod(_TopTools.TopTools_IndexedMapOfOrientedShape_FindKey,None,TopTools_IndexedMapOfOrientedShape)
TopTools_IndexedMapOfOrientedShape.FindIndex = new_instancemethod(_TopTools.TopTools_IndexedMapOfOrientedShape_FindIndex,None,TopTools_IndexedMapOfOrientedShape)
TopTools_IndexedMapOfOrientedShape._kill_pointed = new_instancemethod(_TopTools.TopTools_IndexedMapOfOrientedShape__kill_pointed,None,TopTools_IndexedMapOfOrientedShape)
TopTools_IndexedMapOfOrientedShape_swigregister = _TopTools.TopTools_IndexedMapOfOrientedShape_swigregister
TopTools_IndexedMapOfOrientedShape_swigregister(TopTools_IndexedMapOfOrientedShape)

class TopTools_IndexedMapOfShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_IndexedMapOfShape_swiginit(self,_TopTools.new_TopTools_IndexedMapOfShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_IndexedMapOfShape &
        :rtype: TopTools_IndexedMapOfShape

        """
        return _TopTools.TopTools_IndexedMapOfShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_IndexedMapOfShape &
        :rtype: TopTools_IndexedMapOfShape

        """
        return _TopTools.TopTools_IndexedMapOfShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_IndexedMapOfShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_IndexedMapOfShape_Clear(self, *args)

    def Add(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_IndexedMapOfShape_Add(self, *args)

    def Substitute(self, *args):
        """
        :param I:
        :type I: int
        :param K:
        :type K: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_IndexedMapOfShape_Substitute(self, *args)

    def RemoveLast(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_IndexedMapOfShape_RemoveLast(self, *args)

    def Contains(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_IndexedMapOfShape_Contains(self, *args)

    def FindKey(self, *args):
        """
        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_IndexedMapOfShape_FindKey(self, *args)

    def FindIndex(self, *args):
        """
        :param K:
        :type K: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_IndexedMapOfShape_FindIndex(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_IndexedMapOfShape self)"""
        return _TopTools.TopTools_IndexedMapOfShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_IndexedMapOfShape.Assign = new_instancemethod(_TopTools.TopTools_IndexedMapOfShape_Assign,None,TopTools_IndexedMapOfShape)
TopTools_IndexedMapOfShape.Set = new_instancemethod(_TopTools.TopTools_IndexedMapOfShape_Set,None,TopTools_IndexedMapOfShape)
TopTools_IndexedMapOfShape.ReSize = new_instancemethod(_TopTools.TopTools_IndexedMapOfShape_ReSize,None,TopTools_IndexedMapOfShape)
TopTools_IndexedMapOfShape.Clear = new_instancemethod(_TopTools.TopTools_IndexedMapOfShape_Clear,None,TopTools_IndexedMapOfShape)
TopTools_IndexedMapOfShape.Add = new_instancemethod(_TopTools.TopTools_IndexedMapOfShape_Add,None,TopTools_IndexedMapOfShape)
TopTools_IndexedMapOfShape.Substitute = new_instancemethod(_TopTools.TopTools_IndexedMapOfShape_Substitute,None,TopTools_IndexedMapOfShape)
TopTools_IndexedMapOfShape.RemoveLast = new_instancemethod(_TopTools.TopTools_IndexedMapOfShape_RemoveLast,None,TopTools_IndexedMapOfShape)
TopTools_IndexedMapOfShape.Contains = new_instancemethod(_TopTools.TopTools_IndexedMapOfShape_Contains,None,TopTools_IndexedMapOfShape)
TopTools_IndexedMapOfShape.FindKey = new_instancemethod(_TopTools.TopTools_IndexedMapOfShape_FindKey,None,TopTools_IndexedMapOfShape)
TopTools_IndexedMapOfShape.FindIndex = new_instancemethod(_TopTools.TopTools_IndexedMapOfShape_FindIndex,None,TopTools_IndexedMapOfShape)
TopTools_IndexedMapOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_IndexedMapOfShape__kill_pointed,None,TopTools_IndexedMapOfShape)
TopTools_IndexedMapOfShape_swigregister = _TopTools.TopTools_IndexedMapOfShape_swigregister
TopTools_IndexedMapOfShape_swigregister(TopTools_IndexedMapOfShape)

class TopTools_ListIteratorOfListOfShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param L:
        :type L: TopTools_ListOfShape &
        :rtype: None

        """
        _TopTools.TopTools_ListIteratorOfListOfShape_swiginit(self,_TopTools.new_TopTools_ListIteratorOfListOfShape(*args))
    def Initialize(self, *args):
        """
        :param L:
        :type L: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_ListIteratorOfListOfShape_Initialize(self, *args)

    def More(self, *args):
        """
        :rtype: bool

        """
        return _TopTools.TopTools_ListIteratorOfListOfShape_More(self, *args)

    def Next(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_ListIteratorOfListOfShape_Next(self, *args)

    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_ListIteratorOfListOfShape_Value(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_ListIteratorOfListOfShape.Initialize = new_instancemethod(_TopTools.TopTools_ListIteratorOfListOfShape_Initialize,None,TopTools_ListIteratorOfListOfShape)
TopTools_ListIteratorOfListOfShape.More = new_instancemethod(_TopTools.TopTools_ListIteratorOfListOfShape_More,None,TopTools_ListIteratorOfListOfShape)
TopTools_ListIteratorOfListOfShape.Next = new_instancemethod(_TopTools.TopTools_ListIteratorOfListOfShape_Next,None,TopTools_ListIteratorOfListOfShape)
TopTools_ListIteratorOfListOfShape.Value = new_instancemethod(_TopTools.TopTools_ListIteratorOfListOfShape_Value,None,TopTools_ListIteratorOfListOfShape)
TopTools_ListIteratorOfListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_ListIteratorOfListOfShape__kill_pointed,None,TopTools_ListIteratorOfListOfShape)
TopTools_ListIteratorOfListOfShape_swigregister = _TopTools.TopTools_ListIteratorOfListOfShape_swigregister
TopTools_ListIteratorOfListOfShape_swigregister(TopTools_ListIteratorOfListOfShape)

class TopTools_ListNodeOfListOfShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: TopoDS_Shape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_ListNodeOfListOfShape_swiginit(self,_TopTools.new_TopTools_ListNodeOfListOfShape(*args))
    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_ListNodeOfListOfShape_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_ListNodeOfListOfShape self)"""
        return _TopTools.TopTools_ListNodeOfListOfShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_ListNodeOfListOfShape self) -> Handle_TopTools_ListNodeOfListOfShape"""
        return _TopTools.TopTools_ListNodeOfListOfShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_ListNodeOfListOfShape.Value = new_instancemethod(_TopTools.TopTools_ListNodeOfListOfShape_Value,None,TopTools_ListNodeOfListOfShape)
TopTools_ListNodeOfListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_ListNodeOfListOfShape__kill_pointed,None,TopTools_ListNodeOfListOfShape)
TopTools_ListNodeOfListOfShape.GetHandle = new_instancemethod(_TopTools.TopTools_ListNodeOfListOfShape_GetHandle,None,TopTools_ListNodeOfListOfShape)
TopTools_ListNodeOfListOfShape_swigregister = _TopTools.TopTools_ListNodeOfListOfShape_swigregister
TopTools_ListNodeOfListOfShape_swigregister(TopTools_ListNodeOfListOfShape)

class Handle_TopTools_ListNodeOfListOfShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_ListNodeOfListOfShape_swiginit(self,_TopTools.new_Handle_TopTools_ListNodeOfListOfShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_ListNodeOfListOfShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_ListNodeOfListOfShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_ListNodeOfListOfShape_Nullify,None,Handle_TopTools_ListNodeOfListOfShape)
Handle_TopTools_ListNodeOfListOfShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_ListNodeOfListOfShape_IsNull,None,Handle_TopTools_ListNodeOfListOfShape)
Handle_TopTools_ListNodeOfListOfShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_ListNodeOfListOfShape_GetObject,None,Handle_TopTools_ListNodeOfListOfShape)
Handle_TopTools_ListNodeOfListOfShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_ListNodeOfListOfShape__kill_pointed,None,Handle_TopTools_ListNodeOfListOfShape)
Handle_TopTools_ListNodeOfListOfShape_swigregister = _TopTools.Handle_TopTools_ListNodeOfListOfShape_swigregister
Handle_TopTools_ListNodeOfListOfShape_swigregister(Handle_TopTools_ListNodeOfListOfShape)

def Handle_TopTools_ListNodeOfListOfShape_DownCast(*args):
  return _TopTools.Handle_TopTools_ListNodeOfListOfShape_DownCast(*args)
Handle_TopTools_ListNodeOfListOfShape_DownCast = _TopTools.Handle_TopTools_ListNodeOfListOfShape_DownCast

class TopTools_ListOfShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TopTools.TopTools_ListOfShape_swiginit(self,_TopTools.new_TopTools_ListOfShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_ListOfShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_ListOfShape_Set(self, *args)

    def Extent(self, *args):
        """
        :rtype: int

        """
        return _TopTools.TopTools_ListOfShape_Extent(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_ListOfShape_Clear(self, *args)

    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _TopTools.TopTools_ListOfShape_IsEmpty(self, *args)

    def Prepend(self, *args):
        """
        :param I:
        :type I: TopoDS_Shape &
        :rtype: None

        :param I:
        :type I: TopoDS_Shape &
        :param theIt:
        :type theIt: TopTools_ListIteratorOfListOfShape &
        :rtype: None

        :param Other:
        :type Other: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_ListOfShape_Prepend(self, *args)

    def Append(self, *args):
        """
        :param I:
        :type I: TopoDS_Shape &
        :rtype: None

        :param I:
        :type I: TopoDS_Shape &
        :param theIt:
        :type theIt: TopTools_ListIteratorOfListOfShape &
        :rtype: None

        :param Other:
        :type Other: TopTools_ListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_ListOfShape_Append(self, *args)

    def First(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_ListOfShape_First(self, *args)

    def Last(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_ListOfShape_Last(self, *args)

    def RemoveFirst(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_ListOfShape_RemoveFirst(self, *args)

    def Remove(self, *args):
        """
        :param It:
        :type It: TopTools_ListIteratorOfListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_ListOfShape_Remove(self, *args)

    def InsertBefore(self, *args):
        """
        :param I:
        :type I: TopoDS_Shape &
        :param It:
        :type It: TopTools_ListIteratorOfListOfShape &
        :rtype: None

        :param Other:
        :type Other: TopTools_ListOfShape &
        :param It:
        :type It: TopTools_ListIteratorOfListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_ListOfShape_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param I:
        :type I: TopoDS_Shape &
        :param It:
        :type It: TopTools_ListIteratorOfListOfShape &
        :rtype: None

        :param Other:
        :type Other: TopTools_ListOfShape &
        :param It:
        :type It: TopTools_ListIteratorOfListOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_ListOfShape_InsertAfter(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_ListOfShape.Assign = new_instancemethod(_TopTools.TopTools_ListOfShape_Assign,None,TopTools_ListOfShape)
TopTools_ListOfShape.Set = new_instancemethod(_TopTools.TopTools_ListOfShape_Set,None,TopTools_ListOfShape)
TopTools_ListOfShape.Extent = new_instancemethod(_TopTools.TopTools_ListOfShape_Extent,None,TopTools_ListOfShape)
TopTools_ListOfShape.Clear = new_instancemethod(_TopTools.TopTools_ListOfShape_Clear,None,TopTools_ListOfShape)
TopTools_ListOfShape.IsEmpty = new_instancemethod(_TopTools.TopTools_ListOfShape_IsEmpty,None,TopTools_ListOfShape)
TopTools_ListOfShape.Prepend = new_instancemethod(_TopTools.TopTools_ListOfShape_Prepend,None,TopTools_ListOfShape)
TopTools_ListOfShape.Append = new_instancemethod(_TopTools.TopTools_ListOfShape_Append,None,TopTools_ListOfShape)
TopTools_ListOfShape.First = new_instancemethod(_TopTools.TopTools_ListOfShape_First,None,TopTools_ListOfShape)
TopTools_ListOfShape.Last = new_instancemethod(_TopTools.TopTools_ListOfShape_Last,None,TopTools_ListOfShape)
TopTools_ListOfShape.RemoveFirst = new_instancemethod(_TopTools.TopTools_ListOfShape_RemoveFirst,None,TopTools_ListOfShape)
TopTools_ListOfShape.Remove = new_instancemethod(_TopTools.TopTools_ListOfShape_Remove,None,TopTools_ListOfShape)
TopTools_ListOfShape.InsertBefore = new_instancemethod(_TopTools.TopTools_ListOfShape_InsertBefore,None,TopTools_ListOfShape)
TopTools_ListOfShape.InsertAfter = new_instancemethod(_TopTools.TopTools_ListOfShape_InsertAfter,None,TopTools_ListOfShape)
TopTools_ListOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_ListOfShape__kill_pointed,None,TopTools_ListOfShape)
TopTools_ListOfShape_swigregister = _TopTools.TopTools_ListOfShape_swigregister
TopTools_ListOfShape_swigregister(TopTools_ListOfShape)

class TopTools_LocationSet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        * Returns an empty set of locations.

        :rtype: None

        """
        _TopTools.TopTools_LocationSet_swiginit(self,_TopTools.new_TopTools_LocationSet(*args))
    def Clear(self, *args):
        """
        * Clears the content of the set.

        :rtype: None

        """
        return _TopTools.TopTools_LocationSet_Clear(self, *args)

    def Add(self, *args):
        """
        * Incorporate a new Location in the set and returns its index.

        :param L:
        :type L: TopLoc_Location &
        :rtype: int

        """
        return _TopTools.TopTools_LocationSet_Add(self, *args)

    def Location(self, *args):
        """
        * Returns the location of index <I>.

        :param I:
        :type I: int
        :rtype: TopLoc_Location

        """
        return _TopTools.TopTools_LocationSet_Location(self, *args)

    def Index(self, *args):
        """
        * Returns the index of <L>.

        :param L:
        :type L: TopLoc_Location &
        :rtype: int

        """
        return _TopTools.TopTools_LocationSet_Index(self, *args)

    def DumpToString(self):
        """DumpToString(TopTools_LocationSet self) -> std::string"""
        return _TopTools.TopTools_LocationSet_DumpToString(self)

    def WriteToString(self):
        """WriteToString(TopTools_LocationSet self) -> std::string"""
        return _TopTools.TopTools_LocationSet_WriteToString(self)

    def ReadFromString(self, *args):
        """ReadFromString(TopTools_LocationSet self, std::string src)"""
        return _TopTools.TopTools_LocationSet_ReadFromString(self, *args)

    def SetProgress(self, *args):
        """
        :param PR:
        :type PR: Handle_Message_ProgressIndicator &
        :rtype: None

        """
        return _TopTools.TopTools_LocationSet_SetProgress(self, *args)

    def GetProgress(self, *args):
        """
        :rtype: Handle_Message_ProgressIndicator

        """
        return _TopTools.TopTools_LocationSet_GetProgress(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_LocationSet self)"""
        return _TopTools.TopTools_LocationSet__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_LocationSet.Clear = new_instancemethod(_TopTools.TopTools_LocationSet_Clear,None,TopTools_LocationSet)
TopTools_LocationSet.Add = new_instancemethod(_TopTools.TopTools_LocationSet_Add,None,TopTools_LocationSet)
TopTools_LocationSet.Location = new_instancemethod(_TopTools.TopTools_LocationSet_Location,None,TopTools_LocationSet)
TopTools_LocationSet.Index = new_instancemethod(_TopTools.TopTools_LocationSet_Index,None,TopTools_LocationSet)
TopTools_LocationSet.DumpToString = new_instancemethod(_TopTools.TopTools_LocationSet_DumpToString,None,TopTools_LocationSet)
TopTools_LocationSet.WriteToString = new_instancemethod(_TopTools.TopTools_LocationSet_WriteToString,None,TopTools_LocationSet)
TopTools_LocationSet.ReadFromString = new_instancemethod(_TopTools.TopTools_LocationSet_ReadFromString,None,TopTools_LocationSet)
TopTools_LocationSet.SetProgress = new_instancemethod(_TopTools.TopTools_LocationSet_SetProgress,None,TopTools_LocationSet)
TopTools_LocationSet.GetProgress = new_instancemethod(_TopTools.TopTools_LocationSet_GetProgress,None,TopTools_LocationSet)
TopTools_LocationSet._kill_pointed = new_instancemethod(_TopTools.TopTools_LocationSet__kill_pointed,None,TopTools_LocationSet)
TopTools_LocationSet_swigregister = _TopTools.TopTools_LocationSet_swigregister
TopTools_LocationSet_swigregister(TopTools_LocationSet)

class TopTools_MapIteratorOfMapOfOrientedShape(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TopTools_MapOfOrientedShape &
        :rtype: None

        """
        _TopTools.TopTools_MapIteratorOfMapOfOrientedShape_swiginit(self,_TopTools.new_TopTools_MapIteratorOfMapOfOrientedShape(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_MapOfOrientedShape &
        :rtype: None

        """
        return _TopTools.TopTools_MapIteratorOfMapOfOrientedShape_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_MapIteratorOfMapOfOrientedShape_Key(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_MapIteratorOfMapOfOrientedShape.Initialize = new_instancemethod(_TopTools.TopTools_MapIteratorOfMapOfOrientedShape_Initialize,None,TopTools_MapIteratorOfMapOfOrientedShape)
TopTools_MapIteratorOfMapOfOrientedShape.Key = new_instancemethod(_TopTools.TopTools_MapIteratorOfMapOfOrientedShape_Key,None,TopTools_MapIteratorOfMapOfOrientedShape)
TopTools_MapIteratorOfMapOfOrientedShape._kill_pointed = new_instancemethod(_TopTools.TopTools_MapIteratorOfMapOfOrientedShape__kill_pointed,None,TopTools_MapIteratorOfMapOfOrientedShape)
TopTools_MapIteratorOfMapOfOrientedShape_swigregister = _TopTools.TopTools_MapIteratorOfMapOfOrientedShape_swigregister
TopTools_MapIteratorOfMapOfOrientedShape_swigregister(TopTools_MapIteratorOfMapOfOrientedShape)

class TopTools_MapIteratorOfMapOfShape(OCC.TCollection.TCollection_BasicMapIterator):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        :param aMap:
        :type aMap: TopTools_MapOfShape &
        :rtype: None

        """
        _TopTools.TopTools_MapIteratorOfMapOfShape_swiginit(self,_TopTools.new_TopTools_MapIteratorOfMapOfShape(*args))
    def Initialize(self, *args):
        """
        :param aMap:
        :type aMap: TopTools_MapOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_MapIteratorOfMapOfShape_Initialize(self, *args)

    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_MapIteratorOfMapOfShape_Key(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_MapIteratorOfMapOfShape.Initialize = new_instancemethod(_TopTools.TopTools_MapIteratorOfMapOfShape_Initialize,None,TopTools_MapIteratorOfMapOfShape)
TopTools_MapIteratorOfMapOfShape.Key = new_instancemethod(_TopTools.TopTools_MapIteratorOfMapOfShape_Key,None,TopTools_MapIteratorOfMapOfShape)
TopTools_MapIteratorOfMapOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_MapIteratorOfMapOfShape__kill_pointed,None,TopTools_MapIteratorOfMapOfShape)
TopTools_MapIteratorOfMapOfShape_swigregister = _TopTools.TopTools_MapIteratorOfMapOfShape_swigregister
TopTools_MapIteratorOfMapOfShape_swigregister(TopTools_MapIteratorOfMapOfShape)

class TopTools_MapOfOrientedShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_MapOfOrientedShape_swiginit(self,_TopTools.new_TopTools_MapOfOrientedShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_MapOfOrientedShape &
        :rtype: TopTools_MapOfOrientedShape

        """
        return _TopTools.TopTools_MapOfOrientedShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_MapOfOrientedShape &
        :rtype: TopTools_MapOfOrientedShape

        """
        return _TopTools.TopTools_MapOfOrientedShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_MapOfOrientedShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_MapOfOrientedShape_Clear(self, *args)

    def Add(self, *args):
        """
        :param aKey:
        :type aKey: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_MapOfOrientedShape_Add(self, *args)

    def Contains(self, *args):
        """
        :param aKey:
        :type aKey: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_MapOfOrientedShape_Contains(self, *args)

    def Remove(self, *args):
        """
        :param aKey:
        :type aKey: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_MapOfOrientedShape_Remove(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_MapOfOrientedShape self)"""
        return _TopTools.TopTools_MapOfOrientedShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_MapOfOrientedShape.Assign = new_instancemethod(_TopTools.TopTools_MapOfOrientedShape_Assign,None,TopTools_MapOfOrientedShape)
TopTools_MapOfOrientedShape.Set = new_instancemethod(_TopTools.TopTools_MapOfOrientedShape_Set,None,TopTools_MapOfOrientedShape)
TopTools_MapOfOrientedShape.ReSize = new_instancemethod(_TopTools.TopTools_MapOfOrientedShape_ReSize,None,TopTools_MapOfOrientedShape)
TopTools_MapOfOrientedShape.Clear = new_instancemethod(_TopTools.TopTools_MapOfOrientedShape_Clear,None,TopTools_MapOfOrientedShape)
TopTools_MapOfOrientedShape.Add = new_instancemethod(_TopTools.TopTools_MapOfOrientedShape_Add,None,TopTools_MapOfOrientedShape)
TopTools_MapOfOrientedShape.Contains = new_instancemethod(_TopTools.TopTools_MapOfOrientedShape_Contains,None,TopTools_MapOfOrientedShape)
TopTools_MapOfOrientedShape.Remove = new_instancemethod(_TopTools.TopTools_MapOfOrientedShape_Remove,None,TopTools_MapOfOrientedShape)
TopTools_MapOfOrientedShape._kill_pointed = new_instancemethod(_TopTools.TopTools_MapOfOrientedShape__kill_pointed,None,TopTools_MapOfOrientedShape)
TopTools_MapOfOrientedShape_swigregister = _TopTools.TopTools_MapOfOrientedShape_swigregister
TopTools_MapOfOrientedShape_swigregister(TopTools_MapOfOrientedShape)

class TopTools_MapOfShape(OCC.TCollection.TCollection_BasicMap):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param NbBuckets: default value is 1
        :type NbBuckets: int
        :rtype: None

        """
        _TopTools.TopTools_MapOfShape_swiginit(self,_TopTools.new_TopTools_MapOfShape(*args))
    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_MapOfShape &
        :rtype: TopTools_MapOfShape

        """
        return _TopTools.TopTools_MapOfShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_MapOfShape &
        :rtype: TopTools_MapOfShape

        """
        return _TopTools.TopTools_MapOfShape_Set(self, *args)

    def ReSize(self, *args):
        """
        :param NbBuckets:
        :type NbBuckets: int
        :rtype: None

        """
        return _TopTools.TopTools_MapOfShape_ReSize(self, *args)

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_MapOfShape_Clear(self, *args)

    def Add(self, *args):
        """
        :param aKey:
        :type aKey: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_MapOfShape_Add(self, *args)

    def Contains(self, *args):
        """
        :param aKey:
        :type aKey: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_MapOfShape_Contains(self, *args)

    def Remove(self, *args):
        """
        :param aKey:
        :type aKey: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_MapOfShape_Remove(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_MapOfShape self)"""
        return _TopTools.TopTools_MapOfShape__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_MapOfShape.Assign = new_instancemethod(_TopTools.TopTools_MapOfShape_Assign,None,TopTools_MapOfShape)
TopTools_MapOfShape.Set = new_instancemethod(_TopTools.TopTools_MapOfShape_Set,None,TopTools_MapOfShape)
TopTools_MapOfShape.ReSize = new_instancemethod(_TopTools.TopTools_MapOfShape_ReSize,None,TopTools_MapOfShape)
TopTools_MapOfShape.Clear = new_instancemethod(_TopTools.TopTools_MapOfShape_Clear,None,TopTools_MapOfShape)
TopTools_MapOfShape.Add = new_instancemethod(_TopTools.TopTools_MapOfShape_Add,None,TopTools_MapOfShape)
TopTools_MapOfShape.Contains = new_instancemethod(_TopTools.TopTools_MapOfShape_Contains,None,TopTools_MapOfShape)
TopTools_MapOfShape.Remove = new_instancemethod(_TopTools.TopTools_MapOfShape_Remove,None,TopTools_MapOfShape)
TopTools_MapOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_MapOfShape__kill_pointed,None,TopTools_MapOfShape)
TopTools_MapOfShape_swigregister = _TopTools.TopTools_MapOfShape_swigregister
TopTools_MapOfShape_swigregister(TopTools_MapOfShape)

class TopTools_MutexForShapeProvider(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        * Constructor

        :rtype: None

        """
        _TopTools.TopTools_MutexForShapeProvider_swiginit(self,_TopTools.new_TopTools_MutexForShapeProvider(*args))
    def CreateMutexesForSubShapes(self, *args):
        """
        * Creates and associates mutexes with each sub-shape of type theType in theShape.

        :param theShape:
        :type theShape: TopoDS_Shape &
        :param theType:
        :type theType: TopAbs_ShapeEnum
        :rtype: None

        """
        return _TopTools.TopTools_MutexForShapeProvider_CreateMutexesForSubShapes(self, *args)

    def CreateMutexForShape(self, *args):
        """
        * Creates and associates mutex with theShape

        :param theShape:
        :type theShape: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_MutexForShapeProvider_CreateMutexForShape(self, *args)

    def GetMutex(self, *args):
        """
        * Returns pointer to mutex associated with theShape. In case when mutex not found returns NULL.

        :param theShape:
        :type theShape: TopoDS_Shape &
        :rtype: Standard_Mutex *

        """
        return _TopTools.TopTools_MutexForShapeProvider_GetMutex(self, *args)

    def RemoveAllMutexes(self, *args):
        """
        * Removes all mutexes

        :rtype: None

        """
        return _TopTools.TopTools_MutexForShapeProvider_RemoveAllMutexes(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_MutexForShapeProvider.CreateMutexesForSubShapes = new_instancemethod(_TopTools.TopTools_MutexForShapeProvider_CreateMutexesForSubShapes,None,TopTools_MutexForShapeProvider)
TopTools_MutexForShapeProvider.CreateMutexForShape = new_instancemethod(_TopTools.TopTools_MutexForShapeProvider_CreateMutexForShape,None,TopTools_MutexForShapeProvider)
TopTools_MutexForShapeProvider.GetMutex = new_instancemethod(_TopTools.TopTools_MutexForShapeProvider_GetMutex,None,TopTools_MutexForShapeProvider)
TopTools_MutexForShapeProvider.RemoveAllMutexes = new_instancemethod(_TopTools.TopTools_MutexForShapeProvider_RemoveAllMutexes,None,TopTools_MutexForShapeProvider)
TopTools_MutexForShapeProvider._kill_pointed = new_instancemethod(_TopTools.TopTools_MutexForShapeProvider__kill_pointed,None,TopTools_MutexForShapeProvider)
TopTools_MutexForShapeProvider_swigregister = _TopTools.TopTools_MutexForShapeProvider_swigregister
TopTools_MutexForShapeProvider_swigregister(TopTools_MutexForShapeProvider)

class TopTools_OrientedShapeMapHasher(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def HashCode(*args):
        """
        * Returns a HasCode value for the Key <K> in the range 0..Upper.

        :param S:
        :type S: TopoDS_Shape &
        :param Upper:
        :type Upper: int
        :rtype: int

        """
        return _TopTools.TopTools_OrientedShapeMapHasher_HashCode(*args)

    HashCode = staticmethod(HashCode)
    def IsEqual(*args):
        """
        * Returns True when the two keys are equal. Two same keys must have the same hashcode, the contrary is not necessary.

        :param S1:
        :type S1: TopoDS_Shape &
        :param S2:
        :type S2: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_OrientedShapeMapHasher_IsEqual(*args)

    IsEqual = staticmethod(IsEqual)
    def __init__(self): 
        _TopTools.TopTools_OrientedShapeMapHasher_swiginit(self,_TopTools.new_TopTools_OrientedShapeMapHasher())
    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_OrientedShapeMapHasher._kill_pointed = new_instancemethod(_TopTools.TopTools_OrientedShapeMapHasher__kill_pointed,None,TopTools_OrientedShapeMapHasher)
TopTools_OrientedShapeMapHasher_swigregister = _TopTools.TopTools_OrientedShapeMapHasher_swigregister
TopTools_OrientedShapeMapHasher_swigregister(TopTools_OrientedShapeMapHasher)

def TopTools_OrientedShapeMapHasher_HashCode(*args):
  """
    * Returns a HasCode value for the Key <K> in the range 0..Upper.

    :param S:
    :type S: TopoDS_Shape &
    :param Upper:
    :type Upper: int
    :rtype: int

    """
  return _TopTools.TopTools_OrientedShapeMapHasher_HashCode(*args)

def TopTools_OrientedShapeMapHasher_IsEqual(*args):
  """
    * Returns True when the two keys are equal. Two same keys must have the same hashcode, the contrary is not necessary.

    :param S1:
    :type S1: TopoDS_Shape &
    :param S2:
    :type S2: TopoDS_Shape &
    :rtype: bool

    """
  return _TopTools.TopTools_OrientedShapeMapHasher_IsEqual(*args)

class TopTools_SequenceNodeOfSequenceOfShape(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param I:
        :type I: TopoDS_Shape &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_SequenceNodeOfSequenceOfShape_swiginit(self,_TopTools.new_TopTools_SequenceNodeOfSequenceOfShape(*args))
    def Value(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_SequenceNodeOfSequenceOfShape_Value(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_SequenceNodeOfSequenceOfShape self)"""
        return _TopTools.TopTools_SequenceNodeOfSequenceOfShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_SequenceNodeOfSequenceOfShape self) -> Handle_TopTools_SequenceNodeOfSequenceOfShape"""
        return _TopTools.TopTools_SequenceNodeOfSequenceOfShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_SequenceNodeOfSequenceOfShape.Value = new_instancemethod(_TopTools.TopTools_SequenceNodeOfSequenceOfShape_Value,None,TopTools_SequenceNodeOfSequenceOfShape)
TopTools_SequenceNodeOfSequenceOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_SequenceNodeOfSequenceOfShape__kill_pointed,None,TopTools_SequenceNodeOfSequenceOfShape)
TopTools_SequenceNodeOfSequenceOfShape.GetHandle = new_instancemethod(_TopTools.TopTools_SequenceNodeOfSequenceOfShape_GetHandle,None,TopTools_SequenceNodeOfSequenceOfShape)
TopTools_SequenceNodeOfSequenceOfShape_swigregister = _TopTools.TopTools_SequenceNodeOfSequenceOfShape_swigregister
TopTools_SequenceNodeOfSequenceOfShape_swigregister(TopTools_SequenceNodeOfSequenceOfShape)

class Handle_TopTools_SequenceNodeOfSequenceOfShape(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_SequenceNodeOfSequenceOfShape_swiginit(self,_TopTools.new_Handle_TopTools_SequenceNodeOfSequenceOfShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_SequenceNodeOfSequenceOfShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_SequenceNodeOfSequenceOfShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_SequenceNodeOfSequenceOfShape_Nullify,None,Handle_TopTools_SequenceNodeOfSequenceOfShape)
Handle_TopTools_SequenceNodeOfSequenceOfShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_SequenceNodeOfSequenceOfShape_IsNull,None,Handle_TopTools_SequenceNodeOfSequenceOfShape)
Handle_TopTools_SequenceNodeOfSequenceOfShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_SequenceNodeOfSequenceOfShape_GetObject,None,Handle_TopTools_SequenceNodeOfSequenceOfShape)
Handle_TopTools_SequenceNodeOfSequenceOfShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_SequenceNodeOfSequenceOfShape__kill_pointed,None,Handle_TopTools_SequenceNodeOfSequenceOfShape)
Handle_TopTools_SequenceNodeOfSequenceOfShape_swigregister = _TopTools.Handle_TopTools_SequenceNodeOfSequenceOfShape_swigregister
Handle_TopTools_SequenceNodeOfSequenceOfShape_swigregister(Handle_TopTools_SequenceNodeOfSequenceOfShape)

def Handle_TopTools_SequenceNodeOfSequenceOfShape_DownCast(*args):
  return _TopTools.Handle_TopTools_SequenceNodeOfSequenceOfShape_DownCast(*args)
Handle_TopTools_SequenceNodeOfSequenceOfShape_DownCast = _TopTools.Handle_TopTools_SequenceNodeOfSequenceOfShape_DownCast

class TopTools_SequenceOfShape(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :rtype: None

        """
        _TopTools.TopTools_SequenceOfShape_swiginit(self,_TopTools.new_TopTools_SequenceOfShape(*args))
    def Clear(self, *args):
        """
        :rtype: None

        """
        return _TopTools.TopTools_SequenceOfShape_Clear(self, *args)

    def Assign(self, *args):
        """
        :param Other:
        :type Other: TopTools_SequenceOfShape &
        :rtype: TopTools_SequenceOfShape

        """
        return _TopTools.TopTools_SequenceOfShape_Assign(self, *args)

    def Set(self, *args):
        """
        :param Other:
        :type Other: TopTools_SequenceOfShape &
        :rtype: TopTools_SequenceOfShape

        """
        return _TopTools.TopTools_SequenceOfShape_Set(self, *args)

    def Append(self, *args):
        """
        :param T:
        :type T: TopoDS_Shape &
        :rtype: None

        :param S:
        :type S: TopTools_SequenceOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_SequenceOfShape_Append(self, *args)

    def Prepend(self, *args):
        """
        :param T:
        :type T: TopoDS_Shape &
        :rtype: None

        :param S:
        :type S: TopTools_SequenceOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_SequenceOfShape_Prepend(self, *args)

    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: TopoDS_Shape &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TopTools_SequenceOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_SequenceOfShape_InsertBefore(self, *args)

    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: TopoDS_Shape &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: TopTools_SequenceOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_SequenceOfShape_InsertAfter(self, *args)

    def First(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_SequenceOfShape_First(self, *args)

    def Last(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_SequenceOfShape_Last(self, *args)

    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: TopTools_SequenceOfShape &
        :rtype: None

        """
        return _TopTools.TopTools_SequenceOfShape_Split(self, *args)

    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_SequenceOfShape_Value(self, *args)

    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: TopoDS_Shape &
        :rtype: None

        """
        return _TopTools.TopTools_SequenceOfShape_SetValue(self, *args)

    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_SequenceOfShape_ChangeValue(self, *args)

    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _TopTools.TopTools_SequenceOfShape_Remove(self, *args)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_SequenceOfShape.Clear = new_instancemethod(_TopTools.TopTools_SequenceOfShape_Clear,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.Assign = new_instancemethod(_TopTools.TopTools_SequenceOfShape_Assign,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.Set = new_instancemethod(_TopTools.TopTools_SequenceOfShape_Set,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.Append = new_instancemethod(_TopTools.TopTools_SequenceOfShape_Append,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.Prepend = new_instancemethod(_TopTools.TopTools_SequenceOfShape_Prepend,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.InsertBefore = new_instancemethod(_TopTools.TopTools_SequenceOfShape_InsertBefore,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.InsertAfter = new_instancemethod(_TopTools.TopTools_SequenceOfShape_InsertAfter,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.First = new_instancemethod(_TopTools.TopTools_SequenceOfShape_First,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.Last = new_instancemethod(_TopTools.TopTools_SequenceOfShape_Last,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.Split = new_instancemethod(_TopTools.TopTools_SequenceOfShape_Split,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.Value = new_instancemethod(_TopTools.TopTools_SequenceOfShape_Value,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.SetValue = new_instancemethod(_TopTools.TopTools_SequenceOfShape_SetValue,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.ChangeValue = new_instancemethod(_TopTools.TopTools_SequenceOfShape_ChangeValue,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape.Remove = new_instancemethod(_TopTools.TopTools_SequenceOfShape_Remove,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_SequenceOfShape__kill_pointed,None,TopTools_SequenceOfShape)
TopTools_SequenceOfShape_swigregister = _TopTools.TopTools_SequenceOfShape_swigregister
TopTools_SequenceOfShape_swigregister(TopTools_SequenceOfShape)

class TopTools_ShapeMapHasher(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def HashCode(*args):
        """
        * Returns a HasCode value for the Key <K> in the range 0..Upper.

        :param S:
        :type S: TopoDS_Shape &
        :param Upper:
        :type Upper: int
        :rtype: int

        """
        return _TopTools.TopTools_ShapeMapHasher_HashCode(*args)

    HashCode = staticmethod(HashCode)
    def IsEqual(*args):
        """
        * Returns True when the two keys are the same. Two same keys must have the same hashcode, the contrary is not necessary.

        :param S1:
        :type S1: TopoDS_Shape &
        :param S2:
        :type S2: TopoDS_Shape &
        :rtype: bool

        """
        return _TopTools.TopTools_ShapeMapHasher_IsEqual(*args)

    IsEqual = staticmethod(IsEqual)
    def __init__(self): 
        _TopTools.TopTools_ShapeMapHasher_swiginit(self,_TopTools.new_TopTools_ShapeMapHasher())
    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_ShapeMapHasher._kill_pointed = new_instancemethod(_TopTools.TopTools_ShapeMapHasher__kill_pointed,None,TopTools_ShapeMapHasher)
TopTools_ShapeMapHasher_swigregister = _TopTools.TopTools_ShapeMapHasher_swigregister
TopTools_ShapeMapHasher_swigregister(TopTools_ShapeMapHasher)

def TopTools_ShapeMapHasher_HashCode(*args):
  """
    * Returns a HasCode value for the Key <K> in the range 0..Upper.

    :param S:
    :type S: TopoDS_Shape &
    :param Upper:
    :type Upper: int
    :rtype: int

    """
  return _TopTools.TopTools_ShapeMapHasher_HashCode(*args)

def TopTools_ShapeMapHasher_IsEqual(*args):
  """
    * Returns True when the two keys are the same. Two same keys must have the same hashcode, the contrary is not necessary.

    :param S1:
    :type S1: TopoDS_Shape &
    :param S2:
    :type S2: TopoDS_Shape &
    :rtype: bool

    """
  return _TopTools.TopTools_ShapeMapHasher_IsEqual(*args)

class TopTools_ShapeSet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        * Builds an empty ShapeSet.

        :rtype: None

        """
        _TopTools.TopTools_ShapeSet_swiginit(self,_TopTools.new_TopTools_ShapeSet(*args))
    def Delete(self, *args):
        """
        :rtype: void

        """
        return _TopTools.TopTools_ShapeSet_Delete(self, *args)

    def SetFormatNb(self, *args):
        """
        :param theFormatNb:
        :type theFormatNb: int
        :rtype: None

        """
        return _TopTools.TopTools_ShapeSet_SetFormatNb(self, *args)

    def FormatNb(self, *args):
        """
        * two formats available for the moment: First: does not write CurveOnSurface UV Points into the file  on reading calls Check() method. Second: stores CurveOnSurface UV Points. On reading format is recognized from Version string.

        :rtype: int

        """
        return _TopTools.TopTools_ShapeSet_FormatNb(self, *args)

    def Clear(self, *args):
        """
        * Clears the content of the set. This method can be redefined.

        :rtype: void

        """
        return _TopTools.TopTools_ShapeSet_Clear(self, *args)

    def Add(self, *args):
        """
        * Stores <S> and its sub-shape. Returns the index of <S>. The method AddGeometry is called on each sub-shape.

        :param S:
        :type S: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_ShapeSet_Add(self, *args)

    def Shape(self, *args):
        """
        * Returns the sub-shape of index <I>.

        :param I:
        :type I: int
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_ShapeSet_Shape(self, *args)

    def Index(self, *args):
        """
        * Returns the index of <S>.

        :param S:
        :type S: TopoDS_Shape &
        :rtype: int

        """
        return _TopTools.TopTools_ShapeSet_Index(self, *args)

    def Locations(self, *args):
        """
        :rtype: TopTools_LocationSet

        """
        return _TopTools.TopTools_ShapeSet_Locations(self, *args)

    def ChangeLocations(self, *args):
        """
        :rtype: TopTools_LocationSet

        """
        return _TopTools.TopTools_ShapeSet_ChangeLocations(self, *args)

    def DumpExtentToString(self):
        """DumpExtentToString(TopTools_ShapeSet self) -> std::string"""
        return _TopTools.TopTools_ShapeSet_DumpExtentToString(self)

    def DumpExtent(self, *args):
        """
        * Dumps the number of objects in me in the string S (Number of shapes of each type)

        :param S:
        :type S: TCollection_AsciiString &
        :rtype: None

        """
        return _TopTools.TopTools_ShapeSet_DumpExtent(self, *args)

    def DumpToString(self):
        """DumpToString(TopTools_ShapeSet self) -> std::string"""
        return _TopTools.TopTools_ShapeSet_DumpToString(self)

    def WriteToString(self):
        """WriteToString(TopTools_ShapeSet self) -> std::string"""
        return _TopTools.TopTools_ShapeSet_WriteToString(self)

    def ReadFromString(self, *args):
        """ReadFromString(TopTools_ShapeSet self, std::string src)"""
        return _TopTools.TopTools_ShapeSet_ReadFromString(self, *args)

    def Dump(self, *args):
        """
        * Dumps on <OS> the shape <S>. Dumps the orientation, the index of the TShape and the index of the Location.

        :param S:
        :type S: TopoDS_Shape &
        :param OS:
        :type OS: Standard_OStream &
        :rtype: None

        """
        return _TopTools.TopTools_ShapeSet_Dump(self, *args)

    def Write(self, *args):
        """
        * Writes on <OS> the shape <S>. Writes the orientation, the index of the TShape and the index of the Location.

        :param S:
        :type S: TopoDS_Shape &
        :param OS:
        :type OS: Standard_OStream &
        :rtype: None

        """
        return _TopTools.TopTools_ShapeSet_Write(self, *args)

    def Read(self, *args):
        """
        * Reads from <IS> a shape and returns it in S.

        :param S:
        :type S: TopoDS_Shape &
        :param IS:
        :type IS: Standard_IStream &
        :rtype: None

        """
        return _TopTools.TopTools_ShapeSet_Read(self, *args)

    def AddGeometry(self, *args):
        """
        * Stores the geometry of <S>.

        :param S:
        :type S: TopoDS_Shape &
        :rtype: void

        """
        return _TopTools.TopTools_ShapeSet_AddGeometry(self, *args)

    def DumpGeometryToString(self):
        """DumpGeometryToString(TopTools_ShapeSet self) -> std::string"""
        return _TopTools.TopTools_ShapeSet_DumpGeometryToString(self)

    def WriteGeometryToString(self):
        """WriteGeometryToString(TopTools_ShapeSet self) -> std::string"""
        return _TopTools.TopTools_ShapeSet_WriteGeometryToString(self)

    def ReadGeometryFromString(self, *args):
        """ReadGeometryFromString(TopTools_ShapeSet self, std::string src)"""
        return _TopTools.TopTools_ShapeSet_ReadGeometryFromString(self, *args)

    def DumpGeometry(self, *args):
        """
        * Dumps the geometry of <S> on the stream <OS>.

        :param S:
        :type S: TopoDS_Shape &
        :param OS:
        :type OS: Standard_OStream &
        :rtype: void

        """
        return _TopTools.TopTools_ShapeSet_DumpGeometry(self, *args)

    def WriteGeometry(self, *args):
        """
        * Writes the geometry of <S> on the stream <OS> in a format that can be read back by Read.

        :param S:
        :type S: TopoDS_Shape &
        :param OS:
        :type OS: Standard_OStream &
        :rtype: void

        """
        return _TopTools.TopTools_ShapeSet_WriteGeometry(self, *args)

    def ReadGeometry(self, *args):
        """
        * Reads the geometry of a shape of type <T> from the stream <IS> and returns it in <S>.

        :param T:
        :type T: TopAbs_ShapeEnum
        :param IS:
        :type IS: Standard_IStream &
        :param S:
        :type S: TopoDS_Shape &
        :rtype: void

        """
        return _TopTools.TopTools_ShapeSet_ReadGeometry(self, *args)

    def AddShapes(self, *args):
        """
        * Inserts the shape <S2> in the shape <S1>. This method must be redefined to use the correct builder.

        :param S1:
        :type S1: TopoDS_Shape &
        :param S2:
        :type S2: TopoDS_Shape &
        :rtype: void

        """
        return _TopTools.TopTools_ShapeSet_AddShapes(self, *args)

    def Check(self, *args):
        """
        * This method is called after each new completed shape. <T> is the type. <S> is the shape. In this class it does nothing, but it gives the opportunity in derived classes to perform extra treatment on shapes.

        :param T:
        :type T: TopAbs_ShapeEnum
        :param S:
        :type S: TopoDS_Shape &
        :rtype: void

        """
        return _TopTools.TopTools_ShapeSet_Check(self, *args)

    def NbShapes(self, *args):
        """
        * //!Returns number of shapes read from file.

        :rtype: int

        """
        return _TopTools.TopTools_ShapeSet_NbShapes(self, *args)

    def SetProgress(self, *args):
        """
        :param PR:
        :type PR: Handle_Message_ProgressIndicator &
        :rtype: None

        """
        return _TopTools.TopTools_ShapeSet_SetProgress(self, *args)

    def GetProgress(self, *args):
        """
        :rtype: Handle_Message_ProgressIndicator

        """
        return _TopTools.TopTools_ShapeSet_GetProgress(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_ShapeSet self)"""
        return _TopTools.TopTools_ShapeSet__kill_pointed(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_ShapeSet.Delete = new_instancemethod(_TopTools.TopTools_ShapeSet_Delete,None,TopTools_ShapeSet)
TopTools_ShapeSet.SetFormatNb = new_instancemethod(_TopTools.TopTools_ShapeSet_SetFormatNb,None,TopTools_ShapeSet)
TopTools_ShapeSet.FormatNb = new_instancemethod(_TopTools.TopTools_ShapeSet_FormatNb,None,TopTools_ShapeSet)
TopTools_ShapeSet.Clear = new_instancemethod(_TopTools.TopTools_ShapeSet_Clear,None,TopTools_ShapeSet)
TopTools_ShapeSet.Add = new_instancemethod(_TopTools.TopTools_ShapeSet_Add,None,TopTools_ShapeSet)
TopTools_ShapeSet.Shape = new_instancemethod(_TopTools.TopTools_ShapeSet_Shape,None,TopTools_ShapeSet)
TopTools_ShapeSet.Index = new_instancemethod(_TopTools.TopTools_ShapeSet_Index,None,TopTools_ShapeSet)
TopTools_ShapeSet.Locations = new_instancemethod(_TopTools.TopTools_ShapeSet_Locations,None,TopTools_ShapeSet)
TopTools_ShapeSet.ChangeLocations = new_instancemethod(_TopTools.TopTools_ShapeSet_ChangeLocations,None,TopTools_ShapeSet)
TopTools_ShapeSet.DumpExtentToString = new_instancemethod(_TopTools.TopTools_ShapeSet_DumpExtentToString,None,TopTools_ShapeSet)
TopTools_ShapeSet.DumpExtent = new_instancemethod(_TopTools.TopTools_ShapeSet_DumpExtent,None,TopTools_ShapeSet)
TopTools_ShapeSet.DumpToString = new_instancemethod(_TopTools.TopTools_ShapeSet_DumpToString,None,TopTools_ShapeSet)
TopTools_ShapeSet.WriteToString = new_instancemethod(_TopTools.TopTools_ShapeSet_WriteToString,None,TopTools_ShapeSet)
TopTools_ShapeSet.ReadFromString = new_instancemethod(_TopTools.TopTools_ShapeSet_ReadFromString,None,TopTools_ShapeSet)
TopTools_ShapeSet.Dump = new_instancemethod(_TopTools.TopTools_ShapeSet_Dump,None,TopTools_ShapeSet)
TopTools_ShapeSet.Write = new_instancemethod(_TopTools.TopTools_ShapeSet_Write,None,TopTools_ShapeSet)
TopTools_ShapeSet.Read = new_instancemethod(_TopTools.TopTools_ShapeSet_Read,None,TopTools_ShapeSet)
TopTools_ShapeSet.AddGeometry = new_instancemethod(_TopTools.TopTools_ShapeSet_AddGeometry,None,TopTools_ShapeSet)
TopTools_ShapeSet.DumpGeometryToString = new_instancemethod(_TopTools.TopTools_ShapeSet_DumpGeometryToString,None,TopTools_ShapeSet)
TopTools_ShapeSet.WriteGeometryToString = new_instancemethod(_TopTools.TopTools_ShapeSet_WriteGeometryToString,None,TopTools_ShapeSet)
TopTools_ShapeSet.ReadGeometryFromString = new_instancemethod(_TopTools.TopTools_ShapeSet_ReadGeometryFromString,None,TopTools_ShapeSet)
TopTools_ShapeSet.DumpGeometry = new_instancemethod(_TopTools.TopTools_ShapeSet_DumpGeometry,None,TopTools_ShapeSet)
TopTools_ShapeSet.WriteGeometry = new_instancemethod(_TopTools.TopTools_ShapeSet_WriteGeometry,None,TopTools_ShapeSet)
TopTools_ShapeSet.ReadGeometry = new_instancemethod(_TopTools.TopTools_ShapeSet_ReadGeometry,None,TopTools_ShapeSet)
TopTools_ShapeSet.AddShapes = new_instancemethod(_TopTools.TopTools_ShapeSet_AddShapes,None,TopTools_ShapeSet)
TopTools_ShapeSet.Check = new_instancemethod(_TopTools.TopTools_ShapeSet_Check,None,TopTools_ShapeSet)
TopTools_ShapeSet.NbShapes = new_instancemethod(_TopTools.TopTools_ShapeSet_NbShapes,None,TopTools_ShapeSet)
TopTools_ShapeSet.SetProgress = new_instancemethod(_TopTools.TopTools_ShapeSet_SetProgress,None,TopTools_ShapeSet)
TopTools_ShapeSet.GetProgress = new_instancemethod(_TopTools.TopTools_ShapeSet_GetProgress,None,TopTools_ShapeSet)
TopTools_ShapeSet._kill_pointed = new_instancemethod(_TopTools.TopTools_ShapeSet__kill_pointed,None,TopTools_ShapeSet)
TopTools_ShapeSet_swigregister = _TopTools.TopTools_ShapeSet_swigregister
TopTools_ShapeSet_swigregister(TopTools_ShapeSet)

class TopTools_StdMapNodeOfMapOfOrientedShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TopoDS_Shape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_StdMapNodeOfMapOfOrientedShape_swiginit(self,_TopTools.new_TopTools_StdMapNodeOfMapOfOrientedShape(*args))
    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_StdMapNodeOfMapOfOrientedShape_Key(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_StdMapNodeOfMapOfOrientedShape self)"""
        return _TopTools.TopTools_StdMapNodeOfMapOfOrientedShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_StdMapNodeOfMapOfOrientedShape self) -> Handle_TopTools_StdMapNodeOfMapOfOrientedShape"""
        return _TopTools.TopTools_StdMapNodeOfMapOfOrientedShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_StdMapNodeOfMapOfOrientedShape.Key = new_instancemethod(_TopTools.TopTools_StdMapNodeOfMapOfOrientedShape_Key,None,TopTools_StdMapNodeOfMapOfOrientedShape)
TopTools_StdMapNodeOfMapOfOrientedShape._kill_pointed = new_instancemethod(_TopTools.TopTools_StdMapNodeOfMapOfOrientedShape__kill_pointed,None,TopTools_StdMapNodeOfMapOfOrientedShape)
TopTools_StdMapNodeOfMapOfOrientedShape.GetHandle = new_instancemethod(_TopTools.TopTools_StdMapNodeOfMapOfOrientedShape_GetHandle,None,TopTools_StdMapNodeOfMapOfOrientedShape)
TopTools_StdMapNodeOfMapOfOrientedShape_swigregister = _TopTools.TopTools_StdMapNodeOfMapOfOrientedShape_swigregister
TopTools_StdMapNodeOfMapOfOrientedShape_swigregister(TopTools_StdMapNodeOfMapOfOrientedShape)

class Handle_TopTools_StdMapNodeOfMapOfOrientedShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_StdMapNodeOfMapOfOrientedShape_swiginit(self,_TopTools.new_Handle_TopTools_StdMapNodeOfMapOfOrientedShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_StdMapNodeOfMapOfOrientedShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_StdMapNodeOfMapOfOrientedShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_StdMapNodeOfMapOfOrientedShape_Nullify,None,Handle_TopTools_StdMapNodeOfMapOfOrientedShape)
Handle_TopTools_StdMapNodeOfMapOfOrientedShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_StdMapNodeOfMapOfOrientedShape_IsNull,None,Handle_TopTools_StdMapNodeOfMapOfOrientedShape)
Handle_TopTools_StdMapNodeOfMapOfOrientedShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_StdMapNodeOfMapOfOrientedShape_GetObject,None,Handle_TopTools_StdMapNodeOfMapOfOrientedShape)
Handle_TopTools_StdMapNodeOfMapOfOrientedShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_StdMapNodeOfMapOfOrientedShape__kill_pointed,None,Handle_TopTools_StdMapNodeOfMapOfOrientedShape)
Handle_TopTools_StdMapNodeOfMapOfOrientedShape_swigregister = _TopTools.Handle_TopTools_StdMapNodeOfMapOfOrientedShape_swigregister
Handle_TopTools_StdMapNodeOfMapOfOrientedShape_swigregister(Handle_TopTools_StdMapNodeOfMapOfOrientedShape)

def Handle_TopTools_StdMapNodeOfMapOfOrientedShape_DownCast(*args):
  return _TopTools.Handle_TopTools_StdMapNodeOfMapOfOrientedShape_DownCast(*args)
Handle_TopTools_StdMapNodeOfMapOfOrientedShape_DownCast = _TopTools.Handle_TopTools_StdMapNodeOfMapOfOrientedShape_DownCast

class TopTools_StdMapNodeOfMapOfShape(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        :param K:
        :type K: TopoDS_Shape &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _TopTools.TopTools_StdMapNodeOfMapOfShape_swiginit(self,_TopTools.new_TopTools_StdMapNodeOfMapOfShape(*args))
    def Key(self, *args):
        """
        :rtype: TopoDS_Shape

        """
        return _TopTools.TopTools_StdMapNodeOfMapOfShape_Key(self, *args)

    def _kill_pointed(self):
        """_kill_pointed(TopTools_StdMapNodeOfMapOfShape self)"""
        return _TopTools.TopTools_StdMapNodeOfMapOfShape__kill_pointed(self)

    def GetHandle(self):
        """GetHandle(TopTools_StdMapNodeOfMapOfShape self) -> Handle_TopTools_StdMapNodeOfMapOfShape"""
        return _TopTools.TopTools_StdMapNodeOfMapOfShape_GetHandle(self)

    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


TopTools_StdMapNodeOfMapOfShape.Key = new_instancemethod(_TopTools.TopTools_StdMapNodeOfMapOfShape_Key,None,TopTools_StdMapNodeOfMapOfShape)
TopTools_StdMapNodeOfMapOfShape._kill_pointed = new_instancemethod(_TopTools.TopTools_StdMapNodeOfMapOfShape__kill_pointed,None,TopTools_StdMapNodeOfMapOfShape)
TopTools_StdMapNodeOfMapOfShape.GetHandle = new_instancemethod(_TopTools.TopTools_StdMapNodeOfMapOfShape_GetHandle,None,TopTools_StdMapNodeOfMapOfShape)
TopTools_StdMapNodeOfMapOfShape_swigregister = _TopTools.TopTools_StdMapNodeOfMapOfShape_swigregister
TopTools_StdMapNodeOfMapOfShape_swigregister(TopTools_StdMapNodeOfMapOfShape)

class Handle_TopTools_StdMapNodeOfMapOfShape(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        _TopTools.Handle_TopTools_StdMapNodeOfMapOfShape_swiginit(self,_TopTools.new_Handle_TopTools_StdMapNodeOfMapOfShape(*args))
    DownCast = staticmethod(_TopTools.Handle_TopTools_StdMapNodeOfMapOfShape_DownCast)
    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_TopTools_StdMapNodeOfMapOfShape.Nullify = new_instancemethod(_TopTools.Handle_TopTools_StdMapNodeOfMapOfShape_Nullify,None,Handle_TopTools_StdMapNodeOfMapOfShape)
Handle_TopTools_StdMapNodeOfMapOfShape.IsNull = new_instancemethod(_TopTools.Handle_TopTools_StdMapNodeOfMapOfShape_IsNull,None,Handle_TopTools_StdMapNodeOfMapOfShape)
Handle_TopTools_StdMapNodeOfMapOfShape.GetObject = new_instancemethod(_TopTools.Handle_TopTools_StdMapNodeOfMapOfShape_GetObject,None,Handle_TopTools_StdMapNodeOfMapOfShape)
Handle_TopTools_StdMapNodeOfMapOfShape._kill_pointed = new_instancemethod(_TopTools.Handle_TopTools_StdMapNodeOfMapOfShape__kill_pointed,None,Handle_TopTools_StdMapNodeOfMapOfShape)
Handle_TopTools_StdMapNodeOfMapOfShape_swigregister = _TopTools.Handle_TopTools_StdMapNodeOfMapOfShape_swigregister
Handle_TopTools_StdMapNodeOfMapOfShape_swigregister(Handle_TopTools_StdMapNodeOfMapOfShape)

def Handle_TopTools_StdMapNodeOfMapOfShape_DownCast(*args):
  return _TopTools.Handle_TopTools_StdMapNodeOfMapOfShape_DownCast(*args)
Handle_TopTools_StdMapNodeOfMapOfShape_DownCast = _TopTools.Handle_TopTools_StdMapNodeOfMapOfShape_DownCast



