# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _NLPlate.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_NLPlate', [dirname(__file__)])
        except ImportError:
            import _NLPlate
            return _NLPlate
        if fp is not None:
            try:
                _mod = imp.load_module('_NLPlate', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _NLPlate = swig_import_helper()
    del swig_import_helper
else:
    import _NLPlate
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _NLPlate.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_NLPlate.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_NLPlate.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_NLPlate.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_NLPlate.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_NLPlate.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_NLPlate.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_NLPlate.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_NLPlate.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_NLPlate.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_NLPlate.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_NLPlate.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_NLPlate.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_NLPlate.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_NLPlate.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_NLPlate.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_NLPlate.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _NLPlate.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

import OCC.MMgt
import OCC.Standard
import OCC.gp
import OCC.Plate
import OCC.TColgp
import OCC.TCollection
import OCC.TColStd
import OCC.Geom
import OCC.GeomAbs
class NLPlate_HGPPConstraint(OCC.MMgt.MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetUVFreeSliding(self, *args):
        """
        :param UVFree:
        :type UVFree: bool
        :rtype: void

        """
        return _NLPlate.NLPlate_HGPPConstraint_SetUVFreeSliding(self, *args)


    def SetIncrementalLoadAllowed(self, *args):
        """
        :param ILA:
        :type ILA: bool
        :rtype: void

        """
        return _NLPlate.NLPlate_HGPPConstraint_SetIncrementalLoadAllowed(self, *args)


    def SetActiveOrder(self, *args):
        """
        :param ActiveOrder:
        :type ActiveOrder: int
        :rtype: void

        """
        return _NLPlate.NLPlate_HGPPConstraint_SetActiveOrder(self, *args)


    def SetUV(self, *args):
        """
        :param UV:
        :type UV: gp_XY
        :rtype: void

        """
        return _NLPlate.NLPlate_HGPPConstraint_SetUV(self, *args)


    def SetOrientation(self, *args):
        """
        :param Orient: default value is 0
        :type Orient: int
        :rtype: void

        """
        return _NLPlate.NLPlate_HGPPConstraint_SetOrientation(self, *args)


    def SetG0Criterion(self, *args):
        """
        :param TolDist:
        :type TolDist: float
        :rtype: void

        """
        return _NLPlate.NLPlate_HGPPConstraint_SetG0Criterion(self, *args)


    def SetG1Criterion(self, *args):
        """
        :param TolAng:
        :type TolAng: float
        :rtype: void

        """
        return _NLPlate.NLPlate_HGPPConstraint_SetG1Criterion(self, *args)


    def SetG2Criterion(self, *args):
        """
        :param TolCurv:
        :type TolCurv: float
        :rtype: void

        """
        return _NLPlate.NLPlate_HGPPConstraint_SetG2Criterion(self, *args)


    def SetG3Criterion(self, *args):
        """
        :param TolG3:
        :type TolG3: float
        :rtype: void

        """
        return _NLPlate.NLPlate_HGPPConstraint_SetG3Criterion(self, *args)


    def UVFreeSliding(self, *args):
        """
        :rtype: bool

        """
        return _NLPlate.NLPlate_HGPPConstraint_UVFreeSliding(self, *args)


    def IncrementalLoadAllowed(self, *args):
        """
        :rtype: bool

        """
        return _NLPlate.NLPlate_HGPPConstraint_IncrementalLoadAllowed(self, *args)


    def ActiveOrder(self, *args):
        """
        :rtype: int

        """
        return _NLPlate.NLPlate_HGPPConstraint_ActiveOrder(self, *args)


    def UV(self, *args):
        """
        :rtype: gp_XY

        """
        return _NLPlate.NLPlate_HGPPConstraint_UV(self, *args)


    def Orientation(self, *args):
        """
        :rtype: int

        """
        return _NLPlate.NLPlate_HGPPConstraint_Orientation(self, *args)


    def IsG0(self, *args):
        """
        :rtype: bool

        """
        return _NLPlate.NLPlate_HGPPConstraint_IsG0(self, *args)


    def G0Target(self, *args):
        """
        :rtype: gp_XYZ

        """
        return _NLPlate.NLPlate_HGPPConstraint_G0Target(self, *args)


    def G1Target(self, *args):
        """
        :rtype: Plate_D1

        """
        return _NLPlate.NLPlate_HGPPConstraint_G1Target(self, *args)


    def G2Target(self, *args):
        """
        :rtype: Plate_D2

        """
        return _NLPlate.NLPlate_HGPPConstraint_G2Target(self, *args)


    def G3Target(self, *args):
        """
        :rtype: Plate_D3

        """
        return _NLPlate.NLPlate_HGPPConstraint_G3Target(self, *args)


    def G0Criterion(self, *args):
        """
        :rtype: float

        """
        return _NLPlate.NLPlate_HGPPConstraint_G0Criterion(self, *args)


    def G1Criterion(self, *args):
        """
        :rtype: float

        """
        return _NLPlate.NLPlate_HGPPConstraint_G1Criterion(self, *args)


    def G2Criterion(self, *args):
        """
        :rtype: float

        """
        return _NLPlate.NLPlate_HGPPConstraint_G2Criterion(self, *args)


    def G3Criterion(self, *args):
        """
        :rtype: float

        """
        return _NLPlate.NLPlate_HGPPConstraint_G3Criterion(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(NLPlate_HGPPConstraint self)"""
        return _NLPlate.NLPlate_HGPPConstraint__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(NLPlate_HGPPConstraint self) -> Handle_NLPlate_HGPPConstraint"""
        return _NLPlate.NLPlate_HGPPConstraint_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_HGPPConstraint.SetUVFreeSliding = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_SetUVFreeSliding, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.SetIncrementalLoadAllowed = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_SetIncrementalLoadAllowed, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.SetActiveOrder = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_SetActiveOrder, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.SetUV = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_SetUV, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.SetOrientation = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_SetOrientation, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.SetG0Criterion = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_SetG0Criterion, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.SetG1Criterion = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_SetG1Criterion, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.SetG2Criterion = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_SetG2Criterion, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.SetG3Criterion = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_SetG3Criterion, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.UVFreeSliding = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_UVFreeSliding, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.IncrementalLoadAllowed = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_IncrementalLoadAllowed, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.ActiveOrder = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_ActiveOrder, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.UV = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_UV, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.Orientation = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_Orientation, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.IsG0 = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_IsG0, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.G0Target = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_G0Target, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.G1Target = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_G1Target, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.G2Target = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_G2Target, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.G3Target = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_G3Target, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.G0Criterion = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_G0Criterion, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.G1Criterion = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_G1Criterion, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.G2Criterion = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_G2Criterion, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.G3Criterion = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_G3Criterion, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint._kill_pointed = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint__kill_pointed, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint.GetHandle = new_instancemethod(_NLPlate.NLPlate_HGPPConstraint_GetHandle, None, NLPlate_HGPPConstraint)
NLPlate_HGPPConstraint_swigregister = _NLPlate.NLPlate_HGPPConstraint_swigregister
NLPlate_HGPPConstraint_swigregister(NLPlate_HGPPConstraint)

class Handle_NLPlate_HGPPConstraint(OCC.MMgt.Handle_MMgt_TShared):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _NLPlate.Handle_NLPlate_HGPPConstraint_swiginit(self, _NLPlate.new_Handle_NLPlate_HGPPConstraint(*args))
    DownCast = staticmethod(_NLPlate.Handle_NLPlate_HGPPConstraint_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_NLPlate_HGPPConstraint.Nullify = new_instancemethod(_NLPlate.Handle_NLPlate_HGPPConstraint_Nullify, None, Handle_NLPlate_HGPPConstraint)
Handle_NLPlate_HGPPConstraint.IsNull = new_instancemethod(_NLPlate.Handle_NLPlate_HGPPConstraint_IsNull, None, Handle_NLPlate_HGPPConstraint)
Handle_NLPlate_HGPPConstraint.GetObject = new_instancemethod(_NLPlate.Handle_NLPlate_HGPPConstraint_GetObject, None, Handle_NLPlate_HGPPConstraint)
Handle_NLPlate_HGPPConstraint._kill_pointed = new_instancemethod(_NLPlate.Handle_NLPlate_HGPPConstraint__kill_pointed, None, Handle_NLPlate_HGPPConstraint)
Handle_NLPlate_HGPPConstraint_swigregister = _NLPlate.Handle_NLPlate_HGPPConstraint_swigregister
Handle_NLPlate_HGPPConstraint_swigregister(Handle_NLPlate_HGPPConstraint)

def Handle_NLPlate_HGPPConstraint_DownCast(AnObject):
    return _NLPlate.Handle_NLPlate_HGPPConstraint_DownCast(AnObject)
Handle_NLPlate_HGPPConstraint_DownCast = _NLPlate.Handle_NLPlate_HGPPConstraint_DownCast

class NLPlate_NLPlate(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param InitialSurface:
        :type InitialSurface: Handle_Geom_Surface &
        :rtype: None

        """
        _NLPlate.NLPlate_NLPlate_swiginit(self, _NLPlate.new_NLPlate_NLPlate(*args))

    def Load(self, *args):
        """
        :param GConst:
        :type GConst: Handle_NLPlate_HGPPConstraint &
        :rtype: None

        """
        return _NLPlate.NLPlate_NLPlate_Load(self, *args)


    def Solve(self, *args):
        """
        :param ord: default value is 2
        :type ord: int
        :param InitialConsraintOrder: default value is 1
        :type InitialConsraintOrder: int
        :rtype: None

        """
        return _NLPlate.NLPlate_NLPlate_Solve(self, *args)


    def Solve2(self, *args):
        """
        :param ord: default value is 2
        :type ord: int
        :param InitialConsraintOrder: default value is 1
        :type InitialConsraintOrder: int
        :rtype: None

        """
        return _NLPlate.NLPlate_NLPlate_Solve2(self, *args)


    def IncrementalSolve(self, *args):
        """
        :param ord: default value is 2
        :type ord: int
        :param InitialConsraintOrder: default value is 1
        :type InitialConsraintOrder: int
        :param NbIncrements: default value is 4
        :type NbIncrements: int
        :param UVSliding: default value is Standard_False
        :type UVSliding: bool
        :rtype: None

        """
        return _NLPlate.NLPlate_NLPlate_IncrementalSolve(self, *args)


    def IsDone(self, *args):
        """
        * returns True if all has been correctly done.

        :rtype: bool

        """
        return _NLPlate.NLPlate_NLPlate_IsDone(self, *args)


    def destroy(self, *args):
        """
        :rtype: None

        """
        return _NLPlate.NLPlate_NLPlate_destroy(self, *args)


    def Init(self, *args):
        """
        * reset the Plate in the initial state ( same as after Create((Surface))

        :rtype: None

        """
        return _NLPlate.NLPlate_NLPlate_Init(self, *args)


    def Evaluate(self, *args):
        """
        :param point2d:
        :type point2d: gp_XY
        :rtype: gp_XYZ

        """
        return _NLPlate.NLPlate_NLPlate_Evaluate(self, *args)


    def EvaluateDerivative(self, *args):
        """
        :param point2d:
        :type point2d: gp_XY
        :param iu:
        :type iu: int
        :param iv:
        :type iv: int
        :rtype: gp_XYZ

        """
        return _NLPlate.NLPlate_NLPlate_EvaluateDerivative(self, *args)


    def Continuity(self, *args):
        """
        :rtype: int

        """
        return _NLPlate.NLPlate_NLPlate_Continuity(self, *args)


    def ConstraintsSliding(self, *args):
        """
        :param NbIterations: default value is 3
        :type NbIterations: int
        :rtype: None

        """
        return _NLPlate.NLPlate_NLPlate_ConstraintsSliding(self, *args)


    def MaxActiveConstraintOrder(self, *args):
        """
        :rtype: int

        """
        return _NLPlate.NLPlate_NLPlate_MaxActiveConstraintOrder(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_NLPlate.Load = new_instancemethod(_NLPlate.NLPlate_NLPlate_Load, None, NLPlate_NLPlate)
NLPlate_NLPlate.Solve = new_instancemethod(_NLPlate.NLPlate_NLPlate_Solve, None, NLPlate_NLPlate)
NLPlate_NLPlate.Solve2 = new_instancemethod(_NLPlate.NLPlate_NLPlate_Solve2, None, NLPlate_NLPlate)
NLPlate_NLPlate.IncrementalSolve = new_instancemethod(_NLPlate.NLPlate_NLPlate_IncrementalSolve, None, NLPlate_NLPlate)
NLPlate_NLPlate.IsDone = new_instancemethod(_NLPlate.NLPlate_NLPlate_IsDone, None, NLPlate_NLPlate)
NLPlate_NLPlate.destroy = new_instancemethod(_NLPlate.NLPlate_NLPlate_destroy, None, NLPlate_NLPlate)
NLPlate_NLPlate.Init = new_instancemethod(_NLPlate.NLPlate_NLPlate_Init, None, NLPlate_NLPlate)
NLPlate_NLPlate.Evaluate = new_instancemethod(_NLPlate.NLPlate_NLPlate_Evaluate, None, NLPlate_NLPlate)
NLPlate_NLPlate.EvaluateDerivative = new_instancemethod(_NLPlate.NLPlate_NLPlate_EvaluateDerivative, None, NLPlate_NLPlate)
NLPlate_NLPlate.Continuity = new_instancemethod(_NLPlate.NLPlate_NLPlate_Continuity, None, NLPlate_NLPlate)
NLPlate_NLPlate.ConstraintsSliding = new_instancemethod(_NLPlate.NLPlate_NLPlate_ConstraintsSliding, None, NLPlate_NLPlate)
NLPlate_NLPlate.MaxActiveConstraintOrder = new_instancemethod(_NLPlate.NLPlate_NLPlate_MaxActiveConstraintOrder, None, NLPlate_NLPlate)
NLPlate_NLPlate._kill_pointed = new_instancemethod(_NLPlate.NLPlate_NLPlate__kill_pointed, None, NLPlate_NLPlate)
NLPlate_NLPlate_swigregister = _NLPlate.NLPlate_NLPlate_swigregister
NLPlate_NLPlate_swigregister(NLPlate_NLPlate)

class NLPlate_SequenceNodeOfSequenceOfHGPPConstraint(OCC.TCollection.TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Handle_NLPlate_HGPPConstraint &
        :param n:
        :type n: TCollection_SeqNodePtr &
        :param p:
        :type p: TCollection_SeqNodePtr &
        :rtype: None

        """
        _NLPlate.NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_swiginit(self, _NLPlate.new_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint(*args))

    def Value(self, *args):
        """
        :rtype: Handle_NLPlate_HGPPConstraint

        """
        return _NLPlate.NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(NLPlate_SequenceNodeOfSequenceOfHGPPConstraint self)"""
        return _NLPlate.NLPlate_SequenceNodeOfSequenceOfHGPPConstraint__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(NLPlate_SequenceNodeOfSequenceOfHGPPConstraint self) -> Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint"""
        return _NLPlate.NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_SequenceNodeOfSequenceOfHGPPConstraint.Value = new_instancemethod(_NLPlate.NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_Value, None, NLPlate_SequenceNodeOfSequenceOfHGPPConstraint)
NLPlate_SequenceNodeOfSequenceOfHGPPConstraint._kill_pointed = new_instancemethod(_NLPlate.NLPlate_SequenceNodeOfSequenceOfHGPPConstraint__kill_pointed, None, NLPlate_SequenceNodeOfSequenceOfHGPPConstraint)
NLPlate_SequenceNodeOfSequenceOfHGPPConstraint.GetHandle = new_instancemethod(_NLPlate.NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_GetHandle, None, NLPlate_SequenceNodeOfSequenceOfHGPPConstraint)
NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_swigregister = _NLPlate.NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_swigregister
NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_swigregister(NLPlate_SequenceNodeOfSequenceOfHGPPConstraint)

class Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint(OCC.TCollection.Handle_TCollection_SeqNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _NLPlate.Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_swiginit(self, _NLPlate.new_Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint(*args))
    DownCast = staticmethod(_NLPlate.Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint.Nullify = new_instancemethod(_NLPlate.Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_Nullify, None, Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint)
Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint.IsNull = new_instancemethod(_NLPlate.Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_IsNull, None, Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint)
Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint.GetObject = new_instancemethod(_NLPlate.Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_GetObject, None, Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint)
Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint._kill_pointed = new_instancemethod(_NLPlate.Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint__kill_pointed, None, Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint)
Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_swigregister = _NLPlate.Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_swigregister
Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_swigregister(Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint)

def Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_DownCast(AnObject):
    return _NLPlate.Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_DownCast(AnObject)
Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_DownCast = _NLPlate.Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_DownCast

class NLPlate_SequenceOfHGPPConstraint(OCC.TCollection.TCollection_BaseSequence):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _NLPlate.NLPlate_SequenceOfHGPPConstraint_swiginit(self, _NLPlate.new_NLPlate_SequenceOfHGPPConstraint(*args))

    def Clear(self, *args):
        """
        :rtype: None

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_Clear(self, *args)


    def Assign(self, *args):
        """
        :param Other:
        :type Other: NLPlate_SequenceOfHGPPConstraint &
        :rtype: NLPlate_SequenceOfHGPPConstraint

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: NLPlate_SequenceOfHGPPConstraint &
        :rtype: NLPlate_SequenceOfHGPPConstraint

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_Set(self, *args)


    def Append(self, *args):
        """
        :param T:
        :type T: Handle_NLPlate_HGPPConstraint &
        :rtype: None

        :param S:
        :type S: NLPlate_SequenceOfHGPPConstraint &
        :rtype: None

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_Append(self, *args)


    def Prepend(self, *args):
        """
        :param T:
        :type T: Handle_NLPlate_HGPPConstraint &
        :rtype: None

        :param S:
        :type S: NLPlate_SequenceOfHGPPConstraint &
        :rtype: None

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_Prepend(self, *args)


    def InsertBefore(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_NLPlate_HGPPConstraint &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: NLPlate_SequenceOfHGPPConstraint &
        :rtype: None

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_InsertBefore(self, *args)


    def InsertAfter(self, *args):
        """
        :param Index:
        :type Index: int
        :param T:
        :type T: Handle_NLPlate_HGPPConstraint &
        :rtype: None

        :param Index:
        :type Index: int
        :param S:
        :type S: NLPlate_SequenceOfHGPPConstraint &
        :rtype: None

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_InsertAfter(self, *args)


    def First(self, *args):
        """
        :rtype: Handle_NLPlate_HGPPConstraint

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_First(self, *args)


    def Last(self, *args):
        """
        :rtype: Handle_NLPlate_HGPPConstraint

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_Last(self, *args)


    def Split(self, *args):
        """
        :param Index:
        :type Index: int
        :param Sub:
        :type Sub: NLPlate_SequenceOfHGPPConstraint &
        :rtype: None

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_Split(self, *args)


    def Value(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_NLPlate_HGPPConstraint

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_Value(self, *args)


    def SetValue(self, *args):
        """
        :param Index:
        :type Index: int
        :param I:
        :type I: Handle_NLPlate_HGPPConstraint &
        :rtype: None

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_SetValue(self, *args)


    def ChangeValue(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: Handle_NLPlate_HGPPConstraint

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_ChangeValue(self, *args)


    def Remove(self, *args):
        """
        :param Index:
        :type Index: int
        :rtype: None

        :param FromIndex:
        :type FromIndex: int
        :param ToIndex:
        :type ToIndex: int
        :rtype: None

        """
        return _NLPlate.NLPlate_SequenceOfHGPPConstraint_Remove(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_SequenceOfHGPPConstraint.Clear = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_Clear, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.Assign = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_Assign, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.Set = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_Set, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.Append = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_Append, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.Prepend = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_Prepend, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.InsertBefore = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_InsertBefore, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.InsertAfter = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_InsertAfter, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.First = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_First, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.Last = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_Last, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.Split = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_Split, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.Value = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_Value, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.SetValue = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_SetValue, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.ChangeValue = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_ChangeValue, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint.Remove = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint_Remove, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint._kill_pointed = new_instancemethod(_NLPlate.NLPlate_SequenceOfHGPPConstraint__kill_pointed, None, NLPlate_SequenceOfHGPPConstraint)
NLPlate_SequenceOfHGPPConstraint_swigregister = _NLPlate.NLPlate_SequenceOfHGPPConstraint_swigregister
NLPlate_SequenceOfHGPPConstraint_swigregister(NLPlate_SequenceOfHGPPConstraint)

class NLPlate_StackIteratorOfStackOfPlate(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        :param S:
        :type S: NLPlate_StackOfPlate &
        :rtype: None

        """
        _NLPlate.NLPlate_StackIteratorOfStackOfPlate_swiginit(self, _NLPlate.new_NLPlate_StackIteratorOfStackOfPlate(*args))

    def Initialize(self, *args):
        """
        :param S:
        :type S: NLPlate_StackOfPlate &
        :rtype: None

        """
        return _NLPlate.NLPlate_StackIteratorOfStackOfPlate_Initialize(self, *args)


    def More(self, *args):
        """
        :rtype: bool

        """
        return _NLPlate.NLPlate_StackIteratorOfStackOfPlate_More(self, *args)


    def Next(self, *args):
        """
        :rtype: None

        """
        return _NLPlate.NLPlate_StackIteratorOfStackOfPlate_Next(self, *args)


    def Value(self, *args):
        """
        :rtype: Plate_Plate

        """
        return _NLPlate.NLPlate_StackIteratorOfStackOfPlate_Value(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_StackIteratorOfStackOfPlate.Initialize = new_instancemethod(_NLPlate.NLPlate_StackIteratorOfStackOfPlate_Initialize, None, NLPlate_StackIteratorOfStackOfPlate)
NLPlate_StackIteratorOfStackOfPlate.More = new_instancemethod(_NLPlate.NLPlate_StackIteratorOfStackOfPlate_More, None, NLPlate_StackIteratorOfStackOfPlate)
NLPlate_StackIteratorOfStackOfPlate.Next = new_instancemethod(_NLPlate.NLPlate_StackIteratorOfStackOfPlate_Next, None, NLPlate_StackIteratorOfStackOfPlate)
NLPlate_StackIteratorOfStackOfPlate.Value = new_instancemethod(_NLPlate.NLPlate_StackIteratorOfStackOfPlate_Value, None, NLPlate_StackIteratorOfStackOfPlate)
NLPlate_StackIteratorOfStackOfPlate._kill_pointed = new_instancemethod(_NLPlate.NLPlate_StackIteratorOfStackOfPlate__kill_pointed, None, NLPlate_StackIteratorOfStackOfPlate)
NLPlate_StackIteratorOfStackOfPlate_swigregister = _NLPlate.NLPlate_StackIteratorOfStackOfPlate_swigregister
NLPlate_StackIteratorOfStackOfPlate_swigregister(NLPlate_StackIteratorOfStackOfPlate)

class NLPlate_StackNodeOfStackOfPlate(OCC.TCollection.TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param I:
        :type I: Plate_Plate &
        :param n:
        :type n: TCollection_MapNodePtr &
        :rtype: None

        """
        _NLPlate.NLPlate_StackNodeOfStackOfPlate_swiginit(self, _NLPlate.new_NLPlate_StackNodeOfStackOfPlate(*args))

    def Value(self, *args):
        """
        :rtype: Plate_Plate

        """
        return _NLPlate.NLPlate_StackNodeOfStackOfPlate_Value(self, *args)


    def _kill_pointed(self):
        """_kill_pointed(NLPlate_StackNodeOfStackOfPlate self)"""
        return _NLPlate.NLPlate_StackNodeOfStackOfPlate__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(NLPlate_StackNodeOfStackOfPlate self) -> Handle_NLPlate_StackNodeOfStackOfPlate"""
        return _NLPlate.NLPlate_StackNodeOfStackOfPlate_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_StackNodeOfStackOfPlate.Value = new_instancemethod(_NLPlate.NLPlate_StackNodeOfStackOfPlate_Value, None, NLPlate_StackNodeOfStackOfPlate)
NLPlate_StackNodeOfStackOfPlate._kill_pointed = new_instancemethod(_NLPlate.NLPlate_StackNodeOfStackOfPlate__kill_pointed, None, NLPlate_StackNodeOfStackOfPlate)
NLPlate_StackNodeOfStackOfPlate.GetHandle = new_instancemethod(_NLPlate.NLPlate_StackNodeOfStackOfPlate_GetHandle, None, NLPlate_StackNodeOfStackOfPlate)
NLPlate_StackNodeOfStackOfPlate_swigregister = _NLPlate.NLPlate_StackNodeOfStackOfPlate_swigregister
NLPlate_StackNodeOfStackOfPlate_swigregister(NLPlate_StackNodeOfStackOfPlate)

class Handle_NLPlate_StackNodeOfStackOfPlate(OCC.TCollection.Handle_TCollection_MapNode):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _NLPlate.Handle_NLPlate_StackNodeOfStackOfPlate_swiginit(self, _NLPlate.new_Handle_NLPlate_StackNodeOfStackOfPlate(*args))
    DownCast = staticmethod(_NLPlate.Handle_NLPlate_StackNodeOfStackOfPlate_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_NLPlate_StackNodeOfStackOfPlate.Nullify = new_instancemethod(_NLPlate.Handle_NLPlate_StackNodeOfStackOfPlate_Nullify, None, Handle_NLPlate_StackNodeOfStackOfPlate)
Handle_NLPlate_StackNodeOfStackOfPlate.IsNull = new_instancemethod(_NLPlate.Handle_NLPlate_StackNodeOfStackOfPlate_IsNull, None, Handle_NLPlate_StackNodeOfStackOfPlate)
Handle_NLPlate_StackNodeOfStackOfPlate.GetObject = new_instancemethod(_NLPlate.Handle_NLPlate_StackNodeOfStackOfPlate_GetObject, None, Handle_NLPlate_StackNodeOfStackOfPlate)
Handle_NLPlate_StackNodeOfStackOfPlate._kill_pointed = new_instancemethod(_NLPlate.Handle_NLPlate_StackNodeOfStackOfPlate__kill_pointed, None, Handle_NLPlate_StackNodeOfStackOfPlate)
Handle_NLPlate_StackNodeOfStackOfPlate_swigregister = _NLPlate.Handle_NLPlate_StackNodeOfStackOfPlate_swigregister
Handle_NLPlate_StackNodeOfStackOfPlate_swigregister(Handle_NLPlate_StackNodeOfStackOfPlate)

def Handle_NLPlate_StackNodeOfStackOfPlate_DownCast(AnObject):
    return _NLPlate.Handle_NLPlate_StackNodeOfStackOfPlate_DownCast(AnObject)
Handle_NLPlate_StackNodeOfStackOfPlate_DownCast = _NLPlate.Handle_NLPlate_StackNodeOfStackOfPlate_DownCast

class NLPlate_StackOfPlate(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :rtype: None

        """
        _NLPlate.NLPlate_StackOfPlate_swiginit(self, _NLPlate.new_NLPlate_StackOfPlate(*args))

    def Assign(self, *args):
        """
        :param Other:
        :type Other: NLPlate_StackOfPlate &
        :rtype: NLPlate_StackOfPlate

        """
        return _NLPlate.NLPlate_StackOfPlate_Assign(self, *args)


    def Set(self, *args):
        """
        :param Other:
        :type Other: NLPlate_StackOfPlate &
        :rtype: NLPlate_StackOfPlate

        """
        return _NLPlate.NLPlate_StackOfPlate_Set(self, *args)


    def IsEmpty(self, *args):
        """
        :rtype: bool

        """
        return _NLPlate.NLPlate_StackOfPlate_IsEmpty(self, *args)


    def Depth(self, *args):
        """
        :rtype: int

        """
        return _NLPlate.NLPlate_StackOfPlate_Depth(self, *args)


    def Top(self, *args):
        """
        :rtype: Plate_Plate

        """
        return _NLPlate.NLPlate_StackOfPlate_Top(self, *args)


    def Push(self, *args):
        """
        :param I:
        :type I: Plate_Plate &
        :rtype: None

        """
        return _NLPlate.NLPlate_StackOfPlate_Push(self, *args)


    def Pop(self, *args):
        """
        :rtype: None

        """
        return _NLPlate.NLPlate_StackOfPlate_Pop(self, *args)


    def Clear(self, *args):
        """
        :rtype: None

        """
        return _NLPlate.NLPlate_StackOfPlate_Clear(self, *args)


    def ChangeTop(self, *args):
        """
        :rtype: Plate_Plate

        """
        return _NLPlate.NLPlate_StackOfPlate_ChangeTop(self, *args)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_StackOfPlate.Assign = new_instancemethod(_NLPlate.NLPlate_StackOfPlate_Assign, None, NLPlate_StackOfPlate)
NLPlate_StackOfPlate.Set = new_instancemethod(_NLPlate.NLPlate_StackOfPlate_Set, None, NLPlate_StackOfPlate)
NLPlate_StackOfPlate.IsEmpty = new_instancemethod(_NLPlate.NLPlate_StackOfPlate_IsEmpty, None, NLPlate_StackOfPlate)
NLPlate_StackOfPlate.Depth = new_instancemethod(_NLPlate.NLPlate_StackOfPlate_Depth, None, NLPlate_StackOfPlate)
NLPlate_StackOfPlate.Top = new_instancemethod(_NLPlate.NLPlate_StackOfPlate_Top, None, NLPlate_StackOfPlate)
NLPlate_StackOfPlate.Push = new_instancemethod(_NLPlate.NLPlate_StackOfPlate_Push, None, NLPlate_StackOfPlate)
NLPlate_StackOfPlate.Pop = new_instancemethod(_NLPlate.NLPlate_StackOfPlate_Pop, None, NLPlate_StackOfPlate)
NLPlate_StackOfPlate.Clear = new_instancemethod(_NLPlate.NLPlate_StackOfPlate_Clear, None, NLPlate_StackOfPlate)
NLPlate_StackOfPlate.ChangeTop = new_instancemethod(_NLPlate.NLPlate_StackOfPlate_ChangeTop, None, NLPlate_StackOfPlate)
NLPlate_StackOfPlate._kill_pointed = new_instancemethod(_NLPlate.NLPlate_StackOfPlate__kill_pointed, None, NLPlate_StackOfPlate)
NLPlate_StackOfPlate_swigregister = _NLPlate.NLPlate_StackOfPlate_swigregister
NLPlate_StackOfPlate_swigregister(NLPlate_StackOfPlate)

class NLPlate_HPG0Constraint(NLPlate_HGPPConstraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param UV:
        :type UV: gp_XY
        :param Value:
        :type Value: gp_XYZ
        :rtype: None

        """
        _NLPlate.NLPlate_HPG0Constraint_swiginit(self, _NLPlate.new_NLPlate_HPG0Constraint(*args))

    def _kill_pointed(self):
        """_kill_pointed(NLPlate_HPG0Constraint self)"""
        return _NLPlate.NLPlate_HPG0Constraint__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(NLPlate_HPG0Constraint self) -> Handle_NLPlate_HPG0Constraint"""
        return _NLPlate.NLPlate_HPG0Constraint_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_HPG0Constraint._kill_pointed = new_instancemethod(_NLPlate.NLPlate_HPG0Constraint__kill_pointed, None, NLPlate_HPG0Constraint)
NLPlate_HPG0Constraint.GetHandle = new_instancemethod(_NLPlate.NLPlate_HPG0Constraint_GetHandle, None, NLPlate_HPG0Constraint)
NLPlate_HPG0Constraint_swigregister = _NLPlate.NLPlate_HPG0Constraint_swigregister
NLPlate_HPG0Constraint_swigregister(NLPlate_HPG0Constraint)

class Handle_NLPlate_HPG0Constraint(Handle_NLPlate_HGPPConstraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _NLPlate.Handle_NLPlate_HPG0Constraint_swiginit(self, _NLPlate.new_Handle_NLPlate_HPG0Constraint(*args))
    DownCast = staticmethod(_NLPlate.Handle_NLPlate_HPG0Constraint_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_NLPlate_HPG0Constraint.Nullify = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0Constraint_Nullify, None, Handle_NLPlate_HPG0Constraint)
Handle_NLPlate_HPG0Constraint.IsNull = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0Constraint_IsNull, None, Handle_NLPlate_HPG0Constraint)
Handle_NLPlate_HPG0Constraint.GetObject = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0Constraint_GetObject, None, Handle_NLPlate_HPG0Constraint)
Handle_NLPlate_HPG0Constraint._kill_pointed = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0Constraint__kill_pointed, None, Handle_NLPlate_HPG0Constraint)
Handle_NLPlate_HPG0Constraint_swigregister = _NLPlate.Handle_NLPlate_HPG0Constraint_swigregister
Handle_NLPlate_HPG0Constraint_swigregister(Handle_NLPlate_HPG0Constraint)

def Handle_NLPlate_HPG0Constraint_DownCast(AnObject):
    return _NLPlate.Handle_NLPlate_HPG0Constraint_DownCast(AnObject)
Handle_NLPlate_HPG0Constraint_DownCast = _NLPlate.Handle_NLPlate_HPG0Constraint_DownCast

class NLPlate_HPG1Constraint(NLPlate_HGPPConstraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param UV:
        :type UV: gp_XY
        :param D1T:
        :type D1T: Plate_D1 &
        :rtype: None

        """
        _NLPlate.NLPlate_HPG1Constraint_swiginit(self, _NLPlate.new_NLPlate_HPG1Constraint(*args))

    def _kill_pointed(self):
        """_kill_pointed(NLPlate_HPG1Constraint self)"""
        return _NLPlate.NLPlate_HPG1Constraint__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(NLPlate_HPG1Constraint self) -> Handle_NLPlate_HPG1Constraint"""
        return _NLPlate.NLPlate_HPG1Constraint_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_HPG1Constraint._kill_pointed = new_instancemethod(_NLPlate.NLPlate_HPG1Constraint__kill_pointed, None, NLPlate_HPG1Constraint)
NLPlate_HPG1Constraint.GetHandle = new_instancemethod(_NLPlate.NLPlate_HPG1Constraint_GetHandle, None, NLPlate_HPG1Constraint)
NLPlate_HPG1Constraint_swigregister = _NLPlate.NLPlate_HPG1Constraint_swigregister
NLPlate_HPG1Constraint_swigregister(NLPlate_HPG1Constraint)

class Handle_NLPlate_HPG1Constraint(Handle_NLPlate_HGPPConstraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _NLPlate.Handle_NLPlate_HPG1Constraint_swiginit(self, _NLPlate.new_Handle_NLPlate_HPG1Constraint(*args))
    DownCast = staticmethod(_NLPlate.Handle_NLPlate_HPG1Constraint_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_NLPlate_HPG1Constraint.Nullify = new_instancemethod(_NLPlate.Handle_NLPlate_HPG1Constraint_Nullify, None, Handle_NLPlate_HPG1Constraint)
Handle_NLPlate_HPG1Constraint.IsNull = new_instancemethod(_NLPlate.Handle_NLPlate_HPG1Constraint_IsNull, None, Handle_NLPlate_HPG1Constraint)
Handle_NLPlate_HPG1Constraint.GetObject = new_instancemethod(_NLPlate.Handle_NLPlate_HPG1Constraint_GetObject, None, Handle_NLPlate_HPG1Constraint)
Handle_NLPlate_HPG1Constraint._kill_pointed = new_instancemethod(_NLPlate.Handle_NLPlate_HPG1Constraint__kill_pointed, None, Handle_NLPlate_HPG1Constraint)
Handle_NLPlate_HPG1Constraint_swigregister = _NLPlate.Handle_NLPlate_HPG1Constraint_swigregister
Handle_NLPlate_HPG1Constraint_swigregister(Handle_NLPlate_HPG1Constraint)

def Handle_NLPlate_HPG1Constraint_DownCast(AnObject):
    return _NLPlate.Handle_NLPlate_HPG1Constraint_DownCast(AnObject)
Handle_NLPlate_HPG1Constraint_DownCast = _NLPlate.Handle_NLPlate_HPG1Constraint_DownCast

class NLPlate_HPG0G1Constraint(NLPlate_HPG0Constraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param UV:
        :type UV: gp_XY
        :param Value:
        :type Value: gp_XYZ
        :param D1T:
        :type D1T: Plate_D1 &
        :rtype: None

        """
        _NLPlate.NLPlate_HPG0G1Constraint_swiginit(self, _NLPlate.new_NLPlate_HPG0G1Constraint(*args))

    def _kill_pointed(self):
        """_kill_pointed(NLPlate_HPG0G1Constraint self)"""
        return _NLPlate.NLPlate_HPG0G1Constraint__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(NLPlate_HPG0G1Constraint self) -> Handle_NLPlate_HPG0G1Constraint"""
        return _NLPlate.NLPlate_HPG0G1Constraint_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_HPG0G1Constraint._kill_pointed = new_instancemethod(_NLPlate.NLPlate_HPG0G1Constraint__kill_pointed, None, NLPlate_HPG0G1Constraint)
NLPlate_HPG0G1Constraint.GetHandle = new_instancemethod(_NLPlate.NLPlate_HPG0G1Constraint_GetHandle, None, NLPlate_HPG0G1Constraint)
NLPlate_HPG0G1Constraint_swigregister = _NLPlate.NLPlate_HPG0G1Constraint_swigregister
NLPlate_HPG0G1Constraint_swigregister(NLPlate_HPG0G1Constraint)

class Handle_NLPlate_HPG0G1Constraint(Handle_NLPlate_HPG0Constraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _NLPlate.Handle_NLPlate_HPG0G1Constraint_swiginit(self, _NLPlate.new_Handle_NLPlate_HPG0G1Constraint(*args))
    DownCast = staticmethod(_NLPlate.Handle_NLPlate_HPG0G1Constraint_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_NLPlate_HPG0G1Constraint.Nullify = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0G1Constraint_Nullify, None, Handle_NLPlate_HPG0G1Constraint)
Handle_NLPlate_HPG0G1Constraint.IsNull = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0G1Constraint_IsNull, None, Handle_NLPlate_HPG0G1Constraint)
Handle_NLPlate_HPG0G1Constraint.GetObject = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0G1Constraint_GetObject, None, Handle_NLPlate_HPG0G1Constraint)
Handle_NLPlate_HPG0G1Constraint._kill_pointed = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0G1Constraint__kill_pointed, None, Handle_NLPlate_HPG0G1Constraint)
Handle_NLPlate_HPG0G1Constraint_swigregister = _NLPlate.Handle_NLPlate_HPG0G1Constraint_swigregister
Handle_NLPlate_HPG0G1Constraint_swigregister(Handle_NLPlate_HPG0G1Constraint)

def Handle_NLPlate_HPG0G1Constraint_DownCast(AnObject):
    return _NLPlate.Handle_NLPlate_HPG0G1Constraint_DownCast(AnObject)
Handle_NLPlate_HPG0G1Constraint_DownCast = _NLPlate.Handle_NLPlate_HPG0G1Constraint_DownCast

class NLPlate_HPG2Constraint(NLPlate_HPG1Constraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param UV:
        :type UV: gp_XY
        :param D1T:
        :type D1T: Plate_D1 &
        :param D2T:
        :type D2T: Plate_D2 &
        :rtype: None

        """
        _NLPlate.NLPlate_HPG2Constraint_swiginit(self, _NLPlate.new_NLPlate_HPG2Constraint(*args))

    def _kill_pointed(self):
        """_kill_pointed(NLPlate_HPG2Constraint self)"""
        return _NLPlate.NLPlate_HPG2Constraint__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(NLPlate_HPG2Constraint self) -> Handle_NLPlate_HPG2Constraint"""
        return _NLPlate.NLPlate_HPG2Constraint_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_HPG2Constraint._kill_pointed = new_instancemethod(_NLPlate.NLPlate_HPG2Constraint__kill_pointed, None, NLPlate_HPG2Constraint)
NLPlate_HPG2Constraint.GetHandle = new_instancemethod(_NLPlate.NLPlate_HPG2Constraint_GetHandle, None, NLPlate_HPG2Constraint)
NLPlate_HPG2Constraint_swigregister = _NLPlate.NLPlate_HPG2Constraint_swigregister
NLPlate_HPG2Constraint_swigregister(NLPlate_HPG2Constraint)

class Handle_NLPlate_HPG2Constraint(Handle_NLPlate_HPG1Constraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _NLPlate.Handle_NLPlate_HPG2Constraint_swiginit(self, _NLPlate.new_Handle_NLPlate_HPG2Constraint(*args))
    DownCast = staticmethod(_NLPlate.Handle_NLPlate_HPG2Constraint_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_NLPlate_HPG2Constraint.Nullify = new_instancemethod(_NLPlate.Handle_NLPlate_HPG2Constraint_Nullify, None, Handle_NLPlate_HPG2Constraint)
Handle_NLPlate_HPG2Constraint.IsNull = new_instancemethod(_NLPlate.Handle_NLPlate_HPG2Constraint_IsNull, None, Handle_NLPlate_HPG2Constraint)
Handle_NLPlate_HPG2Constraint.GetObject = new_instancemethod(_NLPlate.Handle_NLPlate_HPG2Constraint_GetObject, None, Handle_NLPlate_HPG2Constraint)
Handle_NLPlate_HPG2Constraint._kill_pointed = new_instancemethod(_NLPlate.Handle_NLPlate_HPG2Constraint__kill_pointed, None, Handle_NLPlate_HPG2Constraint)
Handle_NLPlate_HPG2Constraint_swigregister = _NLPlate.Handle_NLPlate_HPG2Constraint_swigregister
Handle_NLPlate_HPG2Constraint_swigregister(Handle_NLPlate_HPG2Constraint)

def Handle_NLPlate_HPG2Constraint_DownCast(AnObject):
    return _NLPlate.Handle_NLPlate_HPG2Constraint_DownCast(AnObject)
Handle_NLPlate_HPG2Constraint_DownCast = _NLPlate.Handle_NLPlate_HPG2Constraint_DownCast

class NLPlate_HPG0G2Constraint(NLPlate_HPG0G1Constraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param UV:
        :type UV: gp_XY
        :param Value:
        :type Value: gp_XYZ
        :param D1T:
        :type D1T: Plate_D1 &
        :param D2T:
        :type D2T: Plate_D2 &
        :rtype: None

        """
        _NLPlate.NLPlate_HPG0G2Constraint_swiginit(self, _NLPlate.new_NLPlate_HPG0G2Constraint(*args))

    def _kill_pointed(self):
        """_kill_pointed(NLPlate_HPG0G2Constraint self)"""
        return _NLPlate.NLPlate_HPG0G2Constraint__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(NLPlate_HPG0G2Constraint self) -> Handle_NLPlate_HPG0G2Constraint"""
        return _NLPlate.NLPlate_HPG0G2Constraint_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_HPG0G2Constraint._kill_pointed = new_instancemethod(_NLPlate.NLPlate_HPG0G2Constraint__kill_pointed, None, NLPlate_HPG0G2Constraint)
NLPlate_HPG0G2Constraint.GetHandle = new_instancemethod(_NLPlate.NLPlate_HPG0G2Constraint_GetHandle, None, NLPlate_HPG0G2Constraint)
NLPlate_HPG0G2Constraint_swigregister = _NLPlate.NLPlate_HPG0G2Constraint_swigregister
NLPlate_HPG0G2Constraint_swigregister(NLPlate_HPG0G2Constraint)

class Handle_NLPlate_HPG0G2Constraint(Handle_NLPlate_HPG0G1Constraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _NLPlate.Handle_NLPlate_HPG0G2Constraint_swiginit(self, _NLPlate.new_Handle_NLPlate_HPG0G2Constraint(*args))
    DownCast = staticmethod(_NLPlate.Handle_NLPlate_HPG0G2Constraint_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_NLPlate_HPG0G2Constraint.Nullify = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0G2Constraint_Nullify, None, Handle_NLPlate_HPG0G2Constraint)
Handle_NLPlate_HPG0G2Constraint.IsNull = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0G2Constraint_IsNull, None, Handle_NLPlate_HPG0G2Constraint)
Handle_NLPlate_HPG0G2Constraint.GetObject = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0G2Constraint_GetObject, None, Handle_NLPlate_HPG0G2Constraint)
Handle_NLPlate_HPG0G2Constraint._kill_pointed = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0G2Constraint__kill_pointed, None, Handle_NLPlate_HPG0G2Constraint)
Handle_NLPlate_HPG0G2Constraint_swigregister = _NLPlate.Handle_NLPlate_HPG0G2Constraint_swigregister
Handle_NLPlate_HPG0G2Constraint_swigregister(Handle_NLPlate_HPG0G2Constraint)

def Handle_NLPlate_HPG0G2Constraint_DownCast(AnObject):
    return _NLPlate.Handle_NLPlate_HPG0G2Constraint_DownCast(AnObject)
Handle_NLPlate_HPG0G2Constraint_DownCast = _NLPlate.Handle_NLPlate_HPG0G2Constraint_DownCast

class NLPlate_HPG3Constraint(NLPlate_HPG2Constraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param UV:
        :type UV: gp_XY
        :param D1T:
        :type D1T: Plate_D1 &
        :param D2T:
        :type D2T: Plate_D2 &
        :param D3T:
        :type D3T: Plate_D3 &
        :rtype: None

        """
        _NLPlate.NLPlate_HPG3Constraint_swiginit(self, _NLPlate.new_NLPlate_HPG3Constraint(*args))

    def _kill_pointed(self):
        """_kill_pointed(NLPlate_HPG3Constraint self)"""
        return _NLPlate.NLPlate_HPG3Constraint__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(NLPlate_HPG3Constraint self) -> Handle_NLPlate_HPG3Constraint"""
        return _NLPlate.NLPlate_HPG3Constraint_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_HPG3Constraint._kill_pointed = new_instancemethod(_NLPlate.NLPlate_HPG3Constraint__kill_pointed, None, NLPlate_HPG3Constraint)
NLPlate_HPG3Constraint.GetHandle = new_instancemethod(_NLPlate.NLPlate_HPG3Constraint_GetHandle, None, NLPlate_HPG3Constraint)
NLPlate_HPG3Constraint_swigregister = _NLPlate.NLPlate_HPG3Constraint_swigregister
NLPlate_HPG3Constraint_swigregister(NLPlate_HPG3Constraint)

class Handle_NLPlate_HPG3Constraint(Handle_NLPlate_HPG2Constraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _NLPlate.Handle_NLPlate_HPG3Constraint_swiginit(self, _NLPlate.new_Handle_NLPlate_HPG3Constraint(*args))
    DownCast = staticmethod(_NLPlate.Handle_NLPlate_HPG3Constraint_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_NLPlate_HPG3Constraint.Nullify = new_instancemethod(_NLPlate.Handle_NLPlate_HPG3Constraint_Nullify, None, Handle_NLPlate_HPG3Constraint)
Handle_NLPlate_HPG3Constraint.IsNull = new_instancemethod(_NLPlate.Handle_NLPlate_HPG3Constraint_IsNull, None, Handle_NLPlate_HPG3Constraint)
Handle_NLPlate_HPG3Constraint.GetObject = new_instancemethod(_NLPlate.Handle_NLPlate_HPG3Constraint_GetObject, None, Handle_NLPlate_HPG3Constraint)
Handle_NLPlate_HPG3Constraint._kill_pointed = new_instancemethod(_NLPlate.Handle_NLPlate_HPG3Constraint__kill_pointed, None, Handle_NLPlate_HPG3Constraint)
Handle_NLPlate_HPG3Constraint_swigregister = _NLPlate.Handle_NLPlate_HPG3Constraint_swigregister
Handle_NLPlate_HPG3Constraint_swigregister(Handle_NLPlate_HPG3Constraint)

def Handle_NLPlate_HPG3Constraint_DownCast(AnObject):
    return _NLPlate.Handle_NLPlate_HPG3Constraint_DownCast(AnObject)
Handle_NLPlate_HPG3Constraint_DownCast = _NLPlate.Handle_NLPlate_HPG3Constraint_DownCast

class NLPlate_HPG0G3Constraint(NLPlate_HPG0G2Constraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        :param UV:
        :type UV: gp_XY
        :param Value:
        :type Value: gp_XYZ
        :param D1T:
        :type D1T: Plate_D1 &
        :param D2T:
        :type D2T: Plate_D2 &
        :param D3T:
        :type D3T: Plate_D3 &
        :rtype: None

        """
        _NLPlate.NLPlate_HPG0G3Constraint_swiginit(self, _NLPlate.new_NLPlate_HPG0G3Constraint(*args))

    def _kill_pointed(self):
        """_kill_pointed(NLPlate_HPG0G3Constraint self)"""
        return _NLPlate.NLPlate_HPG0G3Constraint__kill_pointed(self)


    def GetHandle(self):
        """GetHandle(NLPlate_HPG0G3Constraint self) -> Handle_NLPlate_HPG0G3Constraint"""
        return _NLPlate.NLPlate_HPG0G3Constraint_GetHandle(self)


    def __del__(self):
    	try:
    		self.thisown = False
    		GarbageCollector.garbage.collect_object(self)
    	except:
    		pass


NLPlate_HPG0G3Constraint._kill_pointed = new_instancemethod(_NLPlate.NLPlate_HPG0G3Constraint__kill_pointed, None, NLPlate_HPG0G3Constraint)
NLPlate_HPG0G3Constraint.GetHandle = new_instancemethod(_NLPlate.NLPlate_HPG0G3Constraint_GetHandle, None, NLPlate_HPG0G3Constraint)
NLPlate_HPG0G3Constraint_swigregister = _NLPlate.NLPlate_HPG0G3Constraint_swigregister
NLPlate_HPG0G3Constraint_swigregister(NLPlate_HPG0G3Constraint)

class Handle_NLPlate_HPG0G3Constraint(Handle_NLPlate_HPG0G2Constraint):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        _NLPlate.Handle_NLPlate_HPG0G3Constraint_swiginit(self, _NLPlate.new_Handle_NLPlate_HPG0G3Constraint(*args))
    DownCast = staticmethod(_NLPlate.Handle_NLPlate_HPG0G3Constraint_DownCast)

    def __del__(self):
        try:
            self.thisown = False
            GarbageCollector.garbage.collect_object(self)
        except:
            pass


Handle_NLPlate_HPG0G3Constraint.Nullify = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0G3Constraint_Nullify, None, Handle_NLPlate_HPG0G3Constraint)
Handle_NLPlate_HPG0G3Constraint.IsNull = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0G3Constraint_IsNull, None, Handle_NLPlate_HPG0G3Constraint)
Handle_NLPlate_HPG0G3Constraint.GetObject = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0G3Constraint_GetObject, None, Handle_NLPlate_HPG0G3Constraint)
Handle_NLPlate_HPG0G3Constraint._kill_pointed = new_instancemethod(_NLPlate.Handle_NLPlate_HPG0G3Constraint__kill_pointed, None, Handle_NLPlate_HPG0G3Constraint)
Handle_NLPlate_HPG0G3Constraint_swigregister = _NLPlate.Handle_NLPlate_HPG0G3Constraint_swigregister
Handle_NLPlate_HPG0G3Constraint_swigregister(Handle_NLPlate_HPG0G3Constraint)

def Handle_NLPlate_HPG0G3Constraint_DownCast(AnObject):
    return _NLPlate.Handle_NLPlate_HPG0G3Constraint_DownCast(AnObject)
Handle_NLPlate_HPG0G3Constraint_DownCast = _NLPlate.Handle_NLPlate_HPG0G3Constraint_DownCast



